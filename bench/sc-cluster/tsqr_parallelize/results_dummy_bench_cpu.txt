[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139922164303744 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139922155907072 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139922147510400 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139922139113728 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139922130717056 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139921780107776 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139921771711104 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139921763314432 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139921754917760 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139921746521088 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139921738124416 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139921729727744 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139921243237760 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139921234841088 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139921226444416 -> hwthread 15 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 139921218049792 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139921209657088 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1

Walltime (in milliseconds) for different numbers of threads

		m = 1		m = 2		m = 4		m = 8		m = 16		m = 32		m = 64
		_____________________________________________________________________________________________________

NEW PARALLEL VERSION:

#threads=1  |	0.042915	0.040054	0.046015	0.057936	0.085115	0.144958	0.303030	
#threads=2  |	0.076056	0.084162	0.116110	0.186920	0.328064	0.617027	1.230955	
#threads=4  |	0.104904	0.139952	0.238895	0.430107	0.903130	1.559019	3.734112	
#threads=8  |	0.131130	0.238895	0.458002	0.904799	2.030134	4.258156	9.701014	
#threads=16 |	0.159025	0.547171	1.369953	3.041983	6.406069	13.441086	26.993036	
#threads=16 |	0.158072	0.595093	1.451015	3.329039	7.174015	14.942884	29.958963	
#threads=16 |	0.151873	0.674009	1.801014	4.160881	8.759975	18.163919	36.324024	
#threads=16 |	0.157118	0.903845	2.524137	5.589962	11.650801	24.133921	49.657106	
#threads=16 |	0.158072	1.310110	3.767967	8.569002	18.177032	37.474155	74.245930	

OLD "SERIAL" VERSION:

#threads=1  |	0.041008	0.039101	0.041962	0.048876	0.083923	0.115156	0.226974	
#threads=2  |	0.069141	0.067949	0.062227	0.072002	0.092983	0.152111	0.284910	
#threads=4  |	0.078917	0.098944	0.082970	0.096083	0.125885	0.204086	0.387192	
#threads=8  |	0.102997	0.122070	0.110865	0.125885	0.163078	0.258923	0.488043	
#threads=16 |	0.127077	0.138044	0.133038	0.150919	0.195026	0.309944	0.586033	
#threads=16 |	0.129223	0.129938	0.135899	0.159025	0.217915	0.374794	0.739098	
#threads=16 |	0.131130	0.133991	0.145197	0.178099	0.267982	0.488997	1.048803	
#threads=16 |	0.132084	0.138044	0.157833	0.216007	0.373840	0.735044	1.657009	
#threads=16 |	0.136852	0.152111	0.187874	0.291824	0.579834	1.219988	2.902031	

Performance statistics:
function  	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.00205041	 127       
