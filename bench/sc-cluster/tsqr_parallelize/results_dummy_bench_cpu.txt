[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139684751972224 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139684743575552 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139684735178880 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139684726782208 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139684718385536 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139684709988864 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139684701592192 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139684693195520 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139684214729600 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139684206332928 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139684197936256 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139684189539584 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139684181142912 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139684172746240 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139684164349568 -> hwthread 15 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 139683610752768 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139683602360064 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1

Walltime (in milliseconds) for different numbers of threads

		m = 1		m = 2		m = 4		m = 8		m = 16		m = 32		m = 64
		_____________________________________________________________________________________________________

NEW PARALLEL VERSION:

#threads=1  |	0.044823	0.042915	0.048161	0.058889	0.085831	0.157833	0.289917	
#threads=2  |	0.081062	0.084162	0.118971	0.195026	0.350952	0.659943	1.427889	
#threads=4  |	0.109196	0.134945	0.231981	0.418901	0.821114	1.724958	3.489971	
#threads=8  |	0.138998	0.237942	0.466108	0.884056	1.976967	3.914833	9.850025	
#threads=16 |	0.169992	0.548840	1.389027	3.072023	6.675959	13.924837	28.258085	
#threads=16 |	0.149012	0.613928	1.591921	3.675938	7.901907	16.796112	33.385992	
#threads=16 |	0.155926	0.775099	2.112150	5.047083	10.195971	21.631002	43.492079	
#threads=16 |	0.160933	1.102209	3.051996	6.968975	15.037060	31.733036	65.240860	
#threads=16 |	0.157118	1.788855	5.098820	11.821032	25.050163	52.131891	107.140064	

OLD "SERIAL" VERSION:

#threads=1  |	0.041962	0.040054	0.042200	0.047922	0.080109	0.114918	0.229120	
#threads=2  |	0.068903	0.077963	0.061989	0.072002	0.094175	0.149965	0.286818	
#threads=4  |	0.079870	0.090122	0.083923	0.097036	0.127077	0.205040	0.387192	
#threads=8  |	0.102043	0.117064	0.110865	0.125885	0.163794	0.273943	0.492096	
#threads=16 |	0.133991	0.156164	0.142097	0.157833	0.203848	0.319004	0.593185	
#threads=16 |	0.138044	0.136852	0.144005	0.165939	0.223875	0.374794	0.749111	
#threads=16 |	0.133038	0.134945	0.146866	0.181913	0.270844	0.494003	1.041889	
#threads=16 |	0.132799	0.139952	0.159025	0.219822	0.370979	0.748873	1.659155	
#threads=16 |	0.138044	0.149965	0.189066	0.293970	0.571966	1.233816	2.882004	

Performance statistics:
function  	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
Timing statistics:
function                                                                                                                      	 time [s]  	 #calls    
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]	 0.00191494	 127       
