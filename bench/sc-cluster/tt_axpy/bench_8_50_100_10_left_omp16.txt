[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139831544956800 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139831536560128 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139831528163456 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139831317358848 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139831308962176 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139831300565504 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139831292168832 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139831283772160 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139831275375488 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139831266978816 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139830780488832 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139830772092160 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139830763695488 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139830755298816 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139830746902144 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 1
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34mRoundrobin placement triggered
	threadid 140575748015872 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140575739623168 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140575731091200 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 139830738507520 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139830730114816 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139830243620608 -> hwthread 2 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                   	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 5500, m: 10)                                                                      	 0.140013  	 600       	 4.71099   	 0         	 3.77485   	 1.24799   
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 100)                                               	 0.0830605 	 605       	 0         	 0         	 58.2708   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 5000, x.r2: 100, y.r2: 10)                           	 0.0809257 	 600       	 74.1421   	 0         	 32.6818   	 2.2686    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 110, n: 50, r2left: 100, r2right: 10)           	 0.0691812 	 600       	 0         	 0         	 83.9534   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 5000, c: 100, r2: 10)                            	 0.0676787 	 600       	 88.6542   	 0         	 42.6249   	 2.07987   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1upp: 100, r1low: 10, n: 50, r2: 100)                                	 0.0430014 	 600       	 0         	 0         	 117.205   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 5000, m: 100)                                                                     	 0.0322419 	 5         	 15.4044   	 0         	 1.25315   	 12.2925   
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 110, n: 50, r2: 10)                                             	 0.022234  	 600       	 0         	 0         	 23.7475   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 100, nChunks: 4, r2: 10)  	 0.018322  	 600       	 41.9168   	 0         	 22.6351   	 1.85185   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1upp: 100, r1low: 10, n: 50, r2: 10)             	 0.0169643 	 600       	 0         	 0         	 31.1243   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 2500, m: 10)                                                                      	 0.0137584 	 120       	 4.35516   	 0         	 3.49646   	 1.24559   
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 100)                                                	 0.00989553	 121       	 0         	 0         	 48.911    	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 10)                                                	 0.00868147	 600       	 0         	 0         	 55.2902   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 2500, x.r2: 100, y.r2: 10)                           	 0.00848902	 120       	 70.6795   	 0         	 31.2121   	 2.26449   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 2500, c: 100, r2: 10)                            	 0.00760446	 120       	 78.9011   	 0         	 37.9988   	 2.07641   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 100)                                  	 0.0066451 	 120       	 0         	 0         	 72.2337   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 100, r2right: 10)            	 0.00624697	 120       	 0         	 0         	 84.521    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 10)                                                                                      	 0.00448178	 720       	 0         	 0         	 12.852    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 50, m: 100)                                                                       	 0.00427232	 1         	 0.0975269 	 0         	 0.0235001 	 4.15006   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 2500, m: 100)                                                                     	 0.00408153	 1         	 12.087    	 0         	 0.99982   	 12.0891   
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 10)                                              	 0.00362495	 120       	 0         	 0         	 13.2416   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 10, nChunks: 4, r2: 10)   	 0.0028712 	 600       	 26.7484   	 0         	 24.0735   	 1.11111   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 10)               	 0.00223124	 120       	 0         	 0         	 21.5127   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 100, r1low: 10, n: 50, r2: 1)                	 0.00196437	 120       	 0         	 0         	 5.37576   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 50, x.r2: 50, y.r2: 10)                              	 0.00194791	 120       	 3.08022   	 0         	 1.72492   	 1.78571   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, nChunks: 4, r2: 100)	 0.00193643	 5         	 330.505   	 0         	 29.7455   	 11.1111   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 50, m: 10)                                                                        	 0.00122964	 120       	 0.910707  	 0         	 0.866597  	 1.0509    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 50, nChunks: 4, r2: 10)   	 0.0010984 	 120       	 69.9199   	 0         	 40.5535   	 1.72414   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                                       	 0.00107892	 240       	 0         	 0         	 1.77956   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 10)                                                 	 0.00101197	 120       	 0         	 0         	 47.4322   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                                       	 0.00100333	 240       	 0         	 0         	 1.91362   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 100)                                            	 0.000967199	 5         	 0         	 0         	 41.3565   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                                      	 0.000863177	 121       	 0         	 0         	 11.2144   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 100, nChunks: 4, r2: 1)   	 0.000808507	 120       	 18.998    	 0         	 27.3571   	 0.694444  
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 10)                                                  	 0.000711481	 120       	 0         	 0         	 1.3493    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                                    	 0.000664023	 120       	 0         	 0         	 7.22867   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 0)               	 0.000553283	 120       	 0         	 0         	 8.67549   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 50)                                                  	 0.000524585	 120       	 0         	 0         	 9.15009   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 50, c: 50, r2: 10)                               	 0.000487121	 120       	 12.3173   	 0         	 7.88305   	 1.5625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 10)                	 0.000474251	 120       	 0         	 0         	 2.02424   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                        	 0.00041754	 120       	 2.87398   	 0         	 34.4877   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 0)                                                	 0.000344769	 120       	 0         	 0         	 0         	 -nan      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 50, nChunks: 4, r2: 100) 	 0.000306405	 1         	 208.874   	 0         	 27.1536   	 7.69231   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 10, nChunks: 4, r2: 1)    	 0.000288932	 120       	 5.31613   	 0         	 9.56903   	 0.555556  
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                             	 0.000247326	 121       	 2.44616   	 0         	 39.1386   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                              	 0.000221555	 120       	 0.270813  	 0         	 4.33301   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 0, nChunks: 4, r2: 10)    	 0.000193282	 120       	 0         	 0         	 31.7878   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 100)                                             	 0.000177851	 1         	 0         	 0         	 22.4907   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, nChunks: 4, r2: 1)  	 3.4429e-05	 1         	 37.178    	 0         	 40.1522   	 0.925926  
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 100)                                                 	 2.7711e-05	 1         	 0         	 0         	 2.88694   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 50)                                               	 9.903e-06 	 1         	 0         	 0         	 4.03918   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                               	 5.259e-06 	 1         	 1.9015    	 0         	 7.60601   	 0.25      
Timing statistics:
function                                                                                                                                                           	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]        	 0.88955   	 120       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qb(const PITTS::Tensor2<T>&, bool, T, int, bool) [with T = double]                                     	 0.468124  	 847       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                              	 0.195597  	 847       
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                	 0.103913  	 1687      
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                  	 0.0913626 	 840       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                  	 0.088321  	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                              	 0.087978  	 1         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]             	 0.0759815 	 840       
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]              	 0.0757703 	 840       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(int, int, int) [with T = double]                                                                        	 0.0511995 	 4582      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double]                               	 0.0503105 	 840       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                   	 0.0337945 	 16        
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                             	 0.0273586 	 847       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]	 0.0258596 	 1687      
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double]           	 0.0196698 	 840       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                     	 0.00742721	 1321      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]             	 0.00196437	 120       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int) [with T = double]                                                         	 0.00167337	 3017      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                            	 0.000468881	 241       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.00041754	 120       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                              	 5.259e-06 	 1         
INFO: You are running LIKWID in a cpuset with 16 CPUs. Taking given IDs as logical ID in cpuset
