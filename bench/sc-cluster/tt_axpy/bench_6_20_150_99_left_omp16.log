[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140582465521536 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140582457124864 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140582448728192 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140582440331520 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140582431934848 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140582423538176 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140582415141504 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140581930003200 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140581921606528 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140581913209856 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140581904813184 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140581896416512 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140581888019840 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140581879623168 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140581393133184 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 1
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34mRoundrobin placement triggered
	threadid 139753595447040 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139753587054336 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139753578522368 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 140581384738560 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140581376345856 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140581363758848 -> hwthread 2 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                   	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4980, cols: 99, reductionFactor: 18, colBlockingSize: 12)               	 0.0665399 	 75        	 116.142   	 0         	 4.53401   	 25.6158   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 99, m: 99)                                                                        	 0.0264761 	 125       	 6.10802   	 0         	 1.11429   	 5.48154   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 150, Xr2: 150, Qr1: 249, Qr2: 99) 	 0.0226975 	 75        	 0         	 0         	 57.7079   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4980, Xcols: 99, r: 99, streamingCols: 0)                	 0.0190384 	 75        	 192.279   	 0         	 31.2298   	 6.1569    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 150, m: 150)                                                                      	 0.00920292	 5         	 2.44488   	 0         	 0.294037  	 8.31486   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 99, reductionFactor: 18, colBlockingSize: 12)                	 0.00878845	 25        	 23.5434   	 0         	 1.12423   	 20.9419   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4980, m: 99)                                                                    	 0.00611087	 75        	 0         	 0         	 96.815    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 150, reductionFactor: 18, colBlockingSize: 12)              	 0.00609796	 3         	 70.1054   	 0         	 1.85964   	 37.6984   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 99, n: 20, r2: 99)                                                                                      	 0.00468692	 100       	 0         	 0         	 66.9164   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 150, r1low: 99, n: 20, r2: 99)               	 0.00453752	 75        	 0         	 0         	 130.385   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4980, m: 99)                                                           	 0.00439473	 75        	 0         	 0         	 134.621   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 99, r: 99, streamingCols: 0)                 	 0.00367774	 25        	 26.6495   	 0         	 4.57349   	 5.82696   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 99, reductionFactor: 18, colBlockingSize: 12)                 	 0.00250594	 25        	 4.12839   	 0         	 0.940245  	 4.39076   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, r1_: 150, nChunks: 2, r2: 150)	 0.00213037	 3         	 304.173   	 0         	 20.2782   	 15        
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3000, Xcols: 150, r: 150, streamingCols: 0)              	 0.00105079	 3         	 192.713   	 0         	 20.813    	 9.25926   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 150, reductionFactor: 18, colBlockingSize: 12)               	 0.00101946	 1         	 18.6373   	 0         	 0.6474    	 28.7879   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 20, r1low: 0, n: 20, r2: 99)                 	 0.000665327	 25        	 0         	 0         	 23.8078   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3000, m: 150)                                                                   	 0.000553413	 3         	 0         	 0         	 39.0305   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 99, m: 99, fromLeft: 0)             	 0.000534918	 100       	 0         	 0         	 29.3159   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 150, reductionFactor: 18, colBlockingSize: 12)                	 0.000526775	 1         	 1.80343   	 0         	 0.387262  	 4.65686   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3000, m: 150)                                                          	 0.000526571	 3         	 0         	 0         	 41.0201   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 400, m: 99)                                                                     	 0.000506934	 25        	 0         	 0         	 31.2467   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 150, n: 20, r2: 150)                                               	 0.000490851	 3         	 0         	 0         	 44.0052   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 150, n: 20, r2: 150)                                            	 0.00043098	 3         	 0         	 0         	 50.1183   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 20, Xr2: 150, Qr1: 20, Qr2: 99)   	 0.000423094	 25        	 0         	 0         	 94.1635   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 150, r: 150, streamingCols: 0)               	 0.000384576	 1         	 23.4024   	 0         	 2.73028   	 8.57143   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, r1_: 20, nChunks: 2, r2: 150) 	 0.000319279	 1         	 90.2032   	 0         	 21.6488   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 150)                                                 	 0.000261765	 1         	 0         	 0         	 0.183371  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 20, r2: 99)                  	 0.000187872	 25        	 0         	 0         	 4.21564   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 99)                                                                                       	 0.000174054	 50        	 0         	 0         	 9.10062   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 99)                                                            	 0.000171218	 25        	 0         	 0         	 92.5136   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 99, n: 20, r2: 1)                                                                                       	 0.00014683	 50        	 0         	 0         	 10.788    	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 150)                                                	 0.000132113	 1         	 0         	 0         	 7.26651   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 150, r1low: 99, n: 20, r2: 1)                	 0.000122214	 25        	 0         	 0         	 16.2993   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, n: 20, r2: 1)                                                        	 0.000106305	 25        	 1.41103   	 0         	 16.9324   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 150, n: 20, r2: 1)                                                                                      	 9.3727e-05	 25        	 0         	 0         	 12.8031   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 99)                                                             	 9.2967e-05	 25        	 0         	 0         	 8.51915   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 1, Xr2: 20, Qr1: 1, Qr2: 0)       	 7.1321e-05	 25        	 0         	 0         	 2.24338   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 150, n: 20, r2: 1)                                                                             	 6.7201e-05	 26        	 1.1607    	 0         	 18.5712   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 99, n: 20, r2: 1)                                                                              	 5.7831e-05	 25        	 0.855942  	 0         	 13.6951   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, r1_: 150, nChunks: 2, r2: 1)  	 5.5144e-05	 1         	 26.1134   	 0         	 53.6196   	 0.487013  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 150, m: 150, fromLeft: 0)           	 3.246e-05 	 4         	 0         	 0         	 44.3623   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 400, m: 150)                                                                    	 3.1484e-05	 1         	 0         	 0         	 30.4917   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 150)                                                            	 2.9834e-05	 1         	 0         	 0         	 1.6089    	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 150)                                             	 2.2885e-05	 1         	 0         	 0         	 41.9489   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 150, r: 20, streamingCols: 19)                	 1.9423e-05	 1         	 0.411883  	 0         	 0.411883  	 1         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 150)                                                           	 1.5929e-05	 1         	 0         	 0         	 60.2674   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 20)                                                                      	 8.684e-06 	 1         	 0         	 0         	 0.736988  	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 150, n: 20, r2: 1)                                                                               	 5.148e-06 	 1         	 1.1655    	 0         	 4.662     	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 20)                                               	 3.41e-06  	 1         	 0         	 0         	 1.87683   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 20, m: 150, fromLeft: 0)            	 3.174e-06 	 1         	 0         	 0         	 15.1229   	 0         
Timing statistics:
function                                                                                                                                                                           	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                        	 0.353133  	 25        
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]	 0.164331  	 130       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                  	 0.0856254 	 130       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                       	 0.0854784 	 130       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                              	 0.035679  	 130       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                  	 0.0255228 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                              	 0.0255099 	 1         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                         	 0.0241709 	 105       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                            	 0.0231919 	 125       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                   	 0.0174265 	 12        
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                            	 0.00721139	 105       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                             	 0.00551294	 150       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                   	 0.00523125	 130       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                     	 0.00510153	 225       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                	 0.00250479	 5         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                     	 0.00211623	 130       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                              	 0.00120536	 742       
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                                	 0.000884729	 5         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>]                	 0.000570552	 105       
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                             	 0.000457275	 5         
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                   	 0.000398352	 548       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                            	 0.000125032	 51        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                       	 0.000106305	 25        
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                              	 5.148e-06 	 1         
