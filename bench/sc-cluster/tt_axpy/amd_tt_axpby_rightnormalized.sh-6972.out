orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23137737299840 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23137525688320 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23137324361856 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23137123035392 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23136921708928 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23136720382464 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23136519056000 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23136317729536 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23136116403072 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23135915076608 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23135713750144 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23135512423680 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23135311097216 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23135109770752 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23134908444288 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23134707117824 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23134505791360 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23134304464896 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23134103138432 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23133901811968 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23133700485504 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23133499159040 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23133297832576 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23133096506112 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23132895179648 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23132693853184 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23132492526720 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23132291200256 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23132089873792 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23131888547328 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23131687220864 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23131485894400 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23131284563840 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23131083237376 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23130881910912 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23130680584448 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23130479257984 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23130277931520 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23130076605056 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23129875278592 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23129673952128 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23129472625664 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23129271299200 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23129069972736 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23128868646272 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23128667319808 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23128465993344 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23128264666880 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23128063340416 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23127862013952 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23127660687488 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23127459361024 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23127258034560 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23127056708096 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23126855381632 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23126654055168 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23126452728704 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23126251402240 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23126050075776 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23125848749312 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23125647422848 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23125446096384 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23125244769920 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23137631639296 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23137625048832 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 51, m: 51)                                                                	 0.289703  	 700       	 2.24364   	 0         	 0.151819  	 14.7784   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2550, r: 51, r2: 51, leftOrthog: 1)       	 0.165641  	 600       	 48.05     	 0         	 11.4566   	 4.19408   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 51, reductionFactor: 37, colBlockingSize: 12)                 	 0.163275  	 600       	 50.064    	 0         	 3.89972   	 12.8378   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, r1_: 51, n: 50, r2: 51)          	 0.13374   	 600       	 59.5116   	 0         	 9.4285    	 6.31188   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 51)                                                                	 0.0398255 	 100       	 2.24103   	 0         	 0.15367   	 14.5833   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0379239 	 100       	 2.30725   	 0         	 0.159266  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 51, reductionFactor: 37, colBlockingSize: 12)                 	 0.029096  	 100       	 45.9049   	 0         	 3.57715   	 12.8328   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 1)                 	 0.0285772 	 800       	 0         	 0         	 1.14217   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0267407 	 100       	 48.9689   	 0         	 3.88921   	 12.591    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 51, r2: 51, leftOrthog: 1)       	 0.0234401 	 100       	 55.4818   	 0         	 13.2321   	 4.19298   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2550, r: 50, r2: 50, leftOrthog: 1)       	 0.0222198 	 100       	 57.3812   	 0         	 13.9515   	 4.1129    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, r1_: 51, n: 50, r2: 50)          	 0.0209743 	 100       	 62.0045   	 0         	 9.8254    	 6.31063   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 1, Qr2: 51)       	 0.0205016 	 700       	 0         	 0         	 70.3634   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 1, m: 2500, k: 50)	 0.0195462 	 800       	 10.2322   	 0         	 41.7635   	 0.245002  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)            	 0.0180553 	 8         	 5.53855   	 0         	 0.89503   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, r1_: 50, n: 50, r2: 51)          	 0.016405  	 100       	 79.2747   	 0         	 12.684    	 6.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1, m: 50, k: 2500)   	 0.0160897 	 800       	 12.4303   	 0         	 50.7356   	 0.245002  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 1, reductionFactor: 37, colBlockingSize: 12)                  	 0.00927688	 700       	 0.395229  	 0         	 1.53991   	 0.256656  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2550, Xcols: 1, r: 1, streamingCols: 0)                    	 0.00592426	 700       	 0.301303  	 0         	 4.82133   	 0.0624939 
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00516068	 9         	 0.290658  	 0         	 0.105335  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 1)   	 0.00459663	 900       	 0.978979  	 0         	 4.07255   	 0.240385  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 1)                                                                                          	 0.00428878	 1210      	 0         	 0         	 0.225705  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 0)                 	 0.0042485 	 100       	 0         	 0         	 0.941509  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 51, reductionFactor: 37, colBlockingSize: 12)                   	 0.00381915	 100       	 6.99449   	 0         	 1.07898   	 6.48247   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2550, m: 1)                                                         	 0.00337275	 700       	 0         	 0         	 8.46786   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1, m: 2550)                                                                  	 0.00320237	 700       	 0         	 0         	 8.91841   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00262541	 8         	 39.1187   	 0         	 3.10809   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00173963	 8         	 28.7418   	 0         	 9.24337   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 1, Qr2: 50)       	 0.00158315	 100       	 0         	 0         	 128.857   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 51, leftOrthog: 1)         	 0.00156871	 100       	 16.2554   	 0         	 6.45116   	 2.51976   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 1, reductionFactor: 37, colBlockingSize: 12)                  	 0.00140492	 100       	 0.365512  	 0         	 1.42414   	 0.256654  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.00103412	 100       	 24.1751   	 0         	 5.80202   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 1, r: 1, streamingCols: 0)                    	 0.000926232	 100       	 0.269911  	 0         	 4.319     	 0.0624938 
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 1, reductionFactor: 37, colBlockingSize: 12)                    	 0.000852894	 109       	 0.0131254 	 0         	 0.0521425 	 0.251722  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                        	 0.00084189	 8         	 0         	 0         	 19.0049   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000839064	 100       	 0.595902  	 0         	 2.38361   	 0.25      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 1, m: 1)                                                                   	 0.000817379	 909       	 0         	 0         	 0.0355869 	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000563387	 100       	 0         	 0         	 7.09992   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                 	 0.000533545	 8         	 0         	 0         	 29.9881   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 1)                                                         	 0.000513672	 100       	 0         	 0         	 7.78707   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000499974	 100       	 0         	 0         	 8.00042   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1, m: 2500)                                                                  	 0.000469886	 100       	 0         	 0         	 8.5127    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000454462	 100       	 1.1002    	 0         	 13.2024   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 1, r2right: 0)                  	 0.000424089	 100       	 0         	 0         	 0.18864   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000415881	 101       	 0.607145  	 0         	 9.71432   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000362155	 100       	 0.690312  	 0         	 11.045    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 1)                                                                                 	 0.000361829	 101       	 0.0139569 	 0         	 0.22331   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1, k: 1)    	 0.000335809	 800       	 0.238231  	 0         	 1.9249    	 0.123762  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000288967	 1         	 0.888533  	 0         	 0.138424  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 1)                                                           	 0.000202266	 109       	 0         	 0         	 0.431115  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1, m: 50, k: 50)     	 0.000168707	 100       	 2.96372   	 0         	 12.3291   	 0.240385  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 1, m: 1, fromLeft: 1)                 	 0.000106302	 809       	 0         	 0         	 0.121766  	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 1, r: 1, streamingCols: 0)                      	 8.5104e-05	 9         	 0.00528765	 0         	 0.0850254 	 0.0621891 
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 1, m: 50, k: 50)  	 5.009e-05 	 100       	 9.98203   	 0         	 41.5253   	 0.240385  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 4.7032e-05	 1         	 2.65776   	 0         	 1.06311   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 1, r2: 1)               	 4.2351e-05	 9         	 0.021251  	 0         	 0.171708  	 0.123762  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 1.6721e-05	 1         	 14.9513   	 0         	 3.5883    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)               	 1.522e-05 	 9         	 0         	 0         	 23.6531   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                          	 1.1171e-05	 1         	 0         	 0         	 3.5807    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                   	 1.003e-05 	 1         	 0         	 0         	 3.98804   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 8.26e-06  	 1         	 0.605327  	 0         	 2.42131   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 1)                                                                                   	 8.14e-06  	 1         	 0.012285  	 0         	 0.04914   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 0, k: 1)    	 4.51e-06  	 100       	 0         	 0         	 8.86918   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1, m: 50)                                                                    	 4.33e-06  	 9         	 0         	 0         	 1.66282   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.25349   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.25344   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.11807   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.11677   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.939147  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.367452  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.237379  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.223654  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.21287   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.172153  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.135293  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0434821 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0332498 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0298522 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0298234 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0225847 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0195963 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0181143 	 18        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0162584 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0149122 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0099656 	 20        
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.00872225	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00597806	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00494175	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.00493695	 1800      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00485217	 1310      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00422016	 818       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00387588	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00310074	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00135284	 5051      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113986	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000855464	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000454462	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000121522	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22728318883712 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22728094509056 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22727893182592 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22727691856128 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22727490529664 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22727289203200 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22727087876736 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22726886550272 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22726685223808 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22726483897344 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22726282570880 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22726081244416 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22725879917952 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22725678591488 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22725477265024 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22725275938560 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22725074612096 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22724873285632 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22724671959168 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22724470632704 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22724269306240 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22724067979776 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22723866653312 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22723665326848 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22723464000384 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22723262673920 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22723061347456 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22722860020992 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22722658694528 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22722457368064 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22722256041600 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22722054715136 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22721853384576 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22721652058112 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22721450731648 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22721249405184 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22721048078720 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22720846752256 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22720645425792 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22720444099328 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22720242772864 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22720041446400 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22719840119936 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22719638793472 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22719437467008 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22719236140544 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22719034814080 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22718833487616 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22718632161152 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22718430834688 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22718229508224 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22718028181760 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22717826855296 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22717625528832 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22717424202368 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22717222875904 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22717021549440 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22716820222976 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22716618896512 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22716417570048 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22716216243584 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22716014917120 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22715813590656 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22728213223168 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22728206632704 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 52, m: 52)                                                                	 0.261426  	 700       	 2.63546   	 0         	 0.174881  	 15.0701   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2600, r: 52, r2: 52, leftOrthog: 1)       	 0.169105  	 600       	 49.8891   	 0         	 11.6664   	 4.27632   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2600, cols: 52, reductionFactor: 37, colBlockingSize: 12)                 	 0.166805  	 600       	 51.944    	 0         	 3.96835   	 13.0896   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, r1_: 52, n: 50, r2: 52)          	 0.135828  	 600       	 62.1114   	 0         	 9.65116   	 6.43564   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 52)                                                                	 0.0413439 	 100       	 2.20105   	 0         	 0.149962  	 14.6774   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0370617 	 100       	 2.36093   	 0         	 0.162971  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 52, reductionFactor: 37, colBlockingSize: 12)                 	 0.0296669 	 100       	 46.8044   	 0         	 3.57851   	 13.0793   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0262129 	 100       	 50.9342   	 0         	 4.04381   	 12.5956   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 52, r2: 52, leftOrthog: 1)       	 0.0247663 	 100       	 54.5902   	 0         	 12.7724   	 4.27407   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2600, r: 50, r2: 50, leftOrthog: 1)       	 0.0215501 	 100       	 60.3244   	 0         	 14.6635   	 4.11392   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, r1_: 52, n: 50, r2: 50)          	 0.0214388 	 100       	 63.0634   	 0         	 9.80296   	 6.4331    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 2, Qr2: 52)       	 0.0197487 	 700       	 0         	 0         	 75.2578   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2, m: 50, k: 2500)   	 0.0177355 	 800       	 22.5536   	 0         	 46.9476   	 0.4804    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, r1_: 50, n: 50, r2: 52)          	 0.0166214 	 100       	 81.3409   	 0         	 12.8894   	 6.31068   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 100, m: 50, k: 2)  	 0.0104712 	 800       	 1.528     	 0         	 3.23937   	 0.471698  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2600, cols: 2, reductionFactor: 37, colBlockingSize: 12)                  	 0.00919478	 700       	 1.6263    	 0         	 3.16945   	 0.513119  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2, m: 2500, k: 50)	 0.0070982 	 800       	 56.3523   	 0         	 117.303   	 0.4804    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2600, Xcols: 2, r: 2, streamingCols: 0)                    	 0.00611342	 700       	 1.19082   	 0         	 9.52841   	 0.124976  
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00514593	 9         	 0.291491  	 0         	 0.105637  	 2.75937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)            	 0.00507196	 8         	 19.7162   	 0         	 3.18614   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 52, reductionFactor: 37, colBlockingSize: 12)                   	 0.00399522	 100       	 6.95101   	 0         	 1.06207   	 6.54478   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2, m: 2600)                                                                  	 0.00369824	 700       	 0         	 0         	 15.748    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 2, n: 50, r2left: 50, r2right: 2)                 	 0.00357971	 700       	 0         	 0         	 16.2695   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2600, m: 2)                                                         	 0.00328303	 700       	 0         	 0         	 17.7397   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 2, n: 50, r2: 2)                                                                                          	 0.00282222	 808       	 0         	 0         	 0.91616   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0027111 	 8         	 37.8823   	 0         	 3.00985   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00218161	 8         	 22.9189   	 0         	 7.37071   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 2, Qr2: 50)       	 0.00151418	 100       	 0         	 0         	 137.368   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 2, reductionFactor: 37, colBlockingSize: 12)                  	 0.00145947	 100       	 1.4074    	 0         	 2.74291   	 0.513103  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 52, leftOrthog: 1)         	 0.00145283	 100       	 17.8961   	 0         	 7.04832   	 2.53906   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                        	 0.00137111	 8         	 0         	 0         	 11.6694   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 2, m: 2)                                                                   	 0.00110872	 909       	 0.00819867	 0         	 0.0918251 	 0.0892857 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000957425	 100       	 26.1117   	 0         	 6.26681   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000907217	 100       	 0.551136  	 0         	 2.20454   	 0.25      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 2, r: 2, streamingCols: 0)                    	 0.000907144	 100       	 1.10236   	 0         	 8.82065   	 0.124975  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 2)   	 0.00087223	 100       	 1.14649   	 0         	 2.47641   	 0.462963  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 2, reductionFactor: 37, colBlockingSize: 12)                    	 0.000847736	 101       	 0.0489444 	 0         	 0.0991252 	 0.493763  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 2)                                                                                          	 0.00080877	 201       	 0         	 0         	 0.397641  	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 2, n: 50, r2: 1)                                                                                          	 0.000767205	 201       	 0         	 0         	 0.419184  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 100, m: 2, k: 2)   	 0.000765814	 700       	 0.731248  	 0         	 2.95424   	 0.247525  
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 2, n: 50, r2left: 50, r2right: 0)                 	 0.000677268	 100       	 0         	 0         	 11.8122   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                 	 0.000568674	 8         	 0         	 0         	 28.1356   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000546626	 100       	 0         	 0         	 7.31762   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 2)                 	 0.000518852	 100       	 0         	 0         	 8.0177    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2, m: 2500)                                                                  	 0.000515356	 100       	 0         	 0         	 15.5232   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 2)                                                         	 0.000512029	 100       	 0         	 0         	 15.6241   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.00047509	 100       	 0         	 0         	 8.41946   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 2, n: 50, r2left: 1, r2right: 0)                  	 0.000460769	 100       	 0         	 0         	 0.347246  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.00045465	 100       	 1.09975   	 0         	 13.197    	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000444679	 101       	 0.567825  	 0         	 9.08521   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 2)                                                                                 	 0.000391438	 101       	 0.0258023 	 0         	 0.412837  	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000353707	 100       	 0.7068    	 0         	 11.3088   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2, m: 50, k: 50)     	 0.000335411	 100       	 2.98142   	 0         	 6.43986   	 0.462963  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 2)                                                           	 0.000205262	 101       	 0         	 0         	 0.787286  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000170194	 1         	 1.50861   	 0         	 0.235026  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2, m: 50, k: 50)  	 0.000149502	 100       	 6.68887   	 0         	 14.448    	 0.462963  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2, k: 2)    	 6.1751e-05	 100       	 0.647763  	 0         	 2.64287   	 0.245098  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 100, Xcols: 2, r: 2, streamingCols: 0)                     	 6.1201e-05	 8         	 0.0522867 	 0         	 0.420385  	 0.124378  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 2, m: 2, fromLeft: 1)                 	 5.843e-05 	 809       	 0         	 0         	 0.88612   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 100, cols: 2, reductionFactor: 37, colBlockingSize: 12)                   	 4.8291e-05	 8         	 0.136112  	 0         	 0.270361  	 0.503445  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.5161e-05	 1         	 3.55508   	 0         	 1.42203   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 2, n: 50, r: 2, r2: 2)               	 2.875e-05 	 8         	 0.222609  	 0         	 0.899339  	 0.247525  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2, m: 100)                                                                   	 2.7991e-05	 8         	 0         	 0         	 0.91458   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 1.6231e-05	 1         	 15.4026   	 0         	 3.69663   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)               	 1.515e-05 	 9         	 0         	 0         	 23.7624   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 1.17e-05  	 1         	 0.42735   	 0         	 1.7094    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 2)                                                                                   	 9.39e-06  	 1         	 0.0212993 	 0         	 0.085197  	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                          	 6.581e-06 	 1         	 0         	 0         	 6.0781    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                   	 6.17e-06  	 1         	 0         	 0         	 6.48298   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 100, m: 2)                                                          	 5.721e-06 	 8         	 0         	 0         	 4.47474   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 2, r: 2, streamingCols: 0)                      	 5.59e-06  	 1         	 0.0357782 	 0         	 0.289088  	 0.123762  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 100, m: 0, k: 2)   	 4.71e-06  	 100       	 0         	 0         	 33.9703   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 2, r2: 2)               	 1.44e-06  	 1         	 0.277778  	 0         	 1.13333   	 0.245098  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2, m: 50)                                                                    	 6.6e-07   	 1         	 0         	 0         	 2.42424   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.21165   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.21161   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.10703   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.10567   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.925245  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.339832  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.241111  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.227321  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.216874  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.174846  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.104512  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.04584   	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0217379 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0180709 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0178625 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0178293 	 2         
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0150352 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0121757 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0102428 	 20        
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.00930413	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0072477 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00625465	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00538373	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0052366 	 1000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00511838	 18        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00494482	 1310      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00481709	 818       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00425668	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00282551	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00152015	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00118982	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000928307	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00045465	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 7.358e-05 	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23044659443584 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23044445693952 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23044244367488 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23044043041024 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23043841714560 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23043640388096 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23043439061632 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23043237735168 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23043036408704 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23042835082240 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23042633755776 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23042432429312 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23042231102848 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23042029776384 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23041828449920 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23041627123456 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23041425796992 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23041224470528 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23041023144064 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23040821817600 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23040620491136 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23040419164672 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23040217838208 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23040016511744 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23039815185280 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23039613858816 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23039412532352 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23039211205888 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23039009879424 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23038808552960 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23038607226496 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23038405900032 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23038204569472 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23038003243008 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23037801916544 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23037600590080 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23037399263616 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23037197937152 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23036996610688 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23036795284224 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23036593957760 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23036392631296 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23036191304832 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23035989978368 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23035788651904 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23035587325440 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23035385998976 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23035184672512 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23034983346048 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23034782019584 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23034580693120 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23034379366656 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23034178040192 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23033976713728 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23033775387264 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23033574060800 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23033372734336 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23033171407872 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23032970081408 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23032768754944 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23032567428480 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23032366102016 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23032164775552 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23044553783040 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23044547192576 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 53, m: 53)                                                                	 0.271929  	 700       	 2.68268   	 0         	 0.174634  	 15.3617   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2650, cols: 53, reductionFactor: 37, colBlockingSize: 12)                 	 0.172683  	 600       	 53.1266   	 0         	 3.98212   	 13.3413   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2650, r: 53, r2: 53, leftOrthog: 1)       	 0.163833  	 600       	 54.5228   	 0         	 12.5094   	 4.35855   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, r1_: 53, n: 50, r2: 53)          	 0.130994  	 600       	 68.1909   	 0         	 10.3959   	 6.55941   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 53)                                                                	 0.0436465 	 100       	 2.12503   	 0         	 0.143883  	 14.7691   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.037654  	 100       	 2.32379   	 0         	 0.160408  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 53, reductionFactor: 37, colBlockingSize: 12)                 	 0.0308468 	 100       	 46.762    	 0         	 3.50918   	 13.3256   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0263604 	 100       	 51.6232   	 0         	 4.09705   	 12.6001   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2650, r: 50, r2: 50, leftOrthog: 1)       	 0.0237057 	 100       	 55.8937   	 0         	 13.5832   	 4.11491   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 53, r2: 53, leftOrthog: 1)       	 0.023636  	 100       	 59.4219   	 0         	 13.6442   	 4.35511   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, r1_: 53, n: 50, r2: 50)          	 0.0206858 	 100       	 67.897    	 0         	 10.3572   	 6.55551   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 3, Qr2: 53)       	 0.0194883 	 700       	 0         	 0         	 78.5619   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3, m: 50, k: 2500)   	 0.0187978 	 800       	 31.9187   	 0         	 45.1628   	 0.706747  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, r1_: 50, n: 50, r2: 53)          	 0.0177907 	 100       	 78.9457   	 0         	 12.393    	 6.37019   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 150, m: 50, k: 3)  	 0.0166991 	 800       	 2.15581   	 0         	 3.10436   	 0.694444  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2650, cols: 3, reductionFactor: 37, colBlockingSize: 12)                  	 0.0103654 	 700       	 3.30835   	 0         	 4.29992   	 0.769399  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2650, Xcols: 3, r: 3, streamingCols: 0)                    	 0.0067626 	 700       	 2.46872   	 0         	 13.1703   	 0.187447  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 3, m: 2500, k: 50)	 0.00669666	 800       	 89.5968   	 0         	 126.774   	 0.706747  
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00542429	 9         	 0.276533  	 0         	 0.100216  	 2.75937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)            	 0.00505896	 8         	 19.7669   	 0         	 3.19434   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 53, reductionFactor: 37, colBlockingSize: 12)                   	 0.00492108	 100       	 5.86237   	 0         	 0.887447  	 6.60588   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3, m: 2650)                                                                  	 0.00357834	 700       	 0         	 0         	 24.8831   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 3, n: 50, r2left: 50, r2right: 3)                 	 0.00341689	 700       	 0         	 0         	 26.0588   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2650, m: 3)                                                         	 0.00336253	 700       	 0         	 0         	 26.4801   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 3, n: 50, r2: 3)                                                                                          	 0.0027164 	 808       	 0         	 0         	 2.14166   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00267317	 8         	 38.4198   	 0         	 3.05256   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00243405	 8         	 20.5419   	 0         	 6.60627   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 3, reductionFactor: 37, colBlockingSize: 12)                  	 0.00165492	 100       	 2.79266   	 0         	 3.6299    	 0.769347  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 53, leftOrthog: 1)         	 0.00147246	 100       	 17.9971   	 0         	 7.03584   	 2.55792   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 3, m: 3)                                                                   	 0.00137448	 909       	 0.0238083 	 0         	 0.158722  	 0.15      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 150, m: 3, k: 3)   	 0.00112456	 700       	 1.68066   	 0         	 4.52658   	 0.371287  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 3, r: 3, streamingCols: 0)                    	 0.001053  	 100       	 2.13675   	 0         	 11.3994   	 0.187444  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 3, Qr2: 50)       	 0.00100155	 100       	 0         	 0         	 211.672   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                        	 0.000954064	 8         	 0         	 0         	 16.7704   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000926395	 100       	 26.9863   	 0         	 6.47672   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000828643	 100       	 0.603396  	 0         	 2.41358   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 3)                                                                                          	 0.00082185	 201       	 0         	 0         	 0.586968  	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 3, n: 50, r2: 1)                                                                                          	 0.000785226	 201       	 0         	 0         	 0.614345  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 3, reductionFactor: 37, colBlockingSize: 12)                    	 0.000733855	 101       	 0.127214  	 0         	 0.175065  	 0.72667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 3)   	 0.000692529	 100       	 2.16597   	 0         	 3.23452   	 0.669643  
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 3, n: 50, r2left: 50, r2right: 0)                 	 0.000680191	 100       	 0         	 0         	 17.6421   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3, m: 2500)                                                                  	 0.000567892	 100       	 0         	 0         	 21.1308   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                 	 0.000551033	 8         	 0         	 0         	 29.0364   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 3)                                                         	 0.000547388	 100       	 0         	 0         	 21.9223   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000530478	 100       	 0         	 0         	 7.54037   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 3)                 	 0.000528721	 100       	 0         	 0         	 8.01935   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000504417	 100       	 0         	 0         	 7.92995   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.00044709	 100       	 1.11834   	 0         	 13.4201   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 3, n: 50, r2left: 1, r2right: 0)                  	 0.000437272	 100       	 0         	 0         	 0.548857  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000412365	 101       	 0.612322  	 0         	 9.79715   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 3)                                                                                 	 0.000365031	 101       	 0.0415033 	 0         	 0.664053  	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3, m: 50, k: 50)     	 0.000358528	 100       	 4.18377   	 0         	 6.24777   	 0.669643  
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000342923	 100       	 0.729027  	 0         	 11.6644   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000217466	 1         	 1.18068   	 0         	 0.183937  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 3)                                                           	 0.000208193	 101       	 0         	 0         	 1.1643    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 3, m: 50, k: 50)  	 0.000151061	 100       	 9.92976   	 0         	 14.8284   	 0.669643  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3, k: 3)    	 9.6921e-05	 100       	 0.928591  	 0         	 2.55053   	 0.364078  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 3, m: 3, fromLeft: 1)                 	 9.4402e-05	 809       	 0         	 0         	 1.23404   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 150, Xcols: 3, r: 3, streamingCols: 0)                     	 7.3442e-05	 8         	 0.147055  	 0         	 0.788214  	 0.186567  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 5.1791e-05	 1         	 2.41355   	 0         	 0.965419  	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 150, cols: 3, reductionFactor: 37, colBlockingSize: 12)                   	 5.1601e-05	 8         	 0.42991   	 0         	 0.569291  	 0.755167  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 3, n: 50, r: 3, r2: 3)               	 3.2311e-05	 8         	 0.668503  	 0         	 1.8005    	 0.371287  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3, m: 150)                                                                   	 2.847e-05 	 8         	 0         	 0         	 2.02318   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 150, m: 3)                                                          	 2.6362e-05	 8         	 0         	 0         	 2.18496   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 3, r: 3, streamingCols: 0)                      	 2.1001e-05	 1         	 0.0214276 	 0         	 0.115994  	 0.184729  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 1.693e-05 	 1         	 14.7667   	 0         	 3.544     	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)               	 1.5471e-05	 9         	 0         	 0         	 23.2693   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 3)                                                                                   	 9.57e-06  	 1         	 0.031348  	 0         	 0.125392  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 9.25e-06  	 1         	 0.540541  	 0         	 2.16216   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                          	 8.33e-06  	 1         	 0         	 0         	 4.80192   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                   	 7.9e-06   	 1         	 0         	 0         	 5.06329   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 150, m: 0, k: 3)   	 5e-06     	 100       	 0         	 0         	 72        	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3, m: 50)                                                                    	 3.75e-06  	 1         	 0         	 0         	 0.64      	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 3, r2: 3)               	 1.69e-06  	 1         	 0.532544  	 0         	 1.46272   	 0.364078  
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.2259    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.22585   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.11263   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.11134   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.934817  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.353229  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.250507  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.235453  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.212647  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.170397  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.113146  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0482707 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0209943 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0191563 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0186181 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0179969 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0179659 	 2         
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0161481 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0103959 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.00975681	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00684773	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00679877	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00510989	 18        
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00510687	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00506307	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00485396	 1310      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00473738	 818       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00413626	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00288831	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00148966	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112032	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000847463	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00044709	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000109873	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22523473950592 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22523278256128 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22523076929664 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22522875603200 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22522674276736 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22522472950272 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22522271623808 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22522070297344 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22521868970880 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22521667644416 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22521466317952 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22521264991488 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22521063665024 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22520862338560 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22520661012096 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22520459685632 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22520258359168 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22520057032704 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22519855706240 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22519654379776 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22519453053312 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22519251726848 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22519050400384 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22518849073920 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22518647747456 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22518446420992 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22518245094528 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22518043768064 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22517842441600 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22517641115136 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22517439788672 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22517238462208 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22517037131648 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22516835805184 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22516634478720 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22516433152256 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22516231825792 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22516030499328 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22515829172864 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22515627846400 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22515426519936 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22515225193472 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22515023867008 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22514822540544 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22514621214080 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22514419887616 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22514218561152 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22514017234688 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22513815908224 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22513614581760 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22513413255296 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22513211928832 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22513010602368 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22512809275904 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22512607949440 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22512406622976 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22512205296512 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22512003970048 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22511802643584 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22511601317120 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22511399990656 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22511198664192 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22510997337728 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22523368290048 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22523361699584 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 54, m: 54)                                                                	 0.278576  	 700       	 2.76971   	 0         	 0.17694   	 15.6534   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2700, cols: 54, reductionFactor: 37, colBlockingSize: 12)                 	 0.176589  	 600       	 54.9478   	 0         	 4.04236   	 13.593    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2700, r: 54, r2: 54, leftOrthog: 1)       	 0.175197  	 600       	 53.927    	 0         	 12.1436   	 4.44079   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, r1_: 54, n: 50, r2: 54)          	 0.139418  	 600       	 67.7661   	 0         	 10.1398   	 6.68317   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 54)                                                                	 0.0428899 	 100       	 2.20332   	 0         	 0.148287  	 14.8585   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0379183 	 100       	 2.30759   	 0         	 0.15929   	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 54, reductionFactor: 37, colBlockingSize: 12)                 	 0.0320108 	 100       	 46.7782   	 0         	 3.44674   	 13.5717   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0262958 	 100       	 52.7265   	 0         	 4.18318   	 12.6044   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2700, r: 50, r2: 50, leftOrthog: 1)       	 0.0254122 	 100       	 53.1241   	 0         	 12.9072   	 4.11585   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 54, r2: 54, leftOrthog: 1)       	 0.0251713 	 100       	 57.9232   	 0         	 13.0572   	 4.43612   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, r1_: 54, n: 50, r2: 50)          	 0.0213824 	 100       	 68.1868   	 0         	 10.2108   	 6.67788   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 200, m: 50, k: 4)  	 0.0208215 	 800       	 3.07374   	 0         	 3.38112   	 0.909091  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 4, Qr2: 54)       	 0.0207313 	 700       	 0         	 0         	 76.0667   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, r1_: 50, n: 50, r2: 54)          	 0.0185348 	 100       	 78.6627   	 0         	 12.2364   	 6.42857   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4, m: 50, k: 2500)   	 0.0185298 	 800       	 43.1736   	 0         	 46.6966   	 0.924556  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2700, cols: 4, reductionFactor: 37, colBlockingSize: 12)                  	 0.0109931 	 700       	 5.65033   	 0         	 5.50979   	 1.02551   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2700, Xcols: 4, r: 4, streamingCols: 0)                    	 0.00812617	 700       	 3.72131   	 0         	 14.8908   	 0.249907  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 4, m: 2500, k: 50)	 0.00708393	 800       	 112.932   	 0         	 122.147   	 0.924556  
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00505802	 9         	 0.296557  	 0         	 0.107473  	 2.75937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)            	 0.00500199	 8         	 19.992    	 0         	 3.23071   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 54, reductionFactor: 37, colBlockingSize: 12)                   	 0.0044162 	 100       	 6.78142   	 0         	 1.01734   	 6.6658    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4, m: 2700)                                                                  	 0.00430229	 700       	 0         	 0         	 28.1153   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2700, m: 4)                                                         	 0.00422711	 700       	 0         	 0         	 28.6153   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 4, n: 50, r2left: 50, r2right: 4)                 	 0.00391891	 700       	 0         	 0         	 30.8657   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 200, m: 4, k: 4)   	 0.00302012	 700       	 1.48339   	 0         	 2.99644   	 0.49505   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 4, n: 50, r2: 4)                                                                                          	 0.00283481	 808       	 0         	 0         	 3.64836   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00280433	 8         	 36.6229   	 0         	 2.90978   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                        	 0.00199412	 8         	 0         	 0         	 8.02358   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.0019691 	 8         	 25.3923   	 0         	 8.16617   	 3.10945   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 4, m: 4)                                                                   	 0.00173052	 909       	 0.0441232 	 0         	 0.218515  	 0.201923  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 4, reductionFactor: 37, colBlockingSize: 12)                  	 0.00165355	 100       	 4.96882   	 0         	 4.8458    	 1.02539   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 54, leftOrthog: 1)         	 0.00126892	 100       	 21.278    	 0         	 8.25901   	 2.57634   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 4, r: 4, streamingCols: 0)                    	 0.00125314	 100       	 3.19198   	 0         	 12.773    	 0.2499    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 4, Qr2: 50)       	 0.00119214	 100       	 0         	 0         	 181.187   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 4, reductionFactor: 37, colBlockingSize: 12)                    	 0.000906248	 101       	 0.183137  	 0         	 0.192583  	 0.950951  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000885717	 100       	 0.564514  	 0         	 2.25806   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000868186	 100       	 28.7957   	 0         	 6.91096   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 4)                                                                                          	 0.000842268	 201       	 0         	 0         	 0.763652  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 4, n: 50, r2left: 50, r2right: 0)                 	 0.000824936	 100       	 0         	 0         	 19.3954   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 4)                                                         	 0.000811907	 100       	 0         	 0         	 19.7067   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 4, n: 50, r2: 1)                                                                                          	 0.000761424	 201       	 0         	 0         	 0.844733  	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4, m: 2500)                                                                  	 0.00072291	 100       	 0         	 0         	 22.1328   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 4)   	 0.000703866	 100       	 2.84145   	 0         	 3.29608   	 0.862069  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                 	 0.000546843	 8         	 0         	 0         	 29.2589   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000535874	 100       	 0         	 0         	 7.46444   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 4)                 	 0.000530318	 100       	 0         	 0         	 8.14606   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000515866	 100       	 0         	 0         	 7.75395   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000445979	 100       	 1.12113   	 0         	 13.4535   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 4, n: 50, r2left: 1, r2right: 0)                  	 0.000442301	 100       	 0         	 0         	 0.723489  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000422151	 101       	 0.598127  	 0         	 9.57004   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 4)                                                                                 	 0.000402071	 101       	 0.0502399 	 0         	 0.803838  	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4, m: 50, k: 50)     	 0.00034704	 100       	 5.76302   	 0         	 6.68511   	 0.862069  
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000344663	 100       	 0.725346  	 0         	 11.6055   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 4)                                                           	 0.000251417	 101       	 0         	 0         	 1.28551   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000221836	 1         	 1.15742   	 0         	 0.180313  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 4, m: 50, k: 50)  	 0.000133061	 100       	 15.0307   	 0         	 17.4356   	 0.862069  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4, k: 4)    	 0.000123703	 100       	 1.29342   	 0         	 2.69031   	 0.480769  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 4, n: 50, r: 4, r2: 4)               	 8.8123e-05	 8         	 0.581006  	 0         	 1.17363   	 0.49505   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 4, m: 4, fromLeft: 1)                 	 8.2063e-05	 809       	 0         	 0         	 2.52372   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 200, Xcols: 4, r: 4, streamingCols: 0)                     	 7.1573e-05	 8         	 0.357677  	 0         	 1.43786   	 0.248756  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 200, cols: 4, reductionFactor: 37, colBlockingSize: 12)                   	 5.8182e-05	 8         	 0.903781  	 0         	 0.897597  	 1.00689   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 4.4671e-05	 1         	 2.79824   	 0         	 1.11929   	 2.5       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4, m: 200)                                                                   	 2.9401e-05	 8         	 0         	 0         	 3.48287   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 200, m: 4)                                                          	 2.842e-05 	 8         	 0         	 0         	 3.6031    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 4, r: 4, streamingCols: 0)                      	 1.69e-05  	 1         	 0.0473373 	 0         	 0.193136  	 0.245098  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)               	 1.5411e-05	 9         	 0         	 0         	 23.3599   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 1.3911e-05	 1         	 17.9714   	 0         	 4.31313   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 4)                                                                                   	 1.011e-05 	 1         	 0.0395648 	 0         	 0.158259  	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                          	 9.95e-06  	 1         	 0         	 0         	 4.0201    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 8.86e-06  	 1         	 0.564334  	 0         	 2.25734   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                   	 6.571e-06 	 1         	 0         	 0         	 6.08735   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 200, m: 0, k: 4)   	 4.8e-06   	 100       	 0         	 0         	 133.333   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4, m: 50)                                                                    	 3.94e-06  	 1         	 0         	 0         	 0.812183  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 4, r2: 4)               	 1.43e-06  	 1         	 1.11888   	 0         	 2.32727   	 0.480769  
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.28805   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.288     	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.1607    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.15935   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.97291   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.359384  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.255949  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.240012  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.227049  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.180204  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.127229  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0536289 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.024674  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0224393 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0188769 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0184514 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0184209 	 2         
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0171595 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0114816 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0102411 	 20        
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00732293	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00721699	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00678854	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00571646	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00561195	 818       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00533422	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00510546	 18        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00497437	 1310      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00317857	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00121178	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00116889	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000904687	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000445979	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 9.7474e-05	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23228349970304 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23228122654720 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23227921328256 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23227720001792 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23227518675328 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23227317348864 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23227116022400 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23226914695936 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23226713369472 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23226512043008 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23226310716544 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23226109390080 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23225908063616 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23225706737152 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23225505410688 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23225304084224 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23225102757760 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23224901431296 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23224700104832 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23224498778368 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23224297451904 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23224096125440 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23223894798976 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23223693472512 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23223492146048 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23223290819584 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23223089493120 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23222888166656 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23222686840192 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23222485513728 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23222284187264 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23222082860800 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23221881530240 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23221680203776 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23221478877312 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23221277550848 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23221076224384 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23220874897920 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23220673571456 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23220472244992 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23220270918528 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23220069592064 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23219868265600 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23219666939136 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23219465612672 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23219264286208 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23219062959744 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23218861633280 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23218660306816 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23218458980352 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23218257653888 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23218056327424 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23217855000960 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23217653674496 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23217452348032 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23217251021568 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23217049695104 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23216848368640 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23216647042176 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23216445715712 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23216244389248 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23216043062784 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23215841736320 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23228244309760 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23228237719296 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 55, m: 55)                                                                	 0.28856   	 700       	 2.82519   	 0         	 0.177183  	 15.945    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2750, cols: 55, reductionFactor: 37, colBlockingSize: 12)                 	 0.181803  	 600       	 56.3924   	 0         	 4.0732    	 13.8447   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2750, r: 55, r2: 55, leftOrthog: 1)       	 0.180556  	 600       	 55.2875   	 0         	 12.2236   	 4.52303   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, r1_: 55, n: 50, r2: 55)          	 0.14938   	 600       	 66.8263   	 0         	 9.81739   	 6.80693   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 55)                                                                	 0.0425155 	 100       	 2.26388   	 0         	 0.151474  	 14.9457   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0361223 	 100       	 2.42233   	 0         	 0.16721   	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 55, reductionFactor: 37, colBlockingSize: 12)                 	 0.0332469 	 100       	 46.7225   	 0         	 3.38137   	 13.8176   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 250, m: 50, k: 5)  	 0.0293527 	 800       	 3.40684   	 0         	 3.05253   	 1.11607   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0260973 	 100       	 54.1113   	 0         	 4.29163   	 12.6086   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 55, r2: 55, leftOrthog: 1)       	 0.0259207 	 100       	 58.3511   	 0         	 12.9179   	 4.51708   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2750, r: 50, r2: 50, leftOrthog: 1)       	 0.0250473 	 100       	 54.8961   	 0         	 13.3348   	 4.11677   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, r1_: 55, n: 50, r2: 50)          	 0.0233999 	 100       	 64.6369   	 0         	 9.50516   	 6.8002    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 5, Qr2: 55)       	 0.0221472 	 700       	 0         	 0         	 73.3277   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5, m: 50, k: 2500)   	 0.0219804 	 800       	 45.495    	 0         	 40.1084   	 1.1343    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, r1_: 50, n: 50, r2: 55)          	 0.0200862 	 100       	 75.3005   	 0         	 11.61     	 6.48585   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2750, cols: 5, reductionFactor: 37, colBlockingSize: 12)                  	 0.0114044 	 700       	 8.66783   	 0         	 6.76406   	 1.28145   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2750, Xcols: 5, r: 5, streamingCols: 0)                    	 0.00933341	 700       	 5.15621   	 0         	 16.5074   	 0.312358  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 5, m: 2500, k: 50)	 0.0082648 	 800       	 120.995   	 0         	 106.669   	 1.1343    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 55, reductionFactor: 37, colBlockingSize: 12)                   	 0.00543034	 100       	 5.72111   	 0         	 0.850776  	 6.72458   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)            	 0.00508079	 8         	 19.682    	 0         	 3.18061   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5, m: 2750)                                                                  	 0.00504815	 700       	 0         	 0         	 30.5062   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00500515	 9         	 0.29969   	 0         	 0.108608  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2750, m: 5)                                                         	 0.00465954	 700       	 0         	 0         	 33.0505   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 5, n: 50, r2left: 50, r2right: 5)                 	 0.00462701	 700       	 0         	 0         	 33.2828   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 250, m: 5, k: 5)   	 0.00440072	 700       	 1.98831   	 0         	 3.21311   	 0.618812  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 5, n: 50, r2: 5)                                                                                          	 0.00297518	 808       	 0         	 0         	 5.43161   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00282864	 8         	 36.3081   	 0         	 2.88478   	 12.5861   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 5, m: 5)                                                                   	 0.00223702	 909       	 0.0674531 	 0         	 0.26006   	 0.259375  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00218111	 8         	 22.9241   	 0         	 7.3724    	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 5, reductionFactor: 37, colBlockingSize: 12)                  	 0.00180315	 100       	 7.11967   	 0         	 5.55694   	 1.28122   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 5, Qr2: 50)       	 0.00172602	 100       	 0         	 0         	 127.461   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 55, leftOrthog: 1)         	 0.00147193	 100       	 18.6829   	 0         	 7.20141   	 2.59434   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 5, r: 5, streamingCols: 0)                    	 0.00134721	 100       	 4.63923   	 0         	 14.853    	 0.312344  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 5)                                                         	 0.000976665	 100       	 0         	 0         	 20.4779   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000956075	 100       	 0.522972  	 0         	 2.09189   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 5, n: 50, r2left: 50, r2right: 0)                 	 0.00088655	 100       	 0         	 0         	 22.5594   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 5)                                                                                          	 0.000858105	 201       	 0         	 0         	 0.936948  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000803457	 100       	 31.1155   	 0         	 7.46773   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                        	 0.000779841	 8         	 0         	 0         	 20.517    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5, m: 2500)                                                                  	 0.000776671	 100       	 0         	 0         	 25.7509   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 5, n: 50, r2: 1)                                                                                          	 0.000771423	 201       	 0         	 0         	 1.04223   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 5, reductionFactor: 37, colBlockingSize: 12)                    	 0.000764588	 101       	 0.339169  	 0         	 0.290614  	 1.16708   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 5)   	 0.000607586	 100       	 4.11464   	 0         	 3.95006   	 1.04167   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                 	 0.000579993	 8         	 0         	 0         	 27.5865   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 5)                 	 0.000566292	 100       	 0         	 0         	 7.76984   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000528498	 100       	 0         	 0         	 7.56862   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000497407	 100       	 0         	 0         	 8.0417    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000460575	 100       	 1.0856    	 0         	 13.0272   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 5, n: 50, r2left: 1, r2right: 0)                  	 0.000431233	 100       	 0         	 0         	 0.927573  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000429208	 101       	 0.588293  	 0         	 9.41269   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5, m: 50, k: 50)     	 0.000383469	 100       	 6.51943   	 0         	 6.25865   	 1.04167   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 5)                                                                                 	 0.000367597	 101       	 0.0686894 	 0         	 1.09903   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000352648	 100       	 0.708922  	 0         	 11.3428   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000308518	 1         	 0.832226  	 0         	 0.129652  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 5)                                                           	 0.000230394	 101       	 0         	 0         	 1.75352   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 5, m: 50, k: 50)  	 0.000195136	 100       	 12.8116   	 0         	 12.2991   	 1.04167   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 5, k: 5)    	 0.000129077	 100       	 1.93683   	 0         	 3.25387   	 0.595238  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 250, Xcols: 5, r: 5, streamingCols: 0)                     	 0.000103571	 8         	 0.482761  	 0         	 1.55256   	 0.310945  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 5, m: 5, fromLeft: 1)                 	 9.7822e-05	 809       	 0         	 0         	 3.30805   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 5, n: 50, r: 5, r2: 5)               	 9.3672e-05	 8         	 1.06755   	 0         	 1.72517   	 0.618812  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 250, cols: 5, reductionFactor: 37, colBlockingSize: 12)                   	 6.958e-05 	 8         	 1.47604   	 0         	 1.17275   	 1.25861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 5.1561e-05	 1         	 2.42431   	 0         	 0.969725  	 2.5       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5, m: 250)                                                                   	 2.9642e-05	 8         	 0         	 0         	 5.39775   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 250, m: 5)                                                          	 2.763e-05 	 8         	 0         	 0         	 5.79081   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 5, r: 5, streamingCols: 0)                      	 1.828e-05 	 1         	 0.0683807 	 0         	 0.224289  	 0.304878  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)               	 1.515e-05 	 9         	 0         	 0         	 23.7624   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 1.3491e-05	 1         	 18.5309   	 0         	 4.44741   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 1.131e-05 	 1         	 0.442087  	 0         	 1.76835   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 5)                                                                                   	 8.741e-06 	 1         	 0.0572017 	 0         	 0.228807  	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                          	 8.61e-06  	 1         	 0         	 0         	 4.64576   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                   	 6.151e-06 	 1         	 0         	 0         	 6.50301   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 250, m: 0, k: 5)   	 5.09e-06  	 100       	 0         	 0         	 196.464   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 5, r2: 5)               	 3.61e-06  	 1         	 0.692521  	 0         	 1.16343   	 0.595238  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5, m: 50)                                                                    	 3.52e-06  	 1         	 0         	 0         	 1.13636   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.34907   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.34904   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.20114   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.19973   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.9995    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.367198  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.263756  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.247257  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.232996  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.193669  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.147826  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.056476  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0344951 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0243706 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0223639 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0176991 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0175619 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0175311 	 2         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0130351 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.010717  	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00845994	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00724217	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00668268	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00651109	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00644413	 818       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00554007	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00519157	 18        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0051332 	 1310      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0029863 	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00124063	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00114945	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000976126	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000460575	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000112972	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23090556008320 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23090348156928 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23090146830464 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23089945504000 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23089744177536 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23089542851072 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23089341524608 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23089140198144 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23088938871680 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23088737545216 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23088536218752 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23088334892288 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23088133565824 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23087932239360 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23087730912896 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23087529586432 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23087328259968 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23087126933504 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23086925607040 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23086724280576 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23086522954112 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23086321627648 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23086120301184 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23085918974720 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23085717648256 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23085516321792 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23085314995328 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23085113668864 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23084912342400 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23084711015936 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23084509689472 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23084308363008 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23084107032448 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23083905705984 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23083704379520 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23083503053056 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23083301726592 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23083100400128 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23082899073664 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23082697747200 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23082496420736 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23082295094272 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23082093767808 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23081892441344 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23081691114880 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23081489788416 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23081288461952 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23081087135488 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23080885809024 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23080684482560 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23080483156096 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23080281829632 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23080080503168 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23079879176704 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23079677850240 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23079476523776 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23079275197312 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23079073870848 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23078872544384 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23078671217920 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23078469891456 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23078268564992 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23078067238528 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23090450347776 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23090443757312 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 56, m: 56)                                                                	 0.282978  	 700       	 3.04094   	 0         	 0.187288  	 16.2367   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2800, cols: 56, reductionFactor: 37, colBlockingSize: 12)                 	 0.183951  	 600       	 58.8296   	 0         	 4.17336   	 14.0964   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2800, r: 56, r2: 56, leftOrthog: 1)       	 0.162148  	 600       	 64.9836   	 0         	 14.1107   	 4.60526   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, r1_: 56, n: 50, r2: 56)          	 0.135187  	 600       	 77.9433   	 0         	 11.2461   	 6.93069   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 56)                                                                	 0.0432996 	 100       	 2.2633    	 0         	 0.150579  	 15.0307   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0363492 	 100       	 2.40721   	 0         	 0.166166  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 56, reductionFactor: 37, colBlockingSize: 12)                 	 0.0335354 	 100       	 48.0202   	 0         	 3.41456   	 14.0634   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0257149 	 100       	 55.9145   	 0         	 4.43322   	 12.6126   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 56, r2: 56, leftOrthog: 1)       	 0.0236038 	 100       	 66.43     	 0         	 14.4476   	 4.598     
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2800, r: 50, r2: 50, leftOrthog: 1)       	 0.0223998 	 100       	 62.5006   	 0         	 15.1787   	 4.11765   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, r1_: 56, n: 50, r2: 50)          	 0.0196692 	 100       	 79.7186   	 0         	 11.5159   	 6.92247   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 6, Qr2: 56)       	 0.0195593 	 700       	 0         	 0         	 85.4917   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, r1_: 50, n: 50, r2: 56)          	 0.0189623 	 100       	 82.6905   	 0         	 12.6398   	 6.54206   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6, m: 50, k: 2500)   	 0.0189379 	 800       	 63.3651   	 0         	 47.414    	 1.33642   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2800, cols: 6, reductionFactor: 37, colBlockingSize: 12)                  	 0.0121627 	 700       	 11.9163   	 0         	 7.75171   	 1.53725   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2800, Xcols: 6, r: 6, streamingCols: 0)                    	 0.00974722	 700       	 7.23899   	 0         	 19.3143   	 0.374799  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 300, m: 50, k: 6)  	 0.00793534	 800       	 18.1467   	 0         	 13.7915   	 1.31579   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 6, m: 2500, k: 50)	 0.00746023	 800       	 160.853   	 0         	 120.361   	 1.33642   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 300, m: 6, k: 6)   	 0.00563157	 700       	 2.68486   	 0         	 3.61561   	 0.742574  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 56, reductionFactor: 37, colBlockingSize: 12)                   	 0.00533151	 100       	 6.04099   	 0         	 0.890705  	 6.78225   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)            	 0.00522719	 8         	 19.1307   	 0         	 3.09153   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00482043	 9         	 0.311175  	 0         	 0.11277   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6, m: 2800)                                                                  	 0.00455215	 700       	 0         	 0         	 41.3343   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2800, m: 6)                                                         	 0.00431602	 700       	 0         	 0         	 43.5957   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 6, n: 50, r2left: 50, r2right: 6)                 	 0.00410265	 700       	 0         	 0         	 45.863    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 56, leftOrthog: 1)         	 0.00292541	 100       	 9.57132   	 0         	 3.66445   	 2.61194   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 6, n: 50, r2: 6)                                                                                          	 0.00283921	 808       	 0         	 0         	 8.19608   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00255277	 8         	 40.2319   	 0         	 3.19653   	 12.5861   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 6, m: 6)                                                                   	 0.00237789	 909       	 0.110094  	 0         	 0.348632  	 0.315789  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00237191	 8         	 21.08     	 0         	 6.77934   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 6, reductionFactor: 37, colBlockingSize: 12)                  	 0.00199107	 100       	 9.2847    	 0         	 6.04138   	 1.53685   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 6, r: 6, streamingCols: 0)                    	 0.00143994	 100       	 6.25025   	 0         	 16.6773   	 0.374775  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 6, Qr2: 50)       	 0.00101464	 100       	 0         	 0         	 220.769   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 6, n: 50, r2left: 50, r2right: 0)                 	 0.000858157	 100       	 0         	 0         	 27.9669   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 6)                                                         	 0.000855924	 100       	 0         	 0         	 28.0399   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000803323	 100       	 0.622415  	 0         	 2.48966   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 6)                                                                                          	 0.000794453	 201       	 0         	 0         	 1.21442   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 6, reductionFactor: 37, colBlockingSize: 12)                    	 0.000793873	 101       	 0.470386  	 0         	 0.341979  	 1.37548   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000789314	 100       	 31.6731   	 0         	 7.60154   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 6, n: 50, r2: 1)                                                                                          	 0.000733996	 201       	 0         	 0         	 1.31445   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6, m: 2500)                                                                  	 0.000709541	 100       	 0         	 0         	 33.8247   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                        	 0.000615156	 8         	 0         	 0         	 26.0097   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 6)                 	 0.000511824	 100       	 0         	 0         	 8.75301   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000484778	 100       	 0         	 0         	 8.2512    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 6)   	 0.000480091	 100       	 6.24882   	 0         	 5.16569   	 1.20968   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                 	 0.000475862	 8         	 0         	 0         	 33.6232   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000465116	 100       	 0         	 0         	 8.60001   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.00041446	 100       	 1.20639   	 0         	 14.4767   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 6, n: 50, r2left: 1, r2right: 0)                  	 0.000407099	 100       	 0         	 0         	 1.17907   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000386844	 101       	 0.652718  	 0         	 10.4435   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.00036374	 1         	 0.70588   	 0         	 0.109969  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 6)                                                                                 	 0.000358628	 101       	 0.0844887 	 0         	 1.35182   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6, m: 50, k: 50)     	 0.000344625	 100       	 8.70511   	 0         	 7.19623   	 1.20968   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000334113	 100       	 0.74825   	 0         	 11.972    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 6)                                                           	 0.000230694	 101       	 0         	 0         	 2.10149   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 6, m: 50, k: 50)  	 0.000197547	 100       	 15.1863   	 0         	 12.554    	 1.20968   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 300, Xcols: 6, r: 6, streamingCols: 0)                     	 0.000126965	 8         	 0.680503  	 0         	 1.82375   	 0.373134  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 6, k: 6)    	 0.000112075	 100       	 3.21213   	 0         	 4.53982   	 0.707547  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 6, m: 6, fromLeft: 1)                 	 0.000110182	 809       	 0         	 0         	 4.22922   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 6, n: 50, r: 6, r2: 6)               	 9.2322e-05	 8         	 1.87171   	 0         	 2.52057   	 0.742574  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 300, cols: 6, reductionFactor: 37, colBlockingSize: 12)                   	 8.2704e-05	 8         	 2.14585   	 0         	 1.42078   	 1.51033   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.8291e-05	 1         	 3.26447   	 0         	 1.30579   	 2.5       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6, m: 300)                                                                   	 2.973e-05 	 8         	 0         	 0         	 7.74975   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 300, m: 6)                                                          	 2.811e-05 	 8         	 0         	 0         	 8.19637   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 1.7e-05   	 1         	 14.7059   	 0         	 3.52941   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)               	 1.5231e-05	 9         	 0         	 0         	 23.636    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 6, r: 6, streamingCols: 0)                      	 1.5191e-05	 1         	 0.118491  	 0         	 0.325456  	 0.364078  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 6)                                                                                   	 8.91e-06  	 1         	 0.0673401 	 0         	 0.26936   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                          	 8.07e-06  	 1         	 0         	 0         	 4.95663   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 7.21e-06  	 1         	 0.693481  	 0         	 2.77393   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                   	 5.46e-06  	 1         	 0         	 0         	 7.32601   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 300, m: 0, k: 6)   	 4.93e-06  	 100       	 0         	 0         	 292.089   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6, m: 50)                                                                    	 3.76e-06  	 1         	 0         	 0         	 1.2766    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 6, r2: 6)               	 2.15e-06  	 1         	 1.67442   	 0         	 2.36651   	 0.707547  
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.26358   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.26354   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.14325   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.14202   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.962521  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.362627  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.266479  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.249167  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.211077  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.174608  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.12021   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0567845 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0210391 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0192825 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0184503 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0172472 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0172194 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.014164  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0137395 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.009814  	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00765778	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00719831	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00605398	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00587973	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0057765 	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00533866	 18        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00485244	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00451958	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00290459	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.001236  	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107959	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000819443	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00041446	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000125413	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23284203296640 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23284024338432 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23283823011968 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23283621685504 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23283420359040 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23283219032576 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23283017706112 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23282816379648 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23282615053184 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23282413726720 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23282212400256 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23282011073792 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23281809747328 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23281608420864 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23281407094400 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23281205767936 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23281004441472 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23280803115008 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23280601788544 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23280400462080 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23280199135616 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23279997809152 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23279796482688 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23279595156224 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23279393829760 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23279192503296 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23278991176832 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23278789850368 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23278588523904 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23278387197440 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23278185870976 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23277984544512 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23277783213952 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23277581887488 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23277380561024 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23277179234560 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23276977908096 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23276776581632 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23276575255168 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23276373928704 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23276172602240 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23275971275776 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23275769949312 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23275568622848 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23275367296384 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23275165969920 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23274964643456 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23274763316992 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23274561990528 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23274360664064 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23274159337600 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23273958011136 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23273756684672 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23273555358208 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23273354031744 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23273152705280 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23272951378816 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23272750052352 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23272548725888 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23272347399424 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23272146072960 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23271944746496 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23271743420032 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23284097636096 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23283918939904 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 57, m: 57)                                                                	 0.300461  	 700       	 3.02017   	 0         	 0.182727  	 16.5283   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2850, cols: 57, reductionFactor: 37, colBlockingSize: 12)                 	 0.190363  	 600       	 59.9481   	 0         	 4.1781    	 14.3482   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2850, r: 57, r2: 57, leftOrthog: 1)       	 0.163171  	 600       	 68.0977   	 0         	 14.5275   	 4.6875    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, r1_: 57, n: 50, r2: 57)          	 0.140341  	 600       	 79.1755   	 0         	 11.2235   	 7.05446   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 57)                                                                	 0.0428033 	 100       	 2.33043   	 0         	 0.154194  	 15.1136   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0364294 	 100       	 2.4019    	 0         	 0.1658    	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 57, reductionFactor: 37, colBlockingSize: 12)                 	 0.0347049 	 100       	 48.0741   	 0         	 3.35974   	 14.3089   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0271223 	 100       	 53.9597   	 0         	 4.27692   	 12.6165   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2850, r: 50, r2: 50, leftOrthog: 1)       	 0.0250214 	 100       	 56.9514   	 0         	 13.8282   	 4.1185    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 57, r2: 57, leftOrthog: 1)       	 0.0249038 	 100       	 65.231    	 0         	 13.9416   	 4.67888   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, r1_: 57, n: 50, r2: 50)          	 0.0202749 	 100       	 80.1236   	 0         	 11.3736   	 7.04469   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 7, Qr2: 57)       	 0.0195913 	 700       	 0         	 0         	 87.8677   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7, m: 50, k: 2500)   	 0.0177416 	 800       	 78.9107   	 0         	 51.5309   	 1.53133   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, r1_: 50, n: 50, r2: 57)          	 0.0171708 	 100       	 94.6084   	 0         	 14.3406   	 6.59722   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2850, cols: 7, reductionFactor: 37, colBlockingSize: 12)                  	 0.0132789 	 700       	 15.1213   	 0         	 8.43402   	 1.79289   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2850, Xcols: 7, r: 7, streamingCols: 0)                    	 0.0110495 	 700       	 8.84699   	 0         	 20.2341   	 0.437232  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 350, m: 50, k: 7)  	 0.00840952	 800       	 23.3069   	 0         	 15.4492   	 1.50862   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 7, m: 2500, k: 50)	 0.00762361	 800       	 183.64    	 0         	 119.922   	 1.53133   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 350, m: 7, k: 7)   	 0.00734186	 700       	 3.27029   	 0         	 3.77485   	 0.866337  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 57, reductionFactor: 37, colBlockingSize: 12)                   	 0.00547087	 100       	 6.09923   	 0         	 0.891851  	 6.83885   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)            	 0.00529193	 8         	 18.8967   	 0         	 3.05371   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00504458	 9         	 0.297348  	 0         	 0.107759  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7, m: 2850)                                                                  	 0.00498241	 700       	 0         	 0         	 44.8458   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 7, n: 50, r2left: 50, r2right: 7)                 	 0.00449653	 700       	 0         	 0         	 49.6916   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2850, m: 7)                                                         	 0.00437702	 700       	 0         	 0         	 51.0484   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 7, n: 50, r2: 7)                                                                                          	 0.00286934	 808       	 0         	 0         	 11.0386   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0027208 	 8         	 37.7472   	 0         	 2.99912   	 12.5861   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 7, m: 7)                                                                   	 0.00270683	 909       	 0.153133  	 0         	 0.413727  	 0.37013   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 7, reductionFactor: 37, colBlockingSize: 12)                  	 0.00203818	 100       	 12.3454   	 0         	 6.8881    	 1.79228   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.0019444 	 8         	 25.7149   	 0         	 8.2699    	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 7, r: 7, streamingCols: 0)                    	 0.00152855	 100       	 8.01413   	 0         	 18.3308   	 0.437194  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 57, leftOrthog: 1)         	 0.00136883	 100       	 20.8207   	 0         	 7.91918   	 2.62915   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 7)                                                         	 0.00107077	 100       	 0         	 0         	 26.1493   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 7, n: 50, r2left: 50, r2right: 0)                 	 0.000975401	 100       	 0         	 0         	 28.7061   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 7, Qr2: 50)       	 0.0009591 	 100       	 0         	 0         	 237.723   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000922335	 100       	 0.542102  	 0         	 2.16841   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000807893	 100       	 30.9447   	 0         	 7.42673   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 7)                                                                                          	 0.000801934	 201       	 0         	 0         	 1.40361   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 7, n: 50, r2: 1)                                                                                          	 0.000761072	 201       	 0         	 0         	 1.47897   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7, m: 2500)                                                                  	 0.00075729	 100       	 0         	 0         	 36.9739   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 7, reductionFactor: 37, colBlockingSize: 12)                    	 0.000752649	 101       	 0.675316  	 0         	 0.428343  	 1.57658   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                        	 0.000584984	 8         	 0         	 0         	 27.3512   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000528389	 100       	 0         	 0         	 7.57018   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 7)                 	 0.000489603	 100       	 0         	 0         	 9.31367   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                 	 0.000456322	 8         	 0         	 0         	 35.063    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000454801	 100       	 0         	 0         	 8.79506   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000438402	 1         	 0.585665  	 0         	 0.0912405 	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000429979	 100       	 1.16285   	 0         	 13.9542   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 7, n: 50, r2left: 1, r2right: 0)                  	 0.000425771	 100       	 0         	 0         	 1.31526   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000400514	 101       	 0.63044   	 0         	 10.087    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 7)   	 0.000391689	 100       	 8.93566   	 0         	 6.5358    	 1.36719   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7, m: 50, k: 50)     	 0.000390951	 100       	 8.95253   	 0         	 6.54814   	 1.36719   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 7)                                                                                 	 0.000356818	 101       	 0.0990701 	 0         	 1.58512   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000334734	 100       	 0.746862  	 0         	 11.9498   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 7)                                                           	 0.00024209	 101       	 0         	 0         	 2.33632   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 7, m: 50, k: 50)  	 0.000183722	 100       	 19.0505   	 0         	 13.9341   	 1.36719   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 7, m: 7, fromLeft: 1)                 	 0.000152576	 809       	 0         	 0         	 4.15698   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 7, n: 50, r: 7, r2: 7)               	 0.000100722	 8         	 2.72433   	 0         	 3.14466   	 0.866337  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 350, Xcols: 7, r: 7, streamingCols: 0)                     	 9.9721e-05	 8         	 1.37584   	 0         	 3.1605    	 0.435323  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 350, cols: 7, reductionFactor: 37, colBlockingSize: 12)                   	 8.2632e-05	 8         	 3.4105    	 0         	 1.93552   	 1.76206   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 7, k: 7)    	 7.7821e-05	 100       	 6.2965    	 0         	 7.69972   	 0.817757  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.449e-05 	 1         	 3.62424   	 0         	 1.4497    	 2.5       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 350, m: 7)                                                          	 3.0863e-05	 8         	 0         	 0         	 10.161    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7, m: 350)                                                                   	 3.0361e-05	 8         	 0         	 0         	 10.329    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 7, r: 7, streamingCols: 0)                      	 1.751e-05 	 1         	 0.13992   	 0         	 0.331011  	 0.422705  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)               	 1.544e-05 	 9         	 0         	 0         	 23.3161   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 1.5021e-05	 1         	 16.6434   	 0         	 3.99441   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 7)                                                                                   	 9.291e-06 	 1         	 0.0753417 	 0         	 0.301367  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 8.58e-06  	 1         	 0.582751  	 0         	 2.331     	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                          	 6.64e-06  	 1         	 0         	 0         	 6.0241    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                   	 6.29e-06  	 1         	 0         	 0         	 6.3593    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 350, m: 0, k: 7)   	 4.67e-06  	 100       	 0         	 0         	 419.7     	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7, m: 50)                                                                    	 3.79e-06  	 1         	 0         	 0         	 1.47757   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 7, r2: 7)               	 2.35e-06  	 1         	 2.08511   	 0         	 2.54979   	 0.817757  
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.3047    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.30466   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.17785   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.1765    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.99437   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.379694  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.276973  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.258242  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.214465  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.178595  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.126747  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0606078 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0210052 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0197854 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0181325 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0172953 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0172652 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0162256 	 1800      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0146742 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.00985965	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00780733	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00775141	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00638731	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00631237	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00623646	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00541002	 18        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00496074	 1310      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00295902	 6372      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00261678	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00121802	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109207	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000940206	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000429979	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000168016	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23242010777472 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23241812862976 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23241611536512 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23241410210048 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23241208883584 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23241007557120 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23240806230656 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23240604904192 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23240403577728 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23240202251264 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23240000924800 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23239799598336 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23239598271872 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23239396945408 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23239195618944 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23238994292480 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23238792966016 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23238591639552 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23238390313088 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23238188986624 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23237987660160 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23237786333696 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23237585007232 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23237383680768 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23237182354304 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23236981027840 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23236779701376 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23236578374912 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23236377048448 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23236175721984 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23235974395520 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23235773069056 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23235571738496 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23235370412032 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23235169085568 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23234967759104 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23234766432640 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23234565106176 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23234363779712 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23234162453248 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23233961126784 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23233759800320 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23233558473856 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23233357147392 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23233155820928 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23232954494464 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23232753168000 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23232551841536 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23232350515072 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23232149188608 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23231947862144 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23231746535680 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23231545209216 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23231343882752 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23231142556288 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23230941229824 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23230739903360 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23230538576896 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23230337250432 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23230135923968 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23229934597504 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23229733271040 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23229531944576 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23241905116928 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23241898526464 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 58, m: 58)                                                                	 0.31547   	 700       	 3.03055   	 0         	 0.180175  	 16.82     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2900, cols: 58, reductionFactor: 37, colBlockingSize: 12)                 	 0.200145  	 600       	 60.072    	 0         	 4.11455   	 14.5999   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2900, r: 58, r2: 58, leftOrthog: 1)       	 0.178343  	 600       	 65.6416   	 0         	 13.7621   	 4.76974   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, r1_: 58, n: 50, r2: 58)          	 0.149687  	 600       	 78.2081   	 0         	 10.8952   	 7.17822   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 58)                                                                	 0.0402918 	 100       	 2.51912   	 0         	 0.16579   	 15.1946   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 58, reductionFactor: 37, colBlockingSize: 12)                 	 0.035807  	 100       	 48.2436   	 0         	 3.31475   	 14.5542   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0345477 	 100       	 2.53273   	 0         	 0.174831  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0261042 	 100       	 57.0478   	 0         	 4.52034   	 12.6202   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 58, r2: 58, leftOrthog: 1)       	 0.024352  	 100       	 69.0704   	 0         	 14.5115   	 4.75972   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2900, r: 50, r2: 50, leftOrthog: 1)       	 0.0235989 	 100       	 61.4436   	 0         	 14.916    	 4.11932   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, r1_: 58, n: 50, r2: 50)          	 0.0215549 	 100       	 78.0335   	 0         	 10.8881   	 7.16686   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 8, Qr2: 58)       	 0.0207369 	 700       	 0         	 0         	 85.4438   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 8, m: 50, k: 2500)   	 0.0192069 	 800       	 83.3032   	 0         	 48.4492   	 1.71939   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, r1_: 50, n: 50, r2: 58)          	 0.0187199 	 100       	 89.8509   	 0         	 13.5086   	 6.65138   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2900, cols: 8, reductionFactor: 37, colBlockingSize: 12)                  	 0.0158825 	 700       	 16.8023   	 0         	 8.20262   	 2.0484    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2900, Xcols: 8, r: 8, streamingCols: 0)                    	 0.0142709 	 700       	 9.10385   	 0         	 18.2202   	 0.499655  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 400, m: 50, k: 8)  	 0.00891504	 800       	 28.7155   	 0         	 16.9422   	 1.69492   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 400, m: 8, k: 8)   	 0.00841794	 700       	 4.25757   	 0         	 4.30015   	 0.990099  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 8, m: 2500, k: 50)	 0.0081527 	 800       	 196.254   	 0         	 114.141   	 1.71939   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 8, m: 2900)                                                                  	 0.00611984	 700       	 0         	 0         	 42.4586   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 8, n: 50, r2left: 50, r2right: 8)                 	 0.00533916	 700       	 0         	 0         	 48.6668   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)            	 0.00516986	 8         	 19.3429   	 0         	 3.12581   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.00516197	 9         	 0.290586  	 0         	 0.105309  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 58, reductionFactor: 37, colBlockingSize: 12)                   	 0.0051172 	 100       	 6.75158   	 0         	 0.979285  	 6.89439   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2900, m: 8)                                                         	 0.00509005	 700       	 0         	 0         	 51.0486   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 8, n: 50, r2: 8)                                                                                          	 0.0032146 	 808       	 0         	 0         	 12.8693   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 8, m: 8)                                                                   	 0.00311772	 909       	 0.198843  	 0         	 0.466494  	 0.42625   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00287153	 8         	 35.7659   	 0         	 2.84169   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 8, reductionFactor: 37, colBlockingSize: 12)                  	 0.00237335	 100       	 13.8475   	 0         	 6.76311   	 2.0475    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00192406	 8         	 25.9867   	 0         	 8.35733   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 8, r: 8, streamingCols: 0)                    	 0.00174251	 100       	 9.18215   	 0         	 18.379    	 0.4996    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                        	 0.00141838	 8         	 0         	 0         	 11.2805   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 58, leftOrthog: 1)         	 0.00129913	 100       	 22.3226   	 0         	 8.43641   	 2.64599   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 8, Qr2: 50)       	 0.00105899	 100       	 0         	 0         	 219.077   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 8, reductionFactor: 37, colBlockingSize: 12)                    	 0.00100213	 101       	 0.662461  	 0         	 0.374116  	 1.77074   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 8)                                                         	 0.000862999	 100       	 0         	 0         	 37.08     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 8, n: 50, r2left: 50, r2right: 0)                 	 0.000862402	 100       	 0         	 0         	 37.1057   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000821155	 100       	 30.4449   	 0         	 7.30678   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 8)                                                                                          	 0.000816419	 201       	 0         	 0         	 1.57566   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 8, m: 2500)                                                                  	 0.00081549	 100       	 0         	 0         	 39.2402   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000810797	 100       	 0.616677  	 0         	 2.46671   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 8, n: 50, r2: 1)                                                                                          	 0.000749603	 201       	 0         	 0         	 1.71611   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000535364	 100       	 0         	 0         	 7.47155   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                 	 0.000527203	 8         	 0         	 0         	 30.3488   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 8)                 	 0.000504659	 100       	 0         	 0         	 9.19433   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000472041	 100       	 0         	 0         	 8.47384   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000444538	 100       	 1.12476   	 0         	 13.4972   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 8, n: 50, r2left: 1, r2right: 0)                  	 0.000418102	 100       	 0         	 0         	 1.53073   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000395248	 101       	 0.638839  	 0         	 10.2214   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 8, m: 50, k: 50)     	 0.000389322	 100       	 10.2743   	 0         	 6.78102   	 1.51515   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 8)                                                           	 0.000363179	 101       	 0         	 0         	 1.77984   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 8)                                                                                 	 0.000360914	 101       	 0.111938  	 0         	 1.79101   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000357136	 100       	 0.700013  	 0         	 11.2002   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 8)   	 0.000307907	 100       	 12.9909   	 0         	 8.57402   	 1.51515   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000249917	 1         	 1.02737   	 0         	 0.160053  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 8, m: 50, k: 50)  	 0.000140258	 100       	 28.5189   	 0         	 18.8225   	 1.51515   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 8, m: 8, fromLeft: 1)                 	 0.000134025	 809       	 0         	 0         	 6.18106   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 8, n: 50, r: 8, r2: 8)               	 0.000117421	 8         	 3.4883    	 0         	 3.52319   	 0.990099  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 8, reductionFactor: 37, colBlockingSize: 12)                   	 0.000112222	 8         	 3.74855   	 0         	 1.86145   	 2.01378   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 8, r: 8, streamingCols: 0)                     	 9.3192e-05	 8         	 2.19761   	 0         	 4.4172    	 0.497512  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 8, k: 8)    	 8.2344e-05	 100       	 7.77227   	 0         	 8.39405   	 0.925926  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 4.0151e-05	 1         	 3.11325   	 0         	 1.2453    	 2.5       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 8, m: 400)                                                                   	 3.3871e-05	 8         	 0         	 0         	 12.0929   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 8)                                                          	 3.2952e-05	 8         	 0         	 0         	 12.4302   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 8, r: 8, streamingCols: 0)                      	 2.296e-05 	 1         	 0.139373  	 0         	 0.289895  	 0.480769  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 1.7001e-05	 1         	 14.705    	 0         	 3.5292    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)               	 1.5091e-05	 9         	 0         	 0         	 23.8553   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 9.69e-06  	 1         	 0.515996  	 0         	 2.06398   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 8)                                                                                   	 9.2e-06   	 1         	 0.0869565 	 0         	 0.347826  	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                          	 7.4e-06   	 1         	 0         	 0         	 5.40541   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                   	 5.8e-06   	 1         	 0         	 0         	 6.89655   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 400, m: 0, k: 8)   	 4.88e-06  	 100       	 0         	 0         	 524.59    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 8, m: 50)                                                                    	 3.561e-06 	 1         	 0         	 0         	 1.79725   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 8, r2: 8)               	 2.92e-06  	 1         	 2.19178   	 0         	 2.36712   	 0.925926  
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.377     	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.37694   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.23801   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.23674   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.04021   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.39031   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.289665  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.267789  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.227593  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.190783  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.138863  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0705433 	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0229424 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0222679 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0195963 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0183053 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0182743 	 2         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0180938 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0177281 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0103022 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00829296	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00827969	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00777496	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00750576	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00712433	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00531599	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00530721	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0046795 	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00296531	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00124191	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0011133 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000829687	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000444538	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000149116	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23248682182528 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23248456640512 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23248255314048 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23248053987584 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23247852661120 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23247651334656 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23247450008192 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23247248681728 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23247047355264 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23246846028800 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23246644702336 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23246443375872 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23246242049408 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23246040722944 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23245839396480 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23245638070016 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23245436743552 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23245235417088 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23245034090624 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23244832764160 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23244631437696 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23244430111232 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23244228784768 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23244027458304 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23243826131840 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23243624805376 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23243423478912 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23243222152448 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23243020825984 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23242819499520 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23242618173056 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23242416846592 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23242215516032 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23242014189568 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23241812863104 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23241611536640 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23241410210176 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23241208883712 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23241007557248 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23240806230784 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23240604904320 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23240403577856 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23240202251392 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23240000924928 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23239799598464 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23239598272000 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23239396945536 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23239195619072 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23238994292608 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23238792966144 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23238591639680 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23238390313216 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23238188986752 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23237987660288 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23237786333824 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23237585007360 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23237383680896 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23237182354432 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23236981027968 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23236779701504 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23236578375040 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23236377048576 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23236175722112 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23248576521984 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23248569931520 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 59, m: 59)                                                                	 0.311027  	 700       	 3.23559   	 0         	 0.189087  	 17.1116   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2950, cols: 59, reductionFactor: 37, colBlockingSize: 12)                 	 0.202729  	 600       	 62.4271   	 0         	 4.20339   	 14.8516   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2950, r: 59, r2: 59, leftOrthog: 1)       	 0.173203  	 600       	 71.1461   	 0         	 14.6633   	 4.85197   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, r1_: 59, n: 50, r2: 59)          	 0.145821  	 600       	 84.5059   	 0         	 11.573    	 7.30198   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 59)                                                                	 0.0408805 	 100       	 2.52565   	 0         	 0.16536   	 15.2737   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 59, reductionFactor: 37, colBlockingSize: 12)                 	 0.0373311 	 100       	 47.8834   	 0         	 3.2355    	 14.7994   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0348976 	 100       	 2.50734   	 0         	 0.173078  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0252016 	 100       	 60.1098   	 0         	 4.7616    	 12.6239   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 59, r2: 59, leftOrthog: 1)       	 0.0247114 	 100       	 70.433    	 0         	 14.5507   	 4.84051   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2950, r: 50, r2: 50, leftOrthog: 1)       	 0.0233046 	 100       	 63.2921   	 0         	 15.3618   	 4.12011   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 9, Qr2: 59)       	 0.0210623 	 700       	 0         	 0         	 86.5699   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, r1_: 59, n: 50, r2: 50)          	 0.0201364 	 100       	 86.4356   	 0         	 11.8584   	 7.28899   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 9, m: 50, k: 2500)   	 0.0193956 	 800       	 92.8046   	 0         	 48.8193   	 1.90098   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)            	 0.0178102 	 8         	 5.61475   	 0         	 0.907344  	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, r1_: 50, n: 50, r2: 59)          	 0.017634  	 100       	 98.7013   	 0         	 14.7215   	 6.70455   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2950, cols: 9, reductionFactor: 37, colBlockingSize: 12)                  	 0.0168785 	 700       	 20.3555   	 0         	 8.83571   	 2.30378   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2950, Xcols: 9, r: 9, streamingCols: 0)                    	 0.0136719 	 700       	 12.2342   	 0         	 21.7663   	 0.562071  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 450, m: 9, k: 9)   	 0.00956603	 700       	 5.3345    	 0         	 4.7892    	 1.11386   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 450, m: 50, k: 9)  	 0.00910353	 800       	 35.5906   	 0         	 18.9817   	 1.875     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 9, m: 2500, k: 50)	 0.00902815	 800       	 199.376   	 0         	 104.881   	 1.90098   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 9, m: 2950)                                                                  	 0.00617867	 700       	 0         	 0         	 48.1268   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 59, reductionFactor: 37, colBlockingSize: 12)                   	 0.00532245	 100       	 6.71699   	 0         	 0.966623  	 6.94892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 9, n: 50, r2left: 50, r2right: 9)                 	 0.00526345	 700       	 0         	 0         	 56.4953   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2950, m: 9)                                                         	 0.00503976	 700       	 0         	 0         	 59.0028   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0048538 	 9         	 0.309035  	 0         	 0.111995  	 2.75937   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 9, m: 9)                                                                   	 0.00344544	 909       	 0.25644   	 0         	 0.531875  	 0.482143  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 9, n: 50, r2: 9)                                                                                          	 0.0029242 	 808       	 0         	 0         	 17.9052   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 9, reductionFactor: 37, colBlockingSize: 12)                  	 0.00271856	 100       	 15.3002   	 0         	 6.64498   	 2.30252   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.00269582	 8         	 38.097    	 0         	 3.02691   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                  	 0.00187385	 8         	 26.683    	 0         	 8.58126   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 9, r: 9, streamingCols: 0)                    	 0.00183137	 100       	 11.0573   	 0         	 19.6751   	 0.561994  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 59, leftOrthog: 1)         	 0.00143215	 100       	 20.5983   	 0         	 7.7366    	 2.66245   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                        	 0.00135035	 8         	 0         	 0         	 11.8488   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 9, reductionFactor: 37, colBlockingSize: 12)                    	 0.00101905	 101       	 0.824507  	 0         	 0.421029  	 1.95831   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 9, Qr2: 50)       	 0.000944555	 100       	 0         	 0         	 249.853   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000856201	 100       	 0.583975  	 0         	 2.3359    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 9, n: 50, r2left: 50, r2right: 0)                 	 0.000838133	 100       	 0         	 0         	 42.9526   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 9)                                                         	 0.00083631	 100       	 0         	 0         	 43.0462   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 9)                                                                                          	 0.000822687	 201       	 0         	 0         	 1.75911   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 9, m: 2500)                                                                  	 0.000812882	 100       	 0         	 0         	 44.2869   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000810944	 100       	 30.8283   	 0         	 7.39878   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 9, n: 50, r2: 1)                                                                                          	 0.000714147	 201       	 0         	 0         	 2.02647   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                 	 0.000554835	 8         	 0         	 0         	 28.8374   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000523306	 100       	 0         	 0         	 7.64371   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 9, m: 50, k: 50)     	 0.000476218	 100       	 9.44945   	 0         	 5.71167   	 1.65441   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000472353	 100       	 1.05853   	 0         	 12.7024   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.00046914	 100       	 0         	 0         	 8.52624   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 9)                 	 0.000469119	 100       	 0         	 0         	 10.0614   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.00040899	 101       	 0.617375  	 0         	 9.87799   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 9, n: 50, r2left: 1, r2right: 0)                  	 0.000407885	 100       	 0         	 0         	 1.7652    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 9)                                                                                 	 0.000349808	 101       	 0.129928  	 0         	 2.07885   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000338559	 100       	 0.738424  	 0         	 11.8148   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 9)                                                           	 0.000327541	 101       	 0         	 0         	 2.22018   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.000317378	 1         	 0.808994  	 0         	 0.126033  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 9)   	 0.000311886	 100       	 14.4283   	 0         	 8.72114   	 1.65441   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 9, m: 50, k: 50)  	 0.000249926	 100       	 18.0053   	 0         	 10.8832   	 1.65441   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 9, m: 9, fromLeft: 1)                 	 0.000144703	 809       	 0         	 0         	 7.24563   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 9, n: 50, r: 9, r2: 9)               	 0.000131302	 8         	 4.44167   	 0         	 3.98763   	 1.11386   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 450, cols: 9, reductionFactor: 37, colBlockingSize: 12)                   	 0.000121412	 8         	 4.9333    	 0         	 2.17758   	 2.2655    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 450, Xcols: 9, r: 9, streamingCols: 0)                     	 0.000118704	 8         	 2.45653   	 0         	 4.389     	 0.559701  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 9, k: 9)    	 0.00010671	 100       	 7.59067   	 0         	 7.35451   	 1.03211   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                    	 3.9031e-05	 1         	 3.20258   	 0         	 1.28103   	 2.5       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 450, m: 9)                                                          	 3.6342e-05	 8         	 0         	 0         	 14.2645   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 9, m: 450)                                                                   	 3.5462e-05	 8         	 0         	 0         	 14.6185   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 9, r: 9, streamingCols: 0)                      	 1.547e-05 	 1         	 0.261797  	 0         	 0.486361  	 0.538278  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)               	 1.5141e-05	 9         	 0         	 0         	 23.7765   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)             	 1.511e-05 	 1         	 16.5453   	 0         	 3.97088   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 9)                                                                                   	 1.0321e-05	 1         	 0.0872009 	 0         	 0.348803  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 8.93e-06  	 1         	 0.55991   	 0         	 2.23964   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                          	 6.721e-06 	 1         	 0         	 0         	 5.9515    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                   	 6.41e-06  	 1         	 0         	 0         	 6.24025   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 450, m: 0, k: 9)   	 4.69e-06  	 100       	 0         	 0         	 690.832   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 9, m: 50)                                                                    	 4.061e-06 	 1         	 0         	 0         	 1.77296   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 9, r2: 9)               	 3.4e-06   	 1         	 2.38235   	 0         	 2.30824   	 1.03211   
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.36573   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.36569   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.22155   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.22025   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.03035   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.386805  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.294335  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.271258  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.222652  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.184402  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.144074  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0714391 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0304737 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0304427 	 2         
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0242562 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.022476  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0198718 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0190928 	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.01796   	 18        
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0175503 	 818       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0103612 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00927808	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00829924	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00759702	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00759232	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00697859	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00498434	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00426019	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00307025	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00116923	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109736	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000875452	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000472353	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000159844	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22972133431168 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22971901011968 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22971699685504 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22971498359040 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22971297032576 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22971095706112 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22970894379648 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22970693053184 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22970491726720 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22970290400256 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22970089073792 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22969887747328 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22969686420864 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22969485094400 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22969283767936 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22969082441472 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22968881115008 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22968679788544 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22968478462080 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22968277135616 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22968075809152 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22967874482688 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22967673156224 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22967471829760 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22967270503296 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22967069176832 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22966867850368 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22966666523904 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22966465197440 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22966263870976 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22966062544512 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22965861218048 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22965659887488 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22965458561024 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22965257234560 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22965055908096 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22964854581632 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22964653255168 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22964451928704 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22964250602240 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22964049275776 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22963847949312 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22963646622848 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22963445296384 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22963243969920 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22963042643456 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22962841316992 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22962639990528 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22962438664064 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22962237337600 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22962036011136 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22961834684672 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22961633358208 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22961432031744 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22961230705280 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22961029378816 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22960828052352 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22960626725888 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22960425399424 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22960224072960 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22960022746496 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22959821420032 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22959620093568 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22972027770624 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22972021180160 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 60, m: 60)                                                                 	 0.311698  	 700       	 3.3956    	 0         	 0.195112  	 17.4033   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.21087   	 600       	 63.1207   	 0         	 4.17926   	 15.1033   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3000, r: 60, r2: 60, leftOrthog: 1)        	 0.176073  	 600       	 73.6057   	 0         	 14.9174   	 4.93421   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, r1_: 60, n: 50, r2: 60)           	 0.154789  	 600       	 83.7266   	 0         	 11.2752   	 7.42574   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 60)                                                                 	 0.0400867 	 100       	 2.61932   	 0         	 0.17063   	 15.3509   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.0384838 	 100       	 48.037    	 0         	 3.19303   	 15.0443   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.035742  	 100       	 2.4481    	 0         	 0.168989  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 60, r2: 60, leftOrthog: 1)        	 0.0256592 	 100       	 70.1503   	 0         	 14.2545   	 4.92126   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0255459 	 100       	 60.3048   	 0         	 4.77571   	 12.6274   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3000, r: 50, r2: 50, leftOrthog: 1)        	 0.0240787 	 100       	 62.2958   	 0         	 15.1171   	 4.12088   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 10, Qr2: 60)       	 0.0225218 	 700       	 0         	 0         	 83.2969   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, r1_: 60, n: 50, r2: 50)           	 0.0209708 	 100       	 85.8338   	 0         	 11.5818   	 7.41107   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 50, k: 2500)   	 0.0198601 	 800       	 100.704   	 0         	 48.4992   	 2.07641   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, r1_: 50, n: 50, r2: 60)           	 0.0197254 	 100       	 91.253    	 0         	 13.5054   	 6.75676   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 10, reductionFactor: 37, colBlockingSize: 12)                  	 0.0185703 	 700       	 23.228    	 0         	 9.07686   	 2.55904   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3000, Xcols: 10, r: 10, streamingCols: 0)                   	 0.0168091 	 700       	 12.4933   	 0         	 20.0059   	 0.62448   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 500, m: 10, k: 10)  	 0.0116261 	 700       	 6.02092   	 0         	 4.86491   	 1.23762   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 10, m: 2500, k: 50)	 0.00944652	 800       	 211.718   	 0         	 101.963   	 2.07641   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 500, m: 50, k: 10)  	 0.00813298	 800       	 49.1824   	 0         	 24.001    	 2.04918   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 3000)                                                                  	 0.00745056	 700       	 0         	 0         	 45.0973   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2left: 50, r2right: 10)                	 0.00568604	 700       	 0         	 0         	 59.0921   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3000, m: 10)                                                         	 0.00557634	 700       	 0         	 0         	 60.2546   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 60, reductionFactor: 37, colBlockingSize: 12)                    	 0.00553948	 100       	 6.67445   	 0         	 0.953159  	 7.00246   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00502729	 8         	 19.8914   	 0         	 3.21446   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00474296	 9         	 0.316257  	 0         	 0.114612  	 2.75937   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 10, m: 10)                                                                  	 0.00387091	 909       	 0.312792  	 0         	 0.582375  	 0.537097  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 10)                                                                                         	 0.00313774	 808       	 0         	 0         	 20.6008   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 10, reductionFactor: 37, colBlockingSize: 12)                  	 0.0030568 	 100       	 16.799    	 0         	 6.56895   	 2.55734   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00267306	 8         	 38.4214   	 0         	 3.05268   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 10, r: 10, streamingCols: 0)                   	 0.00203203	 100       	 12.303    	 0         	 19.7044   	 0.624376  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00175946	 8         	 0         	 0         	 9.09372   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00168649	 8         	 29.6475   	 0         	 9.53462   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 60, leftOrthog: 1)          	 0.00126967	 100       	 23.6282   	 0         	 8.82118   	 2.67857   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 10, reductionFactor: 37, colBlockingSize: 12)                    	 0.00107554	 101       	 0.964441  	 0         	 0.450749  	 2.13964   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 10, Qr2: 50)       	 0.0010198 	 100       	 0         	 0         	 235.34    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 2500)                                                                  	 0.000981711	 100       	 0         	 0         	 40.7452   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2left: 50, r2right: 0)                 	 0.000949194	 100       	 0         	 0         	 42.141    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000918302	 100       	 0.544483  	 0         	 2.17793   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 10)                                                         	 0.000912169	 100       	 0         	 0         	 43.8515   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                                          	 0.000826412	 201       	 0         	 0         	 1.94576   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000802848	 100       	 31.1391   	 0         	 7.47339   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                                          	 0.000721026	 201       	 0         	 0         	 2.23016   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000543382	 100       	 0         	 0         	 7.3613    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 10)                 	 0.000500968	 100       	 0         	 0         	 9.58145   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 50, k: 50)     	 0.000471121	 100       	 10.613    	 0         	 5.94327   	 1.78571   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000461409	 100       	 0         	 0         	 8.6691    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000460752	 8         	 0         	 0         	 34.7258   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000453929	 100       	 1.10149   	 0         	 13.2179   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2left: 1, r2right: 0)                  	 0.000419993	 100       	 0         	 0         	 1.90479   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000391818	 101       	 0.644432  	 0         	 10.3109   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                                 	 0.000369421	 101       	 0.1367    	 0         	 2.18721   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000337744	 100       	 0.740206  	 0         	 11.8433   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 10)                                                           	 0.000331555	 101       	 0         	 0         	 2.437     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 10)   	 0.000321687	 100       	 15.5431   	 0         	 8.70411   	 1.78571   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 10, m: 50, k: 50)  	 0.000252053	 100       	 19.8371   	 0         	 11.1088   	 1.78571   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000224755	 1         	 1.14239   	 0         	 0.177972  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 10, m: 10, fromLeft: 1)                	 0.000144185	 809       	 0         	 0         	 8.97736   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r: 10, r2: 10)             	 0.000143104	 8         	 5.59034   	 0         	 4.51699   	 1.23762   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 500, cols: 10, reductionFactor: 37, colBlockingSize: 12)                   	 0.000133563	 8         	 6.15157   	 0         	 2.44379   	 2.51722   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 500, Xcols: 10, r: 10, streamingCols: 0)                    	 0.000108605	 8         	 3.68307   	 0         	 5.92238   	 0.621891  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 10, k: 10)   	 0.000105983	 100       	 9.43548   	 0         	 8.30322   	 1.13636   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 500, m: 10)                                                          	 5.9843e-05	 8         	 0         	 0         	 10.6947   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 500)                                                                   	 3.743e-05 	 8         	 0         	 0         	 17.0986   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6601e-05	 1         	 3.41521   	 0         	 1.36608   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.5461e-05	 1         	 16.1697   	 0         	 3.88073   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.525e-05 	 9         	 0         	 0         	 23.6066   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 10, r: 10, streamingCols: 0)                     	 1.373e-05 	 1         	 0.364166  	 0         	 0.611799  	 0.595238  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                                   	 1.023e-05 	 1         	 0.0977517 	 0         	 0.391007  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.11e-06  	 1         	 0.548847  	 0         	 2.19539   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 7.79e-06  	 1         	 0         	 0         	 5.13479   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 6.53e-06  	 1         	 0         	 0         	 6.12557   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 500, m: 0, k: 10)   	 4.78e-06  	 100       	 0         	 0         	 836.82    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 50)                                                                    	 3.61e-06  	 1         	 0         	 0         	 2.21607   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 10, r2: 10)              	 2.66e-06  	 1         	 3.7594    	 0         	 3.30827   	 1.13636   
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.40676   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.40673   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.25089   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.24954   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.04933   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.387527  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.306173  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.280908  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.227081  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.196288  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.155771  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0791445 	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0262645 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0240031 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0206865 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0203312 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0201916 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0176361 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0176051 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0104946 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00969857	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0089406 	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00864716	 918       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00861387	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00755619	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00522856	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00518851	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00300576	 6372      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00280416	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00128794	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109898	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000937642	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000453929	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000159435	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23077973792640 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23077798799360 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23077597472896 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23077396146432 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23077194819968 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23076993493504 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23076792167040 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23076590840576 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23076389514112 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23076188187648 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23075986861184 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23075785534720 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23075584208256 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23075382881792 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23075181555328 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23074980228864 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23074778902400 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23074577575936 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23074376249472 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23074174923008 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23073973596544 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23073772270080 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23073570943616 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23073369617152 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23073168290688 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23072966964224 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23072765637760 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23072564311296 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23072362984832 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23072161658368 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23071960331904 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23071759005440 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23071557674880 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23071356348416 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23071155021952 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23070953695488 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23070752369024 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23070551042560 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23070349716096 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23070148389632 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23069947063168 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23069745736704 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23069544410240 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23069343083776 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23069141757312 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23068940430848 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23068739104384 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23068537777920 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23068336451456 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23068135124992 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23067933798528 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23067732472064 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23067531145600 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23067329819136 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23067128492672 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23066927166208 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23066725839744 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23066524513280 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23066323186816 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23066121860352 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23065920533888 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23065719207424 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23065517880960 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23077868132096 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23077689562880 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 61, m: 61)                                                                 	 0.334753  	 700       	 3.32247   	 0         	 0.187764  	 17.695    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3050, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.2171    	 600       	 64.4262   	 0         	 4.19576   	 15.3551   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3050, r: 61, r2: 61, leftOrthog: 1)        	 0.197074  	 600       	 69.1052   	 0         	 13.7757   	 5.01645   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, r1_: 61, n: 50, r2: 61)           	 0.157577  	 600       	 86.4265   	 0         	 11.448    	 7.5495    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 61)                                                                 	 0.0403744 	 100       	 2.644     	 0         	 0.171396  	 15.4263   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.0394505 	 100       	 48.435    	 0         	 3.16794   	 15.2891   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0343835 	 100       	 2.54483   	 0         	 0.175666  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 61, r2: 61, leftOrthog: 1)        	 0.0256763 	 100       	 72.4598   	 0         	 14.4863   	 5.00197   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0255505 	 100       	 61.2988   	 0         	 4.85313   	 12.6308   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3050, r: 50, r2: 50, leftOrthog: 1)        	 0.0245946 	 100       	 62.0056   	 0         	 15.044    	 4.12162   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 11, Qr2: 61)       	 0.0233616 	 700       	 0         	 0         	 82.6041   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3050, cols: 11, reductionFactor: 37, colBlockingSize: 12)                  	 0.0224187 	 700       	 23.6692   	 0         	 8.41072   	 2.81417   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, r1_: 61, n: 50, r2: 50)           	 0.0213575 	 100       	 87.1122   	 0         	 11.5639   	 7.5331    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, r1_: 50, n: 50, r2: 61)           	 0.0212367 	 100       	 87.6078   	 0         	 12.8683   	 6.80804   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 11, m: 50, k: 2500)   	 0.0200224 	 800       	 109.877   	 0         	 48.9213   	 2.246     
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3050, Xcols: 11, r: 11, streamingCols: 0)                   	 0.0178421 	 700       	 14.479    	 0         	 21.0793   	 0.686881  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 550, m: 50, k: 11)  	 0.0097061 	 800       	 49.8656   	 0         	 22.4848   	 2.21774   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 11, m: 2500, k: 50)	 0.00940365	 800       	 233.952   	 0         	 104.164   	 2.246     
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 11, m: 3050)                                                                  	 0.00769515	 700       	 0         	 0         	 48.8307   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 11, n: 50, r2left: 50, r2right: 11)                	 0.00596603	 700       	 0         	 0         	 62.9833   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 550, m: 11, k: 11)  	 0.00567087	 700       	 16.4296   	 0         	 12.0683   	 1.36139   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 61, reductionFactor: 37, colBlockingSize: 12)                    	 0.00564413	 100       	 6.77087   	 0         	 0.959723  	 7.05503   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00513974	 8         	 19.4562   	 0         	 3.14413   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3050, m: 11)                                                         	 0.00511705	 700       	 0         	 0         	 73.433    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00496589	 9         	 0.30206   	 0         	 0.109467  	 2.75937   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 11, m: 11)                                                                  	 0.00454004	 909       	 0.355188  	 0         	 0.599054  	 0.592914  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 11, reductionFactor: 37, colBlockingSize: 12)                  	 0.00364386	 100       	 17.052    	 0         	 6.06411   	 2.81195   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 11, n: 50, r2: 11)                                                                                         	 0.00310252	 808       	 0         	 0         	 25.2099   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272514	 8         	 37.6871   	 0         	 2.99434   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 11, r: 11, streamingCols: 0)                   	 0.00238786	 100       	 12.6683   	 0         	 18.4468   	 0.686745  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00169607	 8         	 29.48     	 0         	 9.48077   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00165214	 8         	 0         	 0         	 9.6844    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 61, leftOrthog: 1)          	 0.001387  	 100       	 21.99     	 0         	 8.16152   	 2.69435   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 11, Qr2: 50)       	 0.00111452	 100       	 0         	 0         	 218.928   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 11, m: 2500)                                                                  	 0.00104452	 100       	 0         	 0         	 42.1245   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 11, reductionFactor: 37, colBlockingSize: 12)                    	 0.000999857	 101       	 1.25531   	 0         	 0.542246  	 2.31502   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 11, n: 50, r2left: 50, r2right: 0)                 	 0.000980595	 100       	 0         	 0         	 44.8707   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 11)                                                         	 0.000864591	 100       	 0         	 0         	 50.8911   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 11)                                                                                          	 0.000833345	 201       	 0         	 0         	 2.12253   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000802619	 100       	 31.148    	 0         	 7.47553   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000760912	 100       	 0.657106  	 0         	 2.62842   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 11, n: 50, r2: 1)                                                                                          	 0.000717592	 201       	 0         	 0         	 2.46491   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000586593	 101       	 0.430452  	 0         	 6.88723   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 11)   	 0.000527727	 100       	 10.4221   	 0         	 5.45737   	 1.90972   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000519624	 100       	 0         	 0         	 7.69787   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 11)                 	 0.000472976	 100       	 0         	 0         	 10.3176   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 11, m: 50, k: 50)     	 0.000450022	 100       	 12.2216   	 0         	 6.39969   	 1.90972   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000444061	 100       	 0         	 0         	 9.00777   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000435191	 8         	 0         	 0         	 36.7655   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000414362	 100       	 1.20667   	 0         	 14.4801   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 11, n: 50, r2left: 1, r2right: 0)                  	 0.000398527	 100       	 0         	 0         	 2.20813   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 11)                                                                                 	 0.000356479	 101       	 0.15583   	 0         	 2.49327   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000351399	 100       	 0.711442  	 0         	 11.3831   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 11)                                                           	 0.000348181	 101       	 0         	 0         	 2.5527    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 11, m: 50, k: 50)  	 0.000261635	 100       	 21.0217   	 0         	 11.0077   	 1.90972   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 11, m: 11, fromLeft: 1)                	 0.000252116	 809       	 0         	 0         	 6.21231   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000171764	 1         	 1.49482   	 0         	 0.232878  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 550, cols: 11, reductionFactor: 37, colBlockingSize: 12)                   	 0.000154294	 8         	 7.08763   	 0         	 2.55968   	 2.76895   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 11, k: 11)   	 0.000101691	 100       	 11.8988   	 0         	 9.60557   	 1.23874   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 11, n: 50, r: 11, r2: 11)             	 9.4774e-05	 8         	 11.2351   	 0         	 8.25273   	 1.36139   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 550, Xcols: 11, r: 11, streamingCols: 0)                    	 9.2733e-05	 8         	 5.74121   	 0         	 8.39261   	 0.68408   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.1361e-05	 1         	 3.02217   	 0         	 1.20887   	 2.5       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 550, m: 11)                                                          	 4.1021e-05	 8         	 0         	 0         	 18.8781   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 11, m: 550)                                                                   	 3.863e-05 	 8         	 0         	 0         	 20.0466   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 11, r2: 11)              	 2.0751e-05	 1         	 0.583104  	 0         	 0.470724  	 1.23874   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.542e-05 	 9         	 0         	 0         	 23.3463   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.2781e-05	 1         	 19.5603   	 0         	 4.69447   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 11, r: 11, streamingCols: 0)                     	 1.156e-05 	 1         	 0.523356  	 0         	 0.803114  	 0.651659  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.095e-05 	 1         	 0.456621  	 0         	 1.82648   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 9.8e-06   	 1         	 0         	 0         	 4.08163   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 11)                                                                                   	 8.3e-06   	 1         	 0.13253   	 0         	 0.53012   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 5.55e-06  	 1         	 0         	 0         	 7.20721   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 550, m: 0, k: 11)   	 4.66e-06  	 100       	 0         	 0         	 1038.63   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 11, m: 50)                                                                    	 3.66e-06  	 1         	 0         	 0         	 2.40437   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.47782   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.47777   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.31854   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.31733   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.10929   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.409511  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.317859  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.288561  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.248732  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.200974  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.15916   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0855194 	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0305955 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0249201 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0220716 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0204724 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0178042 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0177721 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.016011  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0108237 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00966529	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00950593	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00922271	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00803278	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00781812	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00577532	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00526805	 18        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00517309	 1310      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0030463 	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00137333	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00129447	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000780162	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000414362	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000267536	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23211674421120 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23211479656448 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23211278329984 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23211077003520 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23210875677056 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23210674350592 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23210473024128 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23210271697664 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23210070371200 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23209869044736 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23209667718272 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23209466391808 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23209265065344 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23209063738880 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23208862412416 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23208661085952 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23208459759488 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23208258433024 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23208057106560 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23207855780096 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23207654453632 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23207453127168 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23207251800704 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23207050474240 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23206849147776 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23206647821312 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23206446494848 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23206245168384 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23206043841920 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23205842515456 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23205641188992 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23205439862528 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23205238531968 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23205037205504 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23204835879040 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23204634552576 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23204433226112 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23204231899648 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23204030573184 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23203829246720 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23203627920256 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23203426593792 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23203225267328 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23203023940864 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23202822614400 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23202621287936 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23202419961472 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23202218635008 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23202017308544 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23201815982080 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23201614655616 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23201413329152 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23201212002688 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23201010676224 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23200809349760 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23200608023296 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23200406696832 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23200205370368 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23200004043904 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23199802717440 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23199601390976 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23199400064512 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23199198738048 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23211568760576 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23211562170112 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 62, m: 62)                                                                 	 0.33385   	 700       	 3.49799   	 0         	 0.194477  	 17.9866   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3100, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.220283  	 600       	 66.6696   	 0         	 4.27184   	 15.6068   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3100, r: 62, r2: 62, leftOrthog: 1)        	 0.194598  	 600       	 73.4833   	 0         	 14.4122   	 5.09868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, r1_: 62, n: 50, r2: 62)           	 0.159609  	 600       	 89.5919   	 0         	 11.6758   	 7.67327   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 62)                                                                 	 0.0403771 	 100       	 2.68716   	 0         	 0.173365  	 15.5      
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.0387389 	 100       	 50.9551   	 0         	 3.2803    	 15.5337   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0337341 	 100       	 2.59381   	 0         	 0.179047  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3100, cols: 12, reductionFactor: 37, colBlockingSize: 12)                  	 0.0264255 	 700       	 24.2891   	 0         	 7.91381   	 3.0692    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0255638 	 100       	 62.2712   	 0         	 4.92884   	 12.6341   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3100, r: 50, r2: 50, leftOrthog: 1)        	 0.0247728 	 100       	 62.5687   	 0         	 15.1779   	 4.12234   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 62, r2: 62, leftOrthog: 1)        	 0.0241411 	 100       	 79.6153   	 0         	 15.6642   	 5.08263   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 12, Qr2: 62)       	 0.0234889 	 700       	 0         	 0         	 84.4926   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 12, m: 50, k: 2500)   	 0.0217756 	 800       	 110.215   	 0         	 45.7318   	 2.41003   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, r1_: 50, n: 50, r2: 62)           	 0.0217288 	 100       	 88.454    	 0         	 12.8972   	 6.85841   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, r1_: 62, n: 50, r2: 50)           	 0.0215222 	 100       	 89.3033   	 0         	 11.6659   	 7.65508   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3100, Xcols: 12, r: 12, streamingCols: 0)                   	 0.0192178 	 700       	 16.2599   	 0         	 21.7009   	 0.749275  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0177105 	 8         	 5.64637   	 0         	 0.912453  	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 600, m: 50, k: 12)  	 0.010767  	 800       	 53.4967   	 0         	 22.4686   	 2.38095   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 12, m: 2500, k: 50)	 0.00971386	 800       	 247.07    	 0         	 102.517   	 2.41003   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 12, m: 3100)                                                                  	 0.00790632	 700       	 0         	 0         	 52.6971   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 12, n: 50, r2left: 50, r2right: 12)                	 0.00637085	 700       	 0         	 0         	 65.3979   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 600, m: 12, k: 12)  	 0.00623282	 700       	 19.4069   	 0         	 13.0673   	 1.48515   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 62, reductionFactor: 37, colBlockingSize: 12)                    	 0.00621805	 100       	 6.34908   	 0         	 0.893399  	 7.10666   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3100, m: 12)                                                         	 0.00555398	 700       	 0         	 0         	 75.0164   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00497695	 9         	 0.301388  	 0         	 0.109224  	 2.75937   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 12, m: 12)                                                                  	 0.00485694	 909       	 0.431205  	 0         	 0.664774  	 0.648649  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 12, reductionFactor: 37, colBlockingSize: 12)                  	 0.00381748	 100       	 19.3704   	 0         	 6.31705   	 3.06636   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 12, n: 50, r2: 12)                                                                                         	 0.00314981	 808       	 0         	 0         	 29.5515   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00270276	 8         	 37.9992   	 0         	 3.01914   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 12, r: 12, streamingCols: 0)                   	 0.00249916	 100       	 14.4048   	 0         	 19.2295   	 0.749101  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00203662	 8         	 24.5505   	 0         	 7.89543   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.0020167 	 8         	 0         	 0         	 7.93374   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 12, reductionFactor: 37, colBlockingSize: 12)                    	 0.00132769	 101       	 1.12504   	 0         	 0.45278   	 2.48474   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 62, leftOrthog: 1)          	 0.00128754	 100       	 24.0769   	 0         	 8.88514   	 2.70979   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 12, m: 2500)                                                                  	 0.000946791	 100       	 0         	 0         	 50.6976   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 12)                                                         	 0.000913941	 100       	 0         	 0         	 52.5198   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 12, Qr2: 50)       	 0.000906324	 100       	 0         	 0         	 273.633   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000886177	 100       	 0.564221  	 0         	 2.25689   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 12, n: 50, r2left: 50, r2right: 0)                 	 0.000841748	 100       	 0         	 0         	 57.0242   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000819975	 100       	 30.4887   	 0         	 7.3173    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 12)                                                                                          	 0.000787367	 201       	 0         	 0         	 2.4507    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 12, n: 50, r2: 1)                                                                                          	 0.000733677	 201       	 0         	 0         	 2.63004   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000548363	 8         	 0         	 0         	 29.1778   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000521289	 100       	 0         	 0         	 7.67329   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 12)                 	 0.000493239	 100       	 0         	 0         	 10.056    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000442005	 100       	 0         	 0         	 9.04967   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 12, m: 50, k: 50)     	 0.000441122	 100       	 13.6017   	 0         	 6.71016   	 2.02703   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.0004168 	 100       	 1.19962   	 0         	 14.3954   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 12, n: 50, r2left: 1, r2right: 0)                  	 0.000413209	 100       	 0         	 0         	 2.32328   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000392656	 101       	 0.643057  	 0         	 10.2889   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 12)                                                                                 	 0.000361567	 101       	 0.167604  	 0         	 2.68166   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 12)   	 0.000346409	 100       	 17.3206   	 0         	 8.54481   	 2.02703   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000343151	 100       	 0.728542  	 0         	 11.6567   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 12)                                                           	 0.000341258	 101       	 0         	 0         	 2.84125   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000248296	 1         	 1.03408   	 0         	 0.161098  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 12, m: 50, k: 50)  	 0.000219594	 100       	 27.3232   	 0         	 13.4794   	 2.02703   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 12, m: 12, fromLeft: 1)                	 0.000211139	 809       	 0         	 0         	 8.828     	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 600, cols: 12, reductionFactor: 37, colBlockingSize: 12)                   	 0.000198886	 8         	 7.13857   	 0         	 2.36324   	 3.02067   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 12, k: 12)   	 0.000113892	 100       	 12.6436   	 0         	 9.44052   	 1.33929   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 12, n: 50, r: 12, r2: 12)             	 9.4935e-05	 8         	 14.5615   	 0         	 9.80477   	 1.48515   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 600, Xcols: 12, r: 12, streamingCols: 0)                    	 8.7981e-05	 8         	 7.85624   	 0         	 10.5274   	 0.746269  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 12, m: 600)                                                                   	 4.4942e-05	 8         	 0         	 0         	 20.5064   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 600, m: 12)                                                          	 4.4061e-05	 8         	 0         	 0         	 20.9165   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.8021e-05	 1         	 3.28766   	 0         	 1.31506   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 12, r: 12, streamingCols: 0)                     	 1.967e-05 	 1         	 0.36604   	 0         	 0.517336  	 0.707547  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 12, r2: 12)              	 1.9661e-05	 1         	 0.732414  	 0         	 0.546869  	 1.33929   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.6121e-05	 1         	 15.5077   	 0         	 3.72185   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5972e-05	 9         	 0         	 0         	 22.5394   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.155e-05 	 1         	 0.4329    	 0         	 1.7316    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 12)                                                                                   	 9.12e-06  	 1         	 0.131579  	 0         	 0.526316  	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 6.841e-06 	 1         	 0         	 0         	 5.8471    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 6.36e-06  	 1         	 0         	 0         	 6.28931   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 600, m: 0, k: 12)   	 5.23e-06  	 100       	 0         	 0         	 1101.34   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 12, m: 50)                                                                    	 3.97e-06  	 1         	 0         	 0         	 2.41814   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.48442   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.48438   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.31573   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.3144    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.1025    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.407962  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.325524  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.291446  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.244799  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.20368   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.168583  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0929222 	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0352153 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.031336  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0313031 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0248373 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0238993 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0222168 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0178412 	 18        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0174654 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.010355  	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00993345	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00983389	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00945675	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00887679	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00811905	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00576492	 1818      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00519214	 1310      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00300453	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00121187	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109737	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000906847	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.0004168 	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000227111	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23434428614528 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23434213976064 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23434012649600 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23433811323136 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23433609996672 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23433408670208 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23433207343744 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23433006017280 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23432804690816 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23432603364352 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23432402037888 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23432200711424 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23431999384960 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23431798058496 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23431596732032 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23431395405568 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23431194079104 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23430992752640 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23430791426176 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23430590099712 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23430388773248 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23430187446784 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23429986120320 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23429784793856 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23429583467392 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23429382140928 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23429180814464 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23428979488000 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23428778161536 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23428576835072 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23428375508608 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23428174182144 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23427972851584 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23427771525120 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23427570198656 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23427368872192 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23427167545728 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23426966219264 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23426764892800 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23426563566336 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23426362239872 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23426160913408 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23425959586944 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23425758260480 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23425556934016 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23425355607552 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23425154281088 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23424952954624 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23424751628160 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23424550301696 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23424348975232 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23424147648768 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23423946322304 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23423744995840 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23423543669376 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23423342342912 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23423141016448 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23422939689984 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23422738363520 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23422537037056 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23422335710592 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23422134384128 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23421933057664 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23434322953984 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23434316363520 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 63, m: 63)                                                                 	 0.345891  	 700       	 3.54225   	 0         	 0.193795  	 18.2783   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3150, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.226339  	 600       	 68.0761   	 0         	 4.29272   	 15.8585   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3150, r: 63, r2: 63, leftOrthog: 1)        	 0.196627  	 600       	 76.301    	 0         	 14.7273   	 5.18092   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, r1_: 63, n: 50, r2: 63)           	 0.162335  	 600       	 92.419    	 0         	 11.8531   	 7.79703   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 63)                                                                 	 0.0423238 	 100       	 2.60492   	 0         	 0.167282  	 15.572    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.0397807 	 100       	 51.2342   	 0         	 3.24718   	 15.7781   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0353613 	 100       	 2.47446   	 0         	 0.170808  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3150, cols: 13, reductionFactor: 37, colBlockingSize: 12)                  	 0.0270118 	 700       	 28.337    	 0         	 8.52467   	 3.32412   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3150, r: 50, r2: 50, leftOrthog: 1)        	 0.0262146 	 100       	 60.0809   	 0         	 14.572    	 4.12304   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0261383 	 100       	 61.8849   	 0         	 4.89703   	 12.6372   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 13, Qr2: 63)       	 0.0261008 	 700       	 0         	 0         	 78.1832   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 63, r2: 63, leftOrthog: 1)        	 0.0243882 	 100       	 81.3713   	 0         	 15.7597   	 5.16326   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, r1_: 63, n: 50, r2: 50)           	 0.0212616 	 100       	 93.3373   	 0         	 12.0017   	 7.77701   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 13, m: 50, k: 2500)   	 0.0205745 	 800       	 126.37    	 0         	 49.1948   	 2.56876   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3150, Xcols: 13, r: 13, streamingCols: 0)                   	 0.020186  	 700       	 18.4606   	 0         	 22.7442   	 0.811663  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, r1_: 50, n: 50, r2: 63)           	 0.0187815 	 100       	 105.663   	 0         	 15.2959   	 6.90789   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0168773 	 8         	 5.92513   	 0         	 0.9575    	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 650, m: 50, k: 13)  	 0.0116943 	 800       	 57.8061   	 0         	 22.7667   	 2.53906   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 13, m: 2500, k: 50)	 0.0103785 	 800       	 250.517   	 0         	 97.5243   	 2.56876   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 13, m: 3150)                                                                  	 0.00855714	 700       	 0         	 0         	 53.5974   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 13, n: 50, r2left: 50, r2right: 13)                	 0.00752553	 700       	 0         	 0         	 60.9445   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3150, m: 13)                                                         	 0.00714548	 700       	 0         	 0         	 64.186    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 13, m: 13)                                                                  	 0.00554125	 909       	 0.480316  	 0         	 0.682416  	 0.703846  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 650, m: 13, k: 13)  	 0.00500972	 700       	 30.6983   	 0         	 19.0802   	 1.60891   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 63, reductionFactor: 37, colBlockingSize: 12)                    	 0.0048748 	 100       	 8.36193   	 0         	 1.1683    	 7.15738   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00477274	 9         	 0.314283  	 0         	 0.113897  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 13, reductionFactor: 37, colBlockingSize: 12)                  	 0.00406582	 100       	 21.3447   	 0         	 6.42803   	 3.32057   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 13, n: 50, r2: 13)                                                                                         	 0.0033095 	 808       	 0         	 0         	 33.0085   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272723	 8         	 37.6582   	 0         	 2.99205   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 13, r: 13, streamingCols: 0)                   	 0.00269252	 100       	 15.6916   	 0         	 19.3378   	 0.811445  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 63, leftOrthog: 1)          	 0.00196176	 100       	 16.057    	 0         	 5.89266   	 2.72491   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00192757	 8         	 0         	 0         	 8.3006    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00172939	 8         	 28.9119   	 0         	 9.29805   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 13)                                                         	 0.00129844	 100       	 0         	 0         	 40.0481   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 13, m: 2500)                                                                  	 0.00112257	 100       	 0         	 0         	 46.3222   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 13, Qr2: 50)       	 0.00107054	 100       	 0         	 0         	 235.396   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 13, reductionFactor: 37, colBlockingSize: 12)                    	 0.00104927	 101       	 1.67071   	 0         	 0.630676  	 2.64908   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 13, n: 50, r2left: 50, r2right: 0)                 	 0.000958076	 100       	 0         	 0         	 54.2754   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000894107	 100       	 0.559217  	 0         	 2.23687   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 13)                                                                                          	 0.000821546	 201       	 0         	 0         	 2.54447   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000766525	 100       	 32.6147   	 0         	 7.82753   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 13, n: 50, r2: 1)                                                                                          	 0.0007502 	 201       	 0         	 0         	 2.78646   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000540305	 100       	 0         	 0         	 7.40323   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 13)                 	 0.000470463	 100       	 0         	 0         	 10.7129   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 13, m: 50, k: 50)     	 0.000460754	 100       	 14.1073   	 0         	 6.59788   	 2.13816   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00046056	 100       	 0         	 0         	 8.68508   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000419611	 100       	 1.19158   	 0         	 14.299    	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 13, n: 50, r2left: 1, r2right: 0)                  	 0.000419091	 100       	 0         	 0         	 2.48156   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000418171	 8         	 0         	 0         	 38.2619   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000397487	 101       	 0.635241  	 0         	 10.1639   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 13)   	 0.000367657	 100       	 17.6795   	 0         	 8.26858   	 2.13816   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 13)                                                                                 	 0.000353206	 101       	 0.185869  	 0         	 2.9739    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00034496	 100       	 0.724722  	 0         	 11.5955   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 13)                                                           	 0.000324557	 101       	 0         	 0         	 3.23641   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000288868	 1         	 0.888838  	 0         	 0.138472  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 13, m: 50, k: 50)  	 0.000278495	 100       	 23.3397   	 0         	 10.9158   	 2.13816   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 650, cols: 13, reductionFactor: 37, colBlockingSize: 12)                   	 0.000243447	 8         	 7.41477   	 0         	 2.26586   	 3.27239   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 13, m: 13, fromLeft: 1)                	 0.000181233	 809       	 0         	 0         	 12.0703   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 13, k: 13)   	 0.000115841	 100       	 14.589    	 0         	 10.1449   	 1.43805   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 13, n: 50, r: 13, r2: 13)             	 0.000113013	 8         	 15.5522   	 0         	 9.66629   	 1.60891   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 650, Xcols: 13, r: 13, streamingCols: 0)                    	 9.7743e-05	 8         	 8.99093   	 0         	 11.1211   	 0.808458  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 13, m: 650)                                                                   	 4.5011e-05	 8         	 0         	 0         	 24.0297   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 650, m: 13)                                                          	 4.277e-05 	 8         	 0         	 0         	 25.2888   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.7361e-05	 1         	 3.34573   	 0         	 1.33829   	 2.5       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 13)                                                                                   	 2.0391e-05	 1         	 0.0637536 	 0         	 0.255014  	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 13, r2: 13)              	 1.994e-05 	 1         	 0.847543  	 0         	 0.589368  	 1.43805   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.525e-05 	 9         	 0         	 0         	 23.6066   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.358e-05 	 1         	 18.4094   	 0         	 4.41826   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 13, r: 13, streamingCols: 0)                     	 1.3501e-05	 1         	 0.62588   	 0         	 0.820384  	 0.762911  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.06e-06  	 1         	 0.551876  	 0         	 2.20751   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 7.71e-06  	 1         	 0         	 0         	 5.18807   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 6.29e-06  	 1         	 0         	 0         	 6.3593    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 650, m: 0, k: 13)   	 4.88e-06  	 100       	 0         	 0         	 1385.25   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 13, m: 50)                                                                    	 4.03e-06  	 1         	 0         	 0         	 2.58065   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.52902   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.52898   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.34937   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.34802   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.13783   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.423576  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.332519  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.297989  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.249191  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.203144  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.179545  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0980941 	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0359495 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0299398 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0298977 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0276318 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0247565 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0210353 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0171924 	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0170238 	 18        
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0107465 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.010657  	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0104911 	 20        
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.010314  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0101532 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00937316	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00562393	 1818      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00542156	 1310      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00334193	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00130378	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109565	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000923558	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000419611	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000196483	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23159519102848 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23159336069120 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23159134742656 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23158933416192 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23158732089728 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23158530763264 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23158329436800 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23158128110336 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23157926783872 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23157725457408 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23157524130944 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23157322804480 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23157121478016 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23156920151552 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23156718825088 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23156517498624 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23156316172160 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23156114845696 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23155913519232 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23155712192768 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23155510866304 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23155309539840 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23155108213376 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23154906886912 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23154705560448 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23154504233984 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23154302907520 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23154101581056 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23153900254592 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23153698928128 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23153497601664 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23153296275200 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23153094944640 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23152893618176 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23152692291712 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23152490965248 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23152289638784 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23152088312320 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23151886985856 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23151685659392 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23151484332928 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23151283006464 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23151081680000 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23150880353536 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23150679027072 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23150477700608 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23150276374144 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23150075047680 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23149873721216 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23149672394752 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23149471068288 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23149269741824 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23149068415360 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23148867088896 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23148665762432 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23148464435968 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23148263109504 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23148061783040 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23147860456576 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23147659130112 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23147457803648 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23147256477184 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23147055150720 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23159413442304 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23159406851840 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 64, m: 64)                                                                 	 0.355148  	 700       	 3.61682   	 0         	 0.194767  	 18.5699   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3200, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.233377  	 600       	 69.2173   	 0         	 4.29648   	 16.1102   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3200, r: 64, r2: 64, leftOrthog: 1)        	 0.209208  	 600       	 75.1817   	 0         	 14.2845   	 5.26316   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, r1_: 64, n: 50, r2: 64)           	 0.168341  	 600       	 93.433    	 0         	 11.7959   	 7.92079   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.0417113 	 100       	 50.4265   	 0         	 3.14727   	 16.0223   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 64)                                                                 	 0.040162  	 100       	 2.78871   	 0         	 0.178278  	 15.6425   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0336236 	 100       	 2.60234   	 0         	 0.179636  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3200, cols: 14, reductionFactor: 37, colBlockingSize: 12)                  	 0.0286648 	 700       	 31.4606   	 0         	 8.79049   	 3.57894   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 14, Qr2: 64)       	 0.0269219 	 700       	 0         	 0         	 77.9203   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0255935 	 100       	 64.2055   	 0         	 5.07942   	 12.6403   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3200, r: 50, r2: 50, leftOrthog: 1)        	 0.0244281 	 100       	 65.4985   	 0         	 15.8834   	 4.12371   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 64, r2: 64, leftOrthog: 1)        	 0.0240654 	 100       	 85.1013   	 0         	 16.2288   	 5.24384   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, r1_: 64, n: 50, r2: 50)           	 0.0223902 	 100       	 91.4687   	 0         	 11.5799   	 7.89889   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 14, m: 50, k: 2500)   	 0.0214935 	 800       	 130.272   	 0         	 47.8508   	 2.72246   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3200, Xcols: 14, r: 14, streamingCols: 0)                   	 0.0213154 	 700       	 20.5973   	 0         	 23.5655   	 0.874044  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, r1_: 50, n: 50, r2: 64)           	 0.0211268 	 100       	 96.9385   	 0         	 13.9349   	 6.95652   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 700, m: 50, k: 14)  	 0.0117957 	 800       	 66.465    	 0         	 24.687    	 2.69231   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 14, m: 2500, k: 50)	 0.0111522 	 800       	 251.072   	 0         	 92.2224   	 2.72246   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 14, m: 3200)                                                                  	 0.00876375	 700       	 0         	 0         	 57.254    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 14, n: 50, r2left: 50, r2right: 14)                	 0.00722241	 700       	 0         	 0         	 69.4727   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3200, m: 14)                                                         	 0.00606623	 700       	 0         	 0         	 82.7136   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 14, m: 14)                                                                  	 0.00605222	 909       	 0.549405  	 0         	 0.723328  	 0.759551  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 64, reductionFactor: 37, colBlockingSize: 12)                    	 0.00575726	 100       	 7.30678   	 0         	 1.01382   	 7.20721   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 700, m: 14, k: 14)  	 0.00506438	 700       	 37.9277   	 0         	 21.8897   	 1.73267   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00498836	 8         	 20.0467   	 0         	 3.23954   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00493968	 9         	 0.303662  	 0         	 0.110048  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 14, reductionFactor: 37, colBlockingSize: 12)                  	 0.00425115	 100       	 23.6756   	 0         	 6.62334   	 3.57458   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 14, n: 50, r2: 14)                                                                                         	 0.00338221	 808       	 0         	 0         	 37.459    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 14, r: 14, streamingCols: 0)                   	 0.00284505	 100       	 17.2229   	 0         	 19.7109   	 0.873777  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00256709	 8         	 40.0075   	 0         	 3.1787    	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00227349	 8         	 21.9926   	 0         	 7.07283   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00173786	 8         	 0         	 0         	 9.2067    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 64, leftOrthog: 1)          	 0.00138002	 100       	 23.1881   	 0         	 8.46366   	 2.73973   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 14, reductionFactor: 37, colBlockingSize: 12)                    	 0.0012676 	 101       	 1.60391   	 0         	 0.571135  	 2.80828   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 14, m: 2500)                                                                  	 0.00119395	 100       	 0         	 0         	 46.9031   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 14, n: 50, r2left: 50, r2right: 0)                 	 0.0011509 	 100       	 0         	 0         	 48.6575   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 14, Qr2: 50)       	 0.00106675	 100       	 0         	 0         	 239.98    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 14)                                                         	 0.00104733	 100       	 0         	 0         	 53.4696   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 14)                                                                                          	 0.000795661	 201       	 0         	 0         	 2.82935   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000770642	 100       	 0.64881   	 0         	 2.59524   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000767074	 100       	 32.5914   	 0         	 7.82193   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 14, n: 50, r2: 1)                                                                                          	 0.000711301	 201       	 0         	 0         	 3.1649    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 14, m: 50, k: 50)     	 0.000551054	 100       	 12.7029   	 0         	 5.66188   	 2.24359   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00047811	 100       	 0         	 0         	 8.36628   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000468502	 8         	 0         	 0         	 34.1514   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 14)                 	 0.000458993	 100       	 0         	 0         	 11.1549   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000437149	 100       	 0         	 0         	 9.1502    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 14, n: 50, r2left: 1, r2right: 0)                  	 0.000423151	 100       	 0         	 0         	 2.64681   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000409173	 100       	 1.22198   	 0         	 14.6637   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000388459	 101       	 0.650004  	 0         	 10.4001   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 14)   	 0.000363101	 100       	 19.2784   	 0         	 8.59265   	 2.24359   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 14)                                                                                 	 0.000353911	 101       	 0.199768  	 0         	 3.19628   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 14, m: 50, k: 50)  	 0.000339207	 100       	 20.6364   	 0         	 9.19792   	 2.24359   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000333937	 100       	 0.748644  	 0         	 11.9783   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 14, m: 14, fromLeft: 1)                	 0.000330437	 809       	 0         	 0         	 7.67778   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 14)                                                           	 0.000315757	 101       	 0         	 0         	 3.5825    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 700, cols: 14, reductionFactor: 37, colBlockingSize: 12)                   	 0.000252315	 8         	 8.93538   	 0         	 2.5355    	 3.52411   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000188475	 1         	 1.36229   	 0         	 0.21223   	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 14, n: 50, r: 14, r2: 14)             	 0.000131483	 8         	 16.6957   	 0         	 9.6358    	 1.73267   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 14, k: 14)   	 0.000131245	 100       	 14.9339   	 0         	 9.72837   	 1.53509   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 700, Xcols: 14, r: 14, streamingCols: 0)                    	 0.000113732	 8         	 9.65076   	 0         	 11.0846   	 0.870647  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 700, m: 14)                                                          	 4.6471e-05	 8         	 0         	 0         	 26.9932   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 14, m: 700)                                                                   	 4.5491e-05	 8         	 0         	 0         	 27.5747   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.9311e-05	 1         	 3.17977   	 0         	 1.27191   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 14, r2: 14)              	 2.9581e-05	 1         	 0.662587  	 0         	 0.431628  	 1.53509   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.534e-05 	 9         	 0         	 0         	 23.4681   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.533e-05 	 1         	 16.3079   	 0         	 3.91389   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 14, r: 14, streamingCols: 0)                     	 1.498e-05 	 1         	 0.654206  	 0         	 0.8       	 0.817757  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 9.111e-06 	 1         	 0         	 0         	 4.3903    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.901e-06 	 1         	 0.561735  	 0         	 2.24694   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 14)                                                                                   	 7.45e-06  	 1         	 0.187919  	 0         	 0.751678  	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 5.751e-06 	 1         	 0         	 0         	 6.95531   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 700, m: 0, k: 14)   	 4.97e-06  	 100       	 0         	 0         	 1577.46   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 14, m: 50)                                                                    	 3.85e-06  	 1         	 0         	 0         	 2.90909   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.57021   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.57016   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.38719   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.38599   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.16451   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.428934  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.34363   	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.307085  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.259082  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.212625  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.182889  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.101175  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0376598 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0284258 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.026602  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0220445 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0183987 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.018369  	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0173594 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0114914 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0109919 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0109791 	 20        
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0104813 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00925545	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00922276	 918       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0057993 	 1818      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00536729	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00516475	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00306973	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00128761	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107631	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000786993	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000409173	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000345777	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22508399097728 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22508178761728 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22507977435264 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22507776108800 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22507574782336 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22507373455872 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22507172129408 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22506970802944 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22506769476480 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22506568150016 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22506366823552 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22506165497088 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22505964170624 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22505762844160 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22505561517696 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22505360191232 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22505158864768 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22504957538304 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22504756211840 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22504554885376 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22504353558912 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22504152232448 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22503950905984 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22503749579520 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22503548253056 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22503346926592 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22503145600128 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22502944273664 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22502742947200 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22502541620736 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22502340294272 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22502138967808 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22501937637248 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22501736310784 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22501534984320 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22501333657856 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22501132331392 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22500931004928 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22500729678464 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22500528352000 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22500327025536 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22500125699072 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22499924372608 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22499723046144 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22499521719680 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22499320393216 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22499119066752 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22498917740288 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22498716413824 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22498515087360 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22498313760896 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22498112434432 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22497911107968 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22497709781504 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22497508455040 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22497307128576 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22497105802112 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22496904475648 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22496703149184 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22496501822720 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22496300496256 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22496099169792 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22495897843328 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22508293437184 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22508286846720 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 65, m: 65)                                                                 	 0.375207  	 700       	 3.58645   	 0         	 0.190146  	 18.8616   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3250, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.232867  	 600       	 72.6718   	 0         	 4.44151   	 16.362    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3250, r: 65, r2: 65, leftOrthog: 1)        	 0.201251  	 600       	 81.8753   	 0         	 15.317    	 5.34539   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, r1_: 65, n: 50, r2: 65)           	 0.178413  	 600       	 92.356    	 0         	 11.4806   	 8.04455   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 65)                                                                 	 0.0411154 	 100       	 2.7666    	 0         	 0.17609   	 15.7113   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.0403884 	 100       	 53.7183   	 0         	 3.30244   	 16.2663   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0358677 	 100       	 2.43952   	 0         	 0.168396  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3250, cols: 15, reductionFactor: 37, colBlockingSize: 12)                  	 0.0290288 	 700       	 36.2199   	 0         	 9.44786   	 3.83366   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 15, Qr2: 65)       	 0.0268525 	 700       	 0         	 0         	 80.2905   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3250, r: 50, r2: 50, leftOrthog: 1)        	 0.0262178 	 100       	 61.9807   	 0         	 15.0279   	 4.12437   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0248638 	 100       	 67.1225   	 0         	 5.30893   	 12.6433   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 65, r2: 65, leftOrthog: 1)        	 0.0242349 	 100       	 87.1678   	 0         	 16.3715   	 5.32438   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, r1_: 65, n: 50, r2: 50)           	 0.022709  	 100       	 93.0247   	 0         	 11.598    	 8.02073   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3250, Xcols: 15, r: 15, streamingCols: 0)                   	 0.0217872 	 700       	 23.4943   	 0         	 25.0895   	 0.93642   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 15, m: 50, k: 2500)   	 0.0213807 	 800       	 140.313   	 0         	 48.8665   	 2.87136   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, r1_: 50, n: 50, r2: 65)           	 0.0181136 	 100       	 116.625   	 0         	 16.6505   	 7.00431   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 750, m: 50, k: 15)  	 0.0128657 	 800       	 69.9532   	 0         	 24.6235   	 2.84091   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 15, m: 2500, k: 50)	 0.010963  	 800       	 273.647   	 0         	 95.3021   	 2.87136   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 15, m: 3250)                                                                  	 0.00974935	 700       	 0         	 0         	 56.0038   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 15, n: 50, r2left: 50, r2right: 15)                	 0.00797573	 700       	 0         	 0         	 68.4577   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3250, m: 15)                                                         	 0.00711471	 700       	 0         	 0         	 76.7424   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 15, m: 15)                                                                  	 0.00667101	 909       	 0.613176  	 0         	 0.752162  	 0.815217  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 750, m: 15, k: 15)  	 0.00502526	 700       	 47.0125   	 0         	 25.324    	 1.85644   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00498588	 8         	 20.0566   	 0         	 3.24115   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00481734	 9         	 0.311374  	 0         	 0.112842  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 65, reductionFactor: 37, colBlockingSize: 12)                    	 0.00447712	 100       	 9.69192   	 0         	 1.33568   	 7.25617   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 15, reductionFactor: 37, colBlockingSize: 12)                  	 0.00425001	 100       	 27.186    	 0         	 7.10116   	 3.82838   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 15, n: 50, r2: 15)                                                                                         	 0.00345006	 808       	 0         	 0         	 42.1558   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 15, Qr2: 50)       	 0.00308651	 100       	 0         	 0         	 84.2375   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 15, r: 15, streamingCols: 0)                   	 0.0030064 	 100       	 18.7101   	 0         	 19.9874   	 0.936096  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00273434	 8         	 37.5603   	 0         	 2.98426   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00219621	 8         	 22.7665   	 0         	 7.32171   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.0020268 	 8         	 0         	 0         	 7.89421   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 65, leftOrthog: 1)          	 0.00134336	 100       	 24.1931   	 0         	 8.78396   	 2.75424   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 15, reductionFactor: 37, colBlockingSize: 12)                    	 0.00125408	 101       	 1.86107   	 0         	 0.628192  	 2.96258   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 15, m: 2500)                                                                  	 0.00101751	 100       	 0         	 0         	 58.9677   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 15)                                                         	 0.00100757	 100       	 0         	 0         	 59.5494   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 15, n: 50, r2left: 50, r2right: 0)                 	 0.000906353	 100       	 0         	 0         	 66.1994   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000849227	 100       	 0.588771  	 0         	 2.35508   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 15)                                                                                          	 0.000802414	 201       	 0         	 0         	 3.00593   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000799711	 100       	 31.2613   	 0         	 7.50271   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 15, n: 50, r2: 1)                                                                                          	 0.000751838	 201       	 0         	 0         	 3.20814   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 15, m: 50, k: 50)     	 0.000578024	 100       	 12.9752   	 0         	 5.5361    	 2.34375   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000547257	 100       	 0         	 0         	 7.30918   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000544304	 8         	 0         	 0         	 29.3953   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 15)                 	 0.000489874	 100       	 0         	 0         	 10.615    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000488238	 100       	 0         	 0         	 8.19273   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 15, n: 50, r2left: 1, r2right: 0)                  	 0.00046902	 100       	 0         	 0         	 2.55853   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000411091	 101       	 0.614219  	 0         	 9.82751   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000410353	 100       	 1.21846   	 0         	 14.6216   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 15)   	 0.000403062	 100       	 18.6076   	 0         	 7.93923   	 2.34375   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 15)                                                                                 	 0.000365815	 101       	 0.207072  	 0         	 3.31315   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000341598	 100       	 0.731854  	 0         	 11.7097   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 15)                                                           	 0.00034073	 101       	 0         	 0         	 3.55707   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 15, m: 50, k: 50)  	 0.000329837	 100       	 22.7385   	 0         	 9.70176   	 2.34375   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 750, cols: 15, reductionFactor: 37, colBlockingSize: 12)                   	 0.000274727	 8         	 10.0936   	 0         	 2.6732    	 3.77583   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000255866	 1         	 1.00348   	 0         	 0.156332  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 15, n: 50, r: 15, r2: 15)             	 0.000219907	 8         	 12.2779   	 0         	 6.6137    	 1.85644   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 15, m: 15, fromLeft: 1)                	 0.000214834	 809       	 0         	 0         	 13.5565   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 15, k: 15)   	 0.000137563	 100       	 16.3561   	 0         	 10.0318   	 1.63043   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 750, Xcols: 15, r: 15, streamingCols: 0)                    	 0.000113644	 8         	 11.8792   	 0         	 12.7345   	 0.932836  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 15, m: 750)                                                                   	 5.5672e-05	 8         	 0         	 0         	 25.8658   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 750, m: 15)                                                          	 4.5201e-05	 8         	 0         	 0         	 31.8577   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4851e-05	 1         	 3.5867    	 0         	 1.43468   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 15, r2: 15)              	 2.006e-05 	 1         	 1.12164   	 0         	 0.687936  	 1.63043   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.503e-05 	 9         	 0         	 0         	 23.9521   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.3651e-05	 1         	 18.3137   	 0         	 4.39528   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 15, r: 15, streamingCols: 0)                     	 1.265e-05 	 1         	 0.889328  	 0         	 1.01976   	 0.872093  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.103e-05 	 1         	 0.453309  	 0         	 1.81324   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 15)                                                                                   	 9.101e-06 	 1         	 0.164817  	 0         	 0.659268  	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 7.96e-06  	 1         	 0         	 0         	 5.02513   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 6.801e-06 	 1         	 0         	 0         	 5.88149   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 750, m: 0, k: 15)   	 5.02e-06  	 100       	 0         	 0         	 1792.83   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 15, m: 50)                                                                    	 3.67e-06  	 1         	 0         	 0         	 3.26975   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.60241   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.60238   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.41002   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.40872   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.1823    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.45219   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.340394  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.303226  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.253047  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.220035  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.192286  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.105367  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.038375  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0304272 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0271509 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0219587 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0189049 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.018873  	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0184367 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0114883 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0113785 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0112929 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0112894 	 20        
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0105418 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00984098	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00616912	 1818      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00555157	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0052395 	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00311902	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00130305	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0011185 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000869358	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000410353	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000229864	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22400215701376 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22399999272960 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22399797946496 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22399596620032 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22399395293568 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22399193967104 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22398992640640 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22398791314176 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22398589987712 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22398388661248 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22398187334784 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22397986008320 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22397784681856 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22397583355392 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22397382028928 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22397180702464 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22396979376000 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22396778049536 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22396576723072 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22396375396608 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22396174070144 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22395972743680 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22395771417216 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22395570090752 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22395368764288 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22395167437824 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22394966111360 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22394764784896 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22394563458432 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22394362131968 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22394160805504 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22393959479040 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22393758148480 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22393556822016 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22393355495552 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22393154169088 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22392952842624 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22392751516160 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22392550189696 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22392348863232 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22392147536768 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22391946210304 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22391744883840 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22391543557376 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22391342230912 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22391140904448 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22390939577984 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22390738251520 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22390536925056 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22390335598592 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22390134272128 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22389932945664 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22389731619200 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22389530292736 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22389328966272 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22389127639808 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22388926313344 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22388724986880 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22388523660416 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22388322333952 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22388121007488 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22387919681024 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22387718354560 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22400110040832 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22400103450368 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 66, m: 66)                                                                 	 0.364741  	 700       	 3.86227   	 0         	 0.201651  	 19.1533   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3300, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.238049  	 600       	 74.4217   	 0         	 4.47954   	 16.6137   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3300, r: 66, r2: 66, leftOrthog: 1)        	 0.209621  	 600       	 82.2904   	 0         	 15.1614   	 5.42763   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, r1_: 66, n: 50, r2: 66)           	 0.18957   	 600       	 90.994    	 0         	 11.1399   	 8.16832   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.0412214 	 100       	 54.2647   	 0         	 3.28676   	 16.5101   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 66)                                                                 	 0.0400061 	 100       	 2.88706   	 0         	 0.182972  	 15.7787   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.034068  	 100       	 2.56839   	 0         	 0.177293  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3300, cols: 16, reductionFactor: 37, colBlockingSize: 12)                  	 0.0306702 	 700       	 39.6048   	 0         	 9.68738   	 4.08829   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 16, Qr2: 66)       	 0.0282143 	 700       	 0         	 0         	 78.5191   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3300, r: 50, r2: 50, leftOrthog: 1)        	 0.0261055 	 100       	 63.205    	 0         	 15.3224   	 4.125     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0249294 	 100       	 67.9757   	 0         	 5.37518   	 12.6462   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 66, r2: 66, leftOrthog: 1)        	 0.0248925 	 100       	 87.4962   	 0         	 16.1884   	 5.40487   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, r1_: 66, n: 50, r2: 50)           	 0.0232879 	 100       	 93.5248   	 0         	 11.486    	 8.14252   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3300, Xcols: 16, r: 16, streamingCols: 0)                   	 0.0232807 	 700       	 25.4013   	 0         	 25.4321   	 0.998789  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 16, m: 50, k: 2500)   	 0.0209289 	 800       	 152.898   	 0         	 50.7011   	 3.01568   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, r1_: 50, n: 50, r2: 66)           	 0.0190517 	 100       	 114.321   	 0         	 16.2127   	 7.05128   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 800, m: 50, k: 16)  	 0.0141318 	 800       	 72.4607   	 0         	 24.2744   	 2.98507   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 16, m: 2500, k: 50)	 0.0106463 	 800       	 300.573   	 0         	 99.67     	 3.01568   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 16, m: 3300)                                                                  	 0.00998297	 700       	 0         	 0         	 59.2369   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 16, n: 50, r2left: 50, r2right: 16)                	 0.00802878	 700       	 0         	 0         	 73.655    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3300, m: 16)                                                         	 0.00731919	 700       	 0         	 0         	 80.7958   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 16, m: 16)                                                                  	 0.00664014	 909       	 0.747445  	 0         	 0.858604  	 0.870536  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 800, m: 16, k: 16)  	 0.00583447	 700       	 49.1424   	 0         	 24.8169   	 1.9802    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0050477 	 8         	 19.811    	 0         	 3.20146   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00500989	 9         	 0.299407  	 0         	 0.108505  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 16, reductionFactor: 37, colBlockingSize: 12)                  	 0.00448996	 100       	 29.2785   	 0         	 7.17262   	 4.08198   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 66, reductionFactor: 37, colBlockingSize: 12)                    	 0.00429867	 100       	 10.4072   	 0         	 1.42481   	 7.30429   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 16, n: 50, r2: 16)                                                                                         	 0.00355286	 808       	 0         	 0         	 46.5761   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 16, r: 16, streamingCols: 0)                   	 0.0031742 	 100       	 20.1626   	 0         	 20.1948   	 0.998403  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 16, Qr2: 50)       	 0.00310983	 100       	 0         	 0         	 84.892    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00269611	 8         	 38.0929   	 0         	 3.02658   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00192502	 8         	 25.9738   	 0         	 8.35316   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 66, leftOrthog: 1)          	 0.0014975 	 100       	 22.0368   	 0         	 7.95994   	 2.76846   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00126288	 8         	 0         	 0         	 12.6694   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 16, reductionFactor: 37, colBlockingSize: 12)                    	 0.00117387	 101       	 2.26215   	 0         	 0.726866  	 3.1122    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 16, m: 2500)                                                                  	 0.00105913	 100       	 0         	 0         	 60.4271   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 16)                                                         	 0.0010496 	 100       	 0         	 0         	 60.9753   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 16, n: 50, r2left: 50, r2right: 0)                 	 0.000949407	 100       	 0         	 0         	 67.4105   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000879063	 100       	 0.568787  	 0         	 2.27515   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 16)                                                                                          	 0.000815208	 201       	 0         	 0         	 3.156     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000795242	 100       	 31.437    	 0         	 7.54487   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 16, n: 50, r2: 1)                                                                                          	 0.000740212	 201       	 0         	 0         	 3.47576   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000549875	 8         	 0         	 0         	 29.0975   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000519961	 100       	 0         	 0         	 7.69288   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 16, m: 50, k: 50)     	 0.000511112	 100       	 15.6521   	 0         	 6.41738   	 2.43902   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000504302	 100       	 0         	 0         	 7.93176   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 16)                 	 0.000491761	 100       	 0         	 0         	 10.7369   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 16, n: 50, r2left: 1, r2right: 0)                  	 0.000427053	 100       	 0         	 0         	 2.99729   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000407521	 100       	 1.22693   	 0         	 14.7232   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 16)   	 0.000403216	 100       	 19.8405   	 0         	 8.1346    	 2.43902   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000388675	 101       	 0.649643  	 0         	 10.3943   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 16)                                                                                 	 0.000345103	 101       	 0.234133  	 0         	 3.74613   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000343115	 100       	 0.728619  	 0         	 11.6579   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 16)                                                           	 0.000324271	 101       	 0         	 0         	 3.98679   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000307438	 1         	 0.83515   	 0         	 0.130108  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 800, cols: 16, reductionFactor: 37, colBlockingSize: 12)                   	 0.000292968	 8         	 11.4871   	 0         	 2.85213   	 4.02756   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 16, m: 50, k: 50)  	 0.000250037	 100       	 31.9953   	 0         	 13.1181   	 2.43902   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 16, m: 16, fromLeft: 1)                	 0.000220076	 809       	 0         	 0         	 15.0569   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 16, k: 16)   	 0.000190586	 100       	 13.4323   	 0         	 7.79071   	 1.72414   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 16, n: 50, r: 16, r2: 16)             	 0.000174322	 8         	 18.7974   	 0         	 9.49269   	 1.9802    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 800, Xcols: 16, r: 16, streamingCols: 0)                    	 0.000116103	 8         	 14.1116   	 0         	 14.1822   	 0.995025  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 16, m: 800)                                                                   	 5.8761e-05	 8         	 0         	 0         	 27.8824   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 800, m: 16)                                                          	 5.2212e-05	 8         	 0         	 0         	 31.3798   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4691e-05	 1         	 3.60324   	 0         	 1.4413    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 16, r2: 16)              	 1.869e-05 	 1         	 1.36972   	 0         	 0.794436  	 1.72414   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.604e-05 	 1         	 15.586    	 0         	 3.74065   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.525e-05 	 9         	 0         	 0         	 23.6066   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.08e-05  	 1         	 0.462963  	 0         	 1.85185   	 0.25      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 16, r: 16, streamingCols: 0)                     	 1.0731e-05	 1         	 1.19281   	 0         	 1.28823   	 0.925926  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 9.331e-06 	 1         	 0         	 0         	 4.28679   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 9.331e-06 	 1         	 0         	 0         	 4.28679   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 16)                                                                                   	 9.071e-06 	 1         	 0.176386  	 0         	 0.705545  	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 800, m: 0, k: 16)   	 4.67e-06  	 100       	 0         	 0         	 2192.72   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 16, m: 50)                                                                    	 3.75e-06  	 1         	 0         	 0         	 3.41333   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.62568   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.62564   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.42647   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.42515   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.18589   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.438815  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.348129  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.309155  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.262116  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.232705  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.199103  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.108626  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0400875 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0318441 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0285414 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.02144   	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0205647 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0181401 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0181081 	 2         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0116638 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.01165   	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0112304 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0108964 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0100175 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.009897  	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00561258	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00555489	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00525675	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00325999	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00132137	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107689	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000898934	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000407521	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000235326	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22644874540928 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22644678191104 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22644476864640 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22644275538176 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22644074211712 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22643872885248 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22643671558784 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22643470232320 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22643268905856 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22643067579392 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22642866252928 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22642664926464 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22642463600000 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22642262273536 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22642060947072 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22641859620608 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22641658294144 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22641456967680 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22641255641216 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22641054314752 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22640852988288 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22640651661824 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22640450335360 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22640249008896 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22640047682432 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22639846355968 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22639645029504 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22639443703040 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22639242376576 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22639041050112 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22638839723648 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22638638397184 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22638437066624 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22638235740160 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22638034413696 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22637833087232 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22637631760768 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22637430434304 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22637229107840 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22637027781376 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22636826454912 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22636625128448 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22636423801984 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22636222475520 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22636021149056 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22635819822592 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22635618496128 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22635417169664 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22635215843200 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22635014516736 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22634813190272 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22634611863808 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22634410537344 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22634209210880 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22634007884416 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22633806557952 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22633605231488 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22633403905024 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22633202578560 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22633001252096 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22632799925632 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22632598599168 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22632397272704 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22644768880384 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22644762289920 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 67, m: 67)                                                                 	 0.375936  	 700       	 3.92019   	 0         	 0.201605  	 19.4449   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3350, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.243882  	 600       	 75.9938   	 0         	 4.5059    	 16.8654   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3350, r: 67, r2: 67, leftOrthog: 1)        	 0.217026  	 600       	 83.1503   	 0         	 15.0912   	 5.50987   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, r1_: 67, n: 50, r2: 67)           	 0.190723  	 600       	 94.6179   	 0         	 11.4106   	 8.29208   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.0425186 	 100       	 54.2154   	 0         	 3.23603   	 16.7537   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 67)                                                                 	 0.0408814 	 100       	 2.86805   	 0         	 0.181011  	 15.8446   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3350, cols: 17, reductionFactor: 37, colBlockingSize: 12)                  	 0.0353218 	 700       	 39.4103   	 0         	 9.0748    	 4.34283   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0344825 	 100       	 2.53752   	 0         	 0.175161  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 17, Qr2: 67)       	 0.0302308 	 700       	 0         	 0         	 75.2821   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 67, r2: 67, leftOrthog: 1)        	 0.0263991 	 100       	 85.022    	 0         	 15.4999   	 5.48533   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3350, r: 50, r2: 50, leftOrthog: 1)        	 0.0256511 	 100       	 65.2995   	 0         	 15.8278   	 4.12562   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0247409 	 100       	 69.5313   	 0         	 5.49696   	 12.649    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3350, Xcols: 17, r: 17, streamingCols: 0)                   	 0.0243781 	 700       	 27.7998   	 0         	 26.1977   	 1.06115   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, r1_: 67, n: 50, r2: 50)           	 0.0227662 	 100       	 98.5891   	 0         	 11.9296   	 8.26426   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 17, m: 50, k: 2500)   	 0.0221222 	 800       	 153.692   	 0         	 48.704    	 3.15563   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, r1_: 50, n: 50, r2: 67)           	 0.019313  	 100       	 116.217   	 0         	 16.3745   	 7.09746   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 850, m: 50, k: 17)  	 0.0146729 	 800       	 78.7848   	 0         	 25.2111   	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 17, m: 2500, k: 50)	 0.0122428 	 800       	 277.715   	 0         	 88.0062   	 3.15563   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 17, m: 3350)                                                                  	 0.011243  	 700       	 0         	 0         	 56.7322   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 17, n: 50, r2left: 50, r2right: 17)                	 0.00844314	 700       	 0         	 0         	 75.5454   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 17, m: 17)                                                                  	 0.00800092	 909       	 0.744158  	 0         	 0.803464  	 0.926188  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3350, m: 17)                                                         	 0.00772543	 700       	 0         	 0         	 82.5637   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 850, m: 17, k: 17)  	 0.00618779	 700       	 55.5788   	 0         	 26.4163   	 2.10396   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00501724	 9         	 0.298968  	 0         	 0.108346  	 2.75937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00500914	 8         	 19.9635   	 0         	 3.2261    	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 17, reductionFactor: 37, colBlockingSize: 12)                  	 0.00481507	 100       	 30.821    	 0         	 7.10918   	 4.33538   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 67, reductionFactor: 37, colBlockingSize: 12)                    	 0.00475484	 100       	 9.69607   	 0         	 1.31891   	 7.35158   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 17, n: 50, r2: 17)                                                                                         	 0.00366521	 808       	 0         	 0         	 50.9683   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 17, r: 17, streamingCols: 0)                   	 0.00320236	 100       	 22.5615   	 0         	 21.2704   	 1.0607    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 17, Qr2: 50)       	 0.00311211	 100       	 0         	 0         	 86.1152   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272754	 8         	 37.654    	 0         	 2.99171   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0020114 	 8         	 24.8583   	 0         	 7.99443   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00159081	 8         	 0         	 0         	 10.0578   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 17, m: 2500)                                                                  	 0.0015451 	 100       	 0         	 0         	 44.0101   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 67, leftOrthog: 1)          	 0.00137761	 100       	 24.3176   	 0         	 8.73981   	 2.78239   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 17, reductionFactor: 37, colBlockingSize: 12)                    	 0.00130893	 101       	 2.29025   	 0         	 0.7031    	 3.25736   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 17)                                                         	 0.00128412	 100       	 0         	 0         	 52.9546   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 17, n: 50, r2left: 50, r2right: 0)                 	 0.000946969	 100       	 0         	 0         	 71.8081   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 17)                                                                                          	 0.000872002	 201       	 0         	 0         	 3.13486   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000784162	 100       	 31.8812   	 0         	 7.65148   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000762135	 100       	 0.656052  	 0         	 2.62421   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 17, n: 50, r2: 1)                                                                                          	 0.000721074	 201       	 0         	 0         	 3.79101   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 17, m: 50, k: 50)     	 0.000659545	 100       	 12.8877   	 0         	 5.09442   	 2.52976   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 17)                 	 0.000514034	 100       	 0         	 0         	 10.4273   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00049819	 100       	 0         	 0         	 8.02907   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000458944	 100       	 0         	 0         	 8.71566   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000454191	 8         	 0         	 0         	 35.2275   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 17, n: 50, r2left: 1, r2right: 0)                  	 0.000406229	 100       	 0         	 0         	 3.34787   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 17)   	 0.000392389	 100       	 21.6622   	 0         	 8.56293   	 2.52976   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 17, m: 50, k: 50)  	 0.000378386	 100       	 22.4638   	 0         	 8.87982   	 2.52976   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000376241	 101       	 0.671112  	 0         	 10.7378   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000374117	 100       	 1.33648   	 0         	 16.0378   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 17)                                                                                 	 0.000354636	 101       	 0.242079  	 0         	 3.87327   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000328521	 100       	 0.760986  	 0         	 12.1758   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 17)                                                           	 0.000321783	 101       	 0         	 0         	 4.26872   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 850, cols: 17, reductionFactor: 37, colBlockingSize: 12)                   	 0.000294497	 8         	 13.7069   	 0         	 3.20308   	 4.27928   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000265367	 1         	 0.967553  	 0         	 0.150735  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 17, m: 17, fromLeft: 1)                	 0.000248675	 809       	 0         	 0         	 15.043    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 17, n: 50, r: 17, r2: 17)             	 0.000192815	 8         	 20.3843   	 0         	 9.68854   	 2.10396   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 17, k: 17)   	 0.000159995	 100       	 18.0631   	 0         	 9.94531   	 1.81624   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 850, Xcols: 17, r: 17, streamingCols: 0)                    	 0.000118493	 8         	 16.5849   	 0         	 15.6874   	 1.05721   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 17, m: 850)                                                                   	 6.2551e-05	 8         	 0         	 0         	 29.5695   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 850, m: 17)                                                          	 5.4432e-05	 8         	 0         	 0         	 33.98     	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.7461e-05	 1         	 3.3368    	 0         	 1.33472   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 17, r2: 17)              	 2.1471e-05	 1         	 1.346     	 0         	 0.741093  	 1.81624   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5541e-05	 9         	 0         	 0         	 23.1645   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.415e-05 	 1         	 17.6678   	 0         	 4.24028   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 17, r: 17, streamingCols: 0)                     	 1.1911e-05	 1         	 1.21316   	 0         	 1.23885   	 0.979263  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 1.16e-05  	 1         	 0         	 0         	 3.44828   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.781e-06 	 1         	 0.511195  	 0         	 2.04478   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 8.14e-06  	 1         	 0         	 0         	 4.914     	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 17)                                                                                   	 7.96e-06  	 1         	 0.213568  	 0         	 0.854271  	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 850, m: 0, k: 17)   	 5.06e-06  	 100       	 0         	 0         	 2284.58   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 17, m: 50)                                                                    	 4.16e-06  	 1         	 0         	 0         	 3.26923   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.67511   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.67506   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.46046   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.45925   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.21815   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.451299  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.360629  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.316401  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.270454  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.233586  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.214527  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.119131  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.045251  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0338019 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0297597 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0227817 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0214181 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0184178 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0183874 	 2         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0133171 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0130182 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0126212 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0114876 	 20        
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0109882 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0103104 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00575648	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00540998	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00523758	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00326569	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00137141	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010594 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000779876	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000374117	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000264216	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22897726433152 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22897544390656 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22897343064192 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22897141737728 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22896940411264 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22896739084800 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22896537758336 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22896336431872 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22896135105408 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22895933778944 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22895732452480 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22895531126016 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22895329799552 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22895128473088 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22894927146624 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22894725820160 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22894524493696 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22894323167232 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22894121840768 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22893920514304 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22893719187840 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22893517861376 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22893316534912 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22893115208448 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22892913881984 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22892712555520 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22892511229056 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22892309902592 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22892108576128 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22891907249664 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22891705923200 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22891504596736 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22891303266176 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22891101939712 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22890900613248 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22890699286784 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22890497960320 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22890296633856 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22890095307392 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22889893980928 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22889692654464 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22889491328000 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22889290001536 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22889088675072 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22888887348608 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22888686022144 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22888484695680 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22888283369216 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22888082042752 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22887880716288 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22887679389824 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22887478063360 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22887276736896 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22887075410432 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22886874083968 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22886672757504 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22886471431040 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22886270104576 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22886068778112 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22885867451648 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22885666125184 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22885464798720 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22885263472256 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22897620772608 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22897614182144 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 68, m: 68)                                                                 	 0.378339  	 700       	 4.07231   	 0         	 0.206333  	 19.7366   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3400, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.247445  	 600       	 78.3034   	 0         	 4.57457   	 17.1171   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3400, r: 68, r2: 68, leftOrthog: 1)        	 0.210053  	 600       	 89.815    	 0         	 16.061    	 5.59211   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, r1_: 68, n: 50, r2: 68)           	 0.194082  	 600       	 97.2059   	 0         	 11.5503   	 8.41584   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.0436448 	 100       	 54.4048   	 0         	 3.20082   	 16.9971   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 68)                                                                 	 0.0424116 	 100       	 2.80584   	 0         	 0.176367  	 15.9091   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3400, cols: 18, reductionFactor: 37, colBlockingSize: 12)                  	 0.0347143 	 700       	 45.6274   	 0         	 9.92485   	 4.59728   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0344223 	 100       	 2.54196   	 0         	 0.175468  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 18, Qr2: 68)       	 0.0302932 	 700       	 0         	 0         	 77.1604   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3400, Xcols: 18, r: 18, streamingCols: 0)                   	 0.0267282 	 700       	 28.8504   	 0         	 25.6788   	 1.12351   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 68, r2: 68, leftOrthog: 1)        	 0.0250095 	 100       	 92.445    	 0         	 16.6097   	 5.56574   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0246963 	 100       	 70.6967   	 0         	 5.58789   	 12.6518   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3400, r: 50, r2: 50, leftOrthog: 1)        	 0.0243397 	 100       	 69.8447   	 0         	 16.9271   	 4.12621   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 18, m: 50, k: 2500)   	 0.0235396 	 800       	 152.934   	 0         	 46.4647   	 3.2914    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, r1_: 68, n: 50, r2: 50)           	 0.0231727 	 100       	 99.7724   	 0         	 11.8976   	 8.38595   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, r1_: 50, n: 50, r2: 68)           	 0.0191753 	 100       	 120.572   	 0         	 16.8801   	 7.14286   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0178331 	 8         	 5.60756   	 0         	 0.906182  	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 900, m: 50, k: 18)  	 0.0160145 	 800       	 80.9267   	 0         	 24.8175   	 3.26087   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 18, m: 3400)                                                                  	 0.0126176 	 700       	 0         	 0         	 54.324    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 18, m: 2500, k: 50)	 0.0124503 	 800       	 289.151   	 0         	 87.8504   	 3.2914    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 18, n: 50, r2left: 50, r2right: 18)                	 0.00904233	 700       	 0         	 0         	 75.8034   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 18, m: 18)                                                                  	 0.0083299 	 909       	 0.848556  	 0         	 0.86427   	 0.981818  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3400, m: 18)                                                         	 0.00771314	 700       	 0         	 0         	 88.8665   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 68, reductionFactor: 37, colBlockingSize: 12)                    	 0.00615443	 100       	 7.71634   	 0         	 1.04302   	 7.39808   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 900, m: 18, k: 18)  	 0.00590009	 700       	 69.1922   	 0         	 31.0596   	 2.22772   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 18, reductionFactor: 37, colBlockingSize: 12)                  	 0.00514251	 100       	 32.3536   	 0         	 7.05088   	 4.58858   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00493181	 9         	 0.304147  	 0         	 0.110223  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 18, n: 50, r2: 18)                                                                                         	 0.00379577	 808       	 0         	 0         	 55.1755   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 18, r: 18, streamingCols: 0)                   	 0.00328706	 100       	 24.6421   	 0         	 21.9435   	 1.12298   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 18, Qr2: 50)       	 0.0031654 	 100       	 0         	 0         	 85.9292   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00275334	 8         	 37.3011   	 0         	 2.96367   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00222993	 8         	 0         	 0         	 7.17512   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00180539	 8         	 27.6949   	 0         	 8.90667   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 18, reductionFactor: 37, colBlockingSize: 12)                    	 0.00141721	 101       	 2.37145   	 0         	 0.697843  	 3.39825   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 68, leftOrthog: 1)          	 0.00132618	 100       	 25.6375   	 0         	 9.16919   	 2.79605   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 18, m: 2500)                                                                  	 0.00132591	 100       	 0         	 0         	 54.3025   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 18, n: 50, r2left: 50, r2right: 0)                 	 0.00120012	 100       	 0         	 0         	 59.9941   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 18)                                                         	 0.00116595	 100       	 0         	 0         	 61.7521   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000840336	 100       	 0.595     	 0         	 2.38      	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 18)                                                                                          	 0.000799508	 201       	 0         	 0         	 3.62023   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 18, n: 50, r2: 1)                                                                                          	 0.000762462	 201       	 0         	 0         	 3.79612   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000756545	 100       	 33.045    	 0         	 7.93079   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 18, m: 50, k: 50)     	 0.000644684	 100       	 13.9603   	 0         	 5.33595   	 2.61628   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000520984	 8         	 0         	 0         	 30.7111   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000508424	 100       	 0         	 0         	 7.86745   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000496575	 100       	 0         	 0         	 8.05518   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 18)                 	 0.000476271	 100       	 0         	 0         	 11.4221   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 18)   	 0.000442593	 100       	 20.3347   	 0         	 7.77238   	 2.61628   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 18, n: 50, r2left: 1, r2right: 0)                  	 0.000433534	 100       	 0         	 0         	 3.32154   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000384498	 101       	 0.6567    	 0         	 10.5072   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 18, m: 50, k: 50)  	 0.000381443	 100       	 23.5946   	 0         	 9.01839   	 2.61628   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000376585	 100       	 1.32772   	 0         	 15.9327   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 18)                                                           	 0.000338397	 101       	 0         	 0         	 4.29791   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 18)                                                                                 	 0.000336284	 101       	 0.270307  	 0         	 4.32492   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000328128	 100       	 0.761898  	 0         	 12.1904   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 900, cols: 18, reductionFactor: 37, colBlockingSize: 12)                   	 0.00032192	 8         	 14.8847   	 0         	 3.28509   	 4.531     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000253676	 1         	 1.01214   	 0         	 0.157681  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 18, m: 18, fromLeft: 1)                	 0.000249093	 809       	 0         	 0         	 16.8365   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 18, n: 50, r: 18, r2: 18)             	 0.000199382	 8         	 23.4003   	 0         	 10.5041   	 2.22772   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 18, k: 18)   	 0.00019576	 100       	 16.5509   	 0         	 8.68002   	 1.90678   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 900, Xcols: 18, r: 18, streamingCols: 0)                    	 0.00012878	 8         	 18.1146   	 0         	 16.1824   	 1.1194    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 18, m: 900)                                                                   	 6.5072e-05	 8         	 0         	 0         	 31.8662   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 900, m: 18)                                                          	 5.2131e-05	 8         	 0         	 0         	 39.7767   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.0531e-05	 1         	 3.08406   	 0         	 1.23362   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 18, r2: 18)              	 2.0581e-05	 1         	 1.57427   	 0         	 0.825616  	 1.90678   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.574e-05 	 9         	 0         	 0         	 22.8717   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 18, r: 18, streamingCols: 0)                     	 1.394e-05 	 1         	 1.16212   	 0         	 1.12597   	 1.03211   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.2951e-05	 1         	 19.3035   	 0         	 4.63285   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 1.2161e-05	 1         	 0         	 0         	 3.2892    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 18)                                                                                   	 9.24e-06  	 1         	 0.194805  	 0         	 0.779221  	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.62e-06  	 1         	 0.580046  	 0         	 2.32019   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 5.32e-06  	 1         	 0         	 0         	 7.5188    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 900, m: 0, k: 18)   	 4.77e-06  	 100       	 0         	 0         	 2716.98   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 18, m: 50)                                                                    	 4.4e-06   	 1         	 0         	 0         	 3.27273   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.68828   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.68822   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.46691   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.46563   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.22213   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.455173  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.366544  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.322492  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.260728  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.237187  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.221243  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.123178  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0451596 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0339552 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0320039 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0317725 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0317421 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0241843 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0225577 	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.018066  	 18        
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0145393 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0132617 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0128317 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0115117 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0111523 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0110417 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00586617	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00453081	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00298764	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0012224 	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00104891	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000858196	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000376585	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000264833	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22703640094592 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22703465555968 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22703264229504 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22703062903040 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22702861576576 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22702660250112 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22702458923648 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22702257597184 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22702056270720 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22701854944256 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22701653617792 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22701452291328 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22701250964864 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22701049638400 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22700848311936 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22700646985472 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22700445659008 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22700244332544 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22700043006080 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22699841679616 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22699640353152 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22699439026688 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22699237700224 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22699036373760 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22698835047296 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22698633720832 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22698432394368 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22698231067904 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22698029741440 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22697828414976 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22697627088512 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22697425762048 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22697224431488 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22697023105024 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22696821778560 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22696620452096 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22696419125632 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22696217799168 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22696016472704 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22695815146240 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22695613819776 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22695412493312 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22695211166848 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22695009840384 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22694808513920 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22694607187456 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22694405860992 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22694204534528 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22694003208064 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22693801881600 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22693600555136 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22693399228672 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22693197902208 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22692996575744 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22692795249280 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22692593922816 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22692392596352 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22692191269888 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22691989943424 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22691788616960 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22691587290496 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22691385964032 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22691184637568 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22703360694016 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22703355803392 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 69, m: 69)                                                                 	 0.393271  	 700       	 4.09309   	 0         	 0.204366  	 20.0282   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3450, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.256096  	 600       	 79.0456   	 0         	 4.551     	 17.3688   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3450, r: 69, r2: 69, leftOrthog: 1)        	 0.220856  	 600       	 89.246    	 0         	 15.728    	 5.67434   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, r1_: 69, n: 50, r2: 69)           	 0.199123  	 600       	 98.9869   	 0         	 11.5915   	 8.5396    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.0436278 	 100       	 56.0385   	 0         	 3.25042   	 17.2404   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 69)                                                                 	 0.0427205 	 100       	 2.82651   	 0         	 0.176964  	 15.9722   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3450, cols: 19, reductionFactor: 37, colBlockingSize: 12)                  	 0.0377249 	 700       	 47.4688   	 0         	 9.78404   	 4.85166   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.036287  	 100       	 2.41133   	 0         	 0.166451  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 19, Qr2: 69)       	 0.0319843 	 700       	 0         	 0         	 75.0419   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3450, Xcols: 19, r: 19, streamingCols: 0)                   	 0.0272696 	 700       	 31.9702   	 0         	 26.9593   	 1.18587   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3450, r: 50, r2: 50, leftOrthog: 1)        	 0.0264221 	 100       	 65.2862   	 0         	 15.8201   	 4.12679   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 69, r2: 69, leftOrthog: 1)        	 0.0252165 	 100       	 94.4025   	 0         	 16.7199   	 5.64611   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0250804 	 100       	 70.6377   	 0         	 5.58205   	 12.6544   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, r1_: 69, n: 50, r2: 50)           	 0.0237766 	 100       	 100.12    	 0         	 11.7683   	 8.5076    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 19, m: 50, k: 2500)   	 0.0233603 	 800       	 162.669   	 0         	 47.5199   	 3.42318   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, r1_: 50, n: 50, r2: 69)           	 0.0195321 	 100       	 121.876   	 0         	 16.9567   	 7.1875    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0170813 	 8         	 5.85437   	 0         	 0.946066  	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 950, m: 50, k: 19)  	 0.0169875 	 800       	 85.0034   	 0         	 25.0536   	 3.39286   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 19, m: 2500, k: 50)	 0.0124926 	 800       	 304.18    	 0         	 88.859    	 3.42318   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 19, m: 3450)                                                                  	 0.0124801 	 700       	 0         	 0         	 58.8264   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 19, n: 50, r2left: 50, r2right: 19)                	 0.0100293 	 700       	 0         	 0         	 73.2018   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 19, m: 19)                                                                  	 0.00859687	 909       	 0.966852  	 0         	 0.93217   	 1.03721   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3450, m: 19)                                                         	 0.00826755	 700       	 0         	 0         	 88.8002   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 69, reductionFactor: 37, colBlockingSize: 12)                    	 0.00621028	 100       	 7.87352   	 0         	 1.05773   	 7.44379   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 950, m: 19, k: 19)  	 0.0058173 	 700       	 82.5348   	 0         	 35.099    	 2.35149   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 19, reductionFactor: 37, colBlockingSize: 12)                  	 0.00547681	 100       	 33.8479   	 0         	 6.99108   	 4.84158   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00510236	 9         	 0.29398   	 0         	 0.106539  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 19, n: 50, r2: 19)                                                                                         	 0.0038994 	 808       	 0         	 0         	 59.8426   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 19, Qr2: 50)       	 0.00347731	 100       	 0         	 0         	 79.3717   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 19, r: 19, streamingCols: 0)                   	 0.00337347	 100       	 26.7529   	 0         	 22.5715   	 1.18525   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272916	 8         	 37.6316   	 0         	 2.98993   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00242344	 8         	 20.6318   	 0         	 6.63519   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00215649	 8         	 0         	 0         	 7.41947   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 69, leftOrthog: 1)          	 0.00157042	 100       	 21.9687   	 0         	 7.81958   	 2.80945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 19, m: 2500)                                                                  	 0.00137693	 100       	 0         	 0         	 55.1953   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 19, reductionFactor: 37, colBlockingSize: 12)                    	 0.00135659	 101       	 2.76034   	 0         	 0.780847  	 3.53506   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 19)                                                         	 0.0012642 	 100       	 0         	 0         	 60.1171   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000905172	 100       	 0.552381  	 0         	 2.20952   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 19, n: 50, r2left: 50, r2right: 0)                 	 0.000876347	 100       	 0         	 0         	 86.7236   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 19)                                                                                          	 0.000814734	 201       	 0         	 0         	 3.74994   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000791389	 100       	 31.59     	 0         	 7.58161   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 19, n: 50, r2: 1)                                                                                          	 0.000734555	 201       	 0         	 0         	 4.15925   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 19, m: 50, k: 50)     	 0.000621059	 100       	 15.2965   	 0         	 5.66774   	 2.69886   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000497725	 100       	 0         	 0         	 8.03657   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000492342	 100       	 0         	 0         	 8.12443   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 19)                 	 0.000482827	 100       	 0         	 0         	 11.4327   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 19, n: 50, r2left: 1, r2right: 0)                  	 0.0004453 	 100       	 0         	 0         	 3.41343   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.00043536	 8         	 0         	 0         	 36.7512   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 19)   	 0.000433943	 100       	 21.8923   	 0         	 8.11166   	 2.69886   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 19, m: 50, k: 50)  	 0.000408392	 100       	 23.262    	 0         	 8.61917   	 2.69886   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000393898	 101       	 0.641029  	 0         	 10.2565   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000385319	 100       	 1.29763   	 0         	 15.5715   	 0.0833333 
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 950, cols: 19, reductionFactor: 37, colBlockingSize: 12)                   	 0.00035699	 8         	 15.7862   	 0         	 3.30066   	 4.78272   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 19)                                                                                 	 0.000349876	 101       	 0.27424   	 0         	 4.38784   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000323477	 100       	 0.772852  	 0         	 12.3656   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 19)                                                           	 0.000317416	 101       	 0         	 0         	 4.83656   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000295018	 1         	 0.870309  	 0         	 0.135585  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 19, m: 19, fromLeft: 1)                	 0.000277141	 809       	 0         	 0         	 16.8607   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 19, n: 50, r: 19, r2: 19)             	 0.000231325	 8         	 23.7207   	 0         	 10.0876   	 2.35149   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 19, k: 19)   	 0.000177393	 100       	 20.3503   	 0         	 10.1966   	 1.9958    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 950, Xcols: 19, r: 19, streamingCols: 0)                    	 0.000135693	 8         	 20.2192   	 0         	 17.1118   	 1.18159   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 19, m: 950)                                                                   	 6.9202e-05	 8         	 0         	 0         	 33.3863   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 6.2491e-05	 1         	 2.00029   	 0         	 0.800115  	 2.5       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 950, m: 19)                                                          	 5.8023e-05	 8         	 0         	 0         	 39.8187   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 19, r2: 19)              	 2.107e-05 	 1         	 1.71334   	 0         	 0.858472  	 1.9958    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 19, r: 19, streamingCols: 0)                     	 1.7431e-05	 1         	 1.03551   	 0         	 0.954851  	 1.08447   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.584e-05 	 1         	 15.7828   	 0         	 3.78788   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5061e-05	 9         	 0         	 0         	 23.9028   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.28e-06  	 1         	 0.538793  	 0         	 2.15517   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 19)                                                                                   	 8.7e-06   	 1         	 0.218391  	 0         	 0.873563  	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 7.91e-06  	 1         	 0         	 0         	 5.05689   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 5.601e-06 	 1         	 0         	 0         	 7.14158   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 950, m: 0, k: 19)   	 4.76e-06  	 100       	 0         	 0         	 3033.61   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 19, m: 50)                                                                    	 3.96e-06  	 1         	 0         	 0         	 3.83838   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.7485    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.74846   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.5177    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.51637   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.26556   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.472278  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.378954  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.33167   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.274065  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.243223  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.23069   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.128975  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0484239 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0359539 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0332822 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0317725 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0317431 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0239814 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0234209 	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0173495 	 18        
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0143712 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0136992 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.012901  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0120716 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0118337 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0111127 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00594642	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00527793	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00311818	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00150149	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106725	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000923152	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000385319	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000292202	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23130887722880 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23130680584192 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23130479257728 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23130277931264 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23130076604800 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23129875278336 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23129673951872 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23129472625408 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23129271298944 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23129069972480 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23128868646016 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23128667319552 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23128465993088 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23128264666624 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23128063340160 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23127862013696 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23127660687232 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23127459360768 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23127258034304 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23127056707840 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23126855381376 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23126654054912 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23126452728448 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23126251401984 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23126050075520 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23125848749056 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23125647422592 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23125446096128 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23125244769664 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23125043443200 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23124842116736 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23124640790272 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23124439459712 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23124238133248 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23124036806784 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23123835480320 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23123634153856 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23123432827392 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23123231500928 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23123030174464 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23122828848000 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23122627521536 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23122426195072 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23122224868608 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23122023542144 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23121822215680 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23121620889216 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23121419562752 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23121218236288 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23121016909824 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23120815583360 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23120614256896 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23120412930432 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23120211603968 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23120010277504 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23119808951040 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23119607624576 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23119406298112 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23119204971648 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23119003645184 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23118802318720 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23118600992256 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23118399665792 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23130782062336 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23130775471872 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 70, m: 70)                                                                 	 0.393462  	 700       	 4.27157   	 0         	 0.210216  	 20.3199   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3500, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.261386  	 600       	 80.8621   	 0         	 4.58908   	 17.6206   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3500, r: 70, r2: 70, leftOrthog: 1)        	 0.230665  	 600       	 89.2203   	 0         	 15.4988   	 5.75658   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, n: 50, r2: 70)           	 0.20434   	 600       	 100.714   	 0         	 11.6253   	 8.66337   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.0447218 	 100       	 56.2637   	 0         	 3.21812   	 17.4834   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3500, cols: 20, reductionFactor: 37, colBlockingSize: 12)                  	 0.0436656 	 700       	 46.0997   	 0         	 9.02862   	 5.10596   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 70)                                                                 	 0.0417049 	 100       	 2.9373    	 0         	 0.183192  	 16.034    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0355193 	 100       	 2.46345   	 0         	 0.170048  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 20, Qr2: 70)       	 0.0315009 	 700       	 0         	 0         	 78.22     	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3500, Xcols: 20, r: 20, streamingCols: 0)                   	 0.028602  	 700       	 34.2633   	 0         	 27.4498   	 1.24822   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3500, r: 50, r2: 50, leftOrthog: 1)        	 0.0274277 	 100       	 63.8041   	 0         	 15.4588   	 4.12736   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 70, r2: 70, leftOrthog: 1)        	 0.0261734 	 100       	 93.6066   	 0         	 16.3464   	 5.72644   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, n: 50, r2: 50)           	 0.0256615 	 100       	 95.4737   	 0         	 11.064    	 8.62919   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0251808 	 100       	 71.3757   	 0         	 5.63922   	 12.657    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 50, k: 2500)   	 0.0232959 	 800       	 171.704   	 0         	 48.3518   	 3.55114   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 50, n: 50, r2: 70)           	 0.0208549 	 100       	 117.479   	 0         	 16.2456   	 7.2314    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 3500)                                                                  	 0.0134407 	 700       	 0         	 0         	 58.3303   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 20, m: 2500, k: 50)	 0.0128237 	 800       	 311.923   	 0         	 87.8375   	 3.55114   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1000, m: 50, k: 20) 	 0.012051  	 800       	 132.769   	 0         	 37.7063   	 3.52113   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3500, m: 20)                                                         	 0.00935712	 700       	 0         	 0         	 83.7864   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 20, m: 20)                                                                  	 0.00880023	 909       	 1.10172   	 0         	 1.00814   	 1.09283   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 50, r2left: 50, r2right: 20)                	 0.0086276 	 700       	 0         	 0         	 90.8712   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1000, m: 20, k: 20) 	 0.00729339	 700       	 76.7819   	 0         	 31.0199   	 2.47525   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 20, reductionFactor: 37, colBlockingSize: 12)                  	 0.00583488	 100       	 35.203    	 0         	 6.91017   	 5.09438   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00507159	 8         	 19.7177   	 0         	 3.18638   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00495975	 9         	 0.302433  	 0         	 0.109602  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 70, reductionFactor: 37, colBlockingSize: 12)                    	 0.00466979	 100       	 10.7766   	 0         	 1.43904   	 7.48874   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 20, n: 50, r2: 20)                                                                                         	 0.0041171 	 808       	 0         	 0         	 62.8015   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 20, r: 20, streamingCols: 0)                   	 0.00354087	 100       	 28.2416   	 0         	 22.6385   	 1.2475    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 20, Qr2: 50)       	 0.00349259	 100       	 0         	 0         	 80.1698   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00270128	 8         	 38.02     	 0         	 3.02079   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00205588	 8         	 0         	 0         	 7.78254   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00196632	 8         	 25.4282   	 0         	 8.17771   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 2500)                                                                  	 0.00187544	 100       	 0         	 0         	 42.6567   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 20)                                                         	 0.0017675 	 100       	 0         	 0         	 45.2617   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 70, leftOrthog: 1)          	 0.00153777	 100       	 22.7602   	 0         	 8.06362   	 2.82258   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 50, r2left: 50, r2right: 0)                 	 0.00145157	 100       	 0         	 0         	 55.1126   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 20, reductionFactor: 37, colBlockingSize: 12)                    	 0.00133033	 101       	 3.11891   	 0         	 0.850313  	 3.66795   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000818925	 100       	 0.610557  	 0         	 2.44223   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 20)                                                                                          	 0.000811341	 201       	 0         	 0         	 3.96381   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000790276	 100       	 31.6345   	 0         	 7.59228   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 20, n: 50, r2: 1)                                                                                          	 0.000723003	 201       	 0         	 0         	 4.44811   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 50, k: 50)     	 0.000577  	 100       	 17.331    	 0         	 6.23917   	 2.77778   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000525204	 100       	 0         	 0         	 7.61609   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 20)                 	 0.000500219	 100       	 0         	 0         	 11.1951   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00049635	 100       	 0         	 0         	 8.05883   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 20)   	 0.000448697	 100       	 22.2868   	 0         	 8.02323   	 2.77778   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000423541	 8         	 0         	 0         	 37.7767   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 50, r2left: 1, r2right: 0)                  	 0.000419162	 100       	 0         	 0         	 3.81714   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000409721	 100       	 1.22034   	 0         	 14.6441   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000384117	 101       	 0.657352  	 0         	 10.5176   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1000, cols: 20, reductionFactor: 37, colBlockingSize: 12)                  	 0.000361609	 8         	 18.177    	 0         	 3.61053   	 5.03445   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 20, m: 50, k: 50)  	 0.000345994	 100       	 28.9022   	 0         	 10.4048   	 2.77778   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 20)                                                                                 	 0.000338782	 101       	 0.298127  	 0         	 4.77003   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 20, m: 20, fromLeft: 1)                	 0.000334702	 809       	 0         	 0         	 15.4693   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000329961	 100       	 0.757665  	 0         	 12.1226   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 20)                                                           	 0.000329061	 101       	 0         	 0         	 4.91094   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 50, r: 20, r2: 20)             	 0.000248385	 8         	 25.7665   	 0         	 10.4096   	 2.47525   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000208715	 1         	 1.23018   	 0         	 0.191649  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 20, k: 20)   	 0.000170514	 100       	 23.4585   	 0         	 11.2601   	 2.08333   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1000, Xcols: 20, r: 20, streamingCols: 0)                   	 0.000149283	 8         	 21.4358   	 0         	 17.2344   	 1.24378   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 1000)                                                                  	 6.6222e-05	 8         	 0         	 0         	 38.6578   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1000, m: 20)                                                         	 5.9373e-05	 8         	 0         	 0         	 43.1172   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.8341e-05	 1         	 3.26022   	 0         	 1.30409   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 20, r2: 20)              	 2.6641e-05	 1         	 1.50145   	 0         	 0.720694  	 2.08333   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 20)                                                                                   	 2.14e-05  	 1         	 0.0934579 	 0         	 0.373832  	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.598e-05 	 1         	 15.6446   	 0         	 3.75469   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.554e-05 	 9         	 0         	 0         	 23.166    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 20, r: 20, streamingCols: 0)                     	 1.166e-05 	 1         	 1.71527   	 0         	 1.50943   	 1.13636   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 1.0671e-05	 1         	 0         	 0         	 3.74848   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.039e-05 	 1         	 0.481232  	 0         	 1.92493   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 5.86e-06  	 1         	 0         	 0         	 6.82594   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1000, m: 0, k: 20)  	 4.9e-06   	 100       	 0         	 0         	 3265.31   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 50)                                                                    	 4.34e-06  	 1         	 0         	 0         	 3.68664   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.78626   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.78621   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.54855   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.5473    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.28819   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.470686  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.390061  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.336546  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.285804  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.251647  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.237589  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.139195  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0545577 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0354898 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0343085 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0238729 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0199685 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0190289 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0189832 	 2         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0158161 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.01376   	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0135796 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0131697 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0117338 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0109986 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00617665	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00569274	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0053626 	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00312239	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00130721	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105286	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000850715	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000409721	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000350242	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23324188292992 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23323954112512 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23323752786048 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23323551459584 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23323350133120 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23323148806656 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23322947480192 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23322746153728 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23322544827264 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23322343500800 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23322142174336 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23321940847872 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23321739521408 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23321538194944 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23321336868480 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23321135542016 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23320934215552 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23320732889088 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23320531562624 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23320330236160 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23320128909696 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23319927583232 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23319726256768 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23319524930304 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23319323603840 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23319122277376 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23318920950912 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23318719624448 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23318518297984 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23318316971520 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23318115645056 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23317914318592 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23317712988032 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23317511661568 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23317310335104 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23317109008640 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23316907682176 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23316706355712 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23316505029248 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23316303702784 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23316102376320 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23315901049856 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23315699723392 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23315498396928 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23315297070464 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23315095744000 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23314894417536 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23314693091072 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23314491764608 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23314290438144 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23314089111680 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23313887785216 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23313686458752 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23313485132288 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23313283805824 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23313082479360 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23312881152896 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23312679826432 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23312478499968 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23312277173504 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23312075847040 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23311874520576 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23311673194112 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23324082632448 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23324076041984 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 71, m: 71)                                                                 	 0.407508  	 700       	 4.30363   	 0         	 0.208797  	 20.6116   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3550, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.267373  	 600       	 82.488    	 0         	 4.61542   	 17.8723   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3550, r: 71, r2: 71, leftOrthog: 1)        	 0.247693  	 600       	 86.6988   	 0         	 14.8487   	 5.83882   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, r1_: 71, n: 50, r2: 71)           	 0.210726  	 600       	 101.908   	 0         	 11.5974   	 8.78713   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.0452418 	 100       	 57.2175   	 0         	 3.22783   	 17.7263   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3550, cols: 21, reductionFactor: 37, colBlockingSize: 12)                  	 0.0436125 	 700       	 51.6138   	 0         	 9.62911   	 5.36018   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 71)                                                                 	 0.0427447 	 100       	 2.90679   	 0         	 0.180607  	 16.0946   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0363706 	 100       	 2.40579   	 0         	 0.166068  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 21, Qr2: 71)       	 0.0334686 	 700       	 0         	 0         	 75.5622   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3550, Xcols: 21, r: 21, streamingCols: 0)                   	 0.0302587 	 700       	 36.2172   	 0         	 27.6348   	 1.31056   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 71, r2: 71, leftOrthog: 1)        	 0.0263256 	 100       	 95.7434   	 0         	 16.4884   	 5.80673   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3550, r: 50, r2: 50, leftOrthog: 1)        	 0.0261174 	 100       	 67.9625   	 0         	 16.4641   	 4.12791   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.024693  	 100       	 73.8254   	 0         	 5.83161   	 12.6595   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 21, m: 50, k: 2500)   	 0.0246312 	 800       	 170.515   	 0         	 46.3932   	 3.67544   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, r1_: 71, n: 50, r2: 50)           	 0.0244978 	 100       	 102.887   	 0         	 11.7575   	 8.75074   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, r1_: 50, n: 50, r2: 71)           	 0.0212121 	 100       	 118.823   	 0         	 16.334    	 7.27459   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 21, m: 3550)                                                                  	 0.0141958 	 700       	 0         	 0         	 58.8173   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 21, m: 2500, k: 50)	 0.0141351 	 800       	 297.133   	 0         	 80.8428   	 3.67544   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1050, m: 50, k: 21) 	 0.0109324 	 800       	 161.355   	 0         	 44.2575   	 3.64583   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 21, m: 21)                                                                  	 0.0101974 	 909       	 1.1007    	 0         	 0.958435  	 1.14844   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 21, n: 50, r2left: 50, r2right: 21)                	 0.00998329	 700       	 0         	 0         	 83.6357   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3550, m: 21)                                                         	 0.00879502	 700       	 0         	 0         	 94.9355   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1050, m: 21, k: 21) 	 0.00712679	 700       	 90.9624   	 0         	 34.9989   	 2.59901   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 21, reductionFactor: 37, colBlockingSize: 12)                  	 0.00646034	 100       	 35.0538   	 0         	 6.55582   	 5.34698   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00501119	 8         	 19.9553   	 0         	 3.22478   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00493542	 9         	 0.303924  	 0         	 0.110143  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 71, reductionFactor: 37, colBlockingSize: 12)                    	 0.00477253	 100       	 10.848    	 0         	 1.44008   	 7.53295   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 21, n: 50, r2: 21)                                                                                         	 0.00412929	 808       	 0         	 0         	 69.0343   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 21, r: 21, streamingCols: 0)                   	 0.00374862	 100       	 29.4108   	 0         	 22.4553   	 1.30975   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 21, Qr2: 50)       	 0.00338664	 100       	 0         	 0         	 83.8589   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00271846	 8         	 37.7797   	 0         	 3.0017    	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 21, m: 2500)                                                                  	 0.00190976	 100       	 0         	 0         	 43.9846   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00184853	 8         	 27.0485   	 0         	 8.69881   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 21)                                                         	 0.00171243	 100       	 0         	 0         	 49.0532   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 21, reductionFactor: 37, colBlockingSize: 12)                    	 0.00167158	 101       	 2.73662   	 0         	 0.720711  	 3.79711   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00166196	 8         	 0         	 0         	 9.62718   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 71, leftOrthog: 1)          	 0.00152161	 100       	 23.3305   	 0         	 8.22812   	 2.83546   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 21, n: 50, r2left: 50, r2right: 0)                 	 0.00130864	 100       	 0         	 0         	 64.1886   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 21)                                                                                          	 0.000796269	 201       	 0         	 0         	 4.24078   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 21, n: 50, r2: 1)                                                                                          	 0.000794631	 201       	 0         	 0         	 4.24952   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000784606	 100       	 0.637263  	 0         	 2.54905   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000778872	 100       	 32.0977   	 0         	 7.70345   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 21, m: 50, k: 50)     	 0.000756697	 100       	 13.8761   	 0         	 4.86324   	 2.85326   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000549995	 8         	 0         	 0         	 29.0912   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000517393	 100       	 0         	 0         	 7.73107   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 21)                 	 0.000498769	 100       	 0         	 0         	 11.388    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000459255	 100       	 0         	 0         	 8.70976   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 21)   	 0.00045727	 100       	 22.9624   	 0         	 8.04776   	 2.85326   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 21, n: 50, r2left: 1, r2right: 0)                  	 0.00043676	 100       	 0         	 0         	 3.84651   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000402851	 100       	 1.24115   	 0         	 14.8938   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 21, m: 50, k: 50)  	 0.000401973	 100       	 26.1212   	 0         	 9.15484   	 2.85326   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1050, cols: 21, reductionFactor: 37, colBlockingSize: 12)                  	 0.000399  	 8         	 19.0703   	 0         	 3.60758   	 5.28617   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000361329	 101       	 0.698809  	 0         	 11.1809   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 21)                                                           	 0.000346109	 101       	 0         	 0         	 4.9025    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 21)                                                                                 	 0.000336398	 101       	 0.315252  	 0         	 5.04403   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000326838	 100       	 0.764905  	 0         	 12.2385   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 21, m: 21, fromLeft: 1)                	 0.00030844	 809       	 0         	 0         	 18.507    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 21, n: 50, r: 21, r2: 21)             	 0.000280357	 8         	 26.4263   	 0         	 10.1678   	 2.59901   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 21, k: 21)   	 0.000202825	 100       	 21.7429   	 0         	 10.0224   	 2.16942   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000201835	 1         	 1.27211   	 0         	 0.198182  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1050, Xcols: 21, r: 21, streamingCols: 0)                   	 0.000172784	 8         	 21.4395   	 0         	 16.4165   	 1.30597   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1050, m: 21)                                                         	 7.3542e-05	 8         	 0         	 0         	 38.3781   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 21, m: 1050)                                                                  	 7.2893e-05	 8         	 0         	 0         	 38.7198   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.7161e-05	 1         	 3.36374   	 0         	 1.3455    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 21, r2: 21)              	 2.4591e-05	 1         	 1.79334   	 0         	 0.826644  	 2.16942   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 21, r: 21, streamingCols: 0)                     	 1.537e-05 	 1         	 1.43461   	 0         	 1.20781   	 1.18778   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.523e-05 	 9         	 0         	 0         	 23.6376   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.412e-05 	 1         	 17.7054   	 0         	 4.24929   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 1.16e-05  	 1         	 0         	 0         	 3.44828   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 21)                                                                                   	 1.04e-05  	 1         	 0.201923  	 0         	 0.807692  	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 8.421e-06 	 1         	 0         	 0         	 4.75003   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 7.91e-06  	 1         	 0.632111  	 0         	 2.52845   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1050, m: 0, k: 21)  	 5.23e-06  	 100       	 0         	 0         	 3372.85   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 21, m: 50)                                                                    	 4.1e-06   	 1         	 0         	 0         	 4.09756   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.8428    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.84275   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.59673   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.5955    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.32875   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.486623  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.397144  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.342611  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.301657  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.257215  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.245963  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.142598  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0555173 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0373145 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0360812 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0253879 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0187245 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0186128 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.018582  	 2         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.016741  	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0151328 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0145371 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0126007 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0122275 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0119368 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00623758	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00546924	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00533026	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00311171	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00124073	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00102457	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000802916	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000402851	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00032367	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23035692865408 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23035520215040 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23035318888576 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23035117562112 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23034916235648 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23034714909184 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23034513582720 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23034312256256 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23034110929792 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23033909603328 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23033708276864 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23033506950400 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23033305623936 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23033104297472 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23032902971008 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23032701644544 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23032500318080 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23032298991616 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23032097665152 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23031896338688 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23031695012224 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23031493685760 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23031292359296 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23031091032832 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23030889706368 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23030688379904 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23030487053440 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23030285726976 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23030084400512 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23029883074048 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23029681747584 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23029480421120 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23029279090560 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23029077764096 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23028876437632 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23028675111168 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23028473784704 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23028272458240 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23028071131776 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23027869805312 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23027668478848 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23027467152384 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23027265825920 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23027064499456 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23026863172992 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23026661846528 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23026460520064 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23026259193600 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23026057867136 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23025856540672 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23025655214208 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23025453887744 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23025252561280 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23025051234816 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23024849908352 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23024648581888 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23024447255424 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23024245928960 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23024044602496 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23023843276032 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23023641949568 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23023440623104 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23023239296640 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23035414853376 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23035408639744 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 72, m: 72)                                                                 	 0.401732  	 700       	 4.55258   	 0         	 0.217793  	 20.9032   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3600, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.276739  	 600       	 83.1114   	 0         	 4.58571   	 18.124    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3600, r: 72, r2: 72, leftOrthog: 1)        	 0.2533    	 600       	 88.4126   	 0         	 14.9319   	 5.92105   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, r1_: 72, n: 50, r2: 72)           	 0.214994  	 600       	 104.165   	 0         	 11.6897   	 8.91089   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.046674  	 100       	 57.035    	 0         	 3.17408   	 17.969    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3600, cols: 22, reductionFactor: 37, colBlockingSize: 12)                  	 0.0465502 	 700       	 53.819    	 0         	 9.586     	 5.61434   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 72)                                                                 	 0.043856  	 100       	 2.87304   	 0         	 0.177855  	 16.1538   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0390698 	 100       	 2.23958   	 0         	 0.154595  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 22, Qr2: 72)       	 0.0343093 	 700       	 0         	 0         	 75.6366   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3600, Xcols: 22, r: 22, streamingCols: 0)                   	 0.0320973 	 700       	 37.9994   	 0         	 27.6782   	 1.3729    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 72, r2: 72, leftOrthog: 1)        	 0.0273824 	 100       	 94.6595   	 0         	 16.0795   	 5.88697   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3600, r: 50, r2: 50, leftOrthog: 1)        	 0.0264627 	 100       	 68.0203   	 0         	 16.476    	 4.12844   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0259009 	 100       	 71.374    	 0         	 5.63688   	 12.662    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 22, m: 50, k: 2500)   	 0.0251329 	 800       	 175.069   	 0         	 46.1164   	 3.79625   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, r1_: 72, n: 50, r2: 50)           	 0.0245868 	 100       	 105.423   	 0         	 11.8823   	 8.87224   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, r1_: 50, n: 50, r2: 72)           	 0.0213119 	 100       	 121.622   	 0         	 16.6217   	 7.31707   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 22, m: 3600)                                                                  	 0.0141687 	 700       	 0         	 0         	 62.6056   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 22, m: 2500, k: 50)	 0.0139833 	 800       	 314.661   	 0         	 82.8875   	 3.79625   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1100, m: 50, k: 22) 	 0.0124313 	 800       	 155.736   	 0         	 41.3408   	 3.76712   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 22, m: 22)                                                                  	 0.0102273 	 909       	 1.26174   	 0         	 1.04807   	 1.20387   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3600, m: 22)                                                         	 0.0102001 	 700       	 0         	 0         	 86.9639   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 22, n: 50, r2left: 50, r2right: 22)                	 0.00982186	 700       	 0         	 0         	 90.3128   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1100, m: 22, k: 22) 	 0.00707117	 700       	 105.408   	 0         	 38.7136   	 2.72277   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 22, reductionFactor: 37, colBlockingSize: 12)                  	 0.00637462	 100       	 38.9891   	 0         	 6.96311   	 5.59937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00519041	 8         	 19.2663   	 0         	 3.11343   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00512236	 9         	 0.292832  	 0         	 0.106123  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 72, reductionFactor: 37, colBlockingSize: 12)                    	 0.00488046	 100       	 10.909    	 0         	 1.43986   	 7.57643   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 22, n: 50, r2: 22)                                                                                         	 0.00445799	 808       	 0         	 0         	 70.1791   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 22, r: 22, streamingCols: 0)                   	 0.00379238	 100       	 31.9061   	 0         	 23.2555   	 1.37198   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 22, Qr2: 50)       	 0.00340889	 100       	 0         	 0         	 84.4849   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265976	 8         	 38.6135   	 0         	 3.06795   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00200051	 8         	 0         	 0         	 7.99795   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00181033	 8         	 27.6193   	 0         	 8.88237   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 22, m: 2500)                                                                  	 0.00168431	 100       	 0         	 0         	 52.2468   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 72, leftOrthog: 1)          	 0.00139793	 100       	 25.7523   	 0         	 9.04193   	 2.8481    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 22, reductionFactor: 37, colBlockingSize: 12)                    	 0.00123153	 101       	 4.07664   	 0         	 1.03925   	 3.92267   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 22)                                                         	 0.00111136	 100       	 0         	 0         	 79.1821   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 22, n: 50, r2left: 50, r2right: 0)                 	 0.00103529	 100       	 0         	 0         	 85.0003   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000852505	 100       	 0.586507  	 0         	 2.34603   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 22)                                                                                          	 0.000850031	 201       	 0         	 0         	 4.16173   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000757031	 100       	 33.0237   	 0         	 7.9257    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 22, n: 50, r2: 1)                                                                                          	 0.000722421	 201       	 0         	 0         	 4.89687   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 22, m: 50, k: 50)     	 0.000643773	 100       	 17.0868   	 0         	 5.84057   	 2.92553   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000527164	 100       	 0         	 0         	 7.58777   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000491004	 100       	 0         	 0         	 8.14657   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 22)                 	 0.000490897	 100       	 0         	 0         	 11.7336   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 22, m: 50, k: 50)  	 0.00046979	 100       	 23.4147   	 0         	 8.00358   	 2.92553   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 22)   	 0.000468518	 100       	 23.4783   	 0         	 8.02531   	 2.92553   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.0004287 	 8         	 0         	 0         	 37.3221   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 22, n: 50, r2left: 1, r2right: 0)                  	 0.000414099	 100       	 0         	 0         	 4.25019   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000399601	 101       	 0.63188   	 0         	 10.1101   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00039758	 100       	 1.25761   	 0         	 15.0913   	 0.0833333 
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1100, cols: 22, reductionFactor: 37, colBlockingSize: 12)                  	 0.0003927 	 8         	 22.2781   	 0         	 4.02286   	 5.53789   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 22)                                                                                 	 0.000348952	 101       	 0.318382  	 0         	 5.09411   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 22)                                                           	 0.000335018	 101       	 0         	 0         	 5.30598   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000330803	 100       	 0.755737  	 0         	 12.0918   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 22, m: 22, fromLeft: 1)                	 0.000323458	 809       	 0         	 0         	 19.3685   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 22, n: 50, r: 22, r2: 22)             	 0.000303747	 8         	 28.0444   	 0         	 10.2999   	 2.72277   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 22, k: 22)   	 0.000245309	 100       	 19.7302   	 0         	 8.75304   	 2.2541    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1100, Xcols: 22, r: 22, streamingCols: 0)                   	 0.000205496	 8         	 20.7264   	 0         	 15.1491   	 1.36816   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000175164	 1         	 1.46581   	 0         	 0.228357  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 22, m: 1100)                                                                  	 7.8942e-05	 8         	 0         	 0         	 39.2389   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1100, m: 22)                                                         	 7.5303e-05	 8         	 0         	 0         	 41.1351   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.8381e-05	 1         	 3.25682   	 0         	 1.30273   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 22, r2: 22)              	 2.7751e-05	 1         	 1.74408   	 0         	 0.773738  	 2.2541    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5081e-05	 9         	 0         	 0         	 23.8711   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 22, r: 22, streamingCols: 0)                     	 1.37e-05  	 1         	 1.76642   	 0         	 1.42599   	 1.23874   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.3491e-05	 1         	 18.5309   	 0         	 4.44741   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 1.1571e-05	 1         	 0         	 0         	 3.45692   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.137e-05 	 1         	 0.439754  	 0         	 1.75901   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 22)                                                                                   	 9.2e-06   	 1         	 0.23913   	 0         	 0.956522  	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1100, m: 0, k: 22)  	 8.691e-06 	 100       	 0         	 0         	 2227.59   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 5.66e-06  	 1         	 0         	 0         	 7.06714   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 22, m: 50)                                                                    	 4.18e-06  	 1         	 0         	 0         	 4.21053   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.88488   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.88485   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.63015   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.62887   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.35918   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.484657  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.411578  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.354863  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.308543  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.261649  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.254631  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.148139  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0578922 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0382092 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0379576 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0257767 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.020225  	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0191594 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0191268 	 2         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0163705 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0153497 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0144531 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0137339 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0120336 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0117621 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0065576 	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00608151	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0055354 	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00315734	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00129405	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107936	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000873075	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00039758	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000338539	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23308309182336 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23308116420608 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23307915094144 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23307713767680 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23307512441216 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23307311114752 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23307109788288 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23306908461824 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23306707135360 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23306505808896 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23306304482432 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23306103155968 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23305901829504 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23305700503040 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23305499176576 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23305297850112 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23305096523648 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23304895197184 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23304693870720 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23304492544256 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23304291217792 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23304089891328 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23303888564864 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23303687238400 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23303485911936 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23303284585472 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23303083259008 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23302881932544 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23302680606080 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23302479279616 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23302277953152 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23302076626688 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23301875296128 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23301673969664 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23301472643200 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23301271316736 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23301069990272 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23300868663808 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23300667337344 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23300466010880 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23300264684416 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23300063357952 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23299862031488 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23299660705024 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23299459378560 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23299258052096 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23299056725632 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23298855399168 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23298654072704 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23298452746240 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23298251419776 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23298050093312 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23297848766848 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23297647440384 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23297446113920 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23297244787456 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23297043460992 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23296842134528 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23296640808064 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23296439481600 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23296238155136 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23296036828672 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23295835502208 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23308203521792 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23308196931328 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 73, m: 73)                                                                 	 0.431963  	 700       	 4.41283   	 0         	 0.208203  	 21.1949   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3650, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.286283  	 600       	 83.7348   	 0         	 4.55682   	 18.3757   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3650, r: 73, r2: 73, leftOrthog: 1)        	 0.264942  	 600       	 88.0986   	 0         	 14.6751   	 6.00329   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, r1_: 73, n: 50, r2: 73)           	 0.228463  	 600       	 102.165   	 0         	 11.3082   	 9.03465   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3650, cols: 23, reductionFactor: 37, colBlockingSize: 12)                  	 0.0500349 	 700       	 55.4863   	 0         	 9.45505   	 5.86843   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.0479337 	 100       	 57.0896   	 0         	 3.13481   	 18.2115   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 73)                                                                 	 0.0450849 	 100       	 2.83354   	 0         	 0.174781  	 16.2119   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0383693 	 100       	 2.28047   	 0         	 0.157418  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 23, Qr2: 73)       	 0.0343398 	 700       	 0         	 0         	 77.5265   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3650, Xcols: 23, r: 23, streamingCols: 0)                   	 0.0338105 	 700       	 39.9756   	 0         	 27.8529   	 1.43524   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 73, r2: 73, leftOrthog: 1)        	 0.0282538 	 100       	 94.306    	 0         	 15.8041   	 5.96717   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3650, r: 50, r2: 50, leftOrthog: 1)        	 0.0282282 	 100       	 64.6518   	 0         	 15.6581   	 4.12896   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 23, m: 50, k: 2500)   	 0.0257798 	 800       	 178.434   	 0         	 45.5922   	 3.91369   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, r1_: 73, n: 50, r2: 50)           	 0.0254924 	 100       	 104.521   	 0         	 11.6216   	 8.99369   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0250003 	 100       	 74.9719   	 0         	 5.91992   	 12.6644   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, r1_: 50, n: 50, r2: 73)           	 0.0216929 	 100       	 122.828   	 0         	 16.6912   	 7.35887   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 23, m: 3650)                                                                  	 0.0150388 	 700       	 0         	 0         	 62.521    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 23, m: 2500, k: 50)	 0.0147826 	 800       	 311.177   	 0         	 79.5098   	 3.91369   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1150, m: 50, k: 23) 	 0.0118159 	 800       	 179.081   	 0         	 46.094    	 3.88514   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 23, m: 23)                                                                  	 0.0112248 	 909       	 1.31368   	 0         	 1.04304   	 1.25947   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 23, n: 50, r2left: 50, r2right: 23)                	 0.011153  	 700       	 0         	 0         	 84.304    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3650, m: 23)                                                         	 0.00985782	 700       	 0         	 0         	 95.3801   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1150, m: 23, k: 23) 	 0.00789115	 700       	 107.93    	 0         	 37.9162   	 2.84653   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 23, reductionFactor: 37, colBlockingSize: 12)                  	 0.00692972	 100       	 39.2005   	 0         	 6.69915   	 5.85157   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00505323	 8         	 19.7893   	 0         	 3.19795   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 73, reductionFactor: 37, colBlockingSize: 12)                    	 0.00501983	 100       	 10.9028   	 0         	 1.43096   	 7.6192    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00489039	 9         	 0.306723  	 0         	 0.111157  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 23, n: 50, r2: 23)                                                                                         	 0.00474282	 808       	 0         	 0         	 72.0976   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 23, r: 23, streamingCols: 0)                   	 0.00395062	 100       	 33.4757   	 0         	 23.341    	 1.4342    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 23, Qr2: 50)       	 0.00363345	 100       	 0         	 0         	 80.3644   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0026509 	 8         	 38.7426   	 0         	 3.0782    	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00189547	 8         	 0         	 0         	 8.44118   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00164785	 8         	 30.3425   	 0         	 9.75815   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 23, m: 2500)                                                                  	 0.00158652	 100       	 0         	 0         	 57.9886   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 23, reductionFactor: 37, colBlockingSize: 12)                    	 0.00155773	 101       	 3.52264   	 0         	 0.870905  	 4.0448    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 73, leftOrthog: 1)          	 0.00145848	 100       	 25.026    	 0         	 8.7488    	 2.8605    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 23)                                                         	 0.00134813	 100       	 0         	 0         	 68.2425   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 23, n: 50, r2left: 50, r2right: 0)                 	 0.00130462	 100       	 0         	 0         	 70.5186   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 23)                                                                                          	 0.000844535	 201       	 0         	 0         	 4.37921   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000790921	 100       	 0.632174  	 0         	 2.5287    	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000790517	 100       	 31.6249   	 0         	 7.58997   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 23, n: 50, r2: 1)                                                                                          	 0.000746743	 201       	 0         	 0         	 4.95271   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 23, m: 50, k: 50)     	 0.000662345	 100       	 17.3626   	 0         	 5.79758   	 2.99479   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000510523	 100       	 0         	 0         	 7.8351    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 23)                 	 0.000509822	 100       	 0         	 0         	 11.455    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 23)   	 0.000505405	 100       	 22.754    	 0         	 7.59787   	 2.99479   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000458431	 8         	 0         	 0         	 34.9017   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000453903	 100       	 0         	 0         	 8.81246   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 23, m: 50, k: 50)  	 0.000434483	 100       	 26.4682   	 0         	 8.83809   	 2.99479   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1150, cols: 23, reductionFactor: 37, colBlockingSize: 12)                  	 0.000427711	 8         	 23.3725   	 0         	 4.03697   	 5.78961   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 23, n: 50, r2left: 1, r2right: 0)                  	 0.000427401	 100       	 0         	 0         	 4.30509   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000394052	 100       	 1.26887   	 0         	 15.2264   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000391985	 101       	 0.644157  	 0         	 10.3065   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 23, m: 23, fromLeft: 1)                	 0.000350612	 809       	 0         	 0         	 19.5298   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 23)                                                                                 	 0.000344666	 101       	 0.336993  	 0         	 5.39189   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 23, n: 50, r: 23, r2: 23)             	 0.000340769	 8         	 28.5636   	 0         	 10.0345   	 2.84653   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000334718	 100       	 0.746897  	 0         	 11.9504   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 23)                                                           	 0.000331603	 101       	 0         	 0         	 5.60429   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000264107	 1         	 0.972169  	 0         	 0.151454  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1150, Xcols: 23, r: 23, streamingCols: 0)                   	 0.000221004	 8         	 22.0213   	 0         	 15.3958   	 1.43035   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 23, k: 23)   	 0.000209873	 100       	 25.2057   	 0         	 10.7837   	 2.3374    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 23, m: 1150)                                                                  	 8.3232e-05	 8         	 0         	 0         	 40.6767   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1150, m: 23)                                                         	 7.0952e-05	 8         	 0         	 0         	 47.7168   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4201e-05	 1         	 3.65486   	 0         	 1.46195   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 23, r2: 23)              	 2.4041e-05	 1         	 2.20041   	 0         	 0.941392  	 2.3374    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 23, r: 23, streamingCols: 0)                     	 1.6551e-05	 1         	 1.59809   	 0         	 1.23956   	 1.28924   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.4901e-05	 9         	 0         	 0         	 24.1595   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.332e-05 	 1         	 18.7688   	 0         	 4.5045    	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.012e-05 	 1         	 0.494071  	 0         	 1.97628   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 9.361e-06 	 1         	 0         	 0         	 4.27305   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 23)                                                                                   	 8.47e-06  	 1         	 0.271547  	 0         	 1.08619   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 5.24e-06  	 1         	 0         	 0         	 7.63359   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1150, m: 0, k: 23)  	 5.17e-06  	 100       	 0         	 0         	 4092.84   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 23, m: 50)                                                                    	 3.85e-06  	 1         	 0         	 0         	 4.77922   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.96178   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.96173   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.69677   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.69554   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.41131   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.515417  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.426102  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.364701  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.322882  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.276439  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.264862  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.155741  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0623797 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0396807 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0384271 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0264422 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0204275 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0186978 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0186655 	 2         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.017176  	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0161152 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0152171 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0135133 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0133948 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0117547 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00684462	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00543136	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00522309	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.003082  	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.001559  	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107137	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000809511	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000394052	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000365513	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22973816809344 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22973578733568 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22973377407104 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22973176080640 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22972974754176 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22972773427712 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22972572101248 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22972370774784 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22972169448320 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22971968121856 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22971766795392 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22971565468928 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22971364142464 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22971162816000 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22970961489536 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22970760163072 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22970558836608 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22970357510144 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22970156183680 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22969954857216 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22969753530752 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22969552204288 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22969350877824 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22969149551360 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22968948224896 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22968746898432 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22968545571968 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22968344245504 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22968142919040 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22967941592576 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22967740266112 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22967538939648 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22967337609088 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22967136282624 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22966934956160 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22966733629696 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22966532303232 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22966330976768 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22966129650304 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22965928323840 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22965726997376 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22965525670912 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22965324344448 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22965123017984 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22964921691520 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22964720365056 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22964519038592 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22964317712128 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22964116385664 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22963915059200 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22963713732736 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22963512406272 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22963311079808 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22963109753344 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22962908426880 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22962707100416 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22962505773952 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22962304447488 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22962103121024 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22961901794560 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22961700468096 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22961499141632 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22961297815168 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22973711148800 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22973704558336 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 74, m: 74)                                                                 	 0.44086   	 700       	 4.50392   	 0         	 0.209616  	 21.4865   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3700, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.291901  	 600       	 85.5447   	 0         	 4.5924    	 18.6275   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3700, r: 74, r2: 74, leftOrthog: 1)        	 0.271591  	 600       	 89.5223   	 0         	 14.7107   	 6.08553   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, r1_: 74, n: 50, r2: 74)           	 0.229459  	 600       	 105.96    	 0         	 11.5696   	 9.15842   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3700, cols: 24, reductionFactor: 37, colBlockingSize: 12)                  	 0.0531939 	 700       	 57.6067   	 0         	 9.40909   	 6.12245   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.0496799 	 100       	 56.6024   	 0         	 3.06725   	 18.4538   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 74)                                                                 	 0.0472095 	 100       	 2.74309   	 0         	 0.16861   	 16.2688   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0395122 	 100       	 2.21451   	 0         	 0.152864  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 24, Qr2: 74)       	 0.0351913 	 700       	 0         	 0         	 77.5919   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3700, Xcols: 24, r: 24, streamingCols: 0)                   	 0.0340044 	 700       	 43.872    	 0         	 29.2954   	 1.49757   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 74, r2: 74, leftOrthog: 1)        	 0.0304569 	 100       	 89.8975   	 0         	 14.8656   	 6.04733   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3700, r: 50, r2: 50, leftOrthog: 1)        	 0.0299864 	 100       	 61.6946   	 0         	 14.9401   	 4.12946   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 24, m: 50, k: 2500)   	 0.0261549 	 800       	 183.522   	 0         	 45.5625   	 4.02793   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, r1_: 74, n: 50, r2: 50)           	 0.0251614 	 100       	 108.818   	 0         	 11.9382   	 9.1151    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0250722 	 100       	 75.7813   	 0         	 5.98273   	 12.6667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, r1_: 50, n: 50, r2: 74)           	 0.0238026 	 100       	 115.029   	 0         	 15.5445   	 7.4       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 24, m: 3700)                                                                  	 0.0165901 	 700       	 0         	 0         	 59.9488   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1200, m: 50, k: 24) 	 0.0149608 	 800       	 154.002   	 0         	 38.5006   	 4         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 24, m: 2500, k: 50)	 0.0134583 	 800       	 356.657   	 0         	 88.5461   	 4.02793   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3700, m: 24)                                                         	 0.0111904 	 700       	 0         	 0         	 88.8762   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 24, m: 24)                                                                  	 0.0110466 	 909       	 1.51673   	 0         	 1.15335   	 1.31507   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 24, n: 50, r2left: 50, r2right: 24)                	 0.0100898 	 700       	 0         	 0         	 98.571    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1200, m: 24, k: 24) 	 0.00856938	 700       	 112.923   	 0         	 38.0174   	 2.9703    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 24, reductionFactor: 37, colBlockingSize: 12)                  	 0.00761402	 100       	 38.8473   	 0         	 6.36468   	 6.10357   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 74, reductionFactor: 37, colBlockingSize: 12)                    	 0.00626873	 100       	 8.97151   	 0         	 1.17102   	 7.66129   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00522801	 8         	 19.1278   	 0         	 3.09104   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00491079	 9         	 0.305449  	 0         	 0.110695  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 24, n: 50, r2: 24)                                                                                         	 0.00479651	 808       	 0         	 0         	 77.6244   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 24, r: 24, streamingCols: 0)                   	 0.00399097	 100       	 36.0814   	 0         	 24.112    	 1.49641   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 24, Qr2: 50)       	 0.00382292	 100       	 0         	 0         	 77.4278   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00282819	 8         	 36.3139   	 0         	 2.88523   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00185686	 8         	 0         	 0         	 8.61671   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 24, reductionFactor: 37, colBlockingSize: 12)                    	 0.0017446 	 101       	 3.42476   	 0         	 0.822543  	 4.16362   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00173011	 8         	 28.9      	 0         	 9.29423   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 24, m: 2500)                                                                  	 0.00158978	 100       	 0         	 0         	 60.3856   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 74, leftOrthog: 1)          	 0.00155786	 100       	 23.7505   	 0         	 8.26773   	 2.87267   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 24, n: 50, r2left: 50, r2right: 0)                 	 0.0013677 	 100       	 0         	 0         	 70.1907   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 24)                                                         	 0.00129867	 100       	 0         	 0         	 73.9217   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00091087	 100       	 0.548926  	 0         	 2.1957    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 24)                                                                                          	 0.000813584	 201       	 0         	 0         	 4.74346   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00078816	 100       	 31.7194   	 0         	 7.61267   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 24, n: 50, r2: 1)                                                                                          	 0.00072528	 201       	 0         	 0         	 5.32098   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 24, m: 50, k: 50)     	 0.000606121	 100       	 19.798    	 0         	 6.46736   	 3.06122   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1200, cols: 24, reductionFactor: 37, colBlockingSize: 12)                  	 0.000547444	 8         	 20.7475   	 0         	 3.43426   	 6.04134   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 24)                 	 0.000537046	 100       	 0         	 0         	 11.0233   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 24)   	 0.000515238	 100       	 23.2902   	 0         	 7.60813   	 3.06122   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000502071	 100       	 0         	 0         	 7.967     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000480816	 100       	 0         	 0         	 8.31919   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 24, n: 50, r2left: 1, r2right: 0)                  	 0.000441558	 100       	 0         	 0         	 4.34824   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000421327	 100       	 1.18673   	 0         	 14.2407   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000415997	 101       	 0.606976  	 0         	 9.71161   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000413082	 8         	 0         	 0         	 38.7332   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 24, m: 50, k: 50)  	 0.000376959	 100       	 31.8337   	 0         	 10.399    	 3.06122   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 24, m: 24, fromLeft: 1)                	 0.000373637	 809       	 0         	 0         	 19.9545   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 24, n: 50, r: 24, r2: 24)             	 0.00037122	 8         	 29.7915   	 0         	 10.0298   	 2.9703    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000348947	 100       	 0.716441  	 0         	 11.4631   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 24)                                                           	 0.0003449 	 101       	 0         	 0         	 5.6225    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 24)                                                                                 	 0.000341887	 101       	 0.354503  	 0         	 5.67205   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 24, k: 24)   	 0.000235917	 100       	 24.4154   	 0         	 10.0917   	 2.41935   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1200, Xcols: 24, r: 24, streamingCols: 0)                   	 0.000233856	 8         	 23.6453   	 0         	 15.8424   	 1.49254   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000178975	 1         	 1.4346    	 0         	 0.223495  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 24, m: 1200)                                                                  	 8.8921e-05	 8         	 0         	 0         	 41.457    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1200, m: 24)                                                         	 8.8894e-05	 8         	 0         	 0         	 41.4696   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6221e-05	 1         	 3.45104   	 0         	 1.38041   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 24, r2: 24)              	 2.5831e-05	 1         	 2.22988   	 0         	 0.921683  	 2.41935   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 24, r: 24, streamingCols: 0)                     	 1.5671e-05	 1         	 1.83779   	 0         	 1.37222   	 1.33929   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.564e-05 	 9         	 0         	 0         	 23.0179   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.554e-05 	 1         	 16.0875   	 0         	 3.861     	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 1.152e-05 	 1         	 0         	 0         	 3.47222   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.084e-05 	 1         	 0         	 0         	 3.69004   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.068e-05 	 1         	 0.468165  	 0         	 1.87266   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 24)                                                                                   	 9.09e-06  	 1         	 0.264026  	 0         	 1.05611   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1200, m: 0, k: 24)  	 4.85e-06  	 100       	 0         	 0         	 4750.52   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 24, m: 50)                                                                    	 3.75e-06  	 1         	 0         	 0         	 5.12      	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.02765   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.02762   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.75091   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.74955   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.4613    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.527582  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.439029  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.373436  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.333592  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.279212  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.276642  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.16373   	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0666577 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0400112 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0394951 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.026761  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0242862 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0191841 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0191513 	 2         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0186965 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0159573 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0147912 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0138353 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0124361 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0120066 	 20        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00707172	 1818      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00683744	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0056406 	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00354386	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00190432	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110683	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00093064	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000421327	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000389277	 818       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22960707340160 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22960492505088 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22960291178624 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22960089852160 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22959888525696 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22959687199232 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22959485872768 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22959284546304 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22959083219840 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22958881893376 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22958680566912 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22958479240448 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22958277913984 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22958076587520 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22957875261056 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22957673934592 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22957472608128 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22957271281664 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22957069955200 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22956868628736 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22956667302272 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22956465975808 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22956264649344 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22956063322880 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22955861996416 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22955660669952 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22955459343488 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22955258017024 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22955056690560 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22954855364096 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22954654037632 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22954452711168 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22954251380608 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22954050054144 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22953848727680 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22953647401216 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22953446074752 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22953244748288 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22953043421824 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22952842095360 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22952640768896 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22952439442432 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22952238115968 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22952036789504 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22951835463040 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22951634136576 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22951432810112 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22951231483648 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22951030157184 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22950828830720 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22950627504256 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22950426177792 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22950224851328 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22950023524864 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22949822198400 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22949620871936 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22949419545472 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22949218219008 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22949016892544 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22948815566080 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22948614239616 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22948412913152 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22948211586688 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22960601679616 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22960595089152 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 75, m: 75)                                                                 	 0.443692  	 700       	 4.65906   	 0         	 0.213932  	 21.7782   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3750, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.295675  	 600       	 87.923    	 0         	 4.65714   	 18.8792   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3750, r: 75, r2: 75, leftOrthog: 1)        	 0.251201  	 600       	 100.766   	 0         	 16.3375   	 6.16776   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, r1_: 75, n: 50, r2: 75)           	 0.231981  	 600       	 109.115   	 0         	 11.7553   	 9.28218   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3750, cols: 25, reductionFactor: 37, colBlockingSize: 12)                  	 0.0568179 	 700       	 59.3111   	 0         	 9.30165   	 6.37641   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.0500322 	 100       	 57.7331   	 0         	 3.08801   	 18.6959   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 75)                                                                 	 0.04617   	 100       	 2.84276   	 0         	 0.174139  	 16.3246   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0387413 	 100       	 2.25857   	 0         	 0.155906  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 25, Qr2: 75)       	 0.0371038 	 700       	 0         	 0         	 75.464    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3750, Xcols: 25, r: 25, streamingCols: 0)                   	 0.0353335 	 700       	 46.4325   	 0         	 29.7663   	 1.5599    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 75, r2: 75, leftOrthog: 1)        	 0.029223  	 100       	 96.2426   	 0         	 15.7068   	 6.12745   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3750, r: 50, r2: 50, leftOrthog: 1)        	 0.0285071 	 100       	 65.7731   	 0         	 15.9259   	 4.12996   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 25, m: 50, k: 2500)   	 0.0277563 	 800       	 180.139   	 0         	 43.5217   	 4.13907   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, r1_: 75, n: 50, r2: 50)           	 0.0252148 	 100       	 111.542   	 0         	 12.0762   	 9.23645   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0249791 	 100       	 77.0914   	 0         	 6.08508   	 12.6689   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, r1_: 50, n: 50, r2: 75)           	 0.0219359 	 100       	 128.215   	 0         	 17.232    	 7.44048   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 25, m: 3750)                                                                  	 0.0161422 	 700       	 0         	 0         	 65.0468   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 25, m: 2500, k: 50)	 0.0156574 	 800       	 319.337   	 0         	 77.1518   	 4.13907   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1250, m: 50, k: 25) 	 0.0129923 	 800       	 192.422   	 0         	 46.7969   	 4.11184   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 25, m: 25)                                                                  	 0.0128585 	 909       	 1.47266   	 0         	 1.07452   	 1.37053   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 25, n: 50, r2left: 50, r2right: 25)                	 0.0115723 	 700       	 0         	 0         	 90.7341   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3750, m: 25)                                                         	 0.0114845 	 700       	 0         	 0         	 91.4278   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1250, m: 25, k: 25) 	 0.00839187	 700       	 130.334   	 0         	 42.1241   	 3.09406   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 25, reductionFactor: 37, colBlockingSize: 12)                  	 0.0082182 	 100       	 39.0531   	 0         	 6.1449    	 6.35537   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 75, reductionFactor: 37, colBlockingSize: 12)                    	 0.00530234	 100       	 10.8952   	 0         	 1.41447   	 7.7027    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00505449	 8         	 19.7844   	 0         	 3.19716   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00503947	 9         	 0.297649  	 0         	 0.107868  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 25, n: 50, r2: 25)                                                                                         	 0.00495204	 808       	 0         	 0         	 81.5826   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 25, r: 25, streamingCols: 0)                   	 0.00408894	 100       	 38.2129   	 0         	 24.5174   	 1.5586    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 25, Qr2: 50)       	 0.00362801	 100       	 0         	 0         	 82.6899   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00267976	 8         	 38.3254   	 0         	 3.04505   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 25, m: 2500)                                                                  	 0.00213423	 100       	 0         	 0         	 46.8553   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00195781	 8         	 25.5387   	 0         	 8.21326   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 25)                                                         	 0.0019091 	 100       	 0         	 0         	 52.3808   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 25, reductionFactor: 37, colBlockingSize: 12)                    	 0.00155899	 101       	 4.15853   	 0         	 0.971783  	 4.27928   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 75, leftOrthog: 1)          	 0.00141393	 100       	 26.5217   	 0         	 9.19421   	 2.88462   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 25, n: 50, r2left: 50, r2right: 0)                 	 0.00110144	 100       	 0         	 0         	 90.7899   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00109906	 8         	 0         	 0         	 14.5579   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000881184	 100       	 0.567418  	 0         	 2.26967   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000817451	 100       	 30.5829   	 0         	 7.33989   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 25)                                                                                          	 0.000811895	 201       	 0         	 0         	 4.95138   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 25, m: 50, k: 50)     	 0.00072961	 100       	 17.1324   	 0         	 5.48238   	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 25, n: 50, r2: 1)                                                                                          	 0.000728747	 201       	 0         	 0         	 5.51632   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000557003	 8         	 0         	 0         	 28.7252   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 25, m: 50, k: 50)  	 0.000546174	 100       	 22.8865   	 0         	 7.32367   	 3.125     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1250, cols: 25, reductionFactor: 37, colBlockingSize: 12)                  	 0.000541385	 8         	 23.713    	 0         	 3.76811   	 6.29306   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 25)   	 0.000504774	 100       	 24.7636   	 0         	 7.92434   	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000498787	 100       	 0         	 0         	 8.01946   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 25)                 	 0.000494376	 100       	 0         	 0         	 12.1365   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000455964	 100       	 0         	 0         	 8.77262   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 25, n: 50, r2left: 1, r2right: 0)                  	 0.000449521	 100       	 0         	 0         	 4.44918   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000403441	 101       	 0.625866  	 0         	 10.0139   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 25, m: 25, fromLeft: 1)                	 0.000385911	 809       	 0         	 0         	 20.9634   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000385573	 100       	 1.29677   	 0         	 15.5613   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 25, n: 50, r: 25, r2: 25)             	 0.000379741	 8         	 32.9172   	 0         	 10.6388   	 3.09406   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 25)                                                                                 	 0.000359197	 101       	 0.351478  	 0         	 5.62365   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000327698	 100       	 0.762898  	 0         	 12.2064   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 25)                                                           	 0.000319997	 101       	 0         	 0         	 6.31256   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1250, Xcols: 25, r: 25, streamingCols: 0)                   	 0.000255757	 8         	 24.4373   	 0         	 15.718    	 1.55473   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 25, k: 25)   	 0.000230643	 100       	 27.0982   	 0         	 10.8393   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000192125	 1         	 1.3364    	 0         	 0.208198  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 25, m: 1250)                                                                  	 9.0743e-05	 8         	 0         	 0         	 44.0805   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1250, m: 25)                                                         	 8.5722e-05	 8         	 0         	 0         	 46.6625   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.8751e-05	 1         	 3.22572   	 0         	 1.29029   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 25, r2: 25)              	 2.3901e-05	 1         	 2.61495   	 0         	 1.04598   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5671e-05	 9         	 0         	 0         	 22.9724   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.4551e-05	 1         	 17.1809   	 0         	 4.12343   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 25, r: 25, streamingCols: 0)                     	 1.3751e-05	 1         	 2.27256   	 0         	 1.63624   	 1.38889   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.88e-06  	 1         	 0.506073  	 0         	 2.02429   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 25)                                                                                   	 8.94e-06  	 1         	 0.279642  	 0         	 1.11857   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 8.54e-06  	 1         	 0         	 0         	 4.68384   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 7.961e-06 	 1         	 0         	 0         	 5.02449   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1250, m: 0, k: 25)  	 4.72e-06  	 100       	 0         	 0         	 5296.61   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 25, m: 50)                                                                    	 4.6e-06   	 1         	 0         	 0         	 4.34783   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.00947   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.00944   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.72195   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.72065   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.43599   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.528603  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.445997  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.376615  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.310345  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.28742   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.279949  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.171477  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0705107 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0416885 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0411878 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0284859 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0221243 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0189368 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0186556 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0186245 	 2         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.017898  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0162036 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0149069 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0136176 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.012594  	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00699147	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00547268	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00462255	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00286075	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00149357	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109034	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000900004	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000401582	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000385573	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23271442618240 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23271206545408 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23271005218944 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23270803892480 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23270602566016 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23270401239552 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23270199913088 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23269998586624 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23269797260160 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23269595933696 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23269394607232 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23269193280768 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23268991954304 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23268790627840 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23268589301376 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23268387974912 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23268186648448 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23267985321984 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23267783995520 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23267582669056 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23267381342592 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23267180016128 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23266978689664 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23266777363200 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23266576036736 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23266374710272 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23266173383808 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23265972057344 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23265770730880 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23265569404416 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23265368077952 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23265166751488 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23264965420928 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23264764094464 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23264562768000 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23264361441536 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23264160115072 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23263958788608 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23263757462144 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23263556135680 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23263354809216 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23263153482752 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23262952156288 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23262750829824 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23262549503360 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23262348176896 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23262146850432 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23261945523968 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23261744197504 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23261542871040 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23261341544576 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23261140218112 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23260938891648 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23260737565184 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23260536238720 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23260334912256 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23260133585792 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23259932259328 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23259730932864 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23259529606400 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23259328279936 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23259126953472 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23258925627008 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23271336957696 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23271330367232 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 76, m: 76)                                                                 	 0.445017  	 700       	 4.83348   	 0         	 0.219008  	 22.0699   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3800, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.305475  	 600       	 88.5519   	 0         	 4.62874   	 19.1309   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3800, r: 76, r2: 76, leftOrthog: 1)        	 0.250093  	 600       	 105.315   	 0         	 16.8504   	 6.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, r1_: 76, n: 50, r2: 76)           	 0.236197  	 600       	 111.511   	 0         	 11.8554   	 9.40594   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3800, cols: 26, reductionFactor: 37, colBlockingSize: 12)                  	 0.0599062 	 700       	 61.655    	 0         	 9.29896   	 6.63031   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.0511296 	 100       	 58.0105   	 0         	 3.06321   	 18.9378   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 76)                                                                 	 0.0464882 	 100       	 2.86094   	 0         	 0.174668  	 16.3793   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3800, Xcols: 26, r: 26, streamingCols: 0)                   	 0.0380242 	 700       	 47.2898   	 0         	 29.1512   	 1.62223   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.038021  	 100       	 2.30136   	 0         	 0.15886   	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 26, Qr2: 76)       	 0.0375634 	 700       	 0         	 0         	 76.4191   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3800, r: 50, r2: 50, leftOrthog: 1)        	 0.027095  	 100       	 70.1236   	 0         	 16.9773   	 4.13043   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 26, m: 50, k: 2500)   	 0.026912  	 800       	 193.222   	 0         	 45.4934   	 4.24726   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 76, r2: 76, leftOrthog: 1)        	 0.0268974 	 100       	 107.371   	 0         	 17.2969   	 6.20753   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0267971 	 100       	 72.8196   	 0         	 5.7469    	 12.6711   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, r1_: 76, n: 50, r2: 50)           	 0.0249658 	 100       	 115.678   	 0         	 12.3617   	 9.35776   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, r1_: 50, n: 50, r2: 76)           	 0.0241832 	 100       	 119.422   	 0         	 15.9648   	 7.48031   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 26, m: 3800)                                                                  	 0.0190343 	 700       	 0         	 0         	 58.135    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1300, m: 50, k: 26) 	 0.0166245 	 800       	 162.651   	 0         	 38.5359   	 4.22078   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 26, m: 2500, k: 50)	 0.0158673 	 800       	 327.719   	 0         	 77.1602   	 4.24726   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 26, m: 26)                                                                  	 0.0135769 	 909       	 1.56896   	 0         	 1.10016   	 1.42612   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 26, n: 50, r2left: 50, r2right: 26)                	 0.0126982 	 700       	 0         	 0         	 87.1429   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3800, m: 26)                                                         	 0.0119921 	 700       	 0         	 0         	 92.2745   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1300, m: 26, k: 26) 	 0.00898921	 700       	 136.866   	 0         	 42.5339   	 3.21782   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 26, reductionFactor: 37, colBlockingSize: 12)                  	 0.00870982	 100       	 39.8556   	 0         	 6.03236   	 6.60696   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 76, reductionFactor: 37, colBlockingSize: 12)                    	 0.00535052	 100       	 11.087    	 0         	 1.43179   	 7.74346   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 26, n: 50, r2: 26)                                                                                         	 0.00529951	 808       	 0         	 0         	 82.4541   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00513439	 8         	 19.4765   	 0         	 3.1474    	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0050723 	 9         	 0.295722  	 0         	 0.10717   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 26, r: 26, streamingCols: 0)                   	 0.0042549 	 100       	 39.7189   	 0         	 24.506    	 1.62079   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 26, Qr2: 50)       	 0.0038186 	 100       	 0         	 0         	 79.6103   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00271434	 8         	 37.8371   	 0         	 3.00626   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 26, m: 2500)                                                                  	 0.00178294	 100       	 0         	 0         	 58.3308   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00171833	 8         	 29.0981   	 0         	 9.35795   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 26)                                                         	 0.00163847	 100       	 0         	 0         	 63.4739   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 26, n: 50, r2left: 50, r2right: 0)                 	 0.00162239	 100       	 0         	 0         	 64.1028   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 26, reductionFactor: 37, colBlockingSize: 12)                    	 0.00154103	 101       	 4.55028   	 0         	 1.03606   	 4.39189   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 76, leftOrthog: 1)          	 0.00142596	 100       	 26.6486   	 0         	 9.20079   	 2.89634   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 26)                                                                                          	 0.000819403	 201       	 0         	 0         	 5.10225   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000762597	 100       	 32.7827   	 0         	 7.86785   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000757931	 100       	 0.659691  	 0         	 2.63876   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 26, m: 50, k: 50)     	 0.000753577	 100       	 17.2511   	 0         	 5.41418   	 3.18627   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 26, n: 50, r2: 1)                                                                                          	 0.0007368 	 201       	 0         	 0         	 5.67427   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000672478	 8         	 0         	 0         	 23.7926   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1300, cols: 26, reductionFactor: 37, colBlockingSize: 12)                  	 0.000623406	 8         	 23.1644   	 0         	 3.53937   	 6.54478   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 26)   	 0.000519805	 100       	 25.0094   	 0         	 7.8491    	 3.18627   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000508935	 100       	 0         	 0         	 7.85955   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 26, m: 50, k: 50)  	 0.000477426	 100       	 27.2294   	 0         	 8.54583   	 3.18627   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 26)                 	 0.000471852	 100       	 0         	 0         	 12.8854   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000455636	 100       	 0         	 0         	 8.77894   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000435751	 8         	 0         	 0         	 36.7182   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 26, n: 50, r2left: 1, r2right: 0)                  	 0.000424562	 100       	 0         	 0         	 4.89917   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 26, n: 50, r: 26, r2: 26)             	 0.000423671	 8         	 33.188    	 0         	 10.3138   	 3.21782   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 26, m: 26, fromLeft: 1)                	 0.000417425	 809       	 0         	 0         	 20.9622   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000417304	 100       	 1.19817   	 0         	 14.378    	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000378968	 101       	 0.666283  	 0         	 10.6605   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 26)                                                           	 0.000357478	 101       	 0         	 0         	 5.87673   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 26, k: 26)   	 0.000343639	 100       	 19.6718   	 0         	 7.62661   	 2.57937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 26)                                                                                 	 0.000339087	 101       	 0.387216  	 0         	 6.19546   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000337808	 1         	 0.760067  	 0         	 0.11841   	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000318887	 100       	 0.783977  	 0         	 12.5436   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1300, Xcols: 26, r: 26, streamingCols: 0)                   	 0.000270636	 8         	 25.9773   	 0         	 16.066    	 1.61692   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 26, m: 1300)                                                                  	 9.3631e-05	 8         	 0         	 0         	 46.2069   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1300, m: 26)                                                         	 7.8623e-05	 8         	 0         	 0         	 55.0272   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6281e-05	 1         	 3.44533   	 0         	 1.37813   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 26, r2: 26)              	 2.5991e-05	 1         	 2.6009    	 0         	 1.00835   	 2.57937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 26, r: 26, streamingCols: 0)                     	 1.5921e-05	 1         	 2.12298   	 0         	 1.47629   	 1.43805   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.54e-05  	 9         	 0         	 0         	 23.3766   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.2021e-05	 1         	 20.7969   	 0         	 4.99127   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 1.12e-05  	 1         	 0         	 0         	 3.57143   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.04e-06  	 1         	 0.553097  	 0         	 2.21239   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 8.901e-06 	 1         	 0         	 0         	 4.49388   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 26)                                                                                   	 7.34e-06  	 1         	 0.354223  	 0         	 1.41689   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1300, m: 0, k: 26)  	 5.38e-06  	 100       	 0         	 0         	 5026.02   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 26, m: 50)                                                                    	 4.47e-06  	 1         	 0         	 0         	 4.65324   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.04896   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.04891   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.74512   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.74394   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.45181   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.529526  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.462585  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.389278  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.305511  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.303722  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.286109  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.181049  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0744127 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0443203 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0418376 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0276656 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0264825 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.02136   	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0186492 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0181771 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0181485 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0163447 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.015217  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0147503 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0128842 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00736465	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00559608	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00547888	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00284523	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00133989	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00103694	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000774311	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000432825	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000417304	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22375637841792 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22375437428736 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22375236102272 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22375034775808 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22374833449344 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22374632122880 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22374430796416 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22374229469952 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22374028143488 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22373826817024 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22373625490560 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22373424164096 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22373222837632 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22373021511168 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22372820184704 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22372618858240 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22372417531776 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22372216205312 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22372014878848 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22371813552384 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22371612225920 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22371410899456 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22371209572992 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22371008246528 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22370806920064 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22370605593600 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22370404267136 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22370202940672 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22370001614208 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22369800287744 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22369598961280 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22369397634816 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22369196304256 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22368994977792 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22368793651328 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22368592324864 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22368390998400 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22368189671936 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22367988345472 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22367787019008 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22367585692544 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22367384366080 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22367183039616 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22366981713152 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22366780386688 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22366579060224 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22366377733760 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22366176407296 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22365975080832 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22365773754368 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22365572427904 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22365371101440 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22365169774976 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22364968448512 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22364767122048 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22364565795584 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22364364469120 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22364163142656 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22363961816192 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22363760489728 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22363559163264 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22363357836800 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22363156510336 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22375532181248 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22375525590784 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 77, m: 77)                                                                 	 0.46628   	 700       	 4.79757   	 0         	 0.214546  	 22.3615   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3850, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.309308  	 600       	 90.9523   	 0         	 4.69247   	 19.3826   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3850, r: 77, r2: 77, leftOrthog: 1)        	 0.292092  	 600       	 93.7786   	 0         	 14.8097   	 6.33224   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, r1_: 77, n: 50, r2: 77)           	 0.247606  	 600       	 110.627   	 0         	 11.6087   	 9.5297    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3850, cols: 27, reductionFactor: 37, colBlockingSize: 12)                  	 0.0642513 	 700       	 62.8082   	 0         	 9.12359   	 6.88415   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.0521865 	 100       	 58.3412   	 0         	 3.04184   	 19.1795   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 77)                                                                 	 0.046922  	 100       	 2.87179   	 0         	 0.174758  	 16.4329   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3850, Xcols: 27, r: 27, streamingCols: 0)                   	 0.0402478 	 700       	 48.8139   	 0         	 28.9775   	 1.68455   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.038727  	 100       	 2.25941   	 0         	 0.155964  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 27, Qr2: 77)       	 0.0378189 	 700       	 0         	 0         	 77.7981   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 77, r2: 77, leftOrthog: 1)        	 0.0300873 	 100       	 98.5301   	 0         	 15.6706   	 6.28756   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3850, r: 50, r2: 50, leftOrthog: 1)        	 0.0289576 	 100       	 66.4766   	 0         	 16.0925   	 4.1309    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 27, m: 50, k: 2500)   	 0.0275457 	 800       	 196.038   	 0         	 45.0393   	 4.35259   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, r1_: 77, n: 50, r2: 50)           	 0.026281  	 100       	 112.8     	 0         	 11.9      	 9.47902   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0250923 	 100       	 78.7901   	 0         	 6.21704   	 12.6733   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, r1_: 50, n: 50, r2: 77)           	 0.0241411 	 100       	 122.799   	 0         	 16.3306   	 7.51953   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 27, m: 3850)                                                                  	 0.0193532 	 700       	 0         	 0         	 60.1575   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 27, m: 2500, k: 50)	 0.0152855 	 800       	 353.275   	 0         	 81.1642   	 4.35259   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 27, m: 27)                                                                  	 0.0144217 	 909       	 1.65416   	 0         	 1.11639   	 1.48171   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1350, m: 50, k: 27) 	 0.0143187 	 800       	 203.649   	 0         	 47.0656   	 4.32692   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 27, n: 50, r2left: 50, r2right: 27)                	 0.0140001 	 700       	 0         	 0         	 83.1595   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3850, m: 27)                                                         	 0.0139912 	 700       	 0         	 0         	 83.2121   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1350, m: 27, k: 27) 	 0.00917664	 700       	 150.143   	 0         	 44.9317   	 3.34158   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 27, reductionFactor: 37, colBlockingSize: 12)                  	 0.00900599	 100       	 41.5669   	 0         	 6.06076   	 6.85836   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 77, reductionFactor: 37, colBlockingSize: 12)                    	 0.00818893	 100       	 7.43594   	 0         	 0.955338  	 7.78357   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 27, n: 50, r2: 27)                                                                                         	 0.00548342	 808       	 0         	 0         	 85.9364   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00531342	 8         	 18.8203   	 0         	 3.04136   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00518501	 9         	 0.289294  	 0         	 0.104841  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 27, r: 27, streamingCols: 0)                   	 0.00447818	 100       	 40.6973   	 0         	 24.182    	 1.68296   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 27, Qr2: 50)       	 0.00375191	 100       	 0         	 0         	 82.0916   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00285653	 8         	 35.9536   	 0         	 2.85661   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 27, m: 2500)                                                                  	 0.00234945	 100       	 0         	 0         	 45.9682   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 27)                                                         	 0.00219939	 100       	 0         	 0         	 49.1045   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00203921	 8         	 24.5193   	 0         	 7.88539   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 27, n: 50, r2left: 50, r2right: 0)                 	 0.00186426	 100       	 0         	 0         	 57.9317   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 27, reductionFactor: 37, colBlockingSize: 12)                    	 0.00185544	 101       	 4.07553   	 0         	 0.905355  	 4.50158   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00171151	 8         	 0         	 0         	 9.3485    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 77, leftOrthog: 1)          	 0.00160152	 100       	 24.0397   	 0         	 8.26715   	 2.90785   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000862598	 100       	 0.579644  	 0         	 2.31858   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 27)                                                                                          	 0.000853476	 201       	 0         	 0         	 5.08696   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 27, m: 50, k: 50)     	 0.000775879	 100       	 17.3996   	 0         	 5.36166   	 3.24519   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000775022	 100       	 32.2571   	 0         	 7.74172   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 27, n: 50, r2: 1)                                                                                          	 0.000761342	 201       	 0         	 0         	 5.70256   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1350, cols: 27, reductionFactor: 37, colBlockingSize: 12)                  	 0.000682927	 8         	 23.6804   	 0         	 3.4842    	 6.7965    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 27)   	 0.000593832	 100       	 22.7337   	 0         	 7.00535   	 3.24519   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000549684	 8         	 0         	 0         	 29.1076   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 27, m: 50, k: 50)  	 0.000529787	 100       	 25.4819   	 0         	 7.85221   	 3.24519   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000523919	 100       	 0         	 0         	 7.63477   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 27)                 	 0.000498799	 100       	 0         	 0         	 12.3497   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000479053	 100       	 0         	 0         	 8.34981   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 27, n: 50, r2left: 1, r2right: 0)                  	 0.000456588	 100       	 0         	 0         	 4.73074   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 27, m: 27, fromLeft: 1)                	 0.00045583	 809       	 0         	 0         	 20.7011   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 27, n: 50, r: 27, r2: 27)             	 0.000446893	 8         	 35.2353   	 0         	 10.5445   	 3.34158   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000430499	 100       	 1.16144   	 0         	 13.9373   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00039174	 101       	 0.64456   	 0         	 10.313    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 27)                                                           	 0.000367871	 101       	 0         	 0         	 5.93034   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000364414	 100       	 0.686033  	 0         	 10.9765   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 27)                                                                                 	 0.000349411	 101       	 0.390228  	 0         	 6.24365   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 27, k: 27)   	 0.00034773	 100       	 20.9645   	 0         	 7.88888   	 2.65748   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1350, Xcols: 27, r: 27, streamingCols: 0)                   	 0.000281687	 8         	 27.9502   	 0         	 16.6459   	 1.6791    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000226526	 1         	 1.13345   	 0         	 0.17658   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 27, m: 1350)                                                                  	 0.000118044	 8         	 0         	 0         	 39.5242   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1350, m: 27)                                                         	 0.000105583	 8         	 0         	 0         	 44.1889   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2061e-05	 1         	 3.89882   	 0         	 1.55953   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 27, r2: 27)              	 2.4811e-05	 1         	 2.93821   	 0         	 1.10564   	 2.65748   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.566e-05 	 9         	 0         	 0         	 22.9885   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.381e-05 	 1         	 18.1028   	 0         	 4.34468   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 27, r: 27, streamingCols: 0)                     	 1.236e-05 	 1         	 2.94903   	 0         	 1.9835    	 1.48678   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.1441e-05	 1         	 0.437025  	 0         	 1.7481    	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 9.17e-06  	 1         	 0         	 0         	 4.36205   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 27)                                                                                   	 7.99e-06  	 1         	 0.337922  	 0         	 1.35169   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 5.85e-06  	 1         	 0         	 0         	 6.83761   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1350, m: 0, k: 27)  	 4.8e-06   	 100       	 0         	 0         	 6075      	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 27, m: 50)                                                                    	 4.49e-06  	 1         	 0         	 0         	 4.81069   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.1674    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.16737   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.85032   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.84899   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.54029   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.551929  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.473655  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.395258  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.352738  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.316981  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.298803  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.194475  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0793775 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0470913 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0420499 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0283216 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0244418 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0223807 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0202354 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0202035 	 2         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0196067 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0183848 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0168197 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0158153 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.013054  	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00762216	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00619769	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00579893	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00331446	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00127706	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110556	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000882029	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00047149	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000430499	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23313921947520 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23313686456320 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23313485129856 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23313283803392 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23313082476928 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23312881150464 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23312679824000 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23312478497536 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23312277171072 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23312075844608 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23311874518144 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23311673191680 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23311471865216 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23311270538752 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23311069212288 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23310867885824 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23310666559360 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23310465232896 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23310263906432 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23310062579968 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23309861253504 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23309659927040 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23309458600576 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23309257274112 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23309055947648 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23308854621184 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23308653294720 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23308451968256 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23308250641792 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23308049315328 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23307847988864 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23307646662400 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23307445331840 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23307244005376 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23307042678912 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23306841352448 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23306640025984 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23306438699520 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23306237373056 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23306036046592 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23305834720128 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23305633393664 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23305432067200 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23305230740736 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23305029414272 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23304828087808 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23304626761344 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23304425434880 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23304224108416 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23304022781952 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23303821455488 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23303620129024 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23303418802560 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23303217476096 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23303016149632 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23302814823168 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23302613496704 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23302412170240 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23302210843776 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23302009517312 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23301808190848 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23301606864384 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23301405537920 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23313816286976 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23313809696512 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 78, m: 78)                                                                 	 0.46991   	 700       	 4.9484    	 0         	 0.218442  	 22.6532   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3900, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.320263  	 600       	 91.3082   	 0         	 4.65043   	 19.6343   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3900, r: 78, r2: 78, leftOrthog: 1)        	 0.30629   	 600       	 92.9612   	 0         	 14.4924   	 6.41447   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, r1_: 78, n: 50, r2: 78)           	 0.253112  	 600       	 112.492   	 0         	 11.653    	 9.65347   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3900, cols: 28, reductionFactor: 37, colBlockingSize: 12)                  	 0.0716239 	 700       	 61.3808   	 0         	 8.59923   	 7.13794   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.0537845 	 100       	 58.0877   	 0         	 2.99096   	 19.4211   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 78)                                                                 	 0.0469205 	 100       	 2.90918   	 0         	 0.176469  	 16.4855   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3900, Xcols: 28, r: 28, streamingCols: 0)                   	 0.0411457 	 700       	 52.0181   	 0         	 29.778    	 1.74686   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.038578  	 100       	 2.26813   	 0         	 0.156566  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 28, Qr2: 78)       	 0.0372655 	 700       	 0         	 0         	 80.9069   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 78, r2: 78, leftOrthog: 1)        	 0.0306331 	 100       	 99.3044   	 0         	 15.5954   	 6.36755   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3900, r: 50, r2: 50, leftOrthog: 1)        	 0.0299611 	 100       	 65.0845   	 0         	 15.7538   	 4.13136   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 28, m: 50, k: 2500)   	 0.0272566 	 800       	 205.455   	 0         	 46.1158   	 4.45519   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, r1_: 78, n: 50, r2: 50)           	 0.0258659 	 100       	 117.607   	 0         	 12.2504   	 9.60024   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0253143 	 100       	 79.1134   	 0         	 6.24153   	 12.6753   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, r1_: 50, n: 50, r2: 78)           	 0.0249314 	 100       	 122.015   	 0         	 16.1435   	 7.55814   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 28, m: 3900)                                                                  	 0.0186699 	 700       	 0         	 0         	 65.5086   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1400, m: 50, k: 28) 	 0.0159955 	 800       	 196.055   	 0         	 44.2525   	 4.43038   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 28, m: 2500, k: 50)	 0.0155537 	 800       	 360.044   	 0         	 80.8144   	 4.45519   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3900, m: 28)                                                         	 0.0150987 	 700       	 0         	 0         	 81.0028   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 28, m: 28)                                                                  	 0.0139975 	 909       	 1.90067   	 0         	 1.23646   	 1.53718   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 28, n: 50, r2left: 50, r2right: 28)                	 0.012604  	 700       	 0         	 0         	 97.0357   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 28, reductionFactor: 37, colBlockingSize: 12)                  	 0.00987196	 100       	 40.7816   	 0         	 5.73617   	 7.10956   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1400, m: 28, k: 28) 	 0.00977526	 700       	 157.197   	 0         	 45.3625   	 3.46535   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00573334	 8         	 17.4418   	 0         	 2.8186    	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 28, n: 50, r2: 28)                                                                                         	 0.00562726	 808       	 0         	 0         	 90.0576   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 78, reductionFactor: 37, colBlockingSize: 12)                    	 0.00536577	 100       	 11.645    	 0         	 1.48855   	 7.82306   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00512665	 9         	 0.292587  	 0         	 0.106034  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 28, r: 28, streamingCols: 0)                   	 0.00459563	 100       	 42.6492   	 0         	 24.4392   	 1.74511   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 28, Qr2: 50)       	 0.00383256	 100       	 0         	 0         	 81.4078   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00360477	 8         	 28.4908   	 0         	 2.26367   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 28)                                                         	 0.00237954	 100       	 0         	 0         	 47.0679   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 28, m: 2500)                                                                  	 0.00236014	 100       	 0         	 0         	 47.4548   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00202016	 8         	 24.7505   	 0         	 7.95976   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 28, reductionFactor: 37, colBlockingSize: 12)                    	 0.0016336 	 101       	 4.97821   	 0         	 1.08023   	 4.60845   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 28, n: 50, r2left: 50, r2right: 0)                 	 0.0015841 	 100       	 0         	 0         	 70.7026   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 78, leftOrthog: 1)          	 0.00136616	 100       	 28.5471   	 0         	 9.77923   	 2.91916   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1400, cols: 28, reductionFactor: 37, colBlockingSize: 12)                  	 0.000940135	 8         	 19.1847   	 0         	 2.72192   	 7.04822   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 28)                                                                                          	 0.000831815	 201       	 0         	 0         	 5.41274   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000782448	 100       	 0.63902   	 0         	 2.55608   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000778432	 100       	 32.1158   	 0         	 7.7078    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 28, m: 50, k: 50)     	 0.000766359	 100       	 18.2682   	 0         	 5.53266   	 3.30189   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000751209	 8         	 0         	 0         	 21.299    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 28, n: 50, r2: 1)                                                                                          	 0.000721315	 201       	 0         	 0         	 6.24193   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 28)   	 0.000567267	 100       	 24.6797   	 0         	 7.47443   	 3.30189   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 28, n: 50, r: 28, r2: 28)             	 0.000525963	 8         	 33.3894   	 0         	 9.63523   	 3.46535   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 28, m: 50, k: 50)  	 0.000517695	 100       	 27.0429   	 0         	 8.19015   	 3.30189   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000504092	 8         	 0         	 0         	 31.7402   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 28)                 	 0.000502561	 100       	 0         	 0         	 12.4164   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000493514	 100       	 0         	 0         	 8.10514   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 28, m: 28, fromLeft: 1)                	 0.000479921	 809       	 0         	 0         	 21.1453   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000456241	 100       	 0         	 0         	 8.7673    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 28, n: 50, r2left: 1, r2right: 0)                  	 0.00042836	 100       	 0         	 0         	 5.22925   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 28, k: 28)   	 0.000402187	 100       	 19.4934   	 0         	 7.12902   	 2.73438   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000395682	 100       	 1.26364   	 0         	 15.1637   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 28)                                                           	 0.000372983	 101       	 0         	 0         	 6.06569   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000372027	 101       	 0.678714  	 0         	 10.8594   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00035747	 1         	 0.718261  	 0         	 0.111898  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 28)                                                                                 	 0.000328502	 101       	 0.430439  	 0         	 6.88702   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000322728	 100       	 0.774646  	 0         	 12.3943   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1400, Xcols: 28, r: 28, streamingCols: 0)                   	 0.000299078	 8         	 29.3596   	 0         	 16.8608   	 1.74129   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 28, m: 1400)                                                                  	 9.8713e-05	 8         	 0         	 0         	 50.8302   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1400, m: 28)                                                         	 8.1625e-05	 8         	 0         	 0         	 61.4714   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 3.8921e-05	 1         	 0         	 0         	 1.02772   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3761e-05	 1         	 3.7025    	 0         	 1.481     	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 28, r: 28, streamingCols: 0)                     	 3.02e-05  	 1         	 1.29801   	 0         	 0.845563  	 1.53509   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 28, r2: 28)              	 2.844e-05 	 1         	 2.75668   	 0         	 1.00816   	 2.73438   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.9941e-05	 9         	 0         	 0         	 18.0533   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.645e-05 	 1         	 15.1976   	 0         	 3.64742   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 1.09e-05  	 1         	 0         	 0         	 3.66972   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 28)                                                                                   	 9.411e-06 	 1         	 0.297524  	 0         	 1.1901    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 7.56e-06  	 1         	 0.661376  	 0         	 2.6455    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1400, m: 0, k: 28)  	 5.3e-06   	 100       	 0         	 0         	 5916.98   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 28, m: 50)                                                                    	 4.29e-06  	 1         	 0         	 0         	 5.22145   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.21091   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.21086   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.88629   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.88507   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.56987   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.555409  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.49276   	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.40517   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.368251  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.324499  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.304688  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.203761  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0885223 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0481245 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0415543 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.028023  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0267455 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0216761 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0207425 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0207137 	 2         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0191241 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.018695  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0160714 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.015119  	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0132322 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0076739 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00630419	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00562984	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00336157	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00144004	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00102326	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000799419	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000499862	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000395682	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23410008389504 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23409786349568 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23409585023104 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23409383696640 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23409182370176 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23408981043712 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23408779717248 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23408578390784 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23408377064320 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23408175737856 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23407974411392 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23407773084928 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23407571758464 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23407370432000 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23407169105536 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23406967779072 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23406766452608 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23406565126144 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23406363799680 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23406162473216 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23405961146752 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23405759820288 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23405558493824 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23405357167360 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23405155840896 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23404954514432 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23404753187968 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23404551861504 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23404350535040 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23404149208576 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23403947882112 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23403746555648 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23403545225088 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23403343898624 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23403142572160 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23402941245696 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23402739919232 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23402538592768 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23402337266304 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23402135939840 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23401934613376 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23401733286912 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23401531960448 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23401330633984 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23401129307520 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23400927981056 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23400726654592 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23400525328128 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23400324001664 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23400122675200 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23399921348736 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23399720022272 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23399518695808 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23399317369344 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23399116042880 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23398914716416 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23398713389952 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23398512063488 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23398310737024 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23398109410560 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23397908084096 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23397706757632 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23397505431168 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23409902728960 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23409896138496 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 79, m: 79)                                                                 	 0.479969  	 700       	 5.03343   	 0         	 0.219371  	 22.9448   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3950, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.322395  	 600       	 94.2381   	 0         	 4.7389    	 19.8861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3950, r: 79, r2: 79, leftOrthog: 1)        	 0.304838  	 600       	 97.0427   	 0         	 14.9372   	 6.49671   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, r1_: 79, n: 50, r2: 79)           	 0.257681  	 600       	 114.802   	 0         	 11.7418   	 9.77723   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3950, cols: 29, reductionFactor: 37, colBlockingSize: 12)                  	 0.0694737 	 700       	 68.7515   	 0         	 9.30121   	 7.39168   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.0541451 	 100       	 59.1898   	 0         	 3.0103    	 19.6625   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 79)                                                                 	 0.0464507 	 100       	 2.97628   	 0         	 0.179976  	 16.5371   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3950, Xcols: 29, r: 29, streamingCols: 0)                   	 0.0434882 	 700       	 53.4712   	 0         	 29.5555   	 1.80918   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 29, Qr2: 79)       	 0.0396192 	 700       	 0         	 0         	 77.9662   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0374484 	 100       	 2.33655   	 0         	 0.161289  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3950, r: 50, r2: 50, leftOrthog: 1)        	 0.0310801 	 100       	 63.5455   	 0         	 15.3796   	 4.1318    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 79, r2: 79, leftOrthog: 1)        	 0.0296699 	 100       	 105.174   	 0         	 16.3124   	 6.44751   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 29, m: 50, k: 2500)   	 0.0295772 	 800       	 196.097   	 0         	 43.0494   	 4.55516   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, r1_: 79, n: 50, r2: 50)           	 0.0269568 	 100       	 115.759   	 0         	 11.9077   	 9.7214    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0251187 	 100       	 80.7519   	 0         	 6.36977   	 12.6774   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, r1_: 50, n: 50, r2: 79)           	 0.0235125 	 100       	 132.717   	 0         	 17.4716   	 7.59615   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 29, m: 3950)                                                                  	 0.0201921 	 700       	 0         	 0         	 63.5376   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 29, m: 2500, k: 50)	 0.016847  	 800       	 344.274   	 0         	 75.5789   	 4.55516   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1450, m: 50, k: 29) 	 0.0165799 	 800       	 202.897   	 0         	 44.7772   	 4.53125   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 29, m: 29)                                                                  	 0.0152232 	 909       	 1.9417    	 0         	 1.21907   	 1.59277   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 29, n: 50, r2left: 50, r2right: 29)                	 0.0150193 	 700       	 0         	 0         	 85.4205   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3950, m: 29)                                                         	 0.0139694 	 700       	 0         	 0         	 91.841    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1450, m: 29, k: 29) 	 0.009855  	 700       	 173.235   	 0         	 48.2668   	 3.58911   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 29, reductionFactor: 37, colBlockingSize: 12)                  	 0.00982686	 100       	 43.9474   	 0         	 5.97066   	 7.36056   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 29, n: 50, r2: 29)                                                                                         	 0.00601747	 808       	 0         	 0         	 90.3407   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 79, reductionFactor: 37, colBlockingSize: 12)                    	 0.00565975	 100       	 11.325    	 0         	 1.44049   	 7.86193   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00506777	 8         	 19.7325   	 0         	 3.18878   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00493737	 9         	 0.303804  	 0         	 0.110099  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 29, r: 29, streamingCols: 0)                   	 0.00485765	 100       	 43.2822   	 0         	 23.9491   	 1.80726   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 29, Qr2: 50)       	 0.0038964 	 100       	 0         	 0         	 81.1006   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00276705	 8         	 37.1163   	 0         	 2.94899   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 29, m: 2500)                                                                  	 0.00271976	 100       	 0         	 0         	 42.6508   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 29)                                                         	 0.00237934	 100       	 0         	 0         	 48.7531   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00210302	 8         	 23.7753   	 0         	 7.64614   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 29, reductionFactor: 37, colBlockingSize: 12)                    	 0.00171854	 101       	 5.07622   	 0         	 1.07715   	 4.71262   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 79, leftOrthog: 1)          	 0.00151594	 100       	 26.0565   	 0         	 8.89218   	 2.93027   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 29, n: 50, r2left: 50, r2right: 0)                 	 0.0012095 	 100       	 0         	 0         	 95.9072   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 29)                                                                                          	 0.000842928	 201       	 0         	 0         	 5.53215   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000823124	 100       	 0.607442  	 0         	 2.42977   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 29, m: 50, k: 50)     	 0.000786677	 100       	 18.432    	 0         	 5.49145   	 3.35648   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000775318	 100       	 32.2448   	 0         	 7.73876   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 29, n: 50, r2: 1)                                                                                          	 0.000736274	 201       	 0         	 0         	 6.33351   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1450, cols: 29, reductionFactor: 37, colBlockingSize: 12)                  	 0.000691678	 8         	 28.9709   	 0         	 3.96864   	 7.29995   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000629577	 8         	 0         	 0         	 25.4139   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 29)   	 0.000591699	 100       	 24.5057   	 0         	 7.30101   	 3.35648   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 29, m: 50, k: 50)  	 0.000553257	 100       	 26.2084   	 0         	 7.80831   	 3.35648   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000547355	 8         	 0         	 0         	 29.2315   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 29, n: 50, r: 29, r2: 29)             	 0.000545292	 8         	 35.7812   	 0         	 9.96938   	 3.58911   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000520552	 100       	 0         	 0         	 7.68415   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 29)                 	 0.00051715	 100       	 0         	 0         	 12.2208   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 29, m: 29, fromLeft: 1)                	 0.000496556	 809       	 0         	 0         	 21.9228   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 29, n: 50, r2left: 1, r2right: 0)                  	 0.000447881	 100       	 0         	 0         	 5.17995   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000445406	 100       	 0         	 0         	 8.98057   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000418131	 100       	 1.1958    	 0         	 14.3496   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 29, k: 29)   	 0.000400992	 100       	 20.973    	 0         	 7.46349   	 2.81008   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000376837	 101       	 0.670051  	 0         	 10.7208   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 29)                                                           	 0.000362724	 101       	 0         	 0         	 6.46001   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 29)                                                                                 	 0.000346842	 101       	 0.422238  	 0         	 6.75581   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000333889	 100       	 0.748752  	 0         	 11.98     	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1450, Xcols: 29, r: 29, streamingCols: 0)                   	 0.000309178	 8         	 31.5533   	 0         	 17.4958   	 1.80348   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000273897	 1         	 0.937421  	 0         	 0.14604   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 29, m: 1450)                                                                  	 0.000106804	 8         	 0         	 0         	 50.3951   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1450, m: 29)                                                         	 8.9853e-05	 8         	 0         	 0         	 59.9023   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.165e-05 	 1         	 3.94945   	 0         	 1.57978   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 29, r2: 29)              	 2.662e-05 	 1         	 3.15928   	 0         	 1.12427   	 2.81008   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 29, r: 29, streamingCols: 0)                     	 2.492e-05 	 1         	 1.6874    	 0         	 1.06597   	 1.58297   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.546e-05 	 9         	 0         	 0         	 23.2859   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.153e-05 	 1         	 21.6826   	 0         	 5.20382   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 8.631e-06 	 1         	 0         	 0         	 4.63446   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 29)                                                                                   	 8.031e-06 	 1         	 0.361101  	 0         	 1.4444    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 7.76e-06  	 1         	 0.64433   	 0         	 2.57732   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 5.551e-06 	 1         	 0         	 0         	 7.20591   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1450, m: 0, k: 29)  	 4.87e-06  	 100       	 0         	 0         	 6907.6    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 29, m: 50)                                                                    	 4.521e-06 	 1         	 0         	 0         	 5.13161   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.23828   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.23824   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.90242   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.90115   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.58178   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.563868  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.49207   	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.407822  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.367104  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.335737  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.308925  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.20469   	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0852227 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0508146 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.043961  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0303638 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0274324 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0235761 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0201605 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0187175 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0186892 	 2         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0174395 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0174003 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0171939 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0131304 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00811722	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00625885	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00565121	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00318811	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00145842	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105757	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000838915	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000512016	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000418131	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23360482420608 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23360260007936 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23360058681472 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23359857355008 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23359656028544 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23359454702080 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23359253375616 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23359052049152 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23358850722688 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23358649396224 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23358448069760 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23358246743296 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23358045416832 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23357844090368 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23357642763904 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23357441437440 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23357240110976 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23357038784512 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23356837458048 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23356636131584 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23356434805120 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23356233478656 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23356032152192 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23355830825728 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23355629499264 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23355428172800 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23355226846336 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23355025519872 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23354824193408 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23354622866944 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23354421540480 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23354220214016 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23354018883456 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23353817556992 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23353616230528 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23353414904064 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23353213577600 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23353012251136 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23352810924672 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23352609598208 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23352408271744 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23352206945280 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23352005618816 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23351804292352 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23351602965888 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23351401639424 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23351200312960 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23350998986496 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23350797660032 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23350596333568 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23350395007104 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23350193680640 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23349992354176 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23349791027712 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23349589701248 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23349388374784 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23349187048320 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23348985721856 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23348784395392 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23348583068928 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23348381742464 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23348180416000 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23347979089536 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23360376760064 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23360370169600 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 80, m: 80)                                                                 	 0.483441  	 700       	 5.18947   	 0         	 0.223332  	 23.2365   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4000, r: 80, r2: 80, leftOrthog: 1)        	 0.331685  	 600       	 92.618    	 0         	 14.0779   	 6.57895   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4000, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.328523  	 600       	 96.0366   	 0         	 4.76897   	 20.1378   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 80, n: 50, r2: 80)           	 0.263965  	 600       	 116.379   	 0         	 11.7543   	 9.90099   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4000, cols: 30, reductionFactor: 37, colBlockingSize: 12)                  	 0.0714889 	 700       	 72.4058   	 0         	 9.47056   	 7.64536   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.0550999 	 100       	 59.646    	 0         	 2.99674   	 19.9036   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 80)                                                                 	 0.0484639 	 100       	 2.88875   	 0         	 0.17415   	 16.5877   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4000, Xcols: 30, r: 30, streamingCols: 0)                   	 0.0448529 	 700       	 56.1837   	 0         	 30.0208   	 1.87149   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 30, Qr2: 80)       	 0.0437582 	 700       	 0         	 0         	 72.3064   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0368477 	 100       	 2.37464   	 0         	 0.163918  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 50, k: 2500)   	 0.0320645 	 800       	 187.123   	 0         	 40.2189   	 4.65261   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4000, r: 50, r2: 50, leftOrthog: 1)        	 0.0308086 	 100       	 64.917    	 0         	 15.7099   	 4.13223   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 80, r2: 80, leftOrthog: 1)        	 0.0297525 	 100       	 107.554   	 0         	 16.4773   	 6.52742   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 80, n: 50, r2: 50)           	 0.0270466 	 100       	 118.314   	 0         	 12.0207   	 9.84252   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 50, n: 50, r2: 80)           	 0.0260322 	 100       	 122.925   	 0         	 16.1031   	 7.63359   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0253411 	 100       	 81.0564   	 0         	 6.39279   	 12.6793   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1500, m: 50, k: 30) 	 0.0175985 	 800       	 204.562   	 0         	 44.1855   	 4.62963   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 30, m: 30)                                                                  	 0.0170908 	 909       	 1.91472   	 0         	 1.1616    	 1.64835   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 50, r2left: 50, r2right: 30)                	 0.0167592 	 700       	 0         	 0         	 80.1949   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 4000)                                                                  	 0.0166708 	 700       	 0         	 0         	 80.6202   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 30, m: 2500, k: 50)	 0.0165613 	 800       	 362.29    	 0         	 77.8681   	 4.65261   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4000, m: 30)                                                         	 0.0133607 	 700       	 0         	 0         	 100.594   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1500, m: 30, k: 30) 	 0.0106726 	 700       	 177.089   	 0         	 47.6959   	 3.71287   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 30, reductionFactor: 37, colBlockingSize: 12)                  	 0.010248  	 100       	 45.0976   	 0         	 5.92504   	 7.61137   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 50, r2: 30)                                                                                         	 0.00615747	 808       	 0         	 0         	 94.4803   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 80, reductionFactor: 37, colBlockingSize: 12)                    	 0.00599626	 100       	 10.9618   	 0         	 1.38753   	 7.90021   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00515553	 8         	 19.3966   	 0         	 3.1345    	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00489347	 9         	 0.30653   	 0         	 0.111087  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 30, r: 30, streamingCols: 0)                   	 0.00486672	 100       	 46.2324   	 0         	 24.7313   	 1.86939   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 30, Qr2: 50)       	 0.00400296	 100       	 0         	 0         	 79.9408   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00275433	 8         	 37.2877   	 0         	 2.96261   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 30)                                                         	 0.00228604	 100       	 0         	 0         	 52.4926   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 2500)                                                                  	 0.00227955	 100       	 0         	 0         	 52.642    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 30, reductionFactor: 37, colBlockingSize: 12)                    	 0.00212921	 101       	 4.38456   	 0         	 0.910759  	 4.81419   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.002044  	 8         	 24.4618   	 0         	 7.86692   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 50, r2left: 50, r2right: 0)                 	 0.00177555	 100       	 0         	 0         	 67.5846   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 80, leftOrthog: 1)          	 0.00146014	 100       	 27.3947   	 0         	 9.31418   	 2.94118   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 50, k: 50)     	 0.000895594	 100       	 16.7487   	 0         	 4.91294   	 3.40909   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000881681	 100       	 0.567099  	 0         	 2.26839   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 30)                                                                                          	 0.00081254	 201       	 0         	 0         	 5.93694   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000797028	 100       	 31.3665   	 0         	 7.52797   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1500, cols: 30, reductionFactor: 37, colBlockingSize: 12)                  	 0.000765861	 8         	 28.9658   	 0         	 3.83568   	 7.55167   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 50, r2: 1)                                                                                          	 0.000736717	 201       	 0         	 0         	 6.54797   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000654727	 8         	 0         	 0         	 24.4377   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 30)   	 0.000611473	 100       	 24.5309   	 0         	 7.19574   	 3.40909   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000599454	 8         	 0         	 0         	 26.691    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 30, m: 50, k: 50)  	 0.000583251	 100       	 25.7179   	 0         	 7.54392   	 3.40909   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 50, r: 30, r2: 30)             	 0.000568595	 8         	 37.9884   	 0         	 10.2315   	 3.71287   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 30)                 	 0.00052229	 100       	 0         	 0         	 12.2537   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 30, m: 30, fromLeft: 1)                	 0.00051577	 809       	 0         	 0         	 22.5868   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000509298	 100       	 0         	 0         	 7.85395   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000464391	 100       	 0         	 0         	 8.61343   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 30, k: 30)   	 0.000451621	 100       	 19.9282   	 0         	 6.90845   	 2.88462   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 50, r2left: 1, r2right: 0)                  	 0.000450622	 100       	 0         	 0         	 5.32597   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000416196	 100       	 1.20136   	 0         	 14.4163   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000383887	 101       	 0.657746  	 0         	 10.5239   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 30)                                                           	 0.000353659	 101       	 0         	 0         	 6.85406   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 30)                                                                                 	 0.00034666	 101       	 0.437028  	 0         	 6.99244   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000338851	 100       	 0.737787  	 0         	 11.8046   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1500, Xcols: 30, r: 30, streamingCols: 0)                   	 0.000317578	 8         	 34.0074   	 0         	 18.228    	 1.86567   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000222046	 1         	 1.15632   	 0         	 0.180143  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 1500)                                                                  	 0.000107462	 8         	 0         	 0         	 53.6003   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1500, m: 30)                                                         	 9.8291e-05	 8         	 0         	 0         	 58.6015   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.3261e-05	 1         	 2.88944   	 0         	 1.15578   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 30, r2: 30)              	 2.8751e-05	 1         	 3.13033   	 0         	 1.08518   	 2.88462   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.668e-05 	 1         	 14.988    	 0         	 3.59712   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5392e-05	 9         	 0         	 0         	 23.3888   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 1.439e-05 	 1         	 0         	 0         	 2.77971   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 30, r: 30, streamingCols: 0)                     	 1.218e-05 	 1         	 3.69458   	 0         	 2.26601   	 1.63043   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.004e-05 	 1         	 0.498008  	 0         	 1.99203   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 30)                                                                                   	 9.2e-06   	 1         	 0.326087  	 0         	 1.30435   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 8.18e-06  	 1         	 0         	 0         	 4.88998   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1500, m: 0, k: 30)  	 4.82e-06  	 100       	 0         	 0         	 7468.88   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 50)                                                                    	 4.44e-06  	 1         	 0         	 0         	 5.40541   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.29105   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.29102   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.94266   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.94134   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.61088   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.568752  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.502569  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.415572  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.393706  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.348278  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.317841  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.206672  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0880753 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0521366 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0482256 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0329601 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0293391 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0219842 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0196699 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0195076 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.018856  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0188244 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0171446 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0167678 	 918       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0137606 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00821603	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00576956	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00356535	 6372      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00331167	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00136958	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010694 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000900921	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000531162	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000416196	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22427923924864 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22427715233792 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22427513907328 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22427312580864 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22427111254400 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22426909927936 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22426708601472 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22426507275008 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22426305948544 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22426104622080 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22425903295616 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22425701969152 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22425500642688 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22425299316224 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22425097989760 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22424896663296 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22424695336832 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22424494010368 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22424292683904 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22424091357440 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22423890030976 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22423688704512 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22423487378048 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22423286051584 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22423084725120 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22422883398656 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22422682072192 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22422480745728 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22422279419264 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22422078092800 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22421876766336 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22421675439872 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22421474109312 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22421272782848 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22421071456384 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22420870129920 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22420668803456 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22420467476992 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22420266150528 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22420064824064 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22419863497600 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22419662171136 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22419460844672 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22419259518208 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22419058191744 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22418856865280 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22418655538816 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22418454212352 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22418252885888 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22418051559424 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22417850232960 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22417648906496 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22417447580032 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22417246253568 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22417044927104 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22416843600640 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22416642274176 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22416440947712 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22416239621248 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22416038294784 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22415836968320 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22415635641856 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22415434315392 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22427818264320 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22427811673856 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 81, m: 81)                                                                 	 0.53736   	 700       	 4.84603   	 0         	 0.205967  	 23.5282   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4050, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.339253  	 600       	 96.5305   	 0         	 4.73432   	 20.3895   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4050, r: 81, r2: 81, leftOrthog: 1)        	 0.317808  	 600       	 100.332   	 0         	 15.0622   	 6.66118   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, r1_: 81, n: 50, r2: 81)           	 0.274573  	 600       	 116.131   	 0         	 11.5844   	 10.0248   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4050, cols: 31, reductionFactor: 37, colBlockingSize: 12)                  	 0.0766073 	 700       	 73.0497   	 0         	 9.24797   	 7.899     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.0567974 	 100       	 59.3189   	 0         	 2.94465   	 20.1446   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 81)                                                                 	 0.048823  	 100       	 2.90335   	 0         	 0.174508  	 16.6373   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4050, Xcols: 31, r: 31, streamingCols: 0)                   	 0.0473134 	 700       	 57.5828   	 0         	 29.777    	 1.9338    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 31, Qr2: 81)       	 0.0429884 	 700       	 0         	 0         	 75.3729   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.037209  	 100       	 2.35158   	 0         	 0.162326  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 31, m: 50, k: 2500)   	 0.0317724 	 800       	 195.138   	 0         	 41.1024   	 4.74761   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 81, r2: 81, leftOrthog: 1)        	 0.0312424 	 100       	 105.001   	 0         	 15.8918   	 6.60728   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4050, r: 50, r2: 50, leftOrthog: 1)        	 0.0298029 	 100       	 67.9464   	 0         	 16.4413   	 4.13265   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, r1_: 81, n: 50, r2: 50)           	 0.0268473 	 100       	 122.191   	 0         	 12.2638   	 9.96359   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, r1_: 50, n: 50, r2: 81)           	 0.0265278 	 100       	 123.662   	 0         	 16.1219   	 7.67045   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0250599 	 100       	 82.9903   	 0         	 6.54432   	 12.6813   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 31, m: 4050)                                                                  	 0.0194868 	 700       	 0         	 0         	 72.1595   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4050, m: 31)                                                         	 0.0177326 	 700       	 0         	 0         	 79.2979   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 31, n: 50, r2left: 50, r2right: 31)                	 0.017606  	 700       	 0         	 0         	 79.8684   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1550, m: 50, k: 31) 	 0.0171106 	 800       	 224.656   	 0         	 47.5401   	 4.72561   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 31, m: 31)                                                                  	 0.0170285 	 909       	 2.1203    	 0         	 1.24442   	 1.70384   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 31, m: 2500, k: 50)	 0.0167375 	 800       	 370.426   	 0         	 78.0238   	 4.74761   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1550, m: 31, k: 31) 	 0.0110127 	 700       	 189.361   	 0         	 49.356    	 3.83663   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 31, reductionFactor: 37, colBlockingSize: 12)                  	 0.0108541 	 100       	 45.4654   	 0         	 5.78295   	 7.86197   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 81, reductionFactor: 37, colBlockingSize: 12)                    	 0.00830005	 100       	 8.11842   	 0         	 1.02274   	 7.9379    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 31, n: 50, r2: 31)                                                                                         	 0.006417  	 808       	 0         	 0         	 96.8038   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00523185	 8         	 19.1137   	 0         	 3.08878   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 31, r: 31, streamingCols: 0)                   	 0.0050749 	 100       	 47.3408   	 0         	 24.5097   	 1.93151   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00499183	 9         	 0.30049   	 0         	 0.108898  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 31, Qr2: 50)       	 0.00332737	 100       	 0         	 0         	 97.3741   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00263881	 8         	 38.9201   	 0         	 3.0923    	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 31, m: 2500)                                                                  	 0.00248988	 100       	 0         	 0         	 49.8017   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 31)                                                         	 0.00245879	 100       	 0         	 0         	 50.4313   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 31, reductionFactor: 37, colBlockingSize: 12)                    	 0.002177  	 101       	 4.57898   	 0         	 0.931967  	 4.91325   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00168937	 8         	 29.5968   	 0         	 9.51832   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 81, leftOrthog: 1)          	 0.00153044	 100       	 26.463    	 0         	 8.96475   	 2.9519    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 31, n: 50, r2left: 50, r2right: 0)                 	 0.00107826	 100       	 0         	 0         	 115       	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 31, m: 50, k: 50)     	 0.00100116	 100       	 15.4821   	 0         	 4.47481   	 3.45982   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 31)                                                                                          	 0.000838547	 201       	 0         	 0         	 5.94457   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000793647	 100       	 0.630003  	 0         	 2.52001   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000792856	 100       	 31.5316   	 0         	 7.56758   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1550, cols: 31, reductionFactor: 37, colBlockingSize: 12)                  	 0.000772289	 8         	 31.694    	 0         	 4.06157   	 7.80339   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 31, n: 50, r2: 1)                                                                                          	 0.00074611	 201       	 0         	 0         	 6.68105   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000699207	 8         	 0         	 0         	 22.8831   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 31)   	 0.000625631	 100       	 24.775    	 0         	 7.16077   	 3.45982   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 31, n: 50, r: 31, r2: 31)             	 0.000600864	 8         	 39.6642   	 0         	 10.3383   	 3.83663   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 31, m: 31, fromLeft: 1)                	 0.000559015	 809       	 0         	 0         	 22.252    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 31, m: 50, k: 50)  	 0.00055173	 100       	 28.0935   	 0         	 8.11991   	 3.45982   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000537514	 8         	 0         	 0         	 29.7667   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 31)                 	 0.00050305	 100       	 0         	 0         	 12.8814   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.0005003 	 100       	 0         	 0         	 7.9952    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000457832	 100       	 0         	 0         	 8.73683   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 31, n: 50, r2left: 1, r2right: 0)                  	 0.000441563	 100       	 0         	 0         	 5.61641   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 31, k: 31)   	 0.000407405	 100       	 23.5883   	 0         	 7.97437   	 2.95802   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000403682	 100       	 1.2386    	 0         	 14.8632   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 31)                                                           	 0.000382473	 101       	 0         	 0         	 6.54896   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000373982	 101       	 0.675166  	 0         	 10.8027   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000361709	 1         	 0.709843  	 0         	 0.110586  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1550, Xcols: 31, r: 31, streamingCols: 0)                   	 0.000345669	 8         	 34.4734   	 0         	 17.8817   	 1.92786   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 31)                                                                                 	 0.000341761	 101       	 0.458069  	 0         	 7.3291    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000333018	 100       	 0.75071   	 0         	 12.0114   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 31, m: 1550)                                                                  	 0.00011344	 8         	 0         	 0         	 54.2172   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1550, m: 31)                                                         	 9.9015e-05	 8         	 0         	 0         	 62.1158   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.4631e-05	 1         	 2.80074   	 0         	 1.1203    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 31, r2: 31)              	 2.7331e-05	 1         	 3.51615   	 0         	 1.18869   	 2.95802   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.542e-05 	 9         	 0         	 0         	 23.3463   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.31e-05  	 1         	 19.084    	 0         	 4.58015   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 31, r: 31, streamingCols: 0)                     	 1.226e-05 	 1         	 3.91925   	 0         	 2.33638   	 1.67749   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.501e-06 	 1         	 0.588166  	 0         	 2.35266   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 6.771e-06 	 1         	 0         	 0         	 5.90755   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 6.5e-06   	 1         	 0         	 0         	 6.15385   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 31)                                                                                   	 6.4e-06   	 1         	 0.484375  	 0         	 1.9375    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1550, m: 0, k: 31)  	 5.29e-06  	 100       	 0         	 0         	 7266.54   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 31, m: 50)                                                                    	 4.471e-06 	 1         	 0         	 0         	 5.54686   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.40661   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.40656   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.04315   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.04191   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.70192   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.623392  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.522821  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.429901  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.380384  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.36334   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.328741  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.222609  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0938886 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0544802 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0467736 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0327736 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0291616 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0226386 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0220203 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0213789 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0196288 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0187551 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0187278 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0172892 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0138    	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00850196	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00657165	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00587314	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0030793 	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00137649	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00104876	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000808548	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000574435	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000403682	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22491606157184 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22491401545728 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22491200219264 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22490998892800 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22490797566336 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22490596239872 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22490394913408 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22490193586944 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22489992260480 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22489790934016 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22489589607552 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22489388281088 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22489186954624 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22488985628160 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22488784301696 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22488582975232 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22488381648768 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22488180322304 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22487978995840 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22487777669376 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22487576342912 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22487375016448 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22487173689984 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22486972363520 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22486771037056 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22486569710592 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22486368384128 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22486167057664 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22485965731200 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22485764404736 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22485563078272 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22485361751808 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22485160421248 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22484959094784 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22484757768320 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22484556441856 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22484355115392 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22484153788928 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22483952462464 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22483751136000 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22483549809536 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22483348483072 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22483147156608 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22482945830144 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22482744503680 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22482543177216 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22482341850752 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22482140524288 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22481939197824 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22481737871360 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22481536544896 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22481335218432 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22481133891968 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22480932565504 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22480731239040 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22480529912576 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22480328586112 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22480127259648 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22479925933184 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22479724606720 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22479523280256 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22479321953792 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22479120627328 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22491500496640 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22491493906176 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 82, m: 82)                                                                 	 0.554111  	 700       	 4.87574   	 0         	 0.204692  	 23.8198   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4100, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.345848  	 600       	 98.2401   	 0         	 4.75941   	 20.6412   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4100, r: 82, r2: 82, leftOrthog: 1)        	 0.327641  	 600       	 100.971   	 0         	 14.9732   	 6.74342   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, r1_: 82, n: 50, r2: 82)           	 0.281402  	 600       	 117.561   	 0         	 11.5841   	 10.1485   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4100, cols: 32, reductionFactor: 37, colBlockingSize: 12)                  	 0.0804897 	 700       	 74.9987   	 0         	 9.19937   	 8.15259   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.0578216 	 100       	 59.7159   	 0         	 2.92934   	 20.3854   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4100, Xcols: 32, r: 32, streamingCols: 0)                   	 0.0496943 	 700       	 59.1392   	 0         	 29.6273   	 1.99611   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 32, Qr2: 82)       	 0.0487301 	 700       	 0         	 0         	 68.0778   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 82)                                                                 	 0.0465729 	 100       	 3.08119   	 0         	 0.184657  	 16.686    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0364028 	 100       	 2.40366   	 0         	 0.165921  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 82, r2: 82, leftOrthog: 1)        	 0.0340206 	 100       	 98.8224   	 0         	 14.778    	 6.68711   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 32, m: 50, k: 2500)   	 0.0311785 	 800       	 205.27    	 0         	 42.4087   	 4.84027   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4100, r: 50, r2: 50, leftOrthog: 1)        	 0.0311016 	 100       	 65.913    	 0         	 15.9477   	 4.13306   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, r1_: 82, n: 50, r2: 50)           	 0.0275701 	 100       	 121.944   	 0         	 12.0921   	 10.0846   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, r1_: 50, n: 50, r2: 82)           	 0.026919  	 100       	 124.893   	 0         	 16.2057   	 7.70677   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.02525   	 100       	 83.3823   	 0         	 6.57425   	 12.6832   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1600, m: 50, k: 32) 	 0.0231034 	 800       	 177.29    	 0         	 36.7877   	 4.81928   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 32, m: 4100)                                                                  	 0.0226661 	 700       	 0         	 0         	 64.8298   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4100, m: 32)                                                         	 0.0186642 	 700       	 0         	 0         	 78.7303   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 32, n: 50, r2left: 50, r2right: 32)                	 0.0182671 	 700       	 0         	 0         	 80.442    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 32, m: 32)                                                                  	 0.017207  	 909       	 2.30802   	 0         	 1.31181   	 1.75942   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 32, m: 2500, k: 50)	 0.0157562 	 800       	 406.188   	 0         	 83.9185   	 4.84027   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1600, m: 32, k: 32) 	 0.012326  	 700       	 186.091   	 0         	 46.988    	 3.9604    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 32, reductionFactor: 37, colBlockingSize: 12)                  	 0.0112911 	 100       	 46.5708   	 0         	 5.74071   	 8.11238   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 32, n: 50, r2: 32)                                                                                         	 0.00702376	 808       	 0         	 0         	 94.2392   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 82, reductionFactor: 37, colBlockingSize: 12)                    	 0.00600752	 100       	 11.4951   	 0         	 1.44139   	 7.97502   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 32, r: 32, streamingCols: 0)                   	 0.00530163	 100       	 48.2871   	 0         	 24.2208   	 1.99362   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00526883	 8         	 18.9796   	 0         	 3.0671    	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0050412 	 9         	 0.297547  	 0         	 0.107831  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 32, Qr2: 50)       	 0.003447  	 100       	 0         	 0         	 95.1551   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265167	 8         	 38.7313   	 0         	 3.07731   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 32)                                                         	 0.00237144	 100       	 0         	 0         	 53.9756   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 32, m: 2500)                                                                  	 0.00221094	 100       	 0         	 0         	 57.8938   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00212361	 8         	 23.5449   	 0         	 7.57203   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 82, leftOrthog: 1)          	 0.00193671	 100       	 21.1699   	 0         	 7.14613   	 2.96243   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 32, reductionFactor: 37, colBlockingSize: 12)                    	 0.00185945	 101       	 5.7124    	 0         	 1.14023   	 5.00989   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 32, n: 50, r2left: 50, r2right: 0)                 	 0.000944272	 100       	 0         	 0         	 135.554   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000837898	 100       	 0.596731  	 0         	 2.38693   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 32, m: 50, k: 50)     	 0.000836988	 100       	 19.1162   	 0         	 5.44811   	 3.50877   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 32)                                                                                          	 0.000825018	 201       	 0         	 0         	 6.23695   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1600, cols: 32, reductionFactor: 37, colBlockingSize: 12)                  	 0.000822211	 8         	 32.7445   	 0         	 4.06506   	 8.05511   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000795945	 100       	 31.4092   	 0         	 7.53821   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 32, n: 50, r2: 1)                                                                                          	 0.000774244	 201       	 0         	 0         	 6.64597   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 32)   	 0.000646529	 100       	 24.7475   	 0         	 7.05305   	 3.50877   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 32, n: 50, r: 32, r2: 32)             	 0.000624606	 8         	 41.9695   	 0         	 10.5973   	 3.9604    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000618026	 8         	 0         	 0         	 25.8889   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 32, m: 32, fromLeft: 1)                	 0.000602173	 809       	 0         	 0         	 22.0114   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 32, m: 50, k: 50)  	 0.000549041	 100       	 29.1417   	 0         	 8.30539   	 3.50877   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000522243	 100       	 0         	 0         	 7.65927   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000521483	 8         	 0         	 0         	 30.6817   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 32)                 	 0.000505484	 100       	 0         	 0         	 12.9777   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000464383	 100       	 0         	 0         	 8.61358   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 32, n: 50, r2left: 1, r2right: 0)                  	 0.000440815	 100       	 0         	 0         	 5.80742   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 32, k: 32)   	 0.000431409	 100       	 23.7362   	 0         	 7.83294   	 3.0303    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000428111	 100       	 1.16792   	 0         	 14.0151   	 0.0833333 
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000418871	 1         	 0.612973  	 0         	 0.0954948 	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000375271	 101       	 0.672847  	 0         	 10.7656   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 32)                                                           	 0.000357471	 101       	 0         	 0         	 7.23303   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1600, Xcols: 32, r: 32, streamingCols: 0)                   	 0.000354989	 8         	 36.9228   	 0         	 18.5537   	 1.99005   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 32)                                                                                 	 0.000353537	 101       	 0.457095  	 0         	 7.31352   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00035046	 100       	 0.713348  	 0         	 11.4136   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 32, m: 1600)                                                                  	 0.000125055	 8         	 0         	 0         	 52.4057   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1600, m: 32)                                                         	 0.000106342	 8         	 0         	 0         	 61.6276   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6301e-05	 1         	 3.44343   	 0         	 1.37737   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 32, r2: 32)              	 2.7831e-05	 1         	 3.67935   	 0         	 1.21419   	 3.0303    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 32, r: 32, streamingCols: 0)                     	 1.801e-05 	 1         	 2.84287   	 0         	 1.64886   	 1.72414   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.626e-05 	 1         	 15.3752   	 0         	 3.69004   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5381e-05	 9         	 0         	 0         	 23.4055   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 32)                                                                                   	 8.69e-06  	 1         	 0.368239  	 0         	 1.47296   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.591e-06 	 1         	 0.582004  	 0         	 2.32802   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 7.48e-06  	 1         	 0         	 0         	 5.34759   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 7.32e-06  	 1         	 0         	 0         	 5.46448   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1600, m: 0, k: 32)  	 4.76e-06  	 100       	 0         	 0         	 8605.04   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 32, m: 50)                                                                    	 4.57e-06  	 1         	 0         	 0         	 5.60175   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.48256   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.48251   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.09368   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.09238   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.74478   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.637087  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.532461  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.435566  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.3947    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.388762  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.336687  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.235084  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0980182 	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0575288 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0526415 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0365121 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0320155 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0256322 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0222482 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0220283 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0201576 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0193597 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0193297 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0163053 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0140155 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00914527	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00691983	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00593753	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00350052	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0015035 	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107927	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000855179	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000617554	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000428111	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22462169696128 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22461940754432 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22461739427968 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22461538101504 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22461336775040 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22461135448576 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22460934122112 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22460732795648 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22460531469184 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22460330142720 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22460128816256 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22459927489792 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22459726163328 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22459524836864 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22459323510400 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22459122183936 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22458920857472 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22458719531008 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22458518204544 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22458316878080 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22458115551616 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22457914225152 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22457712898688 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22457511572224 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22457310245760 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22457108919296 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22456907592832 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22456706266368 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22456504939904 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22456303613440 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22456102286976 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22455900960512 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22455699629952 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22455498303488 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22455296977024 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22455095650560 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22454894324096 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22454692997632 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22454491671168 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22454290344704 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22454089018240 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22453887691776 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22453686365312 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22453485038848 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22453283712384 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22453082385920 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22452881059456 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22452679732992 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22452478406528 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22452277080064 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22452075753600 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22451874427136 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22451673100672 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22451471774208 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22451270447744 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22451069121280 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22450867794816 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22450666468352 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22450465141888 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22450263815424 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22450062488960 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22449861162496 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22449659836032 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22462064035584 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22462057445120 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 83, m: 83)                                                                 	 0.604719  	 700       	 4.63316   	 0         	 0.192155  	 24.1115   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4150, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.358222  	 600       	 98.3593   	 0         	 4.70777   	 20.893    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4150, r: 83, r2: 83, leftOrthog: 1)        	 0.332789  	 600       	 103.09    	 0         	 15.1033   	 6.82566   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, r1_: 83, n: 50, r2: 83)           	 0.283573  	 600       	 120.982   	 0         	 11.7775   	 10.2723   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4150, cols: 33, reductionFactor: 37, colBlockingSize: 12)                  	 0.0881324 	 700       	 73.731    	 0         	 8.77111   	 8.40613   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.0597629 	 100       	 59.1938   	 0         	 2.86986   	 20.626    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4150, Xcols: 33, r: 33, streamingCols: 0)                   	 0.051046  	 700       	 61.9744   	 0         	 30.1079   	 2.05841   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 83)                                                                 	 0.0469144 	 100       	 3.09606   	 0         	 0.185018  	 16.7339   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 33, Qr2: 83)       	 0.0464561 	 700       	 0         	 0         	 73.0978   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0362504 	 100       	 2.41377   	 0         	 0.166619  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 83, r2: 83, leftOrthog: 1)        	 0.0330198 	 100       	 104.316   	 0         	 15.4157   	 6.76689   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 33, m: 50, k: 2500)   	 0.0324331 	 800       	 203.496   	 0         	 41.2714   	 4.93067   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4150, r: 50, r2: 50, leftOrthog: 1)        	 0.0317843 	 100       	 65.2837   	 0         	 15.7939   	 4.13347   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, r1_: 50, n: 50, r2: 83)           	 0.0273294 	 100       	 126.036   	 0         	 16.2784   	 7.74254   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, r1_: 83, n: 50, r2: 50)           	 0.0268815 	 100       	 128.136   	 0         	 12.5555   	 10.2056   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0257486 	 100       	 82.765    	 0         	 6.52463   	 12.685    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 33, m: 4150)                                                                  	 0.0221374 	 700       	 0         	 0         	 69.2874   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1650, m: 50, k: 33) 	 0.0190237 	 800       	 228.978   	 0         	 46.6283   	 4.91071   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 33, m: 33)                                                                  	 0.0187191 	 909       	 2.3268    	 0         	 1.28198   	 1.815     
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 33, n: 50, r2left: 50, r2right: 33)                	 0.0184875 	 700       	 0         	 0         	 82.9662   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 33, m: 2500, k: 50)	 0.0184609 	 800       	 357.512   	 0         	 72.5077   	 4.93067   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4150, m: 33)                                                         	 0.0176931 	 700       	 0         	 0         	 86.6914   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 33, reductionFactor: 37, colBlockingSize: 12)                  	 0.0125088 	 100       	 44.706    	 0         	 5.34595   	 8.36259   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1650, m: 33, k: 33) 	 0.0124063 	 700       	 202.768   	 0         	 49.6474   	 4.08416   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 33, n: 50, r2: 33)                                                                                         	 0.00697332	 808       	 0         	 0         	 100.946   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 83, reductionFactor: 37, colBlockingSize: 12)                    	 0.00620903	 100       	 11.395    	 0         	 1.42231   	 8.01158   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 33, r: 33, streamingCols: 0)                   	 0.00539862	 100       	 50.4296   	 0         	 24.5314   	 2.05572   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00520767	 8         	 19.2025   	 0         	 3.10312   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00499471	 9         	 0.300317  	 0         	 0.108835  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 33, Qr2: 50)       	 0.00337657	 100       	 0         	 0         	 98.3247   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00260213	 8         	 39.4688   	 0         	 3.1359    	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 33)                                                         	 0.00249962	 100       	 0         	 0         	 52.8081   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 33, m: 2500)                                                                  	 0.00196275	 100       	 0         	 0         	 67.2526   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 33, reductionFactor: 37, colBlockingSize: 12)                    	 0.00193024	 101       	 5.85221   	 0         	 1.14655   	 5.1042    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00181697	 8         	 27.5183   	 0         	 8.8499    	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 83, leftOrthog: 1)          	 0.0014587 	 100       	 28.45     	 0         	 9.57017   	 2.97278   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 33, n: 50, r2left: 50, r2right: 0)                 	 0.000909973	 100       	 0         	 0         	 145.059   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 33)                                                                                          	 0.000876476	 201       	 0         	 0         	 6.05424   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1650, cols: 33, reductionFactor: 37, colBlockingSize: 12)                  	 0.000860812	 8         	 34.3009   	 0         	 4.12924   	 8.30684   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 33, m: 50, k: 50)     	 0.000852813	 100       	 19.3477   	 0         	 5.44082   	 3.55603   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000795843	 100       	 31.4132   	 0         	 7.53918   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000789485	 100       	 0.633324  	 0         	 2.5333    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 33, n: 50, r2: 1)                                                                                          	 0.000723321	 201       	 0         	 0         	 7.33616   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 33, n: 50, r: 33, r2: 33)             	 0.000696136	 8         	 41.2988   	 0         	 10.112    	 4.08416   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 33)   	 0.000671243	 100       	 24.5813   	 0         	 6.91255   	 3.55603   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000623486	 8         	 0         	 0         	 25.6622   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 33, m: 33, fromLeft: 1)                	 0.000621391	 809       	 0         	 0         	 22.6846   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 33, m: 50, k: 50)  	 0.000570927	 100       	 28.9004   	 0         	 8.12713   	 3.55603   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 33)                 	 0.000520111	 100       	 0         	 0         	 12.7665   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000511734	 8         	 0         	 0         	 31.2662   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000501954	 100       	 0         	 0         	 7.96886   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00046852	 100       	 0         	 0         	 8.53752   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 33, n: 50, r2left: 1, r2right: 0)                  	 0.000449252	 100       	 0         	 0         	 5.87643   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 33, k: 33)   	 0.000419292	 100       	 25.9724   	 0         	 8.37412   	 3.1015    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00040758	 100       	 1.22675   	 0         	 14.721    	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000383688	 101       	 0.658087  	 0         	 10.5294   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 33)                                                           	 0.000357947	 101       	 0         	 0         	 7.44915   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1650, Xcols: 33, r: 33, streamingCols: 0)                   	 0.000350319	 8         	 41.0335   	 0         	 19.9945   	 2.05224   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 33)                                                                                 	 0.000342341	 101       	 0.486795  	 0         	 7.78873   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000334809	 1         	 0.766875  	 0         	 0.119471  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000325679	 100       	 0.767627  	 0         	 12.282    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 33, m: 1650)                                                                  	 0.000128044	 8         	 0         	 0         	 54.4313   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1650, m: 33)                                                         	 0.000114153	 8         	 0         	 0         	 61.0549   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 33, r: 33, streamingCols: 0)                     	 4.3571e-05	 1         	 1.24968   	 0         	 0.705882  	 1.77039   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.5701e-05	 1         	 3.5013    	 0         	 1.40052   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 33, r2: 33)              	 2.558e-05 	 1         	 4.25723   	 0         	 1.37263   	 3.1015    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.6521e-05	 1         	 15.1323   	 0         	 3.63174   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.537e-05 	 9         	 0         	 0         	 23.4223   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 1.061e-05 	 1         	 0         	 0         	 3.77003   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.05e-06  	 1         	 0.552486  	 0         	 2.20994   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 7.95e-06  	 1         	 0         	 0         	 5.03145   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 33)                                                                                   	 7.85e-06  	 1         	 0.420382  	 0         	 1.68153   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1650, m: 0, k: 33)  	 4.921e-06 	 100       	 0         	 0         	 8851.86   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 33, m: 50)                                                                    	 4.59e-06  	 1         	 0         	 0         	 5.75163   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.55496   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.55491   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.15961   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.15839   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.8088    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.687883  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.556312  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.450589  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.399052  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.395212  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.33858   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.244147  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.106841  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0586912 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0503012 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0332859 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0325254 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0248642 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0237138 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0211872 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0203669 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0190319 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0189661 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0189367 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0145303 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00907508	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0059459 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00584628	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00323584	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00129812	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105171	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000806385	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000636761	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00040758	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23277959681920 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23277783214080 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23277581887616 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23277380561152 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23277179234688 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23276977908224 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23276776581760 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23276575255296 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23276373928832 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23276172602368 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23275971275904 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23275769949440 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23275568622976 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23275367296512 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23275165970048 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23274964643584 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23274763317120 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23274561990656 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23274360664192 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23274159337728 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23273958011264 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23273756684800 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23273555358336 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23273354031872 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23273152705408 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23272951378944 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23272750052480 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23272548726016 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23272347399552 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23272146073088 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23271944746624 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23271743420160 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23271542089600 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23271340763136 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23271139436672 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23270938110208 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23270736783744 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23270535457280 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23270334130816 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23270132804352 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23269931477888 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23269730151424 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23269528824960 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23269327498496 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23269126172032 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23268924845568 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23268723519104 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23268522192640 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23268320866176 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23268119539712 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23267918213248 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23267716886784 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23267515560320 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23267314233856 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23267112907392 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23266911580928 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23266710254464 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23266508928000 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23266307601536 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23266106275072 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23265904948608 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23265703622144 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23265502295680 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23277854021376 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23277675452160 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 84, m: 84)                                                                 	 0.602604  	 700       	 4.8195    	 0         	 0.197495  	 24.4032   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4200, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.370697  	 600       	 98.5261   	 0         	 4.65962   	 21.1447   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4200, r: 84, r2: 84, leftOrthog: 1)        	 0.33557   	 600       	 105.976   	 0         	 15.3412   	 6.90789   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, r1_: 84, n: 50, r2: 84)           	 0.284596  	 600       	 124.957   	 0         	 12.0197   	 10.396    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4200, cols: 34, reductionFactor: 37, colBlockingSize: 12)                  	 0.0969658 	 700       	 71.9944   	 0         	 8.3138    	 8.65963   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.0608023 	 100       	 59.5923   	 0         	 2.85589   	 20.8665   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4200, Xcols: 34, r: 34, streamingCols: 0)                   	 0.0532908 	 700       	 63.7754   	 0         	 30.0727   	 2.12071   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 34, Qr2: 84)       	 0.0473117 	 700       	 0         	 0         	 73.4567   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 84)                                                                 	 0.0465581 	 100       	 3.15734   	 0         	 0.188152  	 16.7808   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0378931 	 100       	 2.30913   	 0         	 0.159396  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4200, r: 50, r2: 50, leftOrthog: 1)        	 0.0344194 	 100       	 61.0121   	 0         	 14.7591   	 4.13386   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 84, r2: 84, leftOrthog: 1)        	 0.0333823 	 100       	 105.685   	 0         	 15.436    	 6.84664   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 34, m: 50, k: 2500)   	 0.0318382 	 800       	 213.58    	 0         	 42.5552   	 5.01889   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, r1_: 50, n: 50, r2: 84)           	 0.0276912 	 100       	 127.405   	 0         	 16.3806   	 7.77778   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, r1_: 84, n: 50, r2: 50)           	 0.0274369 	 100       	 128.586   	 0         	 12.452    	 10.3265   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0266905 	 100       	 80.8062   	 0         	 6.36931   	 12.6868   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4200, m: 34)                                                         	 0.0216568 	 700       	 0         	 0         	 73.8503   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1700, m: 50, k: 34) 	 0.0208949 	 800       	 221.298   	 0         	 44.2596   	 5         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 34, m: 4200)                                                                  	 0.0207573 	 700       	 0         	 0         	 77.0505   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 34, m: 34)                                                                  	 0.0194326 	 909       	 2.4513    	 0         	 1.31051   	 1.8705    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 34, m: 2500, k: 50)	 0.0192345 	 800       	 353.532   	 0         	 70.4403   	 5.01889   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 34, n: 50, r2left: 50, r2right: 34)                	 0.019138  	 700       	 0         	 0         	 83.5698   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 34, reductionFactor: 37, colBlockingSize: 12)                  	 0.0138019 	 100       	 43.0103   	 0         	 4.99388   	 8.6126    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1700, m: 34, k: 34) 	 0.0129403 	 700       	 212.614   	 0         	 50.527    	 4.20792   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 34, n: 50, r2: 34)                                                                                         	 0.00772199	 808       	 0         	 0         	 96.7676   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 84, reductionFactor: 37, colBlockingSize: 12)                    	 0.00628064	 100       	 11.5382   	 0         	 1.43374   	 8.0476    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 34, r: 34, streamingCols: 0)                   	 0.00564202	 100       	 51.2228   	 0         	 24.1868   	 2.1178    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00525846	 9         	 0.285254  	 0         	 0.103376  	 2.75937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00512756	 8         	 19.5024   	 0         	 3.15159   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 34, Qr2: 50)       	 0.00348795	 100       	 0         	 0         	 96.3317   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 34, m: 2500)                                                                  	 0.00292112	 100       	 0         	 0         	 46.5576   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00276432	 8         	 37.153    	 0         	 2.9519    	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 34, reductionFactor: 37, colBlockingSize: 12)                    	 0.00227267	 101       	 5.27625   	 0         	 1.01539   	 5.19627   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00182218	 8         	 27.4397   	 0         	 8.82461   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 34)                                                         	 0.00176249	 100       	 0         	 0         	 77.1635   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 84, leftOrthog: 1)          	 0.0016667 	 100       	 25.1994   	 0         	 8.44781   	 2.98295   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 34, n: 50, r2left: 50, r2right: 0)                 	 0.001029  	 100       	 0         	 0         	 132.167   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1700, cols: 34, reductionFactor: 37, colBlockingSize: 12)                  	 0.000899014	 8         	 35.9205   	 0         	 4.19702   	 8.55856   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 34, m: 50, k: 50)     	 0.000876531	 100       	 19.3946   	 0         	 5.38486   	 3.60169   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 34)                                                                                          	 0.000845181	 201       	 0         	 0         	 6.46867   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000796474	 100       	 0.627767  	 0         	 2.51107   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000789214	 100       	 31.6771   	 0         	 7.6025    	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 34, n: 50, r: 34, r2: 34)             	 0.000738162	 8         	 42.5966   	 0         	 10.123    	 4.20792   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 34, n: 50, r2: 1)                                                                                          	 0.000733171	 201       	 0         	 0         	 7.45692   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 34)   	 0.000677536	 100       	 25.0909   	 0         	 6.96642   	 3.60169   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 34, m: 34, fromLeft: 1)                	 0.00066287	 809       	 0         	 0         	 22.5735   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000660998	 8         	 0         	 0         	 24.2058   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 34, m: 50, k: 50)  	 0.000571353	 100       	 29.7539   	 0         	 8.26109   	 3.60169   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000566984	 8         	 0         	 0         	 28.2195   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000536179	 100       	 0         	 0         	 7.4602    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 34)                 	 0.000494803	 100       	 0         	 0         	 13.5812   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000463573	 100       	 0         	 0         	 8.62863   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 34, k: 34)   	 0.000460995	 100       	 25.0762   	 0         	 7.90638   	 3.17164   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 34, n: 50, r2left: 1, r2right: 0)                  	 0.000450355	 100       	 0         	 0         	 6.03968   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000436133	 100       	 1.14644   	 0         	 13.7573   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000399776	 101       	 0.631604  	 0         	 10.1057   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 34)                                                           	 0.000369505	 101       	 0         	 0         	 7.43481   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1700, Xcols: 34, r: 34, streamingCols: 0)                   	 0.000367459	 8         	 42.7846   	 0         	 20.2346   	 2.11443   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 34)                                                                                 	 0.000354923	 101       	 0.483767  	 0         	 7.74027   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000340923	 100       	 0.733303  	 0         	 11.7329   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000337808	 1         	 0.760067  	 0         	 0.11841   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 34, m: 1700)                                                                  	 0.000150053	 8         	 0         	 0         	 49.3052   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1700, m: 34)                                                         	 0.00010679	 8         	 0         	 0         	 69.2799   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.7541e-05	 1         	 3.32969   	 0         	 1.33188   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 34, r2: 34)              	 3.033e-05 	 1         	 3.81141   	 0         	 1.20171   	 3.17164   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 34, r: 34, streamingCols: 0)                     	 1.6441e-05	 1         	 3.5156    	 0         	 1.93565   	 1.81624   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5412e-05	 9         	 0         	 0         	 23.3584   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.3161e-05	 1         	 18.9955   	 0         	 4.55892   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 8.431e-06 	 1         	 0         	 0         	 4.7444    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 8.221e-06 	 1         	 0         	 0         	 4.86559   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 34)                                                                                   	 8.121e-06 	 1         	 0.418668  	 0         	 1.67467   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 6.72e-06  	 1         	 0.744048  	 0         	 2.97619   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1700, m: 0, k: 34)  	 5.27e-06  	 100       	 0         	 0         	 8774.19   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 34, m: 50)                                                                    	 4.79e-06  	 1         	 0         	 0         	 5.6785    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.60951   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.60946   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.1907    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.18945   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.83769   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.687055  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.581512  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.465032  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.418698  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.405039  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.340513  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.262211  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.117521  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0611764 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0512632 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.034979  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0327147 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0246911 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.024565  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0244085 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0211122 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0198058 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0195043 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0194781 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0143183 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00983652	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00590922	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00561493	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00338897	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00167728	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109562	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000811315	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000678282	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000436133	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22730462590848 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22730241992704 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22730040666240 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22729839339776 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22729638013312 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22729436686848 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22729235360384 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22729034033920 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22728832707456 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22728631380992 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22728430054528 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22728228728064 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22728027401600 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22727826075136 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22727624748672 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22727423422208 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22727222095744 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22727020769280 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22726819442816 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22726618116352 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22726416789888 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22726215463424 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22726014136960 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22725812810496 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22725611484032 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22725410157568 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22725208831104 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22725007504640 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22724806178176 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22724604851712 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22724403525248 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22724202198784 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22724000868224 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22723799541760 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22723598215296 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22723396888832 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22723195562368 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22722994235904 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22722792909440 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22722591582976 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22722390256512 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22722188930048 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22721987603584 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22721786277120 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22721584950656 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22721383624192 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22721182297728 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22720980971264 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22720779644800 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22720578318336 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22720376991872 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22720175665408 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22719974338944 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22719773012480 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22719571686016 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22719370359552 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22719169033088 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22718967706624 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22718766380160 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22718565053696 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22718363727232 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22718162400768 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22717961074304 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22730356930304 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22730350339840 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 85, m: 85)                                                                 	 0.657315  	 700       	 4.57804   	 0         	 0.185385  	 24.6948   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4250, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.375488  	 600       	 100.785   	 0         	 4.71035   	 21.3964   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4250, r: 85, r2: 85, leftOrthog: 1)        	 0.345297  	 600       	 106.712   	 0         	 15.2662   	 6.99013   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, r1_: 85, n: 50, r2: 85)           	 0.295013  	 600       	 124.901   	 0         	 11.873    	 10.5198   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4250, cols: 35, reductionFactor: 37, colBlockingSize: 12)                  	 0.095449  	 700       	 78.4266   	 0         	 8.79904   	 8.91308   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.0612824 	 100       	 60.5416   	 0         	 2.86836   	 21.1067   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4250, Xcols: 35, r: 35, streamingCols: 0)                   	 0.0549509 	 700       	 66.3206   	 0         	 30.3804   	 2.18301   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 35, Qr2: 85)       	 0.0480978 	 700       	 0         	 0         	 73.9326   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 85)                                                                 	 0.0471343 	 100       	 3.15588   	 0         	 0.187549  	 16.8269   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0356705 	 100       	 2.453     	 0         	 0.169327  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 35, m: 50, k: 2500)   	 0.0324405 	 800       	 215.78    	 0         	 42.2682   	 5.10502   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 85, r2: 85, leftOrthog: 1)        	 0.032325  	 100       	 111.756   	 0         	 16.1349   	 6.92634   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4250, r: 50, r2: 50, leftOrthog: 1)        	 0.0307986 	 100       	 68.9966   	 0         	 16.6891   	 4.13424   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, r1_: 85, n: 50, r2: 50)           	 0.0283334 	 100       	 127.5     	 0         	 12.204    	 10.4474   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, r1_: 50, n: 50, r2: 85)           	 0.0280599 	 100       	 128.742   	 0         	 16.479    	 7.8125    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0258517 	 100       	 84.4212   	 0         	 6.65333   	 12.6886   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4250, m: 35)                                                         	 0.0251851 	 700       	 0         	 0         	 66.1502   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 35, n: 50, r2left: 50, r2right: 35)                	 0.0210423 	 700       	 0         	 0         	 79.1738   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 35, m: 35)                                                                  	 0.0202071 	 909       	 2.57156   	 0         	 1.33513   	 1.92608   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1750, m: 50, k: 35) 	 0.0198767 	 800       	 246.52    	 0         	 48.4588   	 5.08721   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 35, m: 4250)                                                                  	 0.0197493 	 700       	 0         	 0         	 84.3573   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 35, m: 2500, k: 50)	 0.0184258 	 800       	 379.903   	 0         	 74.4176   	 5.10502   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1750, m: 35, k: 35) 	 0.0133954 	 700       	 224.051   	 0         	 51.7238   	 4.33168   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 35, reductionFactor: 37, colBlockingSize: 12)                  	 0.013239  	 100       	 47.5152   	 0         	 5.36143   	 8.86241   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 35, n: 50, r2: 35)                                                                                         	 0.00778142	 808       	 0         	 0         	 101.76    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 85, reductionFactor: 37, colBlockingSize: 12)                    	 0.00662376	 100       	 11.2025   	 0         	 1.38592   	 8.08308   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 35, r: 35, streamingCols: 0)                   	 0.00605915	 100       	 50.5434   	 0         	 23.1864   	 2.17987   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00514661	 8         	 19.4303   	 0         	 3.13993   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00500804	 9         	 0.299517  	 0         	 0.108545  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 35, Qr2: 50)       	 0.00357047	 100       	 0         	 0         	 95.2255   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00267356	 8         	 38.4142   	 0         	 3.05211   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 35)                                                         	 0.00264471	 100       	 0         	 0         	 52.9358   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 35, reductionFactor: 37, colBlockingSize: 12)                    	 0.00210603	 101       	 6.03357   	 0         	 1.14139   	 5.28617   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 35, m: 2500)                                                                  	 0.00198766	 100       	 0         	 0         	 70.4346   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00170847	 8         	 29.266    	 0         	 9.41196   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 85, leftOrthog: 1)          	 0.00157391	 100       	 27.0027   	 0         	 9.02209   	 2.99296   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 35, n: 50, r2left: 50, r2right: 0)                 	 0.0010486 	 100       	 0         	 0         	 133.511   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1750, cols: 35, reductionFactor: 37, colBlockingSize: 12)                  	 0.000996548	 8         	 35.3491   	 0         	 4.01225   	 8.81028   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 35)                                                                                          	 0.000851735	 201       	 0         	 0         	 6.60769   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 35, m: 50, k: 50)     	 0.000841528	 100       	 20.7955   	 0         	 5.70391   	 3.64583   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000818924	 100       	 0.610557  	 0         	 2.44223   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000798578	 100       	 31.3056   	 0         	 7.51335   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 35, n: 50, r: 35, r2: 35)             	 0.000766181	 8         	 44.7675   	 0         	 10.3349   	 4.33168   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 35, n: 50, r2: 1)                                                                                          	 0.000749879	 201       	 0         	 0         	 7.50521   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000696259	 8         	 0         	 0         	 22.98     	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 35, m: 35, fromLeft: 1)                	 0.000691118	 809       	 0         	 0         	 22.9431   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 35)   	 0.000628705	 100       	 27.835    	 0         	 7.63474   	 3.64583   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 35, m: 50, k: 50)  	 0.000574261	 100       	 30.4739   	 0         	 8.35857   	 3.64583   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000558715	 8         	 0         	 0         	 28.6371   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 35, k: 35)   	 0.000522502	 100       	 23.4449   	 0         	 7.23442   	 3.24074   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 35)                 	 0.000502006	 100       	 0         	 0         	 13.5457   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000497101	 100       	 0         	 0         	 8.04665   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000461491	 100       	 0         	 0         	 8.66756   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 35, n: 50, r2left: 1, r2right: 0)                  	 0.000433244	 100       	 0         	 0         	 6.46287   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00041716	 100       	 1.19858   	 0         	 14.383    	 0.0833333 
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1750, Xcols: 35, r: 35, streamingCols: 0)                   	 0.000377679	 8         	 45.4089   	 0         	 20.8622   	 2.17662   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000372953	 101       	 0.677029  	 0         	 10.8325   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 35)                                                           	 0.000367951	 101       	 0         	 0         	 7.68581   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 35)                                                                                 	 0.00034272	 101       	 0.515727  	 0         	 8.25163   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000339897	 100       	 0.735517  	 0         	 11.7683   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000336369	 1         	 0.763319  	 0         	 0.118917  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 35, m: 1750)                                                                  	 0.000212205	 8         	 0         	 0         	 36.9454   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1750, m: 35)                                                         	 0.000120911	 8         	 0         	 0         	 64.8411   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3801e-05	 1         	 3.69812   	 0         	 1.47925   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 35, r2: 35)              	 2.6621e-05	 1         	 4.60163   	 0         	 1.41993   	 3.24074   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 35, r: 35, streamingCols: 0)                     	 2.3081e-05	 1         	 2.6537    	 0         	 1.42541   	 1.8617    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.537e-05 	 9         	 0         	 0         	 23.4223   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.507e-05 	 1         	 16.5893   	 0         	 3.98142   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.84e-06  	 1         	 0.50813   	 0         	 2.03252   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 9.59e-06  	 1         	 0         	 0         	 4.17101   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 35)                                                                                   	 9.36e-06  	 1         	 0.373932  	 0         	 1.49573   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 6.681e-06 	 1         	 0         	 0         	 5.98713   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1750, m: 0, k: 35)  	 5.09e-06  	 100       	 0         	 0         	 9626.72   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 35, m: 50)                                                                    	 4.35e-06  	 1         	 0         	 0         	 6.43678   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.69588   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.69582   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.27381   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.27255   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.90951   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.740119  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.584046  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.469775  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.421939  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.409995  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.352205  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.265559  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.115282  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0631531 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0521298 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0344283 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.033282  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0290245 	 918       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0252152 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0230262 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0225189 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0193522 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0193208 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.019     	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0148143 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00988014	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00595449	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00566414	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00339864	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00141772	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105557	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000838124	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000706488	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00041716	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22772558276480 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22772319250432 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22772117923968 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22771916597504 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22771715271040 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22771513944576 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22771312618112 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22771111291648 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22770909965184 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22770708638720 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22770507312256 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22770305985792 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22770104659328 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22769903332864 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22769702006400 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22769500679936 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22769299353472 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22769098027008 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22768896700544 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22768695374080 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22768494047616 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22768292721152 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22768091394688 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22767890068224 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22767688741760 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22767487415296 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22767286088832 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22767084762368 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22766883435904 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22766682109440 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22766480782976 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22766279456512 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22766078125952 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22765876799488 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22765675473024 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22765474146560 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22765272820096 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22765071493632 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22764870167168 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22764668840704 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22764467514240 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22764266187776 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22764064861312 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22763863534848 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22763662208384 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22763460881920 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22763259555456 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22763058228992 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22762856902528 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22762655576064 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22762454249600 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22762252923136 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22762051596672 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22761850270208 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22761648943744 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22761447617280 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22761246290816 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22761044964352 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22760843637888 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22760642311424 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22760440984960 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22760239658496 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22760038332032 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22772452615936 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22772446025472 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 86, m: 86)                                                                 	 0.654728  	 700       	 4.76026   	 0         	 0.190513  	 24.9865   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4300, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.386944  	 600       	 101.293   	 0         	 4.67908   	 21.6481   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4300, r: 86, r2: 86, leftOrthog: 1)        	 0.352496  	 600       	 108.266   	 0         	 15.3083   	 7.07237   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, r1_: 86, n: 50, r2: 86)           	 0.301351  	 600       	 126.641   	 0         	 11.8984   	 10.6436   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4300, cols: 36, reductionFactor: 37, colBlockingSize: 12)                  	 0.111939  	 700       	 71.5816   	 0         	 7.80905   	 9.1665    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.062221  	 100       	 61.0397   	 0         	 2.85944   	 21.3468   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4300, Xcols: 36, r: 36, streamingCols: 0)                   	 0.0568575 	 700       	 68.6094   	 0         	 30.5569   	 2.2453    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 36, Qr2: 86)       	 0.0491857 	 700       	 0         	 0         	 73.9597   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 86)                                                                 	 0.0473921 	 100       	 3.17563   	 0         	 0.188217  	 16.8722   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0354728 	 100       	 2.46668   	 0         	 0.170272  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 86, r2: 86, leftOrthog: 1)        	 0.0347877 	 100       	 106.302   	 0         	 15.173    	 7.006     
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4300, r: 50, r2: 50, leftOrthog: 1)        	 0.0325799 	 100       	 65.9917   	 0         	 15.9608   	 4.13462   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 36, m: 50, k: 2500)   	 0.030836  	 800       	 233.493   	 0         	 44.9967   	 5.18911   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, r1_: 50, n: 50, r2: 86)           	 0.0281061 	 100       	 131.573   	 0         	 16.7679   	 7.84672   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, r1_: 86, n: 50, r2: 50)           	 0.0280677 	 100       	 131.753   	 0         	 12.4669   	 10.5682   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0274167 	 100       	 80.5389   	 0         	 6.3465    	 12.6903   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 36, m: 4300)                                                                  	 0.0267743 	 700       	 0         	 0         	 64.7546   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1800, m: 50, k: 36) 	 0.0234214 	 800       	 221.336   	 0         	 42.7916   	 5.17241   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4300, m: 36)                                                         	 0.0202931 	 700       	 0         	 0         	 85.4358   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 36, n: 50, r2left: 50, r2right: 36)                	 0.0199642 	 700       	 0         	 0         	 86.8436   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 36, m: 36)                                                                  	 0.0199027 	 909       	 2.84117   	 0         	 1.43374   	 1.98165   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 36, m: 2500, k: 50)	 0.0179295 	 800       	 401.574   	 0         	 77.3878   	 5.18911   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0172124 	 8         	 5.80976   	 0         	 0.938857  	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 36, reductionFactor: 37, colBlockingSize: 12)                  	 0.0145718 	 100       	 45.6714   	 0         	 5.01221   	 9.11203   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1800, m: 36, k: 36) 	 0.0138131 	 700       	 236.436   	 0         	 53.0668   	 4.45545   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 36, n: 50, r2: 36)                                                                                         	 0.00814814	 808       	 0         	 0         	 102.813   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 86, reductionFactor: 37, colBlockingSize: 12)                    	 0.00625212	 100       	 12.1493   	 0         	 1.49658   	 8.11804   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 36, r: 36, streamingCols: 0)                   	 0.00619127	 100       	 52.3317   	 0         	 23.3423   	 2.24193   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00515475	 9         	 0.290992  	 0         	 0.105456  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 36, Qr2: 50)       	 0.0035306 	 100       	 0         	 0         	 97.4338   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 36, m: 2500)                                                                  	 0.00305835	 100       	 0         	 0         	 47.0842   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00281028	 8         	 36.5453   	 0         	 2.90362   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 36, reductionFactor: 37, colBlockingSize: 12)                    	 0.00218152	 101       	 6.16239   	 0         	 1.14671   	 5.37398   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00179165	 8         	 27.9073   	 0         	 8.97499   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 36)                                                         	 0.00164049	 100       	 0         	 0         	 87.7789   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 86, leftOrthog: 1)          	 0.00149404	 100       	 28.781    	 0         	 9.58474   	 3.00279   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 36, n: 50, r2left: 50, r2right: 0)                 	 0.0011231 	 100       	 0         	 0         	 128.217   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1800, cols: 36, reductionFactor: 37, colBlockingSize: 12)                  	 0.00110022	 8         	 34.8418   	 0         	 3.84482   	 9.062     
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 36)                                                                                          	 0.000867511	 201       	 0         	 0         	 6.67288   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000854281	 100       	 0.585288  	 0         	 2.34115   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 36, m: 50, k: 50)     	 0.000826626	 100       	 21.7753   	 0         	 5.90352   	 3.68852   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 36, n: 50, r: 36, r2: 36)             	 0.000814592	 8         	 45.8202   	 0         	 10.2841   	 4.45545   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 36, n: 50, r2: 1)                                                                                          	 0.000757986	 201       	 0         	 0         	 7.63708   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000751935	 100       	 33.2476   	 0         	 7.97941   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 36, m: 36, fromLeft: 1)                	 0.000744738	 809       	 0         	 0         	 22.5253   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000731421	 8         	 0         	 0         	 21.8752   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00069036	 100       	 0         	 0         	 5.79408   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 36)   	 0.000602065	 100       	 29.8971   	 0         	 8.10544   	 3.68852   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 36, k: 36)   	 0.000601814	 100       	 21.5349   	 0         	 6.50832   	 3.30882   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 36, m: 50, k: 50)  	 0.000576027	 100       	 31.2485   	 0         	 8.47183   	 3.68852   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 36)                 	 0.00051217	 100       	 0         	 0         	 13.433    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 36, n: 50, r2left: 1, r2right: 0)                  	 0.000497738	 100       	 0         	 0         	 5.78618   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000495944	 100       	 0         	 0         	 8.06543   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000466892	 8         	 0         	 0         	 34.2692   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00040473	 100       	 1.23539   	 0         	 14.8247   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000396493	 101       	 0.636833  	 0         	 10.1893   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1800, Xcols: 36, r: 36, streamingCols: 0)                   	 0.000387401	 8         	 48.1733   	 0         	 21.5174   	 2.23881   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 36)                                                           	 0.000384764	 101       	 0         	 0         	 7.55996   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 36)                                                                                 	 0.000345706	 101       	 0.52588   	 0         	 8.41409   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000325034	 100       	 0.76915   	 0         	 12.3064   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000209836	 1         	 1.22361   	 0         	 0.190625  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1800, m: 36)                                                         	 0.000150545	 8         	 0         	 0         	 55.0958   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 36, m: 1800)                                                                  	 0.000143293	 8         	 0         	 0         	 57.8842   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.3261e-05	 1         	 2.88944   	 0         	 1.15578   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 36, r: 36, streamingCols: 0)                     	 2.3941e-05	 1         	 2.70665   	 0         	 1.41949   	 1.90678   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.522e-05 	 9         	 0         	 0         	 23.6531   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.3861e-05	 1         	 18.0362   	 0         	 4.32869   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 36, r2: 36)              	 1.112e-05 	 1         	 11.6547   	 0         	 3.5223    	 3.30882   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 36)                                                                                   	 9.21e-06  	 1         	 0.390879  	 0         	 1.56352   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.53e-06  	 1         	 0.586166  	 0         	 2.34467   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 7.27e-06  	 1         	 0         	 0         	 5.50206   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 6.91e-06  	 1         	 0         	 0         	 5.78871   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1800, m: 0, k: 36)  	 4.44e-06  	 100       	 0         	 0         	 11675.7   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 36, m: 50)                                                                    	 4.31e-06  	 1         	 0         	 0         	 6.68213   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.75931   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.75928   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.31244   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.31116   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.94149   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.737593  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.615647  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.483475  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.446773  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.421358  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.358277  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.287465  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.133312  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.065295  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0534067 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0384428 	 1800      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0316855 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0316626 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0316553 	 2         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0304544 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0250575 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0232072 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0220972 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0185055 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.018052  	 18        
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0150545 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0102696 	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00735168	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00328   	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00145551	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106723	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000872021	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000759958	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00040473	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22939494979456 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22939286104064 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22939084777600 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22938883451136 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22938682124672 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22938480798208 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22938279471744 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22938078145280 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22937876818816 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22937675492352 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22937474165888 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22937272839424 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22937071512960 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22936870186496 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22936668860032 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22936467533568 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22936266207104 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22936064880640 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22935863554176 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22935662227712 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22935460901248 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22935259574784 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22935058248320 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22934856921856 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22934655595392 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22934454268928 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22934252942464 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22934051616000 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22933850289536 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22933648963072 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22933447636608 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22933246310144 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22933044979584 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22932843653120 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22932642326656 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22932441000192 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22932239673728 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22932038347264 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22931837020800 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22931635694336 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22931434367872 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22931233041408 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22931031714944 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22930830388480 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22930629062016 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22930427735552 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22930226409088 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22930025082624 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22929823756160 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22929622429696 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22929421103232 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22929219776768 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22929018450304 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22928817123840 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22928615797376 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22928414470912 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22928213144448 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22928011817984 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22927810491520 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22927609165056 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22927407838592 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22927206512128 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22927005185664 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22939389318912 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22939382728448 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 87, m: 87)                                                                 	 0.675103  	 700       	 4.77951   	 0         	 0.189077  	 25.2781   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4350, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.388486  	 600       	 104.452   	 0         	 4.76952   	 21.8998   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4350, r: 87, r2: 87, leftOrthog: 1)        	 0.35395   	 600       	 111.627   	 0         	 15.6021   	 7.15461   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, r1_: 87, n: 50, r2: 87)           	 0.302903  	 600       	 130.438   	 0         	 12.1143   	 10.7673   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4350, cols: 37, reductionFactor: 37, colBlockingSize: 12)                  	 0.110432  	 700       	 77.5368   	 0         	 8.23119   	 9.41988   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.0630188 	 100       	 61.6766   	 0         	 2.85717   	 21.5866   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4350, Xcols: 37, r: 37, streamingCols: 0)                   	 0.0577364 	 700       	 72.2006   	 0         	 31.2883   	 2.30759   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 37, Qr2: 87)       	 0.050669  	 700       	 0         	 0         	 73.4304   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 87)                                                                 	 0.0468488 	 100       	 3.24982   	 0         	 0.192108  	 16.9167   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0360892 	 100       	 2.42455   	 0         	 0.167363  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 87, r2: 87, leftOrthog: 1)        	 0.0350878 	 100       	 107.858   	 0         	 15.2221   	 7.08561   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 37, m: 50, k: 2500)   	 0.0322351 	 800       	 229.563   	 0         	 43.55     	 5.27126   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4350, r: 50, r2: 50, leftOrthog: 1)        	 0.0306558 	 100       	 70.9491   	 0         	 17.1583   	 4.13498   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, r1_: 50, n: 50, r2: 87)           	 0.027963  	 100       	 135.34    	 0         	 17.1741   	 7.88043   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, r1_: 87, n: 50, r2: 50)           	 0.0273119 	 100       	 138.566   	 0         	 12.9634   	 10.689    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0270482 	 100       	 82.5854   	 0         	 6.50691   	 12.692    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 37, m: 37)                                                                  	 0.022803  	 909       	 2.6922    	 0         	 1.32154   	 2.03716   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4350, m: 37)                                                         	 0.0223469 	 700       	 0         	 0         	 80.6662   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1850, m: 50, k: 37) 	 0.0220933 	 800       	 247.858   	 0         	 47.16     	 5.25568   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 37, n: 50, r2left: 50, r2right: 37)                	 0.0207202 	 700       	 0         	 0         	 86.9994   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 37, m: 4350)                                                                  	 0.020388  	 700       	 0         	 0         	 88.4166   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 37, m: 2500, k: 50)	 0.0190462 	 800       	 388.529   	 0         	 73.7071   	 5.27126   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 37, reductionFactor: 37, colBlockingSize: 12)                  	 0.0150708 	 100       	 46.6464   	 0         	 4.98282   	 9.36145   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1850, m: 37, k: 37) 	 0.0144984 	 700       	 244.558   	 0         	 53.4063   	 4.57921   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 37, n: 50, r2: 37)                                                                                         	 0.00811306	 808       	 0         	 0         	 109.074   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 87, reductionFactor: 37, colBlockingSize: 12)                    	 0.00647905	 100       	 11.998    	 0         	 1.4717    	 8.1525    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 37, r: 37, streamingCols: 0)                   	 0.00592047	 100       	 57.8079   	 0         	 25.0905   	 2.30398   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0054427 	 9         	 0.275597  	 0         	 0.0998768 	 2.75937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00528724	 8         	 18.9134   	 0         	 3.05641   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 37, Qr2: 50)       	 0.00353685	 100       	 0         	 0         	 98.3926   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 37)                                                         	 0.00309664	 100       	 0         	 0         	 47.7937   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265554	 8         	 38.6749   	 0         	 3.07282   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 37, m: 2500)                                                                  	 0.00246719	 100       	 0         	 0         	 59.9873   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00236333	 100       	 10.5783   	 0         	 2.53879   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 37, reductionFactor: 37, colBlockingSize: 12)                    	 0.00233012	 101       	 6.09437   	 0         	 1.11623   	 5.45977   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00196375	 8         	 25.4615   	 0         	 8.18841   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 87, leftOrthog: 1)          	 0.00160763	 100       	 27.0584   	 0         	 8.98214   	 3.01247   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1850, cols: 37, reductionFactor: 37, colBlockingSize: 12)                  	 0.00111273	 8         	 37.4014   	 0         	 4.01573   	 9.31373   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 37, n: 50, r2left: 50, r2right: 0)                 	 0.00109271	 100       	 0         	 0         	 135.443   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 37, n: 50, r: 37, r2: 37)             	 0.000873624	 8         	 46.3843   	 0         	 10.1293   	 4.57921   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 37, m: 50, k: 50)     	 0.000872934	 100       	 21.1929   	 0         	 5.68199   	 3.72984   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000872571	 100       	 0.573019  	 0         	 2.29208   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 37)                                                                                          	 0.000860742	 201       	 0         	 0         	 6.91218   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 37, m: 37, fromLeft: 1)                	 0.000790239	 809       	 0         	 0         	 22.424    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 37, n: 50, r2: 1)                                                                                          	 0.000766691	 201       	 0         	 0         	 7.7601    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000705198	 8         	 0         	 0         	 22.6887   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 37)   	 0.000624322	 100       	 29.6321   	 0         	 7.94462   	 3.72984   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 37, m: 50, k: 50)  	 0.000591528	 100       	 31.2749   	 0         	 8.38506   	 3.72984   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 37, k: 37)   	 0.000531697	 100       	 25.7477   	 0         	 7.6269    	 3.37591   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 37)                 	 0.000529833	 100       	 0         	 0         	 13.1362   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000521754	 100       	 0         	 0         	 7.66645   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 37, n: 50, r2left: 1, r2right: 0)                  	 0.000491474	 100       	 0         	 0         	 6.0227    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000481194	 8         	 0         	 0         	 33.2506   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000455639	 100       	 0         	 0         	 8.77888   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1850, Xcols: 37, r: 37, streamingCols: 0)                   	 0.000421273	 8         	 48.0952   	 0         	 20.9019   	 2.301     
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000410666	 100       	 1.21753   	 0         	 14.6104   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00038413	 101       	 0.65733   	 0         	 10.5173   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000356269	 1         	 0.720682  	 0         	 0.112275  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 37)                                                           	 0.000356238	 101       	 0         	 0         	 8.39214   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 37)                                                                                 	 0.000346656	 101       	 0.539007  	 0         	 8.62411   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000322137	 100       	 0.776067  	 0         	 12.4171   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 37, m: 1850)                                                                  	 0.000137072	 8         	 0         	 0         	 63.9197   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1850, m: 37)                                                         	 0.000132085	 8         	 0         	 0         	 66.333    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3121e-05	 1         	 3.77404   	 0         	 1.50962   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 37, r: 37, streamingCols: 0)                     	 2.3021e-05	 1         	 2.97337   	 0         	 1.52365   	 1.95148   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.635e-05 	 1         	 15.2905   	 0         	 3.66972   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.539e-05 	 9         	 0         	 0         	 23.3918   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.991e-06 	 1         	 0.50045   	 0         	 2.0018    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 37)                                                                                   	 9.17e-06  	 1         	 0.40349   	 0         	 1.61396   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 9.071e-06 	 1         	 0         	 0         	 4.40966   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 37, r2: 37)              	 7.981e-06 	 1         	 17.1532   	 0         	 5.08107   	 3.37591   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 5.99e-06  	 1         	 0         	 0         	 6.6778    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 37, m: 50)                                                                    	 4.7e-06   	 1         	 0         	 0         	 6.29787   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1850, m: 0, k: 37)  	 4.67e-06  	 100       	 0         	 0         	 11725.9   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.79105   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.79102   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.3403    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.339     	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.96643   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.758041  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.61699   	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.485575  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.450649  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.421301  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.360541  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.287469  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.132461  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.066098  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0546615 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0377524 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.033108  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0282457 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.026643  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0234873 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0228342 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0203121 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0202801 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0196377 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0154709 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0102622 	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00722357	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0061852 	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00332028	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00227196	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105292	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000891732	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000805629	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000410666	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22710676801408 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22710444877824 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22710243551360 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22710042224896 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22709840898432 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22709639571968 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22709438245504 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22709236919040 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22709035592576 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22708834266112 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22708632939648 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22708431613184 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22708230286720 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22708028960256 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22707827633792 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22707626307328 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22707424980864 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22707223654400 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22707022327936 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22706821001472 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22706619675008 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22706418348544 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22706217022080 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22706015695616 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22705814369152 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22705613042688 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22705411716224 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22705210389760 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22705009063296 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22704807736832 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22704606410368 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22704405083904 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22704203753344 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22704002426880 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22703801100416 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22703599773952 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22703398447488 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22703197121024 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22702995794560 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22702794468096 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22702593141632 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22702391815168 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22702190488704 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22701989162240 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22701787835776 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22701586509312 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22701385182848 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22701183856384 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22700982529920 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22700781203456 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22700579876992 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22700378550528 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22700177224064 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22699975897600 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22699774571136 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22699573244672 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22699371918208 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22699170591744 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22698969265280 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22698767938816 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22698566612352 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22698365285888 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22698163959424 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22710571140864 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22710564550400 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 88, m: 88)                                                                 	 0.672455  	 700       	 4.9657    	 0         	 0.194202  	 25.5698   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4400, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.40235   	 600       	 104.37    	 0         	 4.71165   	 22.1516   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4400, r: 88, r2: 88, leftOrthog: 1)        	 0.368425  	 600       	 110.981   	 0         	 15.3356   	 7.23684   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, r1_: 88, n: 50, r2: 88)           	 0.314263  	 600       	 130.109   	 0         	 11.9463   	 10.8911   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4400, cols: 38, reductionFactor: 37, colBlockingSize: 12)                  	 0.112658  	 700       	 81.0899   	 0         	 8.38293   	 9.67322   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.0652701 	 100       	 60.926    	 0         	 2.7914    	 21.8263   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4400, Xcols: 38, r: 38, streamingCols: 0)                   	 0.0599662 	 700       	 74.1672   	 0         	 31.2957   	 2.36988   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 38, Qr2: 88)       	 0.0509149 	 700       	 0         	 0         	 74.7255   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 88)                                                                 	 0.0478237 	 100       	 3.22016   	 0         	 0.189864  	 16.9604   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0379474 	 100       	 2.30583   	 0         	 0.159168  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 88, r2: 88, leftOrthog: 1)        	 0.0358882 	 100       	 107.891   	 0         	 15.0576   	 7.16519   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4400, r: 50, r2: 50, leftOrthog: 1)        	 0.0331933 	 100       	 66.2784   	 0         	 16.0273   	 4.13534   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 38, m: 50, k: 2500)   	 0.0316907 	 800       	 239.818   	 0         	 44.8132   	 5.35151   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, r1_: 50, n: 50, r2: 88)           	 0.0312071 	 100       	 124.074   	 0         	 15.6785   	 7.91367   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, r1_: 88, n: 50, r2: 50)           	 0.0277143 	 100       	 139.711   	 0         	 12.9246   	 10.8097   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.026428  	 100       	 85.4948   	 0         	 6.73527   	 12.6936   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1900, m: 50, k: 38) 	 0.0242361 	 800       	 238.322   	 0         	 44.6541   	 5.33708   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 38, m: 38)                                                                  	 0.022463  	 909       	 2.96061   	 0         	 1.41471   	 2.09273   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4400, m: 38)                                                         	 0.0220043 	 700       	 0         	 0         	 85.1035   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 38, n: 50, r2left: 50, r2right: 38)                	 0.0219947 	 700       	 0         	 0         	 85.1406   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 38, m: 4400)                                                                  	 0.0219356 	 700       	 0         	 0         	 85.3698   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 38, m: 2500, k: 50)	 0.0187319 	 800       	 405.725   	 0         	 75.8151   	 5.35151   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 38, reductionFactor: 37, colBlockingSize: 12)                  	 0.0155764 	 100       	 47.6048   	 0         	 4.95333   	 9.61067   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1900, m: 38, k: 38) 	 0.0149266 	 700       	 257.329   	 0         	 54.7163   	 4.70297   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 38, n: 50, r2: 38)                                                                                         	 0.00870773	 808       	 0         	 0         	 107.192   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 88, reductionFactor: 37, colBlockingSize: 12)                    	 0.00680759	 100       	 11.683    	 0         	 1.42711   	 8.18645   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 38, r: 38, streamingCols: 0)                   	 0.00613326	 100       	 58.8594   	 0         	 24.8771   	 2.36601   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00529656	 9         	 0.283202  	 0         	 0.102633  	 2.75937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00503339	 8         	 19.8673   	 0         	 3.21056   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 38, Qr2: 50)       	 0.00351336	 100       	 0         	 0         	 100.189   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 38, m: 2500)                                                                  	 0.00290726	 100       	 0         	 0         	 52.2829   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 38)                                                         	 0.00285296	 100       	 0         	 0         	 53.278    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265905	 8         	 38.6238   	 0         	 3.06877   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 38, n: 50, r2left: 50, r2right: 0)                 	 0.00245805	 100       	 0         	 0         	 61.8376   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 38, reductionFactor: 37, colBlockingSize: 12)                    	 0.00224387	 101       	 6.67534   	 0         	 1.20415   	 5.54361   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00168879	 8         	 29.6069   	 0         	 9.52159   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 88, leftOrthog: 1)          	 0.00162904	 100       	 27.0098   	 0         	 8.93778   	 3.02198   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1900, cols: 38, reductionFactor: 37, colBlockingSize: 12)                  	 0.00112671	 8         	 40.0138   	 0         	 4.18316   	 9.56545   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 38, n: 50, r: 38, r2: 38)             	 0.000908665	 8         	 48.31     	 0         	 10.2722   	 4.70297   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 38, m: 50, k: 50)     	 0.000872575	 100       	 21.7746   	 0         	 5.77601   	 3.76984   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 38, m: 38, fromLeft: 1)                	 0.000853271	 809       	 0         	 0         	 21.9053   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 38)                                                                                          	 0.00082014	 201       	 0         	 0         	 7.45044   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000776446	 100       	 0.64396   	 0         	 2.57584   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000774435	 100       	 32.2816   	 0         	 7.74758   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000736797	 8         	 0         	 0         	 21.7156   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 38, n: 50, r2: 1)                                                                                          	 0.00072424	 201       	 0         	 0         	 8.43698   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 38)   	 0.00062181	 100       	 30.556    	 0         	 8.10537   	 3.76984   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 38, m: 50, k: 50)  	 0.000584131	 100       	 32.527    	 0         	 8.6282    	 3.76984   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 38)                 	 0.000577635	 100       	 0         	 0         	 12.1876   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 38, k: 38)   	 0.000564661	 100       	 25.5729   	 0         	 7.42959   	 3.44203   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000503716	 100       	 0         	 0         	 7.94098   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000495903	 8         	 0         	 0         	 32.2644   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 38, n: 50, r2left: 1, r2right: 0)                  	 0.000475381	 100       	 0         	 0         	 6.39487   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000468291	 100       	 0         	 0         	 8.5417    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1900, Xcols: 38, r: 38, streamingCols: 0)                   	 0.000432944	 8         	 50.6966   	 0         	 21.4527   	 2.36318   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000413729	 100       	 1.20852   	 0         	 14.5022   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000366925	 101       	 0.688152  	 0         	 11.0104   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 38)                                                           	 0.000357349	 101       	 0         	 0         	 8.59216   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 38)                                                                                 	 0.000336719	 101       	 0.569911  	 0         	 9.11858   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000335768	 100       	 0.744562  	 0         	 11.913    	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000198475	 1         	 1.29365   	 0         	 0.201537  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 38, m: 1900)                                                                  	 0.000150923	 8         	 0         	 0         	 61.2339   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1900, m: 38)                                                         	 0.000137142	 8         	 0         	 0         	 67.3871   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6131e-05	 1         	 3.45963   	 0         	 1.38385   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 38, r: 38, streamingCols: 0)                     	 2.3481e-05	 1         	 3.07483   	 0         	 1.54065   	 1.9958    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.529e-05 	 9         	 0         	 0         	 23.5448   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.458e-05 	 1         	 17.1468   	 0         	 4.11523   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 38, r2: 38)              	 1.1011e-05	 1         	 13.1142   	 0         	 3.81001   	 3.44203   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 9.661e-06 	 1         	 0         	 0         	 4.14036   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 38)                                                                                   	 8.01e-06  	 1         	 0.474407  	 0         	 1.89763   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 7.911e-06 	 1         	 0.632031  	 0         	 2.52813   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 5.8e-06   	 1         	 0         	 0         	 6.89655   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1900, m: 0, k: 38)  	 4.95e-06  	 100       	 0         	 0         	 11668.7   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 38, m: 50)                                                                    	 4.58e-06  	 1         	 0         	 0         	 6.63755   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.8485    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.84845   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.38809   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.38686   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.00069   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.758226  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.635318  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.501502  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.460286  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.439135  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.373958  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.293279  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.135014  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0682808 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0548965 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0403541 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0325632 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0277595 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0260982 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0255057 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0255001 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0196082 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0195802 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.019316  	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0155971 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0107558 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00596765	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00589452	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00334533	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00162099	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00103941	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000868561	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000792367	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000413729	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22365184300928 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22364968445952 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22364767119488 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22364565793024 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22364364466560 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22364163140096 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22363961813632 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22363760487168 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22363559160704 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22363357834240 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22363156507776 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22362955181312 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22362753854848 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22362552528384 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22362351201920 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22362149875456 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22361948548992 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22361747222528 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22361545896064 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22361344569600 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22361143243136 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22360941916672 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22360740590208 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22360539263744 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22360337937280 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22360136610816 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22359935284352 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22359733957888 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22359532631424 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22359331304960 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22359129978496 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22358928652032 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22358727321472 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22358525995008 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22358324668544 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22358123342080 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22357922015616 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22357720689152 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22357519362688 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22357318036224 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22357116709760 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22356915383296 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22356714056832 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22356512730368 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22356311403904 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22356110077440 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22355908750976 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22355707424512 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22355506098048 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22355304771584 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22355103445120 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22354902118656 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22354700792192 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22354499465728 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22354298139264 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22354096812800 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22353895486336 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22353694159872 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22353492833408 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22353291506944 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22353090180480 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22352888854016 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22352687527552 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22365078640384 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22365072049920 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 89, m: 89)                                                                 	 0.69746   	 700       	 4.95275   	 0         	 0.191511  	 25.8615   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4450, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.412646  	 600       	 105.275   	 0         	 4.69909   	 22.4033   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4450, r: 89, r2: 89, leftOrthog: 1)        	 0.398638  	 600       	 106.107   	 0         	 14.4973   	 7.31908   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, r1_: 89, n: 50, r2: 89)           	 0.326512  	 600       	 129.546   	 0         	 11.761    	 11.0149   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4450, cols: 39, reductionFactor: 37, colBlockingSize: 12)                  	 0.118677  	 700       	 82.0037   	 0         	 8.26107   	 9.92652   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.0663971 	 100       	 61.2608   	 0         	 2.77628   	 22.0658   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4450, Xcols: 39, r: 39, streamingCols: 0)                   	 0.0620038 	 700       	 76.4132   	 0         	 31.4177   	 2.43217   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 39, Qr2: 89)       	 0.0544355 	 700       	 0         	 0         	 71.4563   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 89)                                                                 	 0.0486507 	 100       	 3.20139   	 0         	 0.188281  	 17.0033   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0381617 	 100       	 2.29288   	 0         	 0.158274  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 89, r2: 89, leftOrthog: 1)        	 0.0357077 	 100       	 110.915   	 0         	 15.3097   	 7.24473   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 39, m: 50, k: 2500)   	 0.0332998 	 800       	 234.236   	 0         	 43.1378   	 5.42994   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4450, r: 50, r2: 50, leftOrthog: 1)        	 0.0332891 	 100       	 66.8387   	 0         	 16.1614   	 4.13569   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, r1_: 50, n: 50, r2: 89)           	 0.0300742 	 100       	 131.691   	 0         	 16.5723   	 7.94643   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, r1_: 89, n: 50, r2: 50)           	 0.0291008 	 100       	 136.096   	 0         	 12.4511   	 10.9304   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0263522 	 100       	 86.7152   	 0         	 6.83055   	 12.6952   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 39, m: 4450)                                                                  	 0.0242604 	 700       	 0         	 0         	 80.1206   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 39, m: 39)                                                                  	 0.0241087 	 909       	 2.9821    	 0         	 1.38812   	 2.14831   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1950, m: 50, k: 39) 	 0.0234877 	 800       	 259.03    	 0         	 47.8209   	 5.41667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 39, n: 50, r2left: 50, r2right: 39)                	 0.0234779 	 700       	 0         	 0         	 82.7912   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4450, m: 39)                                                         	 0.0226685 	 700       	 0         	 0         	 85.747    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 39, m: 2500, k: 50)	 0.0191129 	 800       	 408.101   	 0         	 75.1575   	 5.42994   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 39, reductionFactor: 37, colBlockingSize: 12)                  	 0.0163197 	 100       	 47.8595   	 0         	 4.85405   	 9.8597    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1950, m: 39, k: 39) 	 0.0157495 	 700       	 263.648   	 0         	 54.6224   	 4.82673   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 39, n: 50, r2: 39)                                                                                         	 0.00904046	 808       	 0         	 0         	 108.753   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 89, reductionFactor: 37, colBlockingSize: 12)                    	 0.00712779	 100       	 11.4132   	 0         	 1.38848   	 8.21991   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 39, r: 39, streamingCols: 0)                   	 0.00629593	 100       	 60.3962   	 0         	 24.8746   	 2.42803   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00516068	 8         	 19.3773   	 0         	 3.13137   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00505851	 9         	 0.296529  	 0         	 0.107462  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 39, Qr2: 50)       	 0.00359546	 100       	 0         	 0         	 99.0137   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 39, m: 2500)                                                                  	 0.00285735	 100       	 0         	 0         	 54.5961   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00270213	 8         	 38.0081   	 0         	 3.01984   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 39)                                                         	 0.00263197	 100       	 0         	 0         	 59.2711   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 39, n: 50, r2left: 50, r2right: 0)                 	 0.00251014	 100       	 0         	 0         	 62.1478   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 39, reductionFactor: 37, colBlockingSize: 12)                    	 0.00248897	 101       	 6.33888   	 0         	 1.1268    	 5.62557   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00171013	 8         	 29.2375   	 0         	 9.40278   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 89, leftOrthog: 1)          	 0.00155723	 100       	 28.5764   	 0         	 9.427     	 3.03134   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1950, cols: 39, reductionFactor: 37, colBlockingSize: 12)                  	 0.00118832	 8         	 41.014    	 0         	 4.17778   	 9.81717   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 39, n: 50, r: 39, r2: 39)             	 0.000987635	 8         	 48.0493   	 0         	 9.95484   	 4.82673   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 39, m: 50, k: 50)     	 0.000883357	 100       	 22.0749   	 0         	 5.79607   	 3.80859   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00084588	 100       	 0.5911    	 0         	 2.3644    	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 39, m: 39, fromLeft: 1)                	 0.000833006	 809       	 0         	 0         	 23.6347   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 39)                                                                                          	 0.000829431	 201       	 0         	 0         	 7.56085   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000793468	 100       	 31.5073   	 0         	 7.56174   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 39, n: 50, r2: 1)                                                                                          	 0.000778447	 201       	 0         	 0         	 8.05604   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000735891	 8         	 0         	 0         	 21.7424   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 39, m: 50, k: 50)  	 0.000669985	 100       	 29.1051   	 0         	 7.64196   	 3.80859   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 39)   	 0.000664164	 100       	 29.3602   	 0         	 7.70894   	 3.80859   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 39, k: 39)   	 0.000643337	 100       	 23.6424   	 0         	 6.7411    	 3.50719   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000594526	 8         	 0         	 0         	 26.9122   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 39)                 	 0.000558367	 100       	 0         	 0         	 12.7515   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000501638	 100       	 0         	 0         	 7.97388   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 39, n: 50, r2left: 1, r2right: 0)                  	 0.000474624	 100       	 0         	 0         	 6.57362   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00045013	 100       	 0         	 0         	 8.88632   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1950, Xcols: 39, r: 39, streamingCols: 0)                   	 0.000446002	 8         	 53.2007   	 0         	 21.935    	 2.42537   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000430502	 100       	 1.16143   	 0         	 13.9372   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00039352	 101       	 0.641645  	 0         	 10.2663   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 39)                                                           	 0.000381501	 101       	 0         	 0         	 8.26      	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 39)                                                                                 	 0.000359873	 101       	 0.547276  	 0         	 8.75642   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000330484	 100       	 0.756466  	 0         	 12.1035   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000311958	 1         	 0.823049  	 0         	 0.128222  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 39, m: 1950)                                                                  	 0.000158665	 8         	 0         	 0         	 61.3519   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1950, m: 39)                                                         	 0.000135685	 8         	 0         	 0         	 71.7426   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4991e-05	 1         	 3.57235   	 0         	 1.42894   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 39, r: 39, streamingCols: 0)                     	 2.5611e-05	 1         	 2.96943   	 0         	 1.45578   	 2.03975   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.892e-05 	 1         	 13.2135   	 0         	 3.17125   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5301e-05	 9         	 0         	 0         	 23.5279   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.0761e-05	 1         	 0.464641  	 0         	 1.85856   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 39, r2: 39)              	 1.0031e-05	 1         	 15.163    	 0         	 4.3234    	 3.50719   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 7.14e-06  	 1         	 0         	 0         	 5.60224   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 7.11e-06  	 1         	 0         	 0         	 5.62588   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 39)                                                                                   	 6.93e-06  	 1         	 0.562771  	 0         	 2.25108   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 39, m: 50)                                                                    	 4.92e-06  	 1         	 0         	 0         	 6.34146   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1950, m: 0, k: 39)  	 4.73e-06  	 100       	 0         	 0         	 12862.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.97056   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.97053   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.48971   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.48844   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.08935   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.784273  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.654211  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.513179  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.480751  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.469192  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.38648   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.3049    	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.142233  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0705165 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0584811 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0405494 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0341832 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0291672 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.027883  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.027021  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0265607 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0199617 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0199315 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0197829 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0163548 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.01115   	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00620244	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00617727	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00342681	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00164061	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108388	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000863571	 102       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000848307	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000430502	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23405990639488 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23405759817728 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23405558491264 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23405357164800 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23405155838336 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23404954511872 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23404753185408 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23404551858944 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23404350532480 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23404149206016 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23403947879552 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23403746553088 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23403545226624 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23403343900160 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23403142573696 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23402941247232 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23402739920768 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23402538594304 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23402337267840 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23402135941376 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23401934614912 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23401733288448 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23401531961984 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23401330635520 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23401129309056 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23400927982592 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23400726656128 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23400525329664 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23400324003200 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23400122676736 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23399921350272 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23399720023808 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23399518693248 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23399317366784 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23399116040320 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23398914713856 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23398713387392 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23398512060928 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23398310734464 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23398109408000 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23397908081536 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23397706755072 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23397505428608 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23397304102144 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23397102775680 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23396901449216 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23396700122752 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23396498796288 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23396297469824 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23396096143360 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23395894816896 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23395693490432 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23395492163968 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23395290837504 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23395089511040 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23394888184576 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23394686858112 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23394485531648 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23394284205184 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23394082878720 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23393881552256 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23393680225792 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23393478899328 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23405884978944 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23405878388480 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 90, m: 90)                                                                 	 0.70819   	 700       	 5.04399   	 0         	 0.192864  	 26.1531   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4500, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.418842  	 600       	 107.253   	 0         	 4.7342    	 22.655    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4500, r: 90, r2: 90, leftOrthog: 1)        	 0.40541   	 600       	 107.891   	 0         	 14.5772   	 7.40132   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, r1_: 90, n: 50, r2: 90)           	 0.332569  	 600       	 131.521   	 0         	 11.8077   	 11.1386   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4500, cols: 40, reductionFactor: 37, colBlockingSize: 12)                  	 0.1295    	 700       	 79.9416   	 0         	 7.85298   	 10.1798   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.0684841 	 100       	 60.7361   	 0         	 2.72297   	 22.3051   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4500, Xcols: 40, r: 40, streamingCols: 0)                   	 0.0646342 	 700       	 77.9773   	 0         	 31.2602   	 2.49446   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 40, Qr2: 90)       	 0.0548953 	 700       	 0         	 0         	 72.4287   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 90)                                                                 	 0.0515453 	 100       	 3.05557   	 0         	 0.17926   	 17.0455   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 90, r2: 90, leftOrthog: 1)        	 0.0382337 	 100       	 105.928   	 0         	 14.4627   	 7.32422   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0369282 	 100       	 2.36946   	 0         	 0.163561  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4500, r: 50, r2: 50, leftOrthog: 1)        	 0.033145  	 100       	 67.8834   	 0         	 16.4127   	 4.13603   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 40, m: 4500)                                                                  	 0.0328344 	 700       	 0         	 0         	 61.3991   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, r1_: 50, n: 50, r2: 90)           	 0.0311439 	 100       	 130.042   	 0         	 16.2985   	 7.97872   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 40, m: 50, k: 2500)   	 0.0293266 	 800       	 272.79    	 0         	 49.5387   	 5.50661   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, r1_: 90, n: 50, r2: 50)           	 0.0291344 	 100       	 139.011   	 0         	 12.5789   	 11.0511   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2000, m: 50, k: 40) 	 0.027189  	 800       	 235.389   	 0         	 42.8409   	 5.49451   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0264145 	 100       	 87.4827   	 0         	 6.89015   	 12.6968   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 40, m: 40)                                                                  	 0.0247026 	 909       	 3.14003   	 0         	 1.42481   	 2.20382   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 40, n: 50, r2left: 50, r2right: 40)                	 0.0235999 	 700       	 0         	 0         	 85.424    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4500, m: 40)                                                         	 0.0235241 	 700       	 0         	 0         	 85.6995   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 40, reductionFactor: 37, colBlockingSize: 12)                  	 0.0181086 	 100       	 45.3719   	 0         	 4.48848   	 10.1085   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 40, m: 2500, k: 50)	 0.0178024 	 800       	 449.379   	 0         	 81.6071   	 5.50661   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2000, m: 40, k: 40) 	 0.0163592 	 700       	 273.852   	 0         	 55.3181   	 4.9505    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 90, reductionFactor: 37, colBlockingSize: 12)                    	 0.0110471 	 100       	 7.53039   	 0         	 0.912454  	 8.2529    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 40, n: 50, r2: 40)                                                                                         	 0.00962295	 808       	 0         	 0         	 107.476   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 40, r: 40, streamingCols: 0)                   	 0.00663903	 100       	 60.2498   	 0         	 24.1963   	 2.49004   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00494306	 8         	 20.2304   	 0         	 3.26923   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00490575	 9         	 0.305762  	 0         	 0.110809  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 40, Qr2: 50)       	 0.003575  	 100       	 0         	 0         	 100.699   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 40, m: 2500)                                                                  	 0.00343319	 100       	 0         	 0         	 46.6039   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 40)                                                         	 0.00337301	 100       	 0         	 0         	 47.4353   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 40, reductionFactor: 37, colBlockingSize: 12)                    	 0.00302994	 101       	 5.47759   	 0         	 0.960019  	 5.70571   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00259307	 8         	 39.6066   	 0         	 3.14685   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 90, leftOrthog: 1)          	 0.00217331	 100       	 20.7058   	 0         	 6.8099    	 3.04054   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00208756	 8         	 23.9515   	 0         	 7.70279   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2000, cols: 40, reductionFactor: 37, colBlockingSize: 12)                  	 0.00123316	 8         	 42.6414   	 0         	 4.23496   	 10.0689   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 40, n: 50, r: 40, r2: 40)             	 0.00102704	 8         	 49.8522   	 0         	 10.0701   	 4.9505    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 40, n: 50, r2left: 50, r2right: 0)                 	 0.00102236	 100       	 0         	 0         	 156.501   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 40, m: 40, fromLeft: 1)                	 0.000876246	 809       	 0         	 0         	 23.6354   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 40, m: 50, k: 50)     	 0.00086014	 100       	 23.252    	 0         	 6.04553   	 3.84615   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 40)                                                                                          	 0.000819736	 201       	 0         	 0         	 7.84643   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000803494	 100       	 0.622282  	 0         	 2.48913   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000793397	 100       	 31.5101   	 0         	 7.56242   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 40, n: 50, r2: 1)                                                                                          	 0.000753707	 201       	 0         	 0         	 8.53382   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000689995	 8         	 0         	 0         	 23.1886   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 40)   	 0.000675042	 100       	 29.6278   	 0         	 7.70322   	 3.84615   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 40, k: 40)   	 0.000670146	 100       	 23.8754   	 0         	 6.68511   	 3.57143   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000582016	 8         	 0         	 0         	 27.4907   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 40)                 	 0.000534038	 100       	 0         	 0         	 13.4822   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 40, m: 50, k: 50)  	 0.00051926	 100       	 38.5164   	 0         	 10.0143   	 3.84615   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000499433	 100       	 0         	 0         	 8.00908   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 40, n: 50, r2left: 1, r2right: 0)                  	 0.000489269	 100       	 0         	 0         	 6.54037   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2000, Xcols: 40, r: 40, streamingCols: 0)                   	 0.000474502	 8         	 53.9513   	 0         	 21.6884   	 2.48756   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000462586	 100       	 0         	 0         	 8.64704   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000400589	 100       	 1.24816   	 0         	 14.9779   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00038824	 101       	 0.650371  	 0         	 10.4059   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 40)                                                           	 0.000372274	 101       	 0         	 0         	 8.68178   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 40)                                                                                 	 0.0003412 	 101       	 0.592028  	 0         	 9.47245   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000327286	 100       	 0.763858  	 0         	 12.2217   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 40, m: 2000)                                                                  	 0.000181116	 8         	 0         	 0         	 56.5384   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000176404	 1         	 1.4555    	 0         	 0.226752  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2000, m: 40)                                                         	 0.000145114	 8         	 0         	 0         	 70.5652   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.8261e-05	 1         	 2.59008   	 0         	 1.03603   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 40, r: 40, streamingCols: 0)                     	 2.5821e-05	 1         	 3.09825   	 0         	 1.48716   	 2.08333   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.569e-05 	 1         	 15.9337   	 0         	 3.82409   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.522e-05 	 9         	 0         	 0         	 23.6531   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 40, r2: 40)              	 1.259e-05 	 1         	 12.7085   	 0         	 3.55838   	 3.57143   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 40)                                                                                   	 9.311e-06 	 1         	 0.429599  	 0         	 1.7184    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 7.621e-06 	 1         	 0.656082  	 0         	 2.62433   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 7.14e-06  	 1         	 0         	 0         	 5.60224   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 6.78e-06  	 1         	 0         	 0         	 5.89971   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2000, m: 0, k: 40)  	 5.13e-06  	 100       	 0         	 0         	 12475.6   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 40, m: 50)                                                                    	 4.74e-06  	 1         	 0         	 0         	 6.75105   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.05665   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.0566    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.54915   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.54792   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.13944   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.796663  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.679429  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.525314  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.50737   	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.478962  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.393641  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.334637  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.15515   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0739094 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0589329 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0448985 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0370422 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0301867 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0296083 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0281116 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0256456 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0198189 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0197896 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0183216 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0159814 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0116958 	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0080681 	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00599838	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00331126	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00161346	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105673	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000891466	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000820426	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000400589	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22456804079488 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22456572045312 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22456370718848 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22456169392384 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22455968065920 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22455766739456 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22455565412992 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22455364086528 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22455162760064 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22454961433600 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22454760107136 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22454558780672 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22454357454208 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22454156127744 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22453954801280 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22453753474816 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22453552148352 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22453350821888 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22453149495424 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22452948168960 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22452746842496 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22452545516032 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22452344189568 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22452142863104 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22451941536640 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22451740210176 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22451538883712 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22451337557248 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22451136230784 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22450934904320 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22450733577856 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22450532251392 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22450330920832 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22450129594368 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22449928267904 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22449726941440 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22449525614976 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22449324288512 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22449122962048 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22448921635584 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22448720309120 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22448518982656 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22448317656192 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22448116329728 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22447915003264 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22447713676800 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22447512350336 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22447311023872 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22447109697408 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22446908370944 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22446707044480 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22446505718016 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22446304391552 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22446103065088 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22445901738624 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22445700412160 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22445499085696 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22445297759232 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22445096432768 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22444895106304 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22444693779840 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22444492453376 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22444291126912 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22456698418944 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22456691828480 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 91, m: 91)                                                                 	 0.729085  	 700       	 5.06456   	 0         	 0.191514  	 26.4448   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4550, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.425204  	 600       	 109.209   	 0         	 4.76756   	 22.9067   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4550, r: 91, r2: 91, leftOrthog: 1)        	 0.392953  	 600       	 115.063   	 0         	 15.3754   	 7.48355   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, r1_: 91, n: 50, r2: 91)           	 0.339904  	 600       	 133.021   	 0         	 11.8111   	 11.2624   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4550, cols: 41, reductionFactor: 37, colBlockingSize: 12)                  	 0.132     	 700       	 83.3134   	 0         	 7.98556   	 10.433    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.0690909 	 100       	 61.548    	 0         	 2.7301    	 22.5443   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4550, Xcols: 41, r: 41, streamingCols: 0)                   	 0.0663562 	 700       	 80.6856   	 0         	 31.558    	 2.55674   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 41, Qr2: 91)       	 0.0564591 	 700       	 0         	 0         	 71.9699   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 91)                                                                 	 0.0501247 	 100       	 3.17708   	 0         	 0.185936  	 17.0869   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 91, r2: 91, leftOrthog: 1)        	 0.0381462 	 100       	 108.543   	 0         	 14.6607   	 7.40367   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0370514 	 100       	 2.36158   	 0         	 0.163017  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 41, m: 50, k: 2500)   	 0.0341178 	 800       	 240.343   	 0         	 43.0602   	 5.58157   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4550, r: 50, r2: 50, leftOrthog: 1)        	 0.0336935 	 100       	 67.5205   	 0         	 16.3236   	 4.13636   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, r1_: 50, n: 50, r2: 91)           	 0.0318143 	 100       	 130.146   	 0         	 16.2468   	 8.01056   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, r1_: 91, n: 50, r2: 50)           	 0.0298872 	 100       	 138.537   	 0         	 12.4008   	 11.1717   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4550, m: 41)                                                         	 0.0273556 	 700       	 0         	 0         	 76.3779   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 41, m: 4550)                                                                  	 0.0269538 	 700       	 0         	 0         	 77.5165   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0267207 	 100       	 87.4411   	 0         	 6.88605   	 12.6983   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 41, m: 41)                                                                  	 0.0262645 	 909       	 3.1804    	 0         	 1.40764   	 2.25939   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2050, m: 50, k: 41) 	 0.025443  	 800       	 264.277   	 0         	 47.4409   	 5.57065   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 41, n: 50, r2left: 50, r2right: 41)                	 0.024736  	 700       	 0         	 0         	 84.4664   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 41, m: 2500, k: 50)	 0.0196563 	 800       	 417.17    	 0         	 74.7406   	 5.58157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 41, reductionFactor: 37, colBlockingSize: 12)                  	 0.0178878 	 100       	 48.2574   	 0         	 4.65932   	 10.3572   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2050, m: 41, k: 41) 	 0.0168705 	 700       	 285.972   	 0         	 56.3573   	 5.07426   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 41, n: 50, r2: 41)                                                                                         	 0.00980475	 808       	 0         	 0         	 110.824   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 91, reductionFactor: 37, colBlockingSize: 12)                    	 0.00930348	 100       	 9.14153   	 0         	 1.10333   	 8.28541   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 41, r: 41, streamingCols: 0)                   	 0.00671818	 100       	 62.5541   	 0         	 24.5114   	 2.55204   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0050966 	 8         	 19.6209   	 0         	 3.17074   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00494743	 9         	 0.303187  	 0         	 0.109875  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 41, Qr2: 50)       	 0.00369387	 100       	 0         	 0         	 98.5417   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 41, reductionFactor: 37, colBlockingSize: 12)                    	 0.00305738	 101       	 5.70323   	 0         	 0.986022  	 5.78408   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 41, m: 2500)                                                                  	 0.0029729 	 100       	 0         	 0         	 55.165    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268116	 8         	 38.3053   	 0         	 3.04346   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 41)                                                         	 0.0021576 	 100       	 0         	 0         	 76.0105   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00181144	 8         	 27.6024   	 0         	 8.87693   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 91, leftOrthog: 1)          	 0.00162695	 100       	 27.9665   	 0         	 9.17056   	 3.0496    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 41, n: 50, r2left: 50, r2right: 0)                 	 0.00130883	 100       	 0         	 0         	 125.303   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2050, cols: 41, reductionFactor: 37, colBlockingSize: 12)                  	 0.00128278	 8         	 44.1438   	 0         	 4.27725   	 10.3206   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 41, n: 50, r: 41, r2: 41)             	 0.00106348	 8         	 51.8456   	 0         	 10.2174   	 5.07426   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 41, m: 41, fromLeft: 1)                	 0.00092332	 809       	 0         	 0         	 23.5659   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 41, m: 50, k: 50)     	 0.000920543	 100       	 22.2695   	 0         	 5.73575   	 3.88258   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000888053	 8         	 0         	 0         	 18.0169   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00085818	 100       	 0.582628  	 0         	 2.33051   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 41)                                                                                          	 0.000842777	 201       	 0         	 0         	 7.82271   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 41, n: 50, r2: 1)                                                                                          	 0.000783114	 201       	 0         	 0         	 8.4187    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000766629	 100       	 32.6103   	 0         	 7.82647   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 41, k: 41)   	 0.000725449	 100       	 23.1719   	 0         	 6.37509   	 3.63475   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 41)   	 0.000685516	 100       	 29.9045   	 0         	 7.70223   	 3.88258   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 41, m: 50, k: 50)  	 0.000622576	 100       	 32.9277   	 0         	 8.48089   	 3.88258   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 41)                 	 0.000596637	 100       	 0         	 0         	 12.2017   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00052806	 100       	 0         	 0         	 7.5749    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000515583	 8         	 0         	 0         	 31.0328   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 41, n: 50, r2left: 1, r2right: 0)                  	 0.000512999	 100       	 0         	 0         	 6.39377   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2050, Xcols: 41, r: 41, streamingCols: 0)                   	 0.000476303	 8         	 57.88     	 0         	 22.7002   	 2.54975   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00045373	 100       	 0         	 0         	 8.81582   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000444064	 100       	 1.12596   	 0         	 13.5116   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00038805	 101       	 0.650689  	 0         	 10.411    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 41)                                                                                 	 0.000370672	 101       	 0.55858   	 0         	 8.93728   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 41)                                                           	 0.000370072	 101       	 0         	 0         	 8.95177   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000333781	 100       	 0.748994  	 0         	 11.9839   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000270367	 1         	 0.94966   	 0         	 0.147947  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 41, m: 2050)                                                                  	 0.000201845	 8         	 0         	 0         	 53.3003   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2050, m: 41)                                                         	 0.000142572	 8         	 0         	 0         	 75.4594   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3861e-05	 1         	 3.69156   	 0         	 1.47663   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 41, r: 41, streamingCols: 0)                     	 3.276e-05 	 1         	 2.56563   	 0         	 1.20647   	 2.12656   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.5861e-05	 1         	 15.7619   	 0         	 3.78286   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.531e-05 	 9         	 0         	 0         	 23.514    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 41, r2: 41)              	 1.212e-05 	 1         	 13.8696   	 0         	 3.81584   	 3.63475   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.3e-06   	 1         	 0.537634  	 0         	 2.15054   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 41)                                                                                   	 9.17e-06  	 1         	 0.44711   	 0         	 1.78844   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 8.96e-06  	 1         	 0         	 0         	 4.46429   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 6.32e-06  	 1         	 0         	 0         	 6.32911   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2050, m: 0, k: 41)  	 4.98e-06  	 100       	 0         	 0         	 13502     	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 41, m: 50)                                                                    	 4.66e-06  	 1         	 0         	 0         	 7.03863   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.06597   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.06593   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.54783   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.54653   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.13377   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.816262  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.687499  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.530953  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.518038  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.466419  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.402372  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.337643  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.157672  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0754287 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0606067 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0437294 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0350384 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0312119 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0309202 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0306577 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0271544 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0202788 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0202496 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0202183 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0168999 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0119587 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00618806	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00568516	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00333197	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00197615	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010925 	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00093863	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00087665	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000444064	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22784197035904 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22783996192768 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22783794866304 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22783593539840 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22783392213376 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22783190886912 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22782989560448 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22782788233984 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22782586907520 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22782385581056 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22782184254592 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22781982928128 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22781781601664 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22781580275200 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22781378948736 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22781177622272 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22780976295808 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22780774969344 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22780573642880 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22780372316416 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22780170989952 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22779969663488 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22779768337024 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22779567010560 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22779365684096 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22779164357632 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22778963031168 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22778761704704 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22778560378240 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22778359051776 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22778157725312 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22777956398848 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22777755068288 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22777553741824 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22777352415360 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22777151088896 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22776949762432 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22776748435968 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22776547109504 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22776345783040 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22776144456576 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22775943130112 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22775741803648 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22775540477184 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22775339150720 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22775137824256 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22774936497792 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22774735171328 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22774533844864 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22774332518400 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22774131191936 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22773929865472 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22773728539008 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22773527212544 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22773325886080 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22773124559616 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22772923233152 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22772721906688 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22772520580224 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22772319253760 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22772117927296 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22771916600832 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22771715274368 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22784091375360 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22784084784896 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 92, m: 92)                                                                 	 0.733488  	 700       	 5.20196   	 0         	 0.194564  	 26.7365   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4600, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.435455  	 600       	 110.193   	 0         	 4.75821   	 23.1585   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4600, r: 92, r2: 92, leftOrthog: 1)        	 0.393523  	 600       	 118.726   	 0         	 15.6924   	 7.56579   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, r1_: 92, n: 50, r2: 92)           	 0.345181  	 600       	 135.353   	 0         	 11.8875   	 11.3861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4600, cols: 42, reductionFactor: 37, colBlockingSize: 12)                  	 0.140065  	 700       	 83.2986   	 0         	 7.79496   	 10.6862   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.0706009 	 100       	 61.5627   	 0         	 2.70211   	 22.7832   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4600, Xcols: 42, r: 42, streamingCols: 0)                   	 0.0688361 	 700       	 82.516    	 0         	 31.5064   	 2.61902   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 42, Qr2: 92)       	 0.0573244 	 700       	 0         	 0         	 72.4271   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 92)                                                                 	 0.0508754 	 100       	 3.16459   	 0         	 0.184765  	 17.1277   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0380867 	 100       	 2.29739   	 0         	 0.158586  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 92, r2: 92, leftOrthog: 1)        	 0.0371229 	 100       	 114       	 0         	 15.2343   	 7.48308   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 42, m: 50, k: 2500)   	 0.0333364 	 800       	 251.977   	 0         	 44.5591   	 5.65489   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4600, r: 50, r2: 50, leftOrthog: 1)        	 0.033136  	 100       	 69.4109   	 0         	 16.7793   	 4.13669   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, r1_: 50, n: 50, r2: 92)           	 0.0305616 	 100       	 138.474   	 0         	 17.219    	 8.04196   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, r1_: 92, n: 50, r2: 50)           	 0.0288432 	 100       	 146.724   	 0         	 12.9934   	 11.2922   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 42, m: 42)                                                                  	 0.0269936 	 909       	 3.32651   	 0         	 1.43696   	 2.31496   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0261035 	 100       	 90.4923   	 0         	 7.12549   	 12.6998   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 42, n: 50, r2left: 50, r2right: 42)                	 0.0256094 	 700       	 0         	 0         	 84.494    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2100, m: 50, k: 42) 	 0.0255477 	 800       	 276.189   	 0         	 48.925    	 5.64516   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4600, m: 42)                                                         	 0.0251644 	 700       	 0         	 0         	 85.9883   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 42, m: 4600)                                                                  	 0.0242609 	 700       	 0         	 0         	 89.1905   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 42, m: 2500, k: 50)	 0.019595  	 800       	 428.68    	 0         	 75.807    	 5.65489   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 42, reductionFactor: 37, colBlockingSize: 12)                  	 0.0192764 	 100       	 46.9922   	 0         	 4.43088   	 10.6056   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2100, m: 42, k: 42) 	 0.017283  	 700       	 300.073   	 0         	 57.7283   	 5.19802   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 42, n: 50, r2: 42)                                                                                         	 0.0101228 	 808       	 0         	 0         	 112.642   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 92, reductionFactor: 37, colBlockingSize: 12)                    	 0.00973466	 100       	 8.9297    	 0         	 1.07361   	 8.31747   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 42, r: 42, streamingCols: 0)                   	 0.00678752	 100       	 64.9722   	 0         	 24.8553   	 2.61402   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00521038	 8         	 19.1925   	 0         	 3.1015    	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00495305	 9         	 0.302842  	 0         	 0.109751  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 42, Qr2: 50)       	 0.0037079 	 100       	 0         	 0         	 99.2476   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 42, m: 2500)                                                                  	 0.0032193 	 100       	 0         	 0         	 52.1852   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 42, reductionFactor: 37, colBlockingSize: 12)                    	 0.00316228	 101       	 5.78631   	 0         	 0.987298  	 5.86075   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 42)                                                         	 0.00284209	 100       	 0         	 0         	 59.1113   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00267413	 8         	 38.406    	 0         	 3.05146   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0018562 	 8         	 26.9368   	 0         	 8.66287   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 92, leftOrthog: 1)          	 0.00161528	 100       	 28.4781   	 0         	 9.31108   	 3.05851   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2100, cols: 42, reductionFactor: 37, colBlockingSize: 12)                  	 0.0013503 	 8         	 45.0807   	 0         	 4.26403   	 10.5723   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 42, n: 50, r2left: 50, r2right: 0)                 	 0.00127155	 100       	 0         	 0         	 132.123   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 42, n: 50, r: 42, r2: 42)             	 0.00108078	 8         	 54.8404   	 0         	 10.5502   	 5.19802   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 42, m: 42, fromLeft: 1)                	 0.000975753	 809       	 0         	 0         	 23.4006   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000890165	 100       	 0.561694  	 0         	 2.24677   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 42, m: 50, k: 50)     	 0.000869727	 100       	 24.1455   	 0         	 6.16285   	 3.91791   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 42)                                                                                          	 0.000849986	 201       	 0         	 0         	 7.94554   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000820087	 100       	 30.4846   	 0         	 7.3163    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000766441	 8         	 0         	 0         	 20.8757   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 42, n: 50, r2: 1)                                                                                          	 0.0007258 	 201       	 0         	 0         	 9.30504   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 42, k: 42)   	 0.000671816	 100       	 26.2572   	 0         	 7.10194   	 3.69718   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 42)   	 0.000669124	 100       	 31.3843   	 0         	 8.01047   	 3.91791   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 42, m: 50, k: 50)  	 0.000599162	 100       	 35.049    	 0         	 8.94583   	 3.91791   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 42)                 	 0.000554245	 100       	 0         	 0         	 13.2793   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000548715	 8         	 0         	 0         	 29.159    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2100, Xcols: 42, r: 42, streamingCols: 0)                   	 0.000515304	 8         	 57.5101   	 0         	 22.0182   	 2.61194   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000499976	 100       	 0         	 0         	 8.00038   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000477208	 100       	 0         	 0         	 8.38209   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 42, n: 50, r2left: 1, r2right: 0)                  	 0.000475116	 100       	 0         	 0         	 7.07196   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000420324	 100       	 1.18956   	 0         	 14.2747   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000389174	 101       	 0.64881   	 0         	 10.381    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 42)                                                           	 0.000387815	 101       	 0         	 0         	 8.75056   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 42)                                                                                 	 0.000367741	 101       	 0.576765  	 0         	 9.22823   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000330868	 100       	 0.755588  	 0         	 12.0894   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 42, m: 2100)                                                                  	 0.000192642	 8         	 0         	 0         	 58.604    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000163934	 1         	 1.56622   	 0         	 0.244001  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2100, m: 42)                                                         	 0.000162344	 8         	 0         	 0         	 69.5412   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4281e-05	 1         	 3.64633   	 0         	 1.45853   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 42, r: 42, streamingCols: 0)                     	 2.5681e-05	 1         	 3.43445   	 0         	 1.58312   	 2.16942   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5191e-05	 9         	 0         	 0         	 23.6982   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.436e-05 	 1         	 17.4095   	 0         	 4.17827   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 42, r2: 42)              	 1.2271e-05	 1         	 14.3754   	 0         	 3.88819   	 3.69718   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.54e-06  	 1         	 0.524109  	 0         	 2.09644   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 9.191e-06 	 1         	 0         	 0         	 4.35208   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 8.68e-06  	 1         	 0         	 0         	 4.60829   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 42)                                                                                   	 8.21e-06  	 1         	 0.511571  	 0         	 2.04629   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2100, m: 0, k: 42)  	 4.74e-06  	 100       	 0         	 0         	 14886.1   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 42, m: 50)                                                                    	 4.72e-06  	 1         	 0         	 0         	 7.11864   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.09463   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.09459   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.56508   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.56377   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.14913   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.82245   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.708586  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.542533  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.52943   	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.465397  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.405406  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.346608  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.167225  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0780551 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0615095 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0441764 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0342061 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0319467 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0293322 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0282349 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0279103 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0202981 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.020269  	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0201942 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0167548 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0121986 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00631779	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00451857	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00331622	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00139911	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108778	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000990944	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000907915	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000420324	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23129671108480 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23129472624640 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23129271298176 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23129069971712 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23128868645248 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23128667318784 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23128465992320 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23128264665856 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23128063339392 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23127862012928 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23127660686464 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23127459360000 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23127258033536 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23127056707072 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23126855380608 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23126654054144 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23126452727680 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23126251401216 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23126050074752 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23125848748288 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23125647421824 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23125446095360 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23125244768896 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23125043442432 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23124842115968 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23124640789504 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23124439463040 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23124238136576 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23124036810112 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23123835483648 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23123634157184 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23123432830720 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23123231500160 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23123030173696 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23122828847232 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23122627520768 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23122426194304 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23122224867840 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23122023541376 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23121822214912 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23121620888448 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23121419561984 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23121218235520 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23121016909056 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23120815582592 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23120614256128 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23120412929664 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23120211603200 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23120010276736 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23119808950272 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23119607623808 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23119406297344 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23119204970880 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23119003644416 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23118802317952 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23118600991488 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23118399665024 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23118198338560 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23117997012096 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23117795685632 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23117594359168 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23117393032704 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23117191706240 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23129565447936 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23129558857472 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 93, m: 93)                                                                 	 0.759944  	 700       	 5.18637   	 0         	 0.191888  	 27.0281   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4650, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.438218  	 600       	 113.107   	 0         	 4.83155   	 23.4102   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4650, r: 93, r2: 93, leftOrthog: 1)        	 0.417386  	 600       	 115.628   	 0         	 15.1186   	 7.64803   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, r1_: 93, n: 50, r2: 93)           	 0.361231  	 600       	 133.603   	 0         	 11.6076   	 11.5099   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4650, cols: 43, reductionFactor: 37, colBlockingSize: 12)                  	 0.140467  	 700       	 88.0089   	 0         	 8.04515   	 10.9394   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4650, Xcols: 43, r: 43, streamingCols: 0)                   	 0.070996  	 700       	 84.7723   	 0         	 31.6161   	 2.6813    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.0700844 	 100       	 63.3719   	 0         	 2.75267   	 23.022    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 43, Qr2: 93)       	 0.0586922 	 700       	 0         	 0         	 72.2658   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 93)                                                                 	 0.0490234 	 100       	 3.31985   	 0         	 0.193377  	 17.1677   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 93, r2: 93, leftOrthog: 1)        	 0.0386321 	 100       	 111.941   	 0         	 14.8022   	 7.56245   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0376569 	 100       	 2.32361   	 0         	 0.160396  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4650, r: 50, r2: 50, leftOrthog: 1)        	 0.0337394 	 100       	 68.9105   	 0         	 16.6571   	 4.13701   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 43, m: 50, k: 2500)   	 0.0332318 	 800       	 258.789   	 0         	 45.1905   	 5.72661   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, r1_: 50, n: 50, r2: 93)           	 0.0314189 	 100       	 137.64    	 0         	 17.0496   	 8.07292   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, r1_: 93, n: 50, r2: 50)           	 0.0299835 	 100       	 144.23    	 0         	 12.6376   	 11.4127   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 43, m: 43)                                                                  	 0.0285482 	 909       	 3.37538   	 0         	 1.42392   	 2.37048   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0270509 	 100       	 88.272    	 0         	 6.94986   	 12.7013   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2150, m: 50, k: 43) 	 0.0266265 	 800       	 277.769   	 0         	 48.5772   	 5.71809   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 43, n: 50, r2left: 50, r2right: 43)                	 0.0264536 	 700       	 0         	 0         	 84.6554   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4650, m: 43)                                                         	 0.0242803 	 700       	 0         	 0         	 92.2327   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 43, m: 4650)                                                                  	 0.0237405 	 700       	 0         	 0         	 94.3301   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 43, m: 2500, k: 50)	 0.0203653 	 800       	 422.287   	 0         	 73.7411   	 5.72661   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 43, reductionFactor: 37, colBlockingSize: 12)                  	 0.0188295 	 100       	 50.4255   	 0         	 4.64586   	 10.8539   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2150, m: 43, k: 43) 	 0.0182729 	 700       	 304.576   	 0         	 57.232    	 5.32178   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 43, n: 50, r2: 43)                                                                                         	 0.010884  	 808       	 0         	 0         	 109.812   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 93, reductionFactor: 37, colBlockingSize: 12)                    	 0.00734647	 100       	 12.0912   	 0         	 1.44821   	 8.34908   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 43, r: 43, streamingCols: 0)                   	 0.00701297	 100       	 65.9136   	 0         	 24.6314   	 2.67599   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00502277	 8         	 19.9093   	 0         	 3.21735   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00496991	 9         	 0.301815  	 0         	 0.109378  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 43, Qr2: 50)       	 0.00379656	 100       	 0         	 0         	 97.9835   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 43)                                                         	 0.00348635	 100       	 0         	 0         	 49.3353   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 43, reductionFactor: 37, colBlockingSize: 12)                    	 0.00326266	 101       	 5.87852   	 0         	 0.990355  	 5.93577   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 43, m: 2500)                                                                  	 0.00325609	 100       	 0         	 0         	 52.8242   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265514	 8         	 38.6807   	 0         	 3.07328   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00189949	 8         	 26.3229   	 0         	 8.46543   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 93, leftOrthog: 1)          	 0.00165692	 100       	 28.0642   	 0         	 9.14953   	 3.06728   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2150, cols: 43, reductionFactor: 37, colBlockingSize: 12)                  	 0.00142908	 8         	 45.7111   	 0         	 4.2231    	 10.8241   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 43, n: 50, r: 43, r2: 43)             	 0.00114997	 8         	 55.3106   	 0         	 10.3932   	 5.32178   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 43, n: 50, r2left: 50, r2right: 0)                 	 0.00108657	 100       	 0         	 0         	 158.296   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 43, m: 43, fromLeft: 1)                	 0.000987462	 809       	 0         	 0         	 24.2373   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 43, m: 50, k: 50)     	 0.000879095	 100       	 24.457    	 0         	 6.18818   	 3.95221   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 43)                                                                                          	 0.000858709	 201       	 0         	 0         	 8.05209   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000821858	 100       	 0.608378  	 0         	 2.43351   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000775721	 100       	 32.2281   	 0         	 7.73474   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 43, n: 50, r2: 1)                                                                                          	 0.000747176	 201       	 0         	 0         	 9.25404   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 43)   	 0.000668817	 100       	 32.1463   	 0         	 8.13376   	 3.95221   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 43, k: 43)   	 0.000630774	 100       	 29.3132   	 0         	 7.79867   	 3.75874   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 43, m: 50, k: 50)  	 0.000618148	 100       	 34.7813   	 0         	 8.80048   	 3.95221   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 43)                 	 0.000564705	 100       	 0         	 0         	 13.175    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000546872	 8         	 0         	 0         	 29.2573   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2150, Xcols: 43, r: 43, streamingCols: 0)                   	 0.000525643	 8         	 60.5027   	 0         	 22.6252   	 2.67413   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000503692	 100       	 0         	 0         	 7.94136   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000470196	 100       	 0         	 0         	 8.50709   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 43, n: 50, r2left: 1, r2right: 0)                  	 0.000461209	 100       	 0         	 0         	 7.45866   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000434022	 8         	 0         	 0         	 36.8645   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000412174	 100       	 1.21308   	 0         	 14.557    	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000377227	 101       	 0.669358  	 0         	 10.7097   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 43)                                                           	 0.000376092	 101       	 0         	 0         	 9.23817   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 43)                                                                                 	 0.000354323	 101       	 0.612859  	 0         	 9.80574   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000335001	 100       	 0.746266  	 0         	 11.9403   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 43, m: 2150)                                                                  	 0.000221387	 8         	 0         	 0         	 53.4521   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000213365	 1         	 1.20337   	 0         	 0.187472  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2150, m: 43)                                                         	 0.000136923	 8         	 0         	 0         	 86.4252   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 5.4141e-05	 1         	 2.30879   	 0         	 0.923515  	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 43, r: 43, streamingCols: 0)                     	 2.001e-05 	 1         	 4.62019   	 0         	 2.08876   	 2.21193   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.535e-05 	 9         	 0         	 0         	 23.4528   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.418e-05 	 1         	 17.6305   	 0         	 4.23131   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 43, r2: 43)              	 1.113e-05 	 1         	 16.6128   	 0         	 4.41977   	 3.75874   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 43)                                                                                   	 8.26e-06  	 1         	 0.520581  	 0         	 2.08232   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.03e-06  	 1         	 0.622665  	 0         	 2.49066   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 7.74e-06  	 1         	 0         	 0         	 5.16796   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 6.38e-06  	 1         	 0         	 0         	 6.26959   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 43, m: 50)                                                                    	 5.08e-06  	 1         	 0         	 0         	 6.77165   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2150, m: 0, k: 43)  	 4.89e-06  	 100       	 0         	 0         	 15124.7   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.20085   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.2008    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.66308   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.66181   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.22697   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.846624  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.709556  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.543308  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.537648  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.491415  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.423409  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.349249  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.167313  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0805083 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0629589 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0462038 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0341109 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0335182 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0288343 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0285661 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0276634 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0209834 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0200497 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0200211 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0168917 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0129936 	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00670487	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00619805	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00343164	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00154477	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106655	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00100281	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000838148	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000412174	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23008607311744 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23008408233984 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23008206907520 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23008005581056 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23007804254592 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23007602928128 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23007401601664 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23007200275200 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23006998948736 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23006797622272 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23006596295808 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23006394969344 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23006193642880 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23005992316416 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23005790989952 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23005589663488 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23005388337024 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23005187010560 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23004985684096 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23004784357632 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23004583031168 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23004381704704 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23004180378240 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23003979051776 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23003777725312 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23003576398848 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23003375072384 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23003173745920 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23002972419456 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23002771092992 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23002569766528 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23002368440064 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23002167109504 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23001965783040 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23001764456576 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23001563130112 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23001361803648 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23001160477184 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23000959150720 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23000757824256 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23000556497792 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23000355171328 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23000153844864 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22999952518400 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22999751191936 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22999549865472 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22999348539008 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22999147212544 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22998945886080 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22998744559616 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22998543233152 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22998341906688 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22998140580224 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22997939253760 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22997737927296 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22997536600832 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22997335274368 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22997133947904 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22996932621440 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22996731294976 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22996529968512 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22996328642048 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22996127315584 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23008501651200 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23008495060736 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 94, m: 94)                                                                 	 0.762597  	 700       	 5.33684   	 0         	 0.195347  	 27.3198   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4700, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.44824   	 600       	 114.184   	 0         	 4.82565   	 23.6619   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4700, r: 94, r2: 94, leftOrthog: 1)        	 0.439985  	 600       	 113.265   	 0         	 14.6522   	 7.73026   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, r1_: 94, n: 50, r2: 94)           	 0.364365  	 600       	 136.772   	 0         	 11.7566   	 11.6337   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4700, cols: 44, reductionFactor: 37, colBlockingSize: 12)                  	 0.149229  	 700       	 87.6716   	 0         	 7.83305   	 11.1925   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4700, Xcols: 44, r: 44, streamingCols: 0)                   	 0.0737066 	 700       	 86.4162   	 0         	 31.4976   	 2.74358   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.071823  	 100       	 63.1749   	 0         	 2.71597   	 23.2605   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 44, Qr2: 94)       	 0.0617082 	 700       	 0         	 0         	 70.204    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 94)                                                                 	 0.0497499 	 100       	 3.30654   	 0         	 0.192161  	 17.2071   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0382051 	 100       	 2.29027   	 0         	 0.158094  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 94, r2: 94, leftOrthog: 1)        	 0.0379875 	 100       	 116.301   	 0         	 15.2192   	 7.64178   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4700, r: 50, r2: 50, leftOrthog: 1)        	 0.0335461 	 100       	 70.0528   	 0         	 16.9319   	 4.13732   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 44, m: 50, k: 2500)   	 0.0327633 	 800       	 268.593   	 0         	 46.3348   	 5.7968    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, r1_: 50, n: 50, r2: 94)           	 0.0327358 	 100       	 134.959   	 0         	 16.6545   	 8.10345   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 44, m: 4700)                                                                  	 0.0307234 	 700       	 0         	 0         	 75.3874   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, r1_: 94, n: 50, r2: 50)           	 0.0304605 	 100       	 145.041   	 0         	 12.5759   	 11.5332   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 44, m: 44)                                                                  	 0.0289585 	 909       	 3.56518   	 0         	 1.46954   	 2.42605   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4700, m: 44)                                                         	 0.0281431 	 700       	 0         	 0         	 82.2994   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 44, n: 50, r2left: 50, r2right: 44)                	 0.0272304 	 700       	 0         	 0         	 85.0579   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2200, m: 50, k: 44) 	 0.0271117 	 800       	 285.633   	 0         	 49.3366   	 5.78947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0268223 	 100       	 89.9815   	 0         	 7.08365   	 12.7027   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 44, m: 2500, k: 50)	 0.0201474 	 800       	 436.782   	 0         	 75.3489   	 5.7968    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 44, reductionFactor: 37, colBlockingSize: 12)                  	 0.0199596 	 100       	 49.8087   	 0         	 4.4865    	 11.1019   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2200, m: 44, k: 44) 	 0.0194806 	 700       	 306.094   	 0         	 56.2099   	 5.44554   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 44, n: 50, r2: 44)                                                                                         	 0.0113539 	 808       	 0         	 0         	 110.221   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 94, reductionFactor: 37, colBlockingSize: 12)                    	 0.00770946	 100       	 11.771    	 0         	 1.40461   	 8.38026   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 44, r: 44, streamingCols: 0)                   	 0.00709455	 100       	 68.2214   	 0         	 24.9169   	 2.73795   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00509948	 9         	 0.294146  	 0         	 0.106599  	 2.75937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00503583	 8         	 19.8577   	 0         	 3.209     	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 44, Qr2: 50)       	 0.00377788	 100       	 0         	 0         	 99.5266   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 44)                                                         	 0.0034169 	 100       	 0         	 0         	 51.5087   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 44, m: 2500)                                                                  	 0.00336277	 100       	 0         	 0         	 52.3378   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 44, reductionFactor: 37, colBlockingSize: 12)                    	 0.00315071	 101       	 6.37382   	 0         	 1.06068   	 6.0092    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 44, n: 50, r2left: 50, r2right: 0)                 	 0.00275552	 100       	 0         	 0         	 63.8718   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00257379	 8         	 39.9034   	 0         	 3.17043   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00208963	 8         	 23.9276   	 0         	 7.69513   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 94, leftOrthog: 1)          	 0.00163833	 100       	 28.6878   	 0         	 9.32658   	 3.07592   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2200, cols: 44, reductionFactor: 37, colBlockingSize: 12)                  	 0.0014602 	 8         	 47.9312   	 0         	 4.32757   	 11.0758   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 44, n: 50, r: 44, r2: 44)             	 0.00118093	 8         	 57.7063   	 0         	 10.597    	 5.44554   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 44, m: 44, fromLeft: 1)                	 0.00104961	 809       	 0         	 0         	 23.8751   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 44, m: 50, k: 50)     	 0.000885721	 100       	 24.8385   	 0         	 6.23221   	 3.98551   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000881207	 100       	 0.567404  	 0         	 2.26961   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 44)                                                                                          	 0.000834966	 201       	 0         	 0         	 8.47364   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000788586	 100       	 31.7023   	 0         	 7.60856   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 44, n: 50, r2: 1)                                                                                          	 0.000749701	 201       	 0         	 0         	 9.43736   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000702308	 8         	 0         	 0         	 22.782    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 44)   	 0.00069369	 100       	 31.7145   	 0         	 7.95744   	 3.98551   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 44, k: 44)   	 0.000675889	 100       	 28.6438   	 0         	 7.49946   	 3.81944   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 44, m: 50, k: 50)  	 0.000584015	 100       	 37.6703   	 0         	 9.45181   	 3.98551   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000572067	 8         	 0         	 0         	 27.9688   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2200, Xcols: 44, r: 44, streamingCols: 0)                   	 0.000565115	 8         	 60.295    	 0         	 22.0351   	 2.73632   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 44)                 	 0.000557081	 100       	 0         	 0         	 13.4989   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000497729	 100       	 0         	 0         	 8.0365    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 44, n: 50, r2left: 1, r2right: 0)                  	 0.00049088	 100       	 0         	 0         	 7.1708    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00045972	 100       	 0         	 0         	 8.70095   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000429161	 101       	 0.588357  	 0         	 9.41372   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000418697	 100       	 1.19418   	 0         	 14.3302   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 44)                                                           	 0.000405961	 101       	 0         	 0         	 8.75749   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 44)                                                                                 	 0.00037509	 101       	 0.592391  	 0         	 9.47826   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.0003269 	 100       	 0.76476   	 0         	 12.2362   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000268877	 1         	 0.954923  	 0         	 0.148767  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 44, m: 2200)                                                                  	 0.000204527	 8         	 0         	 0         	 60.5808   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2200, m: 44)                                                         	 0.000175853	 8         	 0         	 0         	 70.4588   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2591e-05	 1         	 3.83541   	 0         	 1.53417   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 44, r: 44, streamingCols: 0)                     	 2.6951e-05	 1         	 3.5917    	 0         	 1.59341   	 2.2541    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.526e-05 	 1         	 16.3827   	 0         	 3.93185   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.514e-05 	 9         	 0         	 0         	 23.7781   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 44, r2: 44)              	 1.385e-05 	 1         	 13.9783   	 0         	 3.65978   	 3.81944   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.0001e-05	 1         	 0         	 0         	 3.9996    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 44)                                                                                   	 9.761e-06 	 1         	 0.450773  	 0         	 1.80309   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.52e-06  	 1         	 0.52521   	 0         	 2.10084   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 6.87e-06  	 1         	 0         	 0         	 5.82242   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2200, m: 0, k: 44)  	 4.93e-06  	 100       	 0         	 0         	 15707.9   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 44, m: 50)                                                                    	 4.9e-06   	 1         	 0         	 0         	 7.18367   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.28858   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.28854   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.7207    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.7194    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.27435   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.850552  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.731238  	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.567779  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.555238  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.513157  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.42835   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.373972  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.177234  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0835154 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0659458 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0479668 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0348777 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.034058  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.033649  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.032851  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0310339 	 1000      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0208136 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0207821 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0207314 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0172097 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0134363 	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00839824	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00624587	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0036396 	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0014446 	 5272      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113115	 302       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00106475	 818       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000900488	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000418697	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22544195176320 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22544014895104 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22543813568640 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22543612242176 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22543410915712 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22543209589248 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22543008262784 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22542806936320 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22542605609856 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22542404283392 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22542202956928 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22542001630464 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22541800304000 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22541598977536 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22541397651072 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22541196324608 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22540994998144 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22540793671680 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22540592345216 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22540391018752 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22540189692288 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22539988365824 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22539787039360 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22539585712896 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22539384386432 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22539183059968 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22538981733504 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22538780407040 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22538579080576 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22538377754112 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22538176427648 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22537975101184 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22537773770624 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22537572444160 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22537371117696 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22537169791232 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22536968464768 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22536767138304 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22536565811840 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22536364485376 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22536163158912 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22535961832448 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22535760505984 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22535559179520 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22535357853056 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22535156526592 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22534955200128 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22534753873664 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22534552547200 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22534351220736 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22534149894272 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22533948567808 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22533747241344 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22533545914880 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22533344588416 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22533143261952 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22532941935488 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22532740609024 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22532539282560 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22532337956096 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22532136629632 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22531935303168 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22531733976704 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22544089515776 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22543910033152 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 95, m: 95)                                                                 	 0.778413  	 700       	 5.39705   	 0         	 0.195464  	 27.6114   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4750, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.505277  	 600       	 104.562   	 0         	 4.37249   	 23.9136   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4750, r: 95, r2: 95, leftOrthog: 1)        	 0.419714  	 600       	 122.566   	 0         	 15.6884   	 7.8125    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, r1_: 95, n: 50, r2: 95)           	 0.368598  	 600       	 139.563   	 0         	 11.8702   	 11.7574   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4750, cols: 45, reductionFactor: 37, colBlockingSize: 12)                  	 0.173736  	 700       	 79.6048   	 0         	 6.95505   	 11.4456   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4750, Xcols: 45, r: 45, streamingCols: 0)                   	 0.0762507 	 700       	 88.3025   	 0         	 31.4708   	 2.80585   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.075353  	 100       	 61.5033   	 0         	 2.61728   	 23.4989   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 45, Qr2: 95)       	 0.0644979 	 700       	 0         	 0         	 68.5914   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 95)                                                                 	 0.050195  	 100       	 3.31208   	 0         	 0.192051  	 17.2459   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0401153 	 100       	 2.18121   	 0         	 0.150566  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 95, r2: 95, leftOrthog: 1)        	 0.0381532 	 100       	 118.273   	 0         	 15.3183   	 7.72107   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4750, r: 50, r2: 50, leftOrthog: 1)        	 0.0358712 	 100       	 66.209    	 0         	 16.0017   	 4.13763   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 45, m: 50, k: 2500)   	 0.0350233 	 800       	 256.972   	 0         	 43.8108   	 5.86548   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, r1_: 50, n: 50, r2: 95)           	 0.032892  	 100       	 137.191   	 0         	 16.8673   	 8.13356   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 45, m: 45)                                                                  	 0.0314951 	 909       	 3.50668   	 0         	 1.41306   	 2.48162   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0302541 	 100       	 80.6235   	 0         	 6.34625   	 12.7041   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, r1_: 95, n: 50, r2: 50)           	 0.0302346 	 100       	 149.249   	 0         	 12.8072   	 11.6536   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 45, n: 50, r2left: 50, r2right: 45)                	 0.0287763 	 700       	 0         	 0         	 83.1935   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4750, m: 45)                                                         	 0.0268497 	 700       	 0         	 0         	 89.1632   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2250, m: 50, k: 45) 	 0.0258258 	 800       	 313.64    	 0         	 53.5279   	 5.85938   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 45, m: 4750)                                                                  	 0.0253033 	 700       	 0         	 0         	 94.6121   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 45, m: 2500, k: 50)	 0.0212822 	 800       	 422.889   	 0         	 72.0979   	 5.86548   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 45, reductionFactor: 37, colBlockingSize: 12)                  	 0.0203719 	 100       	 51.0441   	 0         	 4.49737   	 11.3498   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2250, m: 45, k: 45) 	 0.019855  	 700       	 321.267   	 0         	 57.6853   	 5.56931   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 45, n: 50, r2: 45)                                                                                         	 0.0122037 	 808       	 0         	 0         	 107.259   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 95, reductionFactor: 37, colBlockingSize: 12)                    	 0.0088092 	 100       	 10.5219   	 0         	 1.25097   	 8.411     
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 45, r: 45, streamingCols: 0)                   	 0.00745207	 100       	 67.9341   	 0         	 24.263    	 2.7999    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00506785	 8         	 19.7322   	 0         	 3.18873   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00502416	 9         	 0.298556  	 0         	 0.108197  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 45)                                                         	 0.00438412	 100       	 0         	 0         	 41.0573   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 45, Qr2: 50)       	 0.00380073	 100       	 0         	 0         	 99.9807   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 45, m: 2500)                                                                  	 0.00345593	 100       	 0         	 0         	 52.0845   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 45, reductionFactor: 37, colBlockingSize: 12)                    	 0.00319901	 101       	 6.56618   	 0         	 1.07977   	 6.08108   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265412	 8         	 38.6955   	 0         	 3.07446   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00184879	 8         	 27.0448   	 0         	 8.69759   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 95, leftOrthog: 1)          	 0.00171601	 100       	 27.6805   	 0         	 8.97431   	 3.08442   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2250, cols: 45, reductionFactor: 37, colBlockingSize: 12)                  	 0.0014683 	 8         	 50.9911   	 0         	 4.50153   	 11.3275   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 45, n: 50, r: 45, r2: 45)             	 0.00131655	 8         	 55.3722   	 0         	 9.94238   	 5.56931   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 45, n: 50, r2left: 50, r2right: 0)                 	 0.00115913	 100       	 0         	 0         	 155.288   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 45, m: 45, fromLeft: 1)                	 0.00108887	 809       	 0         	 0         	 24.0723   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 45)                                                                                          	 0.00103046	 201       	 0         	 0         	 7.02213   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 45, m: 50, k: 50)     	 0.000950388	 100       	 23.6745   	 0         	 5.89233   	 4.01786   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000891667	 100       	 0.560747  	 0         	 2.24299   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000813514	 100       	 30.7309   	 0         	 7.37541   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00078034	 8         	 0         	 0         	 20.5039   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 45, n: 50, r2: 1)                                                                                          	 0.000773327	 201       	 0         	 0         	 9.35697   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 45)   	 0.000727448	 100       	 30.93     	 0         	 7.69814   	 4.01786   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 45, m: 50, k: 50)  	 0.000656268	 100       	 34.2848   	 0         	 8.5331    	 4.01786   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 45, k: 45)   	 0.000638715	 100       	 31.7043   	 0         	 8.17266   	 3.87931   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000624523	 100       	 0.800611  	 0         	 9.60733   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000595344	 8         	 0         	 0         	 26.8752   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 45)                 	 0.000575403	 100       	 0         	 0         	 13.2081   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2250, Xcols: 45, r: 45, streamingCols: 0)                   	 0.000553325	 8         	 65.8745   	 0         	 23.5391   	 2.79851   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 45, n: 50, r2left: 1, r2right: 0)                  	 0.000494761	 100       	 0         	 0         	 7.27624   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000494665	 100       	 0         	 0         	 8.08628   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000456817	 100       	 0         	 0         	 8.75624   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 45)                                                           	 0.000417778	 101       	 0         	 0         	 8.70319   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000398457	 101       	 0.633694  	 0         	 10.1391   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 45)                                                                                 	 0.000363703	 101       	 0.624823  	 0         	 9.99717   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000325198	 100       	 0.768762  	 0         	 12.3002   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000256466	 1         	 1.00113   	 0         	 0.155966  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 45, m: 2250)                                                                  	 0.000185804	 8         	 0         	 0         	 69.7509   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2250, m: 45)                                                         	 0.000176883	 8         	 0         	 0         	 73.2688   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.9281e-05	 1         	 3.1822    	 0         	 1.27288   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 45, r: 45, streamingCols: 0)                     	 2.8531e-05	 1         	 3.54877   	 0         	 1.54569   	 2.29592   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.553e-05 	 9         	 0         	 0         	 23.1809   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.457e-05 	 1         	 17.1585   	 0         	 4.11805   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 45, r2: 45)              	 1.095e-05 	 1         	 18.4932   	 0         	 4.76712   	 3.87931   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.3e-06   	 1         	 0.537634  	 0         	 2.15054   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 45)                                                                                   	 9.25e-06  	 1         	 0.486486  	 0         	 1.94595   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 8.431e-06 	 1         	 0         	 0         	 4.7444    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 7.87e-06  	 1         	 0         	 0         	 5.08259   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2250, m: 0, k: 45)  	 4.74e-06  	 100       	 0         	 0         	 17088.6   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 45, m: 50)                                                                    	 4.67e-06  	 1         	 0         	 0         	 7.70878   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.36516   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.36512   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.76757   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.76626   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.32282   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.868724  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.821379  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.620348  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.597483  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.495454  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.432538  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.399112  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.20218   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0861727 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0687554 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0470517 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0365193 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0359737 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0326172 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0310056 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0295529 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0219384 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.020774  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0207435 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0178868 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0145021 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00640992	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00524956	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00366461	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0014729 	 5272      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0011044 	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108736	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000910217	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000624523	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23298987308928 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23298788288512 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23298586962048 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23298385635584 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23298184309120 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23297982982656 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23297781656192 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23297580329728 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23297379003264 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23297177676800 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23296976350336 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23296775023872 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23296573697408 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23296372370944 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23296171044480 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23295969718016 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23295768391552 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23295567065088 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23295365738624 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23295164412160 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23294963085696 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23294761759232 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23294560432768 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23294359106304 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23294157779840 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23293956453376 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23293755126912 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23293553800448 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23293352473984 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23293151147520 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23292949821056 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23292748494592 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23292547164032 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23292345837568 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23292144511104 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23291943184640 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23291741858176 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23291540531712 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23291339205248 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23291137878784 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23290936552320 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23290735225856 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23290533899392 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23290332572928 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23290131246464 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23289929920000 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23289728593536 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23289527267072 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23289325940608 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23289124614144 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23288923287680 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23288721961216 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23288520634752 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23288319308288 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23288117981824 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23287916655360 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23287715328896 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23287514002432 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23287312675968 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23287111349504 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23286910023040 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23286708696576 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23286507370112 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23298881648384 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23298875057920 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 96, m: 96)                                                                 	 0.782395  	 700       	 5.54095   	 0         	 0.198578  	 27.9031   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4800, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.527752  	 600       	 103.304   	 0         	 4.27488   	 24.1653   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4800, r: 96, r2: 96, leftOrthog: 1)        	 0.448736  	 600       	 118.297   	 0         	 14.9843   	 7.89474   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, r1_: 96, n: 50, r2: 96)           	 0.379057  	 600       	 140.043   	 0         	 11.7869   	 11.8812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4800, cols: 46, reductionFactor: 37, colBlockingSize: 12)                  	 0.179795  	 700       	 81.2249   	 0         	 6.94308   	 11.6987   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4800, Xcols: 46, r: 46, streamingCols: 0)                   	 0.0785679 	 700       	 90.4919   	 0         	 31.5509   	 2.86813   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.0762537 	 100       	 62.0631   	 0         	 2.6146    	 23.7371   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 46, Qr2: 96)       	 0.0665586 	 700       	 0         	 0         	 67.8644   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 96)                                                                 	 0.0515163 	 100       	 3.2611    	 0         	 0.188678  	 17.284    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.039268  	 100       	 2.22828   	 0         	 0.153815  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4800, r: 50, r2: 50, leftOrthog: 1)        	 0.038225  	 100       	 62.7861   	 0         	 15.1733   	 4.13793   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 96, r2: 96, leftOrthog: 1)        	 0.0380464 	 100       	 121.115   	 0         	 15.527    	 7.80031   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 46, m: 50, k: 2500)   	 0.0341634 	 800       	 269.294   	 0         	 45.3912   	 5.93273   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, r1_: 50, n: 50, r2: 96)           	 0.0325694 	 100       	 141.482   	 0         	 17.3316   	 8.16327   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 46, m: 46)                                                                  	 0.0322969 	 909       	 3.65267   	 0         	 1.43968   	 2.53714   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, r1_: 96, n: 50, r2: 50)           	 0.0313146 	 100       	 147.152   	 0         	 12.4981   	 11.7739   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2300, m: 50, k: 46) 	 0.0306415 	 800       	 276.226   	 0         	 46.5982   	 5.92784   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0300924 	 100       	 81.9099   	 0         	 6.44681   	 12.7055   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 46, n: 50, r2left: 50, r2right: 46)                	 0.0300546 	 700       	 0         	 0         	 82.2821   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4800, m: 46)                                                         	 0.0290353 	 700       	 0         	 0         	 85.1707   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 46, m: 4800)                                                                  	 0.0259835 	 700       	 0         	 0         	 95.1743   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 46, m: 2500, k: 50)	 0.022206  	 800       	 414.303   	 0         	 69.8335   	 5.93273   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 46, reductionFactor: 37, colBlockingSize: 12)                  	 0.0213324 	 100       	 50.9363   	 0         	 4.39204   	 11.5974   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2300, m: 46, k: 46) 	 0.0205296 	 700       	 331.888   	 0         	 58.2968   	 5.69307   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 46, n: 50, r2: 46)                                                                                         	 0.0129882 	 808       	 0         	 0         	 105.309   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 96, reductionFactor: 37, colBlockingSize: 12)                    	 0.00895058	 100       	 10.5748   	 0         	 1.25275   	 8.44132   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 46, r: 46, streamingCols: 0)                   	 0.00772228	 100       	 68.5031   	 0         	 23.9368   	 2.86184   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00505   	 8         	 19.802    	 0         	 3.2       	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00484673	 9         	 0.309486  	 0         	 0.112158  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 46, m: 2500)                                                                  	 0.00420602	 100       	 0         	 0         	 43.7468   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 46, Qr2: 50)       	 0.00392511	 100       	 0         	 0         	 97.8317   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 46)                                                         	 0.00370302	 100       	 0         	 0         	 49.6891   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 46, reductionFactor: 37, colBlockingSize: 12)                    	 0.00330059	 101       	 6.65009   	 0         	 1.08106   	 6.15146   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00258854	 8         	 39.676    	 0         	 3.15236   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00174609	 8         	 28.6353   	 0         	 9.20912   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 96, leftOrthog: 1)          	 0.00167969	 100       	 28.5767   	 0         	 9.23981   	 3.09278   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2300, cols: 46, reductionFactor: 37, colBlockingSize: 12)                  	 0.00155127	 8         	 51.5534   	 0         	 4.45224   	 11.5792   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 46, n: 50, r: 46, r2: 46)             	 0.00134239	 8         	 58.0074   	 0         	 10.1891   	 5.69307   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 46, n: 50, r2left: 50, r2right: 0)                 	 0.00117656	 100       	 0         	 0         	 156.388   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 46, m: 46, fromLeft: 1)                	 0.00111441	 809       	 0         	 0         	 24.5776   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 46, n: 50, r2: 1)                                                                                          	 0.000987281	 201       	 0         	 0         	 7.49209   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 46, m: 50, k: 50)     	 0.00090422	 100       	 25.4363   	 0         	 6.28166   	 4.0493    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000899305	 8         	 0         	 0         	 17.7915   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 46)                                                                                          	 0.000838995	 201       	 0         	 0         	 8.81626   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000801799	 100       	 0.623598  	 0         	 2.49439   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000762946	 100       	 32.7677   	 0         	 7.86425   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 46)   	 0.000705662	 100       	 32.5935   	 0         	 8.04918   	 4.0493    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 46, k: 46)   	 0.000668979	 100       	 31.6303   	 0         	 8.03134   	 3.93836   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 46, m: 50, k: 50)  	 0.000635317	 100       	 36.2024   	 0         	 8.94042   	 4.0493    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2300, Xcols: 46, r: 46, streamingCols: 0)                   	 0.000587645	 8         	 66.255    	 0         	 23.1604   	 2.8607    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 46)                 	 0.000575107	 100       	 0         	 0         	 13.354    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000517701	 100       	 0         	 0         	 7.72647   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000511084	 8         	 0         	 0         	 31.306    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 46, n: 50, r2left: 1, r2right: 0)                  	 0.000472334	 100       	 0         	 0         	 7.7911    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000447054	 100       	 0         	 0         	 8.94746   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000425702	 100       	 1.17453   	 0         	 14.0944   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 46)                                                           	 0.000397003	 101       	 0         	 0         	 9.36215   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000384143	 101       	 0.657307  	 0         	 10.5169   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 46)                                                                                 	 0.00036561	 101       	 0.635376  	 0         	 10.166    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000345322	 100       	 0.723962  	 0         	 11.5834   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2300, m: 46)                                                         	 0.000264217	 8         	 0         	 0         	 51.2548   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 46, m: 2300)                                                                  	 0.000192624	 8         	 0         	 0         	 70.3048   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000181985	 1         	 1.41087   	 0         	 0.219798  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.8301e-05	 1         	 3.26362   	 0         	 1.30545   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 46, r: 46, streamingCols: 0)                     	 2.22e-05  	 1         	 4.76577   	 0         	 2.03892   	 2.3374    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.479e-05 	 9         	 0         	 0         	 24.3408   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.456e-05 	 1         	 17.1703   	 0         	 4.12088   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 46, r2: 46)              	 1.3971e-05	 1         	 15.1457   	 0         	 3.84568   	 3.93836   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 7.66e-06  	 1         	 0         	 0         	 5.22193   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 46)                                                                                   	 7.62e-06  	 1         	 0.603675  	 0         	 2.4147    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 6.79e-06  	 1         	 0.736377  	 0         	 2.94551   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 6.02e-06  	 1         	 0         	 0         	 6.64452   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 46, m: 50)                                                                    	 4.891e-06 	 1         	 0         	 0         	 7.52402   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2300, m: 0, k: 46)  	 4.84e-06  	 100       	 0         	 0         	 17487.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.49306   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.49301   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.87182   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.87056   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.41096   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.873179  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.851798  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.643723  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.621123  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.526687  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.443704  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.412691  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.209312  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0886844 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0709308 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0525506 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0371436 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0350676 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0343066 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0322787 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0309041 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0228413 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0206299 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0206024 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0181367 	 20        
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0153322 	 1310      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00705931	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00642093	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00374898	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00184619	 5272      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0011292 	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109508	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000816209	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000425702	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22956821555072 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22956600190976 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22956398864512 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22956197538048 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22955996211584 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22955794885120 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22955593558656 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22955392232192 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22955190905728 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22954989579264 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22954788252800 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22954586926336 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22954385599872 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22954184273408 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22953982946944 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22953781620480 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22953580294016 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22953378967552 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22953177641088 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22952976314624 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22952774988160 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22952573661696 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22952372335232 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22952171008768 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22951969682304 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22951768355840 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22951567029376 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22951365702912 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22951164376448 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22950963049984 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22950761723520 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22950560397056 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22950359066496 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22950157740032 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22949956413568 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22949755087104 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22949553760640 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22949352434176 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22949151107712 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22948949781248 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22948748454784 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22948547128320 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22948345801856 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22948144475392 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22947943148928 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22947741822464 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22947540496000 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22947339169536 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22947137843072 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22946936516608 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22946735190144 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22946533863680 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22946332537216 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22946131210752 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22945929884288 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22945728557824 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22945527231360 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22945325904896 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22945124578432 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22944923251968 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22944721925504 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22944520599040 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22944319272576 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22956715894528 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22956709304064 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 97, m: 97)                                                                 	 0.829947  	 700       	 5.38841   	 0         	 0.191114  	 28.1948   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4850, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.540561  	 600       	 104.041   	 0         	 4.26099   	 24.4171   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4850, r: 97, r2: 97, leftOrthog: 1)        	 0.492891  	 600       	 111.1     	 0         	 13.9276   	 7.97697   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, r1_: 97, n: 50, r2: 97)           	 0.379387  	 600       	 144.339   	 0         	 12.0233   	 12.005    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4850, cols: 47, reductionFactor: 37, colBlockingSize: 12)                  	 0.180785  	 700       	 85.2089   	 0         	 7.12941   	 11.9517   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4850, Xcols: 47, r: 47, streamingCols: 0)                   	 0.0792311 	 700       	 94.6541   	 0         	 32.3007   	 2.9304    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.0781653 	 100       	 61.8132   	 0         	 2.57822   	 23.9752   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 47, Qr2: 97)       	 0.0735512 	 700       	 0         	 0         	 62.6916   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 97)                                                                 	 0.0507082 	 100       	 3.34758   	 0         	 0.193263  	 17.3214   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 97, r2: 97, leftOrthog: 1)        	 0.0430067 	 100       	 109.39    	 0         	 13.8828   	 7.87952   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0385771 	 100       	 2.26818   	 0         	 0.156569  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4850, r: 50, r2: 50, leftOrthog: 1)        	 0.0362661 	 100       	 66.8669   	 0         	 16.1583   	 4.13823   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 47, m: 50, k: 2500)   	 0.0340526 	 800       	 276.044   	 0         	 46.0182   	 5.99857   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 47, m: 47)                                                                  	 0.0329993 	 909       	 3.8132    	 0         	 1.47074   	 2.59271   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, r1_: 50, n: 50, r2: 97)           	 0.0329148 	 100       	 142.929   	 0         	 17.4462   	 8.19257   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, r1_: 97, n: 50, r2: 50)           	 0.0318283 	 100       	 147.809   	 0         	 12.4269   	 11.8943   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0304984 	 100       	 81.6613   	 0         	 6.42657   	 12.7068   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 47, n: 50, r2left: 50, r2right: 47)                	 0.0303466 	 700       	 0         	 0         	 84.1293   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4850, m: 47)                                                         	 0.0289642 	 700       	 0         	 0         	 88.1447   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2350, m: 50, k: 47) 	 0.0275385 	 800       	 320.86    	 0         	 53.5221   	 5.9949    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 47, m: 4850)                                                                  	 0.0270828 	 700       	 0         	 0         	 94.268    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 47, reductionFactor: 37, colBlockingSize: 12)                  	 0.0220461 	 100       	 51.4536   	 0         	 4.34395   	 11.8449   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 47, m: 2500, k: 50)	 0.0218404 	 800       	 430.395   	 0         	 71.7496   	 5.99857   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2350, m: 47, k: 47) 	 0.0203936 	 700       	 356.367   	 0         	 61.2649   	 5.81683   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 47, n: 50, r2: 47)                                                                                         	 0.0169813 	 808       	 0         	 0         	 84.0863   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 97, reductionFactor: 37, colBlockingSize: 12)                    	 0.00891718	 100       	 10.8367   	 0         	 1.27924   	 8.47123   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 47, r: 47, streamingCols: 0)                   	 0.00787906	 100       	 70.0909   	 0         	 23.9729   	 2.92376   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00502901	 8         	 19.8846   	 0         	 3.21336   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00482365	 9         	 0.310967  	 0         	 0.112695  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 47, reductionFactor: 37, colBlockingSize: 12)                    	 0.00383494	 101       	 5.97504   	 0         	 0.960556  	 6.2204    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 47, m: 2500)                                                                  	 0.00371072	 100       	 0         	 0         	 50.6641   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 47)                                                         	 0.00362515	 100       	 0         	 0         	 51.86     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 47, n: 50, r2left: 50, r2right: 0)                 	 0.00346274	 100       	 0         	 0         	 54.2922   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265399	 8         	 38.6975   	 0         	 3.07461   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 97, leftOrthog: 1)          	 0.00181497	 100       	 26.7221   	 0         	 8.6172    	 3.10102   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00178251	 8         	 28.0504   	 0         	 9.021     	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2350, cols: 47, reductionFactor: 37, colBlockingSize: 12)                  	 0.00161456	 8         	 52.8338   	 0         	 4.46572   	 11.8309   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 47, n: 50, r: 47, r2: 47)             	 0.00142099	 8         	 58.4512   	 0         	 10.0486   	 5.81683   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 47, Qr2: 50)       	 0.00125048	 100       	 0         	 0         	 310.282   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 47, m: 47, fromLeft: 1)                	 0.00119194	 809       	 0         	 0         	 23.9889   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 47, m: 50, k: 50)     	 0.000991672	 100       	 23.6974   	 0         	 5.80837   	 4.07986   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 47)                                                                                          	 0.000818937	 201       	 0         	 0         	 9.22855   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000811443	 100       	 0.616186  	 0         	 2.46474   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000799565	 100       	 31.267    	 0         	 7.50408   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 47, n: 50, r2: 1)                                                                                          	 0.000756585	 201       	 0         	 0         	 9.9891    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 47)   	 0.000703473	 100       	 33.4057   	 0         	 8.18795   	 4.07986   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000695847	 8         	 0         	 0         	 22.9936   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 47, m: 50, k: 50)  	 0.000650266	 100       	 36.1391   	 0         	 8.85791   	 4.07986   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 47, k: 47)   	 0.000643739	 100       	 34.3151   	 0         	 8.58609   	 3.9966    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 47)                                                           	 0.000598748	 101       	 0         	 0         	 6.34257   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2350, Xcols: 47, r: 47, streamingCols: 0)                   	 0.000581314	 8         	 71.4402   	 0         	 24.4417   	 2.92289   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 47)                 	 0.000568353	 100       	 0         	 0         	 13.6535   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000515654	 100       	 0         	 0         	 7.75714   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000515104	 8         	 0         	 0         	 31.0617   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 47, n: 50, r2left: 1, r2right: 0)                  	 0.000470033	 100       	 0         	 0         	 7.99944   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000451369	 100       	 0         	 0         	 8.86193   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000413303	 100       	 1.20977   	 0         	 14.5172   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000388545	 101       	 0.64986   	 0         	 10.3978   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 47)                                                                                 	 0.000366007	 101       	 0.648485  	 0         	 10.3758   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000329799	 100       	 0.758037  	 0         	 12.1286   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 47, m: 2350)                                                                  	 0.000216695	 8         	 0         	 0         	 65.2419   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2350, m: 47)                                                         	 0.000198487	 8         	 0         	 0         	 71.2268   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000196415	 1         	 1.30722   	 0         	 0.20365   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.8911e-05	 1         	 3.21246   	 0         	 1.28498   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 47, r: 47, streamingCols: 0)                     	 3.1231e-05	 1         	 3.53655   	 0         	 1.48686   	 2.37854   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5021e-05	 9         	 0         	 0         	 23.9664   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.399e-05 	 1         	 17.8699   	 0         	 4.28878   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 47, r2: 47)              	 1.2331e-05	 1         	 17.9142   	 0         	 4.48236   	 3.9966    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 9.23e-06  	 1         	 0         	 0         	 4.33369   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 47)                                                                                   	 8.87e-06  	 1         	 0.529876  	 0         	 2.1195    	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 8.25e-06  	 1         	 0         	 0         	 4.84848   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.07e-06  	 1         	 0.619579  	 0         	 2.47831   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 47, m: 50)                                                                    	 5.01e-06  	 1         	 0         	 0         	 7.50499   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2350, m: 0, k: 47)  	 4.91e-06  	 100       	 0         	 0         	 17995.9   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.63646   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.63641   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.00692   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.00567   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.54874   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.919233  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.869273  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.658698  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.629424  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.573978  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.44493   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.417051  	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.211658  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0895442 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.075253  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0492842 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0378229 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0350443 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0348477 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0340916 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0315386 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0224907 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0206315 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0206025 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0190725 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0183295 	 20        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00669389	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00647632	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00384533	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00168938	 5272      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00120696	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108435	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000828383	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000413303	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22371720247168 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22371545114624 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22371343788160 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22371142461696 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22370941135232 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22370739808768 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22370538482304 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22370337155840 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22370135829376 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22369934502912 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22369733176448 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22369531849984 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22369330523520 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22369129197056 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22368927870592 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22368726544128 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22368525217664 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22368323891200 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22368122564736 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22367921238272 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22367719911808 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22367518585344 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22367317258880 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22367115932416 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22366914605952 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22366713279488 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22366511953024 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22366310626560 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22366109300096 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22365907973632 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22365706647168 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22365505320704 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22365303990144 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22365102663680 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22364901337216 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22364700010752 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22364498684288 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22364297357824 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22364096031360 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22363894704896 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22363693378432 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22363492051968 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22363290725504 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22363089399040 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22362888072576 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22362686746112 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22362485419648 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22362284093184 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22362082766720 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22361881440256 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22361680113792 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22361478787328 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22361277460864 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22361076134400 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22360874807936 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22360673481472 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22360472155008 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22360270828544 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22360069502080 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22359868175616 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22359666849152 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22359465522688 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22359264196224 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22371614586624 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22371436005120 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 98, m: 98)                                                                 	 0.815717  	 700       	 5.65373   	 0         	 0.198471  	 28.4864   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4900, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.549271  	 600       	 105.59    	 0         	 4.28033   	 24.6688   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4900, r: 98, r2: 98, leftOrthog: 1)        	 0.497447  	 600       	 113.523   	 0         	 14.0861   	 8.05921   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, r1_: 98, n: 50, r2: 98)           	 0.381133  	 600       	 148.168   	 0         	 12.2163   	 12.1287   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4900, cols: 48, reductionFactor: 37, colBlockingSize: 12)                  	 0.195598  	 700       	 82.9898   	 0         	 6.79979   	 12.2048   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4900, Xcols: 48, r: 48, streamingCols: 0)                   	 0.0817538 	 700       	 96.6649   	 0         	 32.3005   	 2.99267   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.079502  	 100       	 62.0335   	 0         	 2.56199   	 24.213    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 48, Qr2: 98)       	 0.0773196 	 700       	 0         	 0         	 60.8674   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 98)                                                                 	 0.0505855 	 100       	 3.3903    	 0         	 0.195313  	 17.3583   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 98, r2: 98, leftOrthog: 1)        	 0.0448686 	 100       	 107.024   	 0         	 13.4474   	 7.95868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4900, r: 50, r2: 50, leftOrthog: 1)        	 0.0379284 	 100       	 64.5954   	 0         	 15.6084   	 4.13851   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0376361 	 100       	 2.32489   	 0         	 0.160484  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, r1_: 50, n: 50, r2: 98)           	 0.0333672 	 100       	 143.914   	 0         	 17.5046   	 8.22148   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 48, m: 4900)                                                                  	 0.032802  	 700       	 0         	 0         	 80.3074   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 48, m: 48)                                                                  	 0.032295  	 909       	 4.15041   	 0         	 1.56721   	 2.64828   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 48, m: 50, k: 2500)   	 0.0321302 	 800       	 298.785   	 0         	 49.2796   	 6.06306   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, r1_: 98, n: 50, r2: 50)           	 0.031297  	 100       	 153.433   	 0         	 12.7706   	 12.0145   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2400, m: 50, k: 48) 	 0.0312695 	 800       	 294.728   	 0         	 48.6301   	 6.06061   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0311285 	 100       	 80.8331   	 0         	 6.36072   	 12.7082   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 48, n: 50, r2left: 50, r2right: 48)                	 0.0310034 	 700       	 0         	 0         	 84.966    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4900, m: 48)                                                         	 0.0284705 	 700       	 0         	 0         	 92.5251   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 48, reductionFactor: 37, colBlockingSize: 12)                  	 0.0233554 	 100       	 50.6578   	 0         	 4.18931   	 12.0922   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2400, m: 48, k: 48) 	 0.0216441 	 700       	 357.669   	 0         	 60.2076   	 5.94059   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 48, m: 2500, k: 50)	 0.0199368 	 800       	 481.522   	 0         	 79.4191   	 6.06306   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 48, n: 50, r2: 48)                                                                                         	 0.0180364 	 808       	 0         	 0         	 82.5724   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 98, reductionFactor: 37, colBlockingSize: 12)                    	 0.0090234 	 100       	 10.9311   	 0         	 1.2859    	 8.50073   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 48, r: 48, streamingCols: 0)                   	 0.00785364	 100       	 73.3418   	 0         	 24.5646   	 2.98567   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00514688	 8         	 19.4292   	 0         	 3.13976   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00481309	 9         	 0.311649  	 0         	 0.112942  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 48, m: 2500)                                                                  	 0.00405435	 100       	 0         	 0         	 47.3566   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 48)                                                         	 0.00382347	 100       	 0         	 0         	 50.2161   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 48, reductionFactor: 37, colBlockingSize: 12)                    	 0.003413  	 101       	 7.00244   	 0         	 1.11363   	 6.28792   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 48, n: 50, r2left: 50, r2right: 0)                 	 0.00312079	 100       	 0         	 0         	 61.523    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00273975	 8         	 37.4861   	 0         	 2.97837   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00212718	 8         	 23.5054   	 0         	 7.55932   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2400, cols: 48, reductionFactor: 37, colBlockingSize: 12)                  	 0.0019656 	 8         	 46.2275   	 0         	 3.82593   	 12.0827   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 98, leftOrthog: 1)          	 0.00157425	 100       	 31.1259   	 0         	 10.0111   	 3.10914   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 48, n: 50, r: 48, r2: 48)             	 0.00143376	 8         	 61.7075   	 0         	 10.3874   	 5.94059   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 48, Qr2: 50)       	 0.00133287	 100       	 0         	 0         	 294.102   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 48, m: 48, fromLeft: 1)                	 0.00123469	 809       	 0         	 0         	 24.1542   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 48, n: 50, r2: 1)                                                                                          	 0.000925404	 201       	 0         	 0         	 8.34057   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 48, m: 50, k: 50)     	 0.000906567	 100       	 26.4735   	 0         	 6.44188   	 4.10959   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000879619	 100       	 0.568428  	 0         	 2.27371   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 48)                                                                                          	 0.000873153	 201       	 0         	 0         	 8.83969   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000803561	 100       	 31.1115   	 0         	 7.46676   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 48, k: 48)   	 0.000729051	 100       	 31.6027   	 0         	 7.79534   	 4.05405   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 48)   	 0.000718826	 100       	 33.3878   	 0         	 8.12436   	 4.10959   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00068973	 8         	 0         	 0         	 23.1975   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000618987	 8         	 0         	 0         	 25.8487   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2400, Xcols: 48, r: 48, streamingCols: 0)                   	 0.000601436	 8         	 73.552    	 0         	 24.6399   	 2.98507   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 48)                 	 0.000601102	 100       	 0         	 0         	 13.0427   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 48, m: 50, k: 50)  	 0.000548336	 100       	 43.7688   	 0         	 10.6504   	 4.10959   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 48, n: 50, r2left: 1, r2right: 0)                  	 0.000491024	 100       	 0         	 0         	 7.82039   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000485716	 100       	 0         	 0         	 8.23527   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000457388	 100       	 0         	 0         	 8.74531   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000406827	 101       	 0.620657  	 0         	 9.93051   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000406165	 100       	 1.23103   	 0         	 14.7723   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 48)                                                           	 0.00040278	 101       	 0         	 0         	 9.62908   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 48)                                                                                 	 0.000386081	 101       	 0.627848  	 0         	 10.0456   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000355579	 100       	 0.703079  	 0         	 11.2493   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000336629	 1         	 0.762729  	 0         	 0.118825  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 48, m: 2400)                                                                  	 0.000203738	 8         	 0         	 0         	 72.3753   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2400, m: 48)                                                         	 0.000188415	 8         	 0         	 0         	 78.2613   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 3.7971e-05	 1         	 6.58397   	 0         	 1.58015   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.5031e-05	 1         	 3.56827   	 0         	 1.42731   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 48, r: 48, streamingCols: 0)                     	 2.6191e-05	 1         	 4.39846   	 0         	 1.81803   	 2.41935   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.527e-05 	 9         	 0         	 0         	 23.5756   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 48, r2: 48)              	 1.344e-05 	 1         	 17.1429   	 0         	 4.22857   	 4.05405   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.91e-06  	 1         	 0.504541  	 0         	 2.01816   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 48)                                                                                   	 7.98e-06  	 1         	 0.601504  	 0         	 2.40602   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 7.59e-06  	 1         	 0         	 0         	 5.27009   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 5.73e-06  	 1         	 0         	 0         	 6.9808    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 48, m: 50)                                                                    	 4.95e-06  	 1         	 0         	 0         	 7.75758   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2400, m: 0, k: 48)  	 4.811e-06 	 100       	 0         	 0         	 19156.1   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.7004    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.70037   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.04101   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.03968   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.57686   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.903938  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.896333  	 1818      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.669619  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.659291  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.581819  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.4466    	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.4417    	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.227925  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0923973 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0791098 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0543663 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0376897 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0371081 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0352164 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0335825 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0330367 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0217551 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0217249 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0204851 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0203206 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0187332 	 20        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0078945 	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00663205	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00364221	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00187897	 5272      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00124996	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00114849	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000897509	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000406165	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22581046933376 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22580857661440 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22580656334976 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22580455008512 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22580253682048 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22580052355584 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22579851029120 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22579649702656 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22579448376192 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22579247049728 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22579045723264 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22578844396800 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22578643070336 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22578441743872 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22578240417408 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22578039090944 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22577837764480 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22577636438016 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22577435111552 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22577233785088 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22577032458624 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22576831132160 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22576629805696 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22576428479232 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22576227152768 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22576025826304 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22575824499840 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22575623173376 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22575421846912 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22575220520448 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22575019193984 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22574817867520 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22574616536960 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22574415210496 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22574213884032 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22574012557568 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22573811231104 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22573609904640 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22573408578176 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22573207251712 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22573005925248 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22572804598784 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22572603272320 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22572401945856 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22572200619392 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22571999292928 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22571797966464 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22571596640000 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22571395313536 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22571193987072 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22570992660608 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22570791334144 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22570590007680 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22570388681216 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22570187354752 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22569986028288 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22569784701824 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22569583375360 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22569382048896 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22569180722432 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22568979395968 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22568778069504 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22568576743040 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22580941272832 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22580934682368 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 99, m: 99)                                                                 	 0.858701  	 700       	 5.53681   	 0         	 0.192397  	 28.7781   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4950, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.55608   	 600       	 107.523   	 0         	 4.31464   	 24.9205   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4950, r: 99, r2: 99, leftOrthog: 1)        	 0.52165   	 600       	 111.603   	 0         	 13.7081   	 8.14145   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, r1_: 99, n: 50, r2: 99)           	 0.390827  	 600       	 148.961   	 0         	 12.1576   	 12.2525   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4950, cols: 49, reductionFactor: 37, colBlockingSize: 12)                  	 0.205157  	 700       	 83.2954   	 0         	 6.68623   	 12.4578   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4950, Xcols: 49, r: 49, streamingCols: 0)                   	 0.0843672 	 700       	 98.6102   	 0         	 32.2789   	 3.05494   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.080435  	 100       	 62.5716   	 0         	 2.5591    	 24.4507   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 49, Qr2: 99)       	 0.0789912 	 700       	 0         	 0         	 60.7986   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 99)                                                                 	 0.0517139 	 100       	 3.35016   	 0         	 0.192598  	 17.3946   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 99, r2: 99, leftOrthog: 1)        	 0.0447186 	 100       	 109.585   	 0         	 13.6337   	 8.0378    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 49, m: 50, k: 2500)   	 0.0395327 	 800       	 247.896   	 0         	 40.4647   	 6.12623   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0377586 	 100       	 2.31735   	 0         	 0.159964  	 14.4868   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 49, m: 49)                                                                  	 0.0359282 	 909       	 3.96873   	 0         	 1.46783   	 2.70381   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4950, r: 50, r2: 50, leftOrthog: 1)        	 0.0354073 	 100       	 69.9009   	 0         	 16.8892   	 4.1388    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 49, m: 4950)                                                                  	 0.0341506 	 700       	 0         	 0         	 79.5465   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, r1_: 50, n: 50, r2: 99)           	 0.0332034 	 100       	 147.59    	 0         	 17.8897   	 8.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 49, n: 50, r2left: 50, r2right: 49)                	 0.0314163 	 700       	 0         	 0         	 86.4698   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, r1_: 99, n: 50, r2: 50)           	 0.0307495 	 100       	 159.368   	 0         	 13.1332   	 12.1347   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4950, m: 49)                                                         	 0.030237  	 700       	 0         	 0         	 89.8424   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0301978 	 100       	 84.1748   	 0         	 6.623     	 12.7095   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2450, m: 50, k: 49) 	 0.0299864 	 800       	 320.278   	 0         	 52.2904   	 6.125     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 49, reductionFactor: 37, colBlockingSize: 12)                  	 0.0241826 	 100       	 50.9847   	 0         	 4.13192   	 12.3392   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 49, m: 2500, k: 50)	 0.0222806 	 800       	 439.844   	 0         	 71.7969   	 6.12623   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 49, n: 50, r2: 49)                                                                                         	 0.0192695 	 808       	 0         	 0         	 80.5421   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2450, m: 49, k: 49) 	 0.015419  	 700       	 534.108   	 0         	 88.0732   	 6.06436   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 99, reductionFactor: 37, colBlockingSize: 12)                    	 0.0084796 	 100       	 11.8707   	 0         	 1.39167   	 8.52984   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 49, r: 49, streamingCols: 0)                   	 0.00792885	 100       	 75.7046   	 0         	 24.841    	 3.04757   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00507277	 9         	 0.295695  	 0         	 0.10716   	 2.75937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0050448 	 8         	 19.8224   	 0         	 3.2033    	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 49)                                                         	 0.00381462	 100       	 0         	 0         	 51.3813   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 49, m: 2500)                                                                  	 0.00379005	 100       	 0         	 0         	 51.7143   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 49, reductionFactor: 37, colBlockingSize: 12)                    	 0.003676  	 101       	 6.77516   	 0         	 1.06627   	 6.35408   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 49, n: 50, r2left: 50, r2right: 0)                 	 0.00294896	 100       	 0         	 0         	 66.4642   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272302	 8         	 37.7164   	 0         	 2.99667   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0023538 	 8         	 21.2422   	 0         	 6.8315    	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2450, cols: 49, reductionFactor: 37, colBlockingSize: 12)                  	 0.00195072	 8         	 49.5525   	 0         	 4.01742   	 12.3344   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 99, leftOrthog: 1)          	 0.0017024 	 100       	 29.0766   	 0         	 9.32802   	 3.11713   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 49, n: 50, r: 49, r2: 49)             	 0.00167998	 8         	 56.0239   	 0         	 9.23823   	 6.06436   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 49, Qr2: 50)       	 0.00135467	 100       	 0         	 0         	 292.322   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 49, m: 49, fromLeft: 1)                	 0.00125414	 809       	 0         	 0         	 24.7807   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 49, m: 50, k: 50)     	 0.00114778	 100       	 21.3455   	 0         	 5.15777   	 4.13851   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 49)                                                                                          	 0.000863308	 201       	 0         	 0         	 9.12675   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000793371	 100       	 0.630222  	 0         	 2.52089   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000769783	 100       	 32.4767   	 0         	 7.7944    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 49, n: 50, r2: 1)                                                                                          	 0.000759864	 201       	 0         	 0         	 10.3692   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 49)   	 0.00073693	 100       	 33.246    	 0         	 8.03333   	 4.13851   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 49, m: 50, k: 50)  	 0.000653225	 100       	 37.5062   	 0         	 9.06273   	 4.13851   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000651457	 8         	 0         	 0         	 24.5603   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2450, Xcols: 49, r: 49, streamingCols: 0)                   	 0.000631097	 8         	 74.5679   	 0         	 24.4705   	 3.04726   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 49)                                                           	 0.000595648	 101       	 0         	 0         	 6.64688   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 49, k: 49)   	 0.000574608	 100       	 41.785    	 0         	 10.1648   	 4.11074   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 49)                 	 0.000556031	 100       	 0         	 0         	 14.2438   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000506733	 8         	 0         	 0         	 31.5748   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.0005026 	 100       	 0         	 0         	 7.95862   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 49, n: 50, r2left: 1, r2right: 0)                  	 0.000500089	 100       	 0         	 0         	 7.8386    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00043981	 100       	 0         	 0         	 9.09484   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000430105	 100       	 1.16251   	 0         	 13.9501   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000400816	 101       	 0.629965  	 0         	 10.0794   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 49)                                                                                 	 0.000352319	 101       	 0.702346  	 0         	 11.2375   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000330312	 100       	 0.75686   	 0         	 12.1098   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.000329409	 1         	 0.779447  	 0         	 0.12143   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 49, m: 2450)                                                                  	 0.000269595	 8         	 0         	 0         	 56.9981   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2450, m: 49)                                                         	 0.000143956	 8         	 0         	 0         	 106.744   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.9801e-05	 1         	 3.14062   	 0         	 1.25625   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 49, r: 49, streamingCols: 0)                     	 3.037e-05 	 1         	 3.95291   	 0         	 1.60698   	 2.45984   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.53e-05  	 9         	 0         	 0         	 23.5294   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.502e-05 	 1         	 16.6445   	 0         	 3.99467   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 49, r2: 49)              	 9.84e-06  	 1         	 24.4004   	 0         	 5.93577   	 4.11074   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 49)                                                                                   	 9.36e-06  	 1         	 0.523504  	 0         	 2.09402   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 9.16e-06  	 1         	 0         	 0         	 4.36681   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.51e-06  	 1         	 0.587544  	 0         	 2.35018   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 6.09e-06  	 1         	 0         	 0         	 6.56814   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2450, m: 0, k: 49)  	 5.14e-06  	 100       	 0         	 0         	 18684.8   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 49, m: 50)                                                                    	 4.78e-06  	 1         	 0         	 0         	 8.20084   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.7876    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.78755   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.10532   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.10409   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.63304   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.948173  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.913211  	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.682161  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.675832  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.603478  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.461745  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.45555   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.238491  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0953511 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0807857 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0467221 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.041001  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0406805 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0387278 	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0354518 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0354213 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0229338 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.022277  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0222474 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0213953 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0197849 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00674964	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00562078	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00394756	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00177841	 5272      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00126944	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108345	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000811241	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000430105	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22751209559936 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22750978631680 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22750777305216 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22750575978752 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22750374652288 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22750173325824 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22749971999360 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22749770672896 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22749569346432 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22749368019968 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22749166693504 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22748965367040 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22748764040576 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22748562714112 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22748361387648 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22748160061184 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22747958734720 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22747757408256 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22747556081792 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22747354755328 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22747153428864 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22746952102400 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22746750775936 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22746549449472 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22746348123008 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22746146796544 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22745945470080 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22745744143616 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22745542817152 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22745341490688 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22745140164224 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22744938837760 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22744737507200 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22744536180736 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22744334854272 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22744133527808 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22743932201344 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22743730874880 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22743529548416 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22743328221952 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22743126895488 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22742925569024 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22742724242560 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22742522916096 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22742321589632 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22742120263168 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22741918936704 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22741717610240 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22741516283776 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22741314957312 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22741113630848 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22740912304384 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22740710977920 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22740509651456 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22740308324992 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22740106998528 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22739905672064 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22739704345600 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22739503019136 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22739301692672 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22739100366208 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22738899039744 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22738697713280 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22751103899392 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22751097308928 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 100, m: 100)                                                               	 0.843279  	 700       	 5.81065   	 0         	 0.199886  	 29.0698   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 100, reductionFactor: 37, colBlockingSize: 12)                 	 0.56576   	 600       	 108.918   	 0         	 4.32692   	 25.1722   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5000, r: 100, r2: 100, leftOrthog: 1)      	 0.50979   	 600       	 117.696   	 0         	 14.3118   	 8.22368   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, n: 50, r2: 100)        	 0.400784  	 600       	 149.706   	 0         	 12.0963   	 12.3762   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.237999  	 800       	 86.3053   	 0         	 6.78995   	 12.7107   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5000, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0868359 	 700       	 100.765   	 0         	 32.3253   	 3.11721   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 100, reductionFactor: 37, colBlockingSize: 12)                 	 0.0817215 	 100       	 62.837    	 0         	 2.54523   	 24.6881   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 100)      	 0.0786553 	 700       	 0         	 0         	 62.2971   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 100)                                                                	 0.0518773 	 100       	 3.37334   	 0         	 0.193534  	 17.4303   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2500, m: 50, k: 50) 	 0.0498001 	 1500      	 376.505   	 0         	 60.8433   	 6.18812   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 100, r2: 100, leftOrthog: 1)      	 0.0457629 	 100       	 109.259   	 0         	 13.4607   	 8.11688   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0404572 	 918       	 3.78176   	 0         	 1.37051   	 2.75937   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0387432 	 100       	 2.25846   	 0         	 0.155898  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 2500)   	 0.0377215 	 800       	 265.101   	 0         	 42.8403   	 6.18812   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5000, r: 50, r2: 50, leftOrthog: 1)        	 0.0365211 	 100       	 68.4535   	 0         	 16.5384   	 4.13907   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5000, m: 50)                                                         	 0.0348744 	 700       	 0         	 0         	 80.2882   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 50, n: 50, r2: 100)         	 0.0342087 	 100       	 146.162   	 0         	 17.6563   	 8.27815   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 50, r2right: 50)                	 0.0332503 	 700       	 0         	 0         	 84.2098   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, n: 50, r2: 50)         	 0.0312414 	 100       	 160.044   	 0         	 13.0596   	 12.2549   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 5000)                                                                  	 0.029958  	 700       	 0         	 0         	 93.4641   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0297414 	 116       	 50.0713   	 0         	 3.9783    	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 2500, k: 50)	 0.0222206 	 800       	 450.034   	 0         	 72.7255   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 50)                                                                                         	 0.0190011 	 808       	 0         	 0         	 85.0476   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0106359 	 116       	 68.1655   	 0         	 21.922    	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 100, reductionFactor: 37, colBlockingSize: 12)                   	 0.00950754	 100       	 10.8022   	 0         	 1.26216   	 8.55856   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00687634	 16        	 29.0852   	 0         	 4.70018   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00517554	 116       	 0         	 0         	 44.8262   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.00469589	 116       	 0         	 0         	 49.4049   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00388943	 102       	 6.73342   	 0         	 1.049     	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 50, r2right: 0)                 	 0.00267618	 100       	 0         	 0         	 74.7333   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 100, leftOrthog: 1)         	 0.00158951	 100       	 31.4562   	 0         	 10.066    	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00136162	 301       	 0         	 0         	 8.84242   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 0.00132088	 818       	 0         	 0         	 24.7713   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 50)       	 0.00130495	 100       	 0         	 0         	 306.525   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 50)   	 0.00128958	 200       	 38.7724   	 0         	 9.30538   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000987238	 100       	 25.3232   	 0         	 6.07756   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000849976	 100       	 0.588252  	 0         	 2.35301   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000827882	 100       	 30.1975   	 0         	 7.24741   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00076047	 202       	 0.664063  	 0         	 10.625    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000749175	 201       	 0         	 0         	 10.7318   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000626036	 100       	 39.9338   	 0         	 9.58411   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 50)                 	 0.000577021	 100       	 0         	 0         	 13.8643   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000492037	 100       	 0         	 0         	 8.12947   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000441405	 100       	 0         	 0         	 9.06197   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000434371	 102       	 0         	 0         	 9.39289   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000431894	 100       	 1.15769   	 0         	 13.8923   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000326495	 100       	 0.765709  	 0         	 12.2513   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 6.1332e-05	 2         	 4.07618   	 0         	 1.63047   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 2.565e-05 	 2         	 19.4932   	 0         	 4.67836   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 2.139e-05 	 2         	 0.467508  	 0         	 1.87003   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.3651e-05	 2         	 0         	 0         	 5.86038   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2500, m: 0, k: 50)  	 4.952e-06 	 100       	 0         	 0         	 20193.9   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.78825   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.78821   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.09711   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.09565   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.61294   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.933899  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.928619  	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.69103   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.687544  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.593663  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.467354  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.467062  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.242338  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0975331 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0804016 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0510946 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0404843 	 918       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0404572 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0387087 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0369955 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0346676 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0228466 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0218935 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0218589 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0211119 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0193953 	 20        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00713711	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00690199	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00385701	 6372      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00187644	 5074      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00132088	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108697	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000871366	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000431894	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23186096109440 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23185911179264 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23185709852800 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23185508526336 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23185307199872 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23185105873408 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23184904546944 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23184703220480 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23184501894016 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23184300567552 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23184099241088 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23183897914624 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23183696588160 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23183495261696 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23183293935232 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23183092608768 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23182891282304 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23182689955840 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23182488629376 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23182287302912 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23182085976448 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23181884649984 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23181683323520 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23181481997056 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23181280670592 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23181079344128 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23180878017664 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23180676691200 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23180475364736 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23180274038272 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23180072711808 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23179871385344 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23179670054784 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23179468728320 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23179267401856 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23179066075392 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23178864748928 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23178663422464 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23178462096000 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23178260769536 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23178059443072 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23177858116608 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23177656790144 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23177455463680 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23177254137216 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23177052810752 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23176851484288 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23176650157824 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23176448831360 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23176247504896 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23176046178432 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23175844851968 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23175643525504 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23175442199040 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23175240872576 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23175039546112 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23174838219648 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23174636893184 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23174435566720 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23174234240256 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23174032913792 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23173831587328 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23173630260864 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23185990448896 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23185983858432 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 101, m: 101)                                                               	 0.899526  	 700       	 5.61237   	 0         	 0.191148  	 29.3614   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5050, cols: 101, reductionFactor: 37, colBlockingSize: 12)                 	 0.568767  	 600       	 111.625   	 0         	 4.39056   	 25.424    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5050, r: 101, r2: 101, leftOrthog: 1)      	 0.496724  	 600       	 124.452   	 0         	 14.9835   	 8.30592   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 101, r1_: 101, n: 50, r2: 101)        	 0.40307   	 600       	 153.368   	 0         	 12.2694   	 12.5      
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5050, cols: 51, reductionFactor: 37, colBlockingSize: 12)                  	 0.215104  	 700       	 87.7997   	 0         	 6.77275   	 12.9637   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5050, Xcols: 51, r: 51, streamingCols: 0)                   	 0.0892838 	 700       	 102.981   	 0         	 32.3893   	 3.17947   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 51, Qr2: 101)      	 0.0837973 	 700       	 0         	 0         	 59.6506   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 101, reductionFactor: 37, colBlockingSize: 12)                 	 0.0825784 	 100       	 63.4349   	 0         	 2.54498   	 24.9254   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 101)                                                                	 0.052303  	 100       	 3.37935   	 0         	 0.193488  	 17.4654   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 101, r2: 101, leftOrthog: 1)      	 0.0447225 	 100       	 114.048   	 0         	 13.9152   	 8.19592   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 51, m: 50, k: 2500)   	 0.0410415 	 800       	 248.529   	 0         	 39.7724   	 6.24877   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5050, r: 50, r2: 50, leftOrthog: 1)        	 0.0400327 	 100       	 63.0735   	 0         	 15.2376   	 4.13934   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0395329 	 100       	 2.21335   	 0         	 0.152784  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, n: 50, r2left: 50, r2right: 51)                	 0.0373515 	 700       	 0         	 0         	 77.2273   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 51, m: 5050)                                                                  	 0.0350958 	 700       	 0         	 0         	 82.191    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 51, m: 51)                                                                  	 0.0338242 	 809       	 4.23029   	 0         	 1.5028    	 2.81494   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 101, r1_: 50, n: 50, r2: 101)         	 0.032826  	 100       	 155.38    	 0         	 18.7071   	 8.30592   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 101, r1_: 101, n: 50, r2: 50)         	 0.0315947 	 100       	 161.436   	 0         	 13.0453   	 12.375    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0313548 	 100       	 82.7063   	 0         	 6.50617   	 12.712    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2550, m: 50, k: 51) 	 0.0312813 	 700       	 291.021   	 0         	 46.5633   	 6.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5050, m: 51)                                                         	 0.0292256 	 700       	 0         	 0         	 98.6997   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 51, reductionFactor: 37, colBlockingSize: 12)                  	 0.0258858 	 101       	 52.1137   	 0         	 4.06098   	 12.8328   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 51, m: 2500, k: 50)	 0.0231457 	 800       	 440.687   	 0         	 70.5238   	 6.24877   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 51, n: 50, r2: 51)                                                                                         	 0.018167  	 707       	 0         	 0         	 80.978    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2550, m: 51, k: 51) 	 0.0170667 	 700       	 544.075   	 0         	 86.1986   	 6.31188   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00959347	 109       	 1.89364   	 0         	 0.686258  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 101, reductionFactor: 37, colBlockingSize: 12)                   	 0.00922984	 100       	 11.3509   	 0         	 1.32189   	 8.5869    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 51, r: 51, streamingCols: 0)                   	 0.00849328	 101       	 77.3262   	 0         	 24.3829   	 3.17133   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00498699	 8         	 20.0522   	 0         	 3.24043   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00437763	 101       	 5.92385   	 0         	 0.922873  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 51)                                                         	 0.00399446	 101       	 0         	 0         	 51.5815   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2550, m: 50, k: 50) 	 0.00393534	 100       	 323.987   	 0         	 52.3461   	 6.18932   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 51, m: 2500)                                                                  	 0.00370724	 101       	 0         	 0         	 55.5778   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00264355	 8         	 38.8503   	 0         	 3.08676   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 51, reductionFactor: 37, colBlockingSize: 12)                  	 0.00191047	 7         	 49.9172   	 0         	 3.88829   	 12.8378   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 101, leftOrthog: 1)         	 0.00175071	 100       	 28.8454   	 0         	 9.20767   	 3.13275   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00174712	 8         	 28.6185   	 0         	 9.2037    	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, n: 50, r2left: 50, r2right: 0)                 	 0.00173477	 100       	 0         	 0         	 117.595   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 51, n: 50, r2: 50)                                                                                         	 0.00158214	 101       	 0         	 0         	 130.229   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, n: 50, r: 51, r2: 51)             	 0.00155842	 7         	 59.5833   	 0         	 9.43987   	 6.31188   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 51, m: 51, fromLeft: 1)                	 0.00135612	 808       	 0         	 0         	 24.7955   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 51, Qr2: 50)       	 0.00125027	 100       	 0         	 0         	 323.13    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000936096	 100       	 26.7067   	 0         	 6.4096    	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000862687	 100       	 0.579584  	 0         	 2.31834   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 51)                                                                                          	 0.00084979	 201       	 0         	 0         	 9.65038   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000848993	 100       	 29.4467   	 0         	 7.0672    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2550, m: 51)                                                         	 0.00081154	 7         	 0         	 0         	 17.9481   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000792015	 201       	 0         	 0         	 10.1513   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 51)   	 0.000764401	 100       	 33.3595   	 0         	 7.95394   	 4.19408   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000657025	 8         	 0         	 0         	 24.3522   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000629313	 100       	 39.7259   	 0         	 9.53421   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2550, Xcols: 51, r: 51, streamingCols: 0)                   	 0.000584715	 7         	 79.4025   	 0         	 25.0352   	 3.17164   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 51, k: 51)   	 0.000582482	 100       	 44.6537   	 0         	 10.5768   	 4.22185   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 51, m: 2550)                                                                  	 0.000554804	 7         	 0         	 0         	 26.2536   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 51)                 	 0.000552682	 100       	 0         	 0         	 14.6196   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000520238	 100       	 0         	 0         	 7.68879   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000501146	 100       	 0         	 0         	 7.98171   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000459537	 100       	 0         	 0         	 8.70441   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.00045219	 8         	 0         	 0         	 35.3834   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000451473	 100       	 1.10749   	 0         	 13.2898   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000393125	 101       	 0         	 0         	 10.2766   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000389449	 101       	 0.648352  	 0         	 10.3736   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 51)                                                                                 	 0.00036528	 101       	 0.705076  	 0         	 11.2812   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000329329	 100       	 0.759119  	 0         	 12.1459   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, n: 50, r: 51, r2: 50)             	 0.000219596	 1         	 59.2224   	 0         	 9.47558   	 6.25      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 5.9602e-05	 1         	 2.09725   	 0         	 0.838898  	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 51, reductionFactor: 37, colBlockingSize: 12)                    	 3.7731e-05	 1         	 7.07985   	 0         	 1.09215   	 6.48247   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 51, r: 50, streamingCols: 1)                     	 2.7341e-05	 1         	 4.57189   	 0         	 1.82876   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5501e-05	 9         	 0         	 0         	 23.2243   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.44e-05  	 2         	 0         	 0         	 5.55556   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.416e-05 	 1         	 17.6554   	 0         	 4.23729   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 51, r2: 51)              	 1.1151e-05	 1         	 23.3253   	 0         	 5.52489   	 4.22185   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.441e-06 	 1         	 0.529605  	 0         	 2.11842   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 51)                                                                                   	 7.34e-06  	 1         	 0.694823  	 0         	 2.77929   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 51)                                                           	 5.4e-06   	 1         	 0         	 0         	 7.55556   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2550, m: 0, k: 50)  	 4.67e-06  	 100       	 0         	 0         	 21841.5   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 51, m: 50, fromLeft: 1)                	 1.69e-06  	 1         	 0         	 0         	 24.142    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.88584   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.88581   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.16771   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.16643   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.6794    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.991362  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.941889  	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.71803   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.692591  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.583229  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.481466  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.46834   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.250462  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.100196  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0855072 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0536349 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0434177 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0419776 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0401401 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0398245 	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0350872 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.023775  	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0236232 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0235945 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0219112 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0197776 	 20        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00822636	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00679032	 18        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00353417	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00179942	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00137332	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108406	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000879468	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000451473	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23288819087232 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23288587741184 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23288386414720 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23288185088256 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23287983761792 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23287782435328 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23287581108864 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23287379782400 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23287178455936 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23286977129472 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23286775803008 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23286574476544 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23286373150080 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23286171823616 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23285970497152 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23285769170688 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23285567844224 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23285366517760 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23285165191296 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23284963864832 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23284762538368 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23284561211904 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23284359885440 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23284158558976 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23283957232512 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23283755906048 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23283554579584 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23283353253120 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23283151926656 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23282950600192 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23282749273728 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23282547947264 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23282346616704 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23282145290240 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23281943963776 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23281742637312 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23281541310848 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23281339984384 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23281138657920 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23280937331456 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23280736004992 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23280534678528 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23280333352064 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23280132025600 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23279930699136 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23279729372672 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23279528046208 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23279326719744 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23279125393280 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23278924066816 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23278722740352 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23278521413888 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23278320087424 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23278118760960 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23277917434496 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23277716108032 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23277514781568 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23277313455104 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23277112128640 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23276910802176 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23276709475712 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23276508149248 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23276306822784 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23288713426688 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23288706836224 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 102, m: 102)                                                               	 0.901629  	 700       	 5.76725   	 0         	 0.194491  	 29.6531   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5100, cols: 102, reductionFactor: 37, colBlockingSize: 12)                 	 0.581131  	 600       	 112.528   	 0         	 4.38266   	 25.6757   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5100, r: 102, r2: 102, leftOrthog: 1)      	 0.530006  	 600       	 120.136   	 0         	 14.322    	 8.38816   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 102, r1_: 102, n: 50, r2: 102)        	 0.416979  	 600       	 152.699   	 0         	 12.0962   	 12.6238   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5100, cols: 52, reductionFactor: 37, colBlockingSize: 12)                  	 0.222107  	 700       	 89.2737   	 0         	 6.75467   	 13.2166   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5100, Xcols: 52, r: 52, streamingCols: 0)                   	 0.0915689 	 700       	 105.421   	 0         	 32.5199   	 3.24174   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 102, reductionFactor: 37, colBlockingSize: 12)                 	 0.0861052 	 100       	 62.0473   	 0         	 2.46586   	 25.1626   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 52, Qr2: 102)      	 0.0857117 	 700       	 0         	 0         	 59.4813   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 102)                                                                	 0.0525036 	 100       	 3.39976   	 0         	 0.194272  	 17.5      
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 102, r2: 102, leftOrthog: 1)      	 0.0472219 	 100       	 110.161   	 0         	 13.3126   	 8.27492   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0400614 	 100       	 2.18415   	 0         	 0.150768  	 14.4868   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 52, m: 5100)                                                                  	 0.0394973 	 700       	 0         	 0         	 75.2011   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5100, r: 50, r2: 50, leftOrthog: 1)        	 0.0386252 	 100       	 66.0191   	 0         	 15.9481   	 4.13961   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 52, m: 50, k: 2500)   	 0.0381182 	 800       	 272.835   	 0         	 43.2507   	 6.30823   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5100, m: 52)                                                         	 0.0360323 	 700       	 0         	 0         	 82.4327   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, n: 50, r2left: 50, r2right: 52)                	 0.0354727 	 700       	 0         	 0         	 83.7332   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 102, r1_: 50, n: 50, r2: 102)         	 0.0340448 	 100       	 152.799   	 0         	 18.3358   	 8.33333   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 52, m: 52)                                                                  	 0.0336545 	 809       	 4.50662   	 0         	 1.56999   	 2.87047   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 102, r1_: 102, n: 50, r2: 50)         	 0.0319292 	 100       	 162.923   	 0         	 13.039    	 12.4951   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0315421 	 100       	 83.0293   	 0         	 6.53095   	 12.7132   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2600, m: 50, k: 52) 	 0.0285115 	 700       	 331.936   	 0         	 52.599    	 6.31068   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 52, reductionFactor: 37, colBlockingSize: 12)                  	 0.0278969 	 101       	 50.2717   	 0         	 3.8436    	 13.0793   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 52, m: 2500, k: 50)	 0.0226409 	 800       	 459.346   	 0         	 72.8169   	 6.30823   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2600, m: 52, k: 52) 	 0.022207  	 700       	 443.219   	 0         	 68.8695   	 6.43564   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 52, n: 50, r2: 52)                                                                                         	 0.0190016 	 707       	 0         	 0         	 80.4871   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0173166 	 8         	 5.77481   	 0         	 0.933209  	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 102, reductionFactor: 37, colBlockingSize: 12)                   	 0.00945339	 100       	 11.303    	 0         	 1.31204   	 8.61486   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00936235	 109       	 1.94039   	 0         	 0.703199  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 52, r: 52, streamingCols: 0)                   	 0.00863992	 101       	 79.0239   	 0         	 24.4415   	 3.23319   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2600, m: 50, k: 50) 	 0.00620188	 100       	 209.614   	 0         	 33.8607   	 6.19048   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 52)                                                         	 0.00471032	 101       	 0         	 0         	 44.6      	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 52, m: 2500)                                                                  	 0.00447276	 101       	 0         	 0         	 46.9687   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0044433 	 101       	 5.8363    	 0         	 0.909234  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, n: 50, r2left: 50, r2right: 0)                 	 0.0037117 	 100       	 0         	 0         	 56.039    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00275871	 8         	 37.2285   	 0         	 2.9579    	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2600, cols: 52, reductionFactor: 37, colBlockingSize: 12)                  	 0.0019946 	 7         	 50.6797   	 0         	 3.87177   	 13.0896   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 102, leftOrthog: 1)         	 0.00196602	 100       	 25.9407   	 0         	 8.26032   	 3.14039   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00196589	 8         	 25.4337   	 0         	 8.17949   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 52, n: 50, r2: 50)                                                                                         	 0.00167427	 101       	 0         	 0         	 125.475   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, n: 50, r: 52, r2: 52)             	 0.00158674	 7         	 62.03     	 0         	 9.63851   	 6.43564   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 52, m: 52, fromLeft: 1)                	 0.00139088	 808       	 0         	 0         	 25.1331   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 52, Qr2: 50)       	 0.00130075	 100       	 0         	 0         	 313.666   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00106236	 100       	 23.5325   	 0         	 5.6478    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2600, m: 52)                                                         	 0.000917105	 7         	 0         	 0         	 16.5111   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000854219	 100       	 29.2665   	 0         	 7.02396   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 52)                                                                                          	 0.000846423	 201       	 0         	 0         	 9.87875   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000794523	 100       	 0.629308  	 0         	 2.51723   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 52, m: 2600)                                                                  	 0.00079445	 7         	 0         	 0         	 19.0602   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000772021	 201       	 0         	 0         	 10.4142   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 52)   	 0.000762921	 100       	 34.0795   	 0         	 8.07423   	 4.22078   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000713069	 8         	 0         	 0         	 22.4382   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 52, k: 52)   	 0.000650972	 100       	 41.5379   	 0         	 9.71347   	 4.27632   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00062289	 100       	 40.1355   	 0         	 9.63252   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2600, Xcols: 52, r: 52, streamingCols: 0)                   	 0.000591669	 7         	 83.1762   	 0         	 25.7207   	 3.23383   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000580694	 8         	 0         	 0         	 27.5532   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 52)                 	 0.000571297	 100       	 0         	 0         	 14.2833   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000493244	 100       	 0         	 0         	 8.10958   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000485324	 100       	 0         	 0         	 8.24192   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000469974	 100       	 0         	 0         	 8.51111   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00041846	 100       	 1.19486   	 0         	 14.3383   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000407489	 101       	 0         	 0         	 9.91438   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000376579	 101       	 0.67051   	 0         	 10.7282   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 52)                                                                                 	 0.000357979	 101       	 0.733563  	 0         	 11.737    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000322881	 100       	 0.774279  	 0         	 12.3885   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, n: 50, r: 52, r2: 50)             	 0.000241006	 1         	 56.0982   	 0         	 8.88941   	 6.31068   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6931e-05	 1         	 3.38469   	 0         	 1.35388   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 52, reductionFactor: 37, colBlockingSize: 12)                    	 3.6541e-05	 1         	 7.5999    	 0         	 1.16122   	 6.54478   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 52, r: 50, streamingCols: 2)                     	 2.6421e-05	 1         	 4.73109   	 0         	 1.89243   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5181e-05	 9         	 0         	 0         	 23.7139   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.438e-05 	 1         	 17.3853   	 0         	 4.17246   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 52, r2: 52)              	 1.17e-05  	 1         	 23.1111   	 0         	 5.40444   	 4.27632   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.168e-05 	 2         	 0         	 0         	 6.84932   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.59e-06  	 1         	 0.521376  	 0         	 2.08551   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 52)                                                                                   	 8.48e-06  	 1         	 0.613208  	 0         	 2.45283   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2600, m: 0, k: 50)  	 4.85e-06  	 100       	 0         	 0         	 21443.3   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 52)                                                           	 4e-06     	 1         	 0         	 0         	 10.4      	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 52, m: 50, fromLeft: 1)                	 1.68e-06  	 1         	 0         	 0         	 24.7619   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.98524   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.98519   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.23884   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.23761   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.73332   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.994194  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.967469  	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.746283  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.708868  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.617819  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.506533  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.483807  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.259717  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.10283   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0874824 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0583391 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0453569 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0430169 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0427843 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.040241  	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0391806 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0367189 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0366883 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0232638 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0227875 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0209586 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0191704 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00565117	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00402481	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00215301	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00140775	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105744	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000812593	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00041846	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22763683485568 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22763460880384 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22763259553920 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22763058227456 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22762856900992 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22762655574528 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22762454248064 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22762252921600 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22762051595136 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22761850268672 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22761648942208 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22761447615744 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22761246289280 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22761044962816 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22760843636352 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22760642309888 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22760440983424 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22760239656960 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22760038330496 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22759837004032 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22759635677568 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22759434351104 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22759233024640 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22759031698176 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22758830371712 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22758629045248 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22758427718784 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22758226392320 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22758025065856 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22757823739392 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22757622412928 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22757421086464 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22757219755904 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22757018429440 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22756817102976 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22756615776512 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22756414450048 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22756213123584 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22756011797120 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22755810470656 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22755609144192 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22755407817728 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22755206491264 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22755005164800 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22754803838336 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22754602511872 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22754401185408 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22754199858944 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22753998532480 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22753797206016 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22753595879552 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22753394553088 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22753193226624 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22752991900160 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22752790573696 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22752589247232 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22752387920768 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22752186594304 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22751985267840 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22751783941376 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22751582614912 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22751381288448 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22751179961984 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22763577825024 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22763571234560 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 103, m: 103)                                                               	 0.946919  	 700       	 5.65451   	 0         	 0.188831  	 29.9448   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5150, cols: 103, reductionFactor: 37, colBlockingSize: 12)                 	 0.589346  	 600       	 114.255   	 0         	 4.40672   	 25.9274   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5150, r: 103, r2: 103, leftOrthog: 1)      	 0.533822  	 600       	 122.819   	 0         	 14.4998   	 8.47039   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 103, r1_: 103, n: 50, r2: 103)        	 0.424729  	 600       	 154.366   	 0         	 12.1095   	 12.7475   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5150, cols: 53, reductionFactor: 37, colBlockingSize: 12)                  	 0.225571  	 700       	 92.2117   	 0         	 6.84597   	 13.4695   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5150, Xcols: 53, r: 53, streamingCols: 0)                   	 0.092474  	 700       	 109.506   	 0         	 33.1434   	 3.304     
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 53, Qr2: 103)      	 0.0861836 	 700       	 0         	 0         	 60.3251   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 103, reductionFactor: 37, colBlockingSize: 12)                 	 0.0857306 	 100       	 63.5463   	 0         	 2.50187   	 25.3995   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 103)                                                                	 0.0527485 	 100       	 3.41716   	 0         	 0.194887  	 17.534    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 103, r2: 103, leftOrthog: 1)      	 0.0461253 	 100       	 115.002   	 0         	 13.7663   	 8.35388   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0400732 	 100       	 2.1835    	 0         	 0.150724  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 53, m: 50, k: 2500)   	 0.03965   	 800       	 267.339   	 0         	 41.9914   	 6.36652   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5150, r: 50, r2: 50, leftOrthog: 1)        	 0.0379045 	 100       	 67.9339   	 0         	 16.4097   	 4.13987   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, n: 50, r2left: 50, r2right: 53)                	 0.0370062 	 700       	 0         	 0         	 82.6088   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 53, m: 53)                                                                  	 0.0363109 	 809       	 4.42258   	 0         	 1.51146   	 2.92603   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 103, r1_: 50, n: 50, r2: 103)         	 0.0340548 	 100       	 155.763   	 0         	 18.6311   	 8.36039   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5150, m: 53)                                                         	 0.0323018 	 700       	 0         	 0         	 94.64     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 103, r1_: 103, n: 50, r2: 50)         	 0.0321155 	 100       	 165.17    	 0         	 13.093    	 12.6151   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 53, m: 5150)                                                                  	 0.0302967 	 700       	 0         	 0         	 100.903   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0301192 	 100       	 87.8043   	 0         	 6.9059    	 12.7144   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 53, reductionFactor: 37, colBlockingSize: 12)                  	 0.028325  	 101       	 51.4346   	 0         	 3.85983   	 13.3256   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2650, m: 50, k: 53) 	 0.0272154 	 700       	 361.248   	 0         	 56.7091   	 6.37019   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 53, m: 2500, k: 50)	 0.0233066 	 800       	 454.807   	 0         	 71.4373   	 6.36652   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2650, m: 53, k: 53) 	 0.02166   	 700       	 481.134   	 0         	 73.3503   	 6.55941   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 53, n: 50, r2: 53)                                                                                         	 0.01926   	 707       	 0         	 0         	 82.4906   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00977381	 109       	 1.8587    	 0         	 0.673596  	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 103, reductionFactor: 37, colBlockingSize: 12)                   	 0.00925115	 100       	 11.7777   	 0         	 1.36277   	 8.64247   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 53, r: 53, streamingCols: 0)                   	 0.00903483	 101       	 78.5042   	 0         	 23.825    	 3.29504   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2650, m: 50, k: 50) 	 0.00622509	 100       	 212.848   	 0         	 34.377    	 6.19159   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 53)                                                         	 0.00511334	 101       	 0         	 0         	 41.8747   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00504606	 8         	 19.8174   	 0         	 3.2025    	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 53, m: 2500)                                                                  	 0.00463836	 101       	 0         	 0         	 46.1629   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0043234 	 101       	 5.99815   	 0         	 0.934449  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, n: 50, r2left: 50, r2right: 0)                 	 0.0036868 	 100       	 0         	 0         	 57.5025   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00263819	 8         	 38.9292   	 0         	 3.09303   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2650, cols: 53, reductionFactor: 37, colBlockingSize: 12)                  	 0.00202588	 7         	 52.8315   	 0         	 3.96      	 13.3413   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 53, n: 50, r2: 50)                                                                                         	 0.00172474	 101       	 0         	 0         	 124.146   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00168092	 8         	 29.7455   	 0         	 9.56617   	 3.10945   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, n: 50, r: 53, r2: 53)             	 0.00165727	 7         	 62.8827   	 0         	 9.58665   	 6.55941   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 103, leftOrthog: 1)         	 0.00165226	 100       	 31.1694   	 0         	 9.90158   	 3.14792   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 53, m: 53, fromLeft: 1)                	 0.00152236	 808       	 0         	 0         	 23.8542   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 53, Qr2: 50)       	 0.00131888	 100       	 0         	 0         	 312.387   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000996028	 100       	 25.0997   	 0         	 6.02393   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 53)                                                                                          	 0.000844101	 201       	 0         	 0         	 10.0964   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2650, m: 53)                                                         	 0.000821541	 7         	 0         	 0         	 19.1474   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000815362	 100       	 0.613225  	 0         	 2.4529    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 53)   	 0.000806663	 100       	 32.8514   	 0         	 7.73557   	 4.24679   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 53, m: 2650)                                                                  	 0.00078481	 7         	 0         	 0         	 20.0436   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00078104	 100       	 32.0086   	 0         	 7.68206   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000743889	 8         	 0         	 0         	 21.5086   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000742987	 201       	 0         	 0         	 10.8212   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 53, k: 53)   	 0.000711886	 100       	 39.4586   	 0         	 9.1127    	 4.33007   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000631343	 100       	 39.5981   	 0         	 9.50355   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2650, Xcols: 53, r: 53, streamingCols: 0)                   	 0.000618907	 7         	 84.1919   	 0         	 25.5435   	 3.29602   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000575493	 8         	 0         	 0         	 27.8022   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 53)                 	 0.000540801	 100       	 0         	 0         	 15.2367   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000506242	 100       	 0         	 0         	 7.90136   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000468814	 100       	 0         	 0         	 8.53217   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000466844	 100       	 0         	 0         	 8.56817   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000453793	 100       	 1.10182   	 0         	 13.2219   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000420348	 101       	 0         	 0         	 9.61108   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000371917	 101       	 0.678915  	 0         	 10.8626   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 53)                                                                                 	 0.000371  	 101       	 0.721429  	 0         	 11.5429   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000329839	 100       	 0.757946  	 0         	 12.1271   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, n: 50, r: 53, r2: 50)             	 0.000249056	 1         	 56.3929   	 0         	 8.85263   	 6.37019   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 53, reductionFactor: 37, colBlockingSize: 12)                    	 3.704e-05 	 1         	 7.78866   	 0         	 1.17905   	 6.60588   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6781e-05	 1         	 3.39849   	 0         	 1.3594    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 53, r: 50, streamingCols: 2)                     	 2.7031e-05	 1         	 4.62432   	 0         	 1.84973   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5641e-05	 9         	 0         	 0         	 23.0164   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.37e-05  	 1         	 18.2482   	 0         	 4.37956   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.281e-05 	 2         	 0         	 0         	 6.24512   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 53, r2: 53)              	 1.257e-05 	 1         	 22.3469   	 0         	 5.16086   	 4.33007   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 53)                                                                                   	 8.78e-06  	 1         	 0.603645  	 0         	 2.41458   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 7.89e-06  	 1         	 0.633714  	 0         	 2.53485   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2650, m: 0, k: 50)  	 4.93e-06  	 100       	 0         	 0         	 21501     	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 53)                                                           	 4.15e-06  	 1         	 0         	 0         	 10.2169   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 53, m: 50, fromLeft: 1)                	 1.8e-06   	 1         	 0         	 0         	 23.5556   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.03625   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.0362    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.29071   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.28945   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.78216   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.03974   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.977367  	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.745435  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.715109  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.619504  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.50214   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.49168   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.26341   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.103872  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0879713 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.056624  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0460848 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0417007 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0406461 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0394051 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0363082 	 818       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0242355 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0242069 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0239379 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0230781 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0208713 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00697866	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00525119	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00343918	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00187504	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0015398 	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107276	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000832032	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000453793	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22898292791168 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22898081261568 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22897879935104 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22897678608640 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22897477282176 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22897275955712 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22897074629248 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22896873302784 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22896671976320 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22896470649856 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22896269323392 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22896067996928 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22895866670464 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22895665344000 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22895464017536 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22895262691072 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22895061364608 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22894860038144 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22894658711680 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22894457385216 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22894256058752 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22894054732288 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22893853405824 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22893652079360 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22893450752896 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22893249426432 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22893048099968 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22892846773504 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22892645447040 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22892444120576 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22892242794112 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22892041467648 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22891840137088 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22891638810624 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22891437484160 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22891236157696 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22891034831232 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22890833504768 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22890632178304 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22890430851840 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22890229525376 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22890028198912 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22889826872448 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22889625545984 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22889424219520 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22889222893056 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22889021566592 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22888820240128 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22888618913664 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22888417587200 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22888216260736 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22888014934272 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22887813607808 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22887612281344 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22887410954880 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22887209628416 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22887008301952 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22886806975488 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22886605649024 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22886404322560 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22886202996096 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22886001669632 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22885800343168 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22898187130624 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22898180540160 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 104, m: 104)                                                               	 0.893531  	 700       	 6.1686    	 0         	 0.204012  	 30.2364   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5200, cols: 104, reductionFactor: 37, colBlockingSize: 12)                 	 0.60566   	 600       	 114.447   	 0         	 4.37169   	 26.1791   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5200, r: 104, r2: 104, leftOrthog: 1)      	 0.557272  	 600       	 121.111   	 0         	 14.1607   	 8.55263   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 104, r1_: 104, n: 50, r2: 104)        	 0.434176  	 600       	 155.448   	 0         	 12.0771   	 12.8713   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5200, cols: 54, reductionFactor: 37, colBlockingSize: 12)                  	 0.234641  	 700       	 92.9175   	 0         	 6.77125   	 13.7224   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5200, Xcols: 54, r: 54, streamingCols: 0)                   	 0.0961157 	 700       	 110.432   	 0         	 32.8055   	 3.36626   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 54, Qr2: 104)      	 0.0913903 	 700       	 0         	 0         	 58.0035   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 104, reductionFactor: 37, colBlockingSize: 12)                 	 0.0882599 	 100       	 62.9296   	 0         	 2.45471   	 25.6362   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 104)                                                                	 0.0546211 	 100       	 3.33205   	 0         	 0.18967   	 17.5676   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 104, r2: 104, leftOrthog: 1)      	 0.0482335 	 100       	 112.121   	 0         	 13.2958   	 8.4328    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5200, r: 50, r2: 50, leftOrthog: 1)        	 0.0422288 	 100       	 61.5693   	 0         	 14.8714   	 4.14013   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.040554  	 100       	 2.15762   	 0         	 0.148937  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 54, m: 50, k: 2500)   	 0.0400292 	 800       	 269.803   	 0         	 42.0014   	 6.42368   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, n: 50, r2left: 50, r2right: 54)                	 0.0387806 	 700       	 0         	 0         	 81.0962   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5200, m: 54)                                                         	 0.036582  	 700       	 0         	 0         	 85.9701   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 54, m: 54)                                                                  	 0.036014  	 809       	 4.71625   	 0         	 1.58179   	 2.9816    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 104, r1_: 50, n: 50, r2: 104)         	 0.0348301 	 100       	 155.268   	 0         	 18.5127   	 8.3871    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 104, r1_: 104, n: 50, r2: 50)         	 0.0324877 	 100       	 166.463   	 0         	 13.0712   	 12.7351   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 54, m: 5200)                                                                  	 0.0306441 	 700       	 0         	 0         	 102.628   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0304841 	 100       	 87.5956   	 0         	 6.88884   	 12.7156   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2700, m: 50, k: 54) 	 0.0303249 	 700       	 336.556   	 0         	 52.3531   	 6.42857   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 54, reductionFactor: 37, colBlockingSize: 12)                  	 0.0301435 	 101       	 50.1726   	 0         	 3.69685   	 13.5717   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2700, m: 54, k: 54) 	 0.0253875 	 700       	 434.17    	 0         	 64.9647   	 6.68317   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 54, m: 2500, k: 50)	 0.0248937 	 800       	 433.844   	 0         	 67.5383   	 6.42368   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 54, n: 50, r2: 54)                                                                                         	 0.0201283 	 707       	 0         	 0         	 81.9389   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 104, reductionFactor: 37, colBlockingSize: 12)                   	 0.0122915 	 100       	 9.03743   	 0         	 1.04241   	 8.66971   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 54, r: 54, streamingCols: 0)                   	 0.00955532	 101       	 77.0555   	 0         	 22.9546   	 3.35687   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0094706 	 109       	 1.91821   	 0         	 0.695162  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2700, m: 50, k: 50) 	 0.00642843	 100       	 210.005   	 0         	 33.9119   	 6.19266   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 54)                                                         	 0.00565766	 101       	 0         	 0         	 38.5601   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00504326	 8         	 19.8284   	 0         	 3.20428   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 54, m: 2500)                                                                  	 0.00465498	 101       	 0         	 0         	 46.8659   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00463843	 101       	 5.59078   	 0         	 0.870984  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, n: 50, r2left: 50, r2right: 0)                 	 0.00406871	 100       	 0         	 0         	 53.088    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00262273	 8         	 39.1587   	 0         	 3.11126   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2700, cols: 54, reductionFactor: 37, colBlockingSize: 12)                  	 0.00203272	 7         	 55.6908   	 0         	 4.09702   	 13.593    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 104, leftOrthog: 1)         	 0.00201305	 100       	 25.8315   	 0         	 8.18659   	 3.15534   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 54, n: 50, r2: 50)                                                                                         	 0.0018146 	 101       	 0         	 0         	 120.225   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, n: 50, r: 54, r2: 54)             	 0.00171492	 7         	 64.2739   	 0         	 9.61728   	 6.68317   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00169633	 8         	 29.4753   	 0         	 9.47927   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 54, m: 54, fromLeft: 1)                	 0.00152623	 808       	 0         	 0         	 24.7001   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 54, Qr2: 50)       	 0.00138241	 100       	 0         	 0         	 300.924   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000997527	 100       	 25.062    	 0         	 6.01487   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2700, m: 54)                                                         	 0.000973617	 7         	 0         	 0         	 16.7721   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 54)                                                                                          	 0.000871553	 201       	 0         	 0         	 9.96291   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000820747	 100       	 0.609201  	 0         	 2.4368    	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 54, m: 2700)                                                                  	 0.000794841	 7         	 0         	 0         	 20.5445   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000778794	 100       	 32.1009   	 0         	 7.70422   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000776703	 201       	 0         	 0         	 10.3514   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 54)   	 0.000757341	 100       	 35.651    	 0         	 8.34499   	 4.27215   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000655916	 100       	 38.1146   	 0         	 9.14751   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2700, Xcols: 54, r: 54, streamingCols: 0)                   	 0.000631956	 7         	 87.2092   	 0         	 25.969    	 3.35821   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 54, k: 54)   	 0.0006303 	 100       	 46.2637   	 0         	 10.555    	 4.38312   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000592995	 8         	 0         	 0         	 26.9817   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000588616	 8         	 0         	 0         	 27.1824   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 54)                 	 0.00054485	 100       	 0         	 0         	 15.2703   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000495314	 100       	 0         	 0         	 8.07569   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000476704	 100       	 0         	 0         	 8.39095   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000456454	 100       	 0         	 0         	 8.76321   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000451648	 100       	 1.10706   	 0         	 13.2847   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.0004402 	 101       	 0         	 0         	 9.17765   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000373248	 101       	 0.676494  	 0         	 10.8239   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 54)                                                                                 	 0.000354578	 101       	 0.769083  	 0         	 12.3053   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000326734	 100       	 0.765148  	 0         	 12.2424   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, n: 50, r: 54, r2: 50)             	 0.000248546	 1         	 58.6612   	 0         	 9.12507   	 6.42857   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.9361e-05	 1         	 3.17573   	 0         	 1.27029   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 54, reductionFactor: 37, colBlockingSize: 12)                    	 3.7251e-05	 1         	 8.03954   	 0         	 1.20609   	 6.6658    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 54, r: 50, streamingCols: 3)                     	 2.7451e-05	 1         	 4.55357   	 0         	 1.82143   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.531e-05 	 9         	 0         	 0         	 23.514    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.438e-05 	 1         	 17.3853   	 0         	 4.17246   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 54, r2: 54)              	 1.184e-05 	 1         	 24.6284   	 0         	 5.61892   	 4.38312   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.137e-05 	 2         	 0         	 0         	 7.03606   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 54)                                                                                   	 8.96e-06  	 1         	 0.602679  	 0         	 2.41071   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.92e-06  	 1         	 0.560538  	 0         	 2.24215   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2700, m: 0, k: 50)  	 5.09e-06  	 100       	 0         	 0         	 21218.1   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 54)                                                           	 4.22e-06  	 1         	 0         	 0         	 10.237    	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 54, m: 50, fromLeft: 1)                	 1.73e-06  	 1         	 0         	 0         	 24.9711   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.11556   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.11551   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.33455   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.33329   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.80683   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.01081   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.988706  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.780898  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.737396  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.649747  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.52248   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.502273  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.274593  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.108066  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0932292 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0635335 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0454846 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0442507 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0438895 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0410267 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0366939 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0255496 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0248674 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0248369 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0240679 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.021295  	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00703295	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00454984	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00402154	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00229734	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00154327	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105456	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000838627	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000451648	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23413864404864 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23413678663680 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23413477337216 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23413276010752 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23413074684288 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23412873357824 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23412672031360 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23412470704896 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23412269378432 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23412068051968 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23411866725504 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23411665399040 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23411464072576 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23411262746112 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23411061419648 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23410860093184 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23410658766720 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23410457440256 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23410256113792 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23410054787328 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23409853460864 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23409652134400 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23409450807936 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23409249481472 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23409048155008 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23408846828544 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23408645502080 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23408444175616 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23408242849152 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23408041522688 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23407840196224 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23407638869760 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23407437539200 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23407236212736 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23407034886272 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23406833559808 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23406632233344 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23406430906880 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23406229580416 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23406028253952 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23405826927488 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23405625601024 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23405424274560 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23405222948096 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23405021621632 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23404820295168 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23404618968704 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23404417642240 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23404216315776 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23404014989312 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23403813662848 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23403612336384 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23403411009920 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23403209683456 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23403008356992 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23402807030528 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23402605704064 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23402404377600 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23402203051136 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23402001724672 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23401800398208 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23401599071744 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23401397745280 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23413758744320 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23413752153856 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 105, m: 105)                                                               	 0.938994  	 700       	 6.04089   	 0         	 0.19788   	 30.5281   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5250, cols: 105, reductionFactor: 37, colBlockingSize: 12)                 	 0.635192  	 600       	 112.304   	 0         	 4.24898   	 26.4308   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5250, r: 105, r2: 105, leftOrthog: 1)      	 0.571193  	 600       	 121.601   	 0         	 14.0825   	 8.63487   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 105, r1_: 105, n: 50, r2: 105)        	 0.446492  	 600       	 155.563   	 0         	 11.9709   	 12.995    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5250, cols: 55, reductionFactor: 37, colBlockingSize: 12)                  	 0.240951  	 700       	 94.7688   	 0         	 6.78121   	 13.9752   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5250, Xcols: 55, r: 55, streamingCols: 0)                   	 0.0961658 	 700       	 115.601   	 0         	 33.7175   	 3.42852   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 105, reductionFactor: 37, colBlockingSize: 12)                 	 0.0900831 	 100       	 62.8474   	 0         	 2.42909   	 25.8728   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 55, Qr2: 105)      	 0.089062  	 700       	 0         	 0         	 60.6768   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 105)                                                                	 0.0546461 	 100       	 3.36255   	 0         	 0.191048  	 17.6006   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 105, r2: 105, leftOrthog: 1)      	 0.0475393 	 100       	 115.957   	 0         	 13.6232   	 8.51167   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 55, m: 50, k: 2500)   	 0.0404602 	 800       	 271.872   	 0         	 41.9573   	 6.47974   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.039948  	 100       	 2.19035   	 0         	 0.151197  	 14.4868   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 55, m: 55)                                                                  	 0.0390688 	 809       	 4.59349   	 0         	 1.51244   	 3.03713   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, n: 50, r2left: 50, r2right: 55)                	 0.039008  	 700       	 0         	 0         	 82.906    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5250, r: 50, r2: 50, leftOrthog: 1)        	 0.0381079 	 100       	 68.8834   	 0         	 16.637    	 4.14038   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 105, r1_: 50, n: 50, r2: 105)         	 0.0359627 	 100       	 153.284   	 0         	 18.2189   	 8.41346   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 55, m: 5250)                                                                  	 0.0356987 	 700       	 0         	 0         	 90.5914   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5250, m: 55)                                                         	 0.0351625 	 700       	 0         	 0         	 91.9731   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 105, r1_: 105, n: 50, r2: 50)         	 0.0338399 	 100       	 162.9     	 0         	 12.672    	 12.855    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0307725 	 100       	 87.6088   	 0         	 6.88926   	 12.7167   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 55, reductionFactor: 37, colBlockingSize: 12)                  	 0.0294666 	 101       	 53.2438   	 0         	 3.85332   	 13.8176   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2750, m: 50, k: 55) 	 0.0293225 	 700       	 361.071   	 0         	 55.6705   	 6.48585   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 55, m: 2500, k: 50)	 0.0248753 	 800       	 442.206   	 0         	 68.2445   	 6.47974   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2750, m: 55, k: 55) 	 0.0214979 	 700       	 541.739   	 0         	 79.5864   	 6.80693   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 55, n: 50, r2: 55)                                                                                         	 0.0210432 	 707       	 0         	 0         	 81.3061   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 105, reductionFactor: 37, colBlockingSize: 12)                   	 0.00979925	 100       	 11.5549   	 0         	 1.32867   	 8.6966    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 55, r: 55, streamingCols: 0)                   	 0.00958358	 101       	 79.7001   	 0         	 23.313    	 3.4187    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00946354	 109       	 1.91964   	 0         	 0.69568   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2750, m: 50, k: 50) 	 0.00635786	 100       	 216.268   	 0         	 34.9174   	 6.19369   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00516686	 101       	 5.01899   	 0         	 0.781906  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0050037 	 8         	 19.9852   	 0         	 3.22961   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 55)                                                         	 0.00486997	 101       	 0         	 0         	 45.6266   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 55, m: 2500)                                                                  	 0.00447382	 101       	 0         	 0         	 49.6667   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, n: 50, r2left: 50, r2right: 0)                 	 0.00348249	 100       	 0         	 0         	 63.1732   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268364	 8         	 38.2699   	 0         	 3.04065   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2750, cols: 55, reductionFactor: 37, colBlockingSize: 12)                  	 0.0021007 	 7         	 56.9381   	 0         	 4.11262   	 13.8447   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00191309	 8         	 26.1357   	 0         	 8.40524   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 105, leftOrthog: 1)         	 0.00189717	 100       	 27.6728   	 0         	 8.74988   	 3.16265   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, n: 50, r: 55, r2: 55)             	 0.00177124	 7         	 65.7521   	 0         	 9.65958   	 6.80693   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 55, n: 50, r2: 50)                                                                                         	 0.00170789	 101       	 0         	 0         	 130.102   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 55, m: 55, fromLeft: 1)                	 0.00160827	 808       	 0         	 0         	 24.3163   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 55, Qr2: 50)       	 0.00137598	 100       	 0         	 0         	 305.236   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000993162	 100       	 25.1721   	 0         	 6.04131   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 55, m: 2750)                                                                  	 0.000905662	 7         	 0         	 0         	 18.7045   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 55)                                                                                          	 0.000885252	 201       	 0         	 0         	 9.99038   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 55)   	 0.00082841	 100       	 33.1961   	 0         	 7.72564   	 4.29688   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000798376	 100       	 0.626271  	 0         	 2.50509   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000792167	 100       	 31.559    	 0         	 7.57416   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000766376	 201       	 0         	 0         	 10.4909   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00073406	 8         	 0         	 0         	 21.7966   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2750, m: 55)                                                         	 0.000718858	 7         	 0         	 0         	 23.5652   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2750, Xcols: 55, r: 55, streamingCols: 0)                   	 0.000653065	 7         	 89.1661   	 0         	 26.0689   	 3.4204    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000645045	 100       	 38.757    	 0         	 9.30168   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 55, k: 55)   	 0.000601318	 100       	 50.3062   	 0         	 11.3418   	 4.43548   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 55)                 	 0.000530852	 100       	 0         	 0         	 15.8236   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000512474	 8         	 0         	 0         	 31.2211   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000503043	 100       	 0         	 0         	 7.95161   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000490955	 100       	 0         	 0         	 8.14739   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00045585	 100       	 1.09685   	 0         	 13.1622   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000447901	 100       	 0         	 0         	 8.93054   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000401761	 101       	 0         	 0         	 10.0557   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000392692	 101       	 0.642998  	 0         	 10.288    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 55)                                                                                 	 0.000374948	 101       	 0.740769  	 0         	 11.8523   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000329069	 100       	 0.759719  	 0         	 12.1555   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, n: 50, r: 55, r2: 50)             	 0.000247336	 1         	 61.1516   	 0         	 9.42847   	 6.48585   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 55, reductionFactor: 37, colBlockingSize: 12)                    	 3.9081e-05	 1         	 7.94953   	 0         	 1.18216   	 6.72458   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2241e-05	 1         	 3.87705   	 0         	 1.55082   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 55, r: 50, streamingCols: 5)                     	 2.8071e-05	 1         	 4.45299   	 0         	 1.7812    	 2.5       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 55)                                                                                   	 2.5191e-05	 1         	 0.218332  	 0         	 0.873328  	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.5221e-05	 1         	 16.4247   	 0         	 3.94192   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.518e-05 	 9         	 0         	 0         	 23.7154   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 55, r2: 55)              	 1.137e-05 	 1         	 26.6051   	 0         	 5.99824   	 4.43548   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.098e-05 	 2         	 0         	 0         	 7.28597   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.79e-06  	 1         	 0.568828  	 0         	 2.27531   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2750, m: 0, k: 50)  	 7.141e-06 	 100       	 0         	 0         	 15404     	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 55)                                                           	 4.42e-06  	 1         	 0         	 0         	 9.95475   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 55, m: 50, fromLeft: 1)                	 1.74e-06  	 1         	 0         	 0         	 25.2874   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.23158   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.23153   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.44333   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.44208   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.90837   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.04625   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.03359   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.788137  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.766567  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.658738  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.534733  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.517087  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.280926  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.108376  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0908859 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0586151 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0485324 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0435123 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0418915 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0416017 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0414534 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0255203 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.02517   	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0251235 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0249058 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0220194 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00704886	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0051977 	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00362542	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00358903	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00162519	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109671	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000832357	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00045585	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22365668194176 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22365438208000 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22365236881536 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22365035555072 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22364834228608 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22364632902144 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22364431575680 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22364230249216 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22364028922752 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22363827596288 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22363626269824 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22363424943360 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22363223616896 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22363022290432 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22362820963968 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22362619637504 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22362418311040 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22362216984576 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22362015658112 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22361814331648 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22361613005184 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22361411678720 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22361210352256 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22361009025792 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22360807699328 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22360606372864 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22360405046400 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22360203719936 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22360002393472 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22359801067008 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22359599740544 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22359398414080 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22359197083520 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22358995757056 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22358794430592 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22358593104128 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22358391777664 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22358190451200 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22357989124736 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22357787798272 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22357586471808 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22357385145344 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22357183818880 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22356982492416 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22356781165952 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22356579839488 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22356378513024 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22356177186560 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22355975860096 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22355774533632 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22355573207168 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22355371880704 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22355170554240 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22354969227776 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22354767901312 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22354566574848 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22354365248384 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22354163921920 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22353962595456 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22353761268992 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22353559942528 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22353358616064 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22353157289600 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22365562533632 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22365555943168 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 106, m: 106)                                                               	 0.939654  	 700       	 6.21077   	 0         	 0.201519  	 30.8197   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5300, cols: 106, reductionFactor: 37, colBlockingSize: 12)                 	 0.664267  	 600       	 110.486   	 0         	 4.14076   	 26.6826   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5300, r: 106, r2: 106, leftOrthog: 1)      	 0.577464  	 600       	 123.75    	 0         	 14.1962   	 8.71711   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 106, r1_: 106, n: 50, r2: 106)        	 0.452451  	 600       	 157.942   	 0         	 12.0393   	 13.1188   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5300, cols: 56, reductionFactor: 37, colBlockingSize: 12)                  	 0.253753  	 700       	 94.1782   	 0         	 6.61919   	 14.228    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 56, Qr2: 106)      	 0.0969166 	 700       	 0         	 0         	 56.834    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5300, Xcols: 56, r: 56, streamingCols: 0)                   	 0.0968344 	 700       	 120.149   	 0         	 34.419    	 3.49078   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 106, reductionFactor: 37, colBlockingSize: 12)                 	 0.0907466 	 100       	 63.5818   	 0         	 2.43523   	 26.1092   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 106)                                                                	 0.0532527 	 100       	 3.48339   	 0         	 0.197549  	 17.6331   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 106, r2: 106, leftOrthog: 1)      	 0.0478278 	 100       	 117.463   	 0         	 13.6736   	 8.59051   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 56, m: 5300)                                                                  	 0.0442589 	 700       	 0         	 0         	 75.1072   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, n: 50, r2left: 50, r2right: 56)                	 0.0412577 	 700       	 0         	 0         	 80.5706   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0394601 	 100       	 2.21743   	 0         	 0.153066  	 14.4868   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 56, m: 56)                                                                  	 0.0378431 	 809       	 5.00568   	 0         	 1.61855   	 3.09269   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5300, r: 50, r2: 50, leftOrthog: 1)        	 0.0377981 	 100       	 70.1093   	 0         	 16.9321   	 4.14062   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5300, m: 56)                                                         	 0.0372873 	 700       	 0         	 0         	 89.1499   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 56, m: 50, k: 2500)   	 0.0362759 	 800       	 308.745   	 0         	 47.2468   	 6.53473   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 106, r1_: 50, n: 50, r2: 106)         	 0.0353689 	 100       	 158.84    	 0         	 18.8211   	 8.43949   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 106, r1_: 106, n: 50, r2: 50)         	 0.0342203 	 100       	 164.172   	 0         	 12.653    	 12.9749   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2800, m: 50, k: 56) 	 0.031688  	 700       	 346.377   	 0         	 52.9462   	 6.54206   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0314901 	 100       	 86.4278   	 0         	 6.79578   	 12.7179   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 56, reductionFactor: 37, colBlockingSize: 12)                  	 0.0303842 	 101       	 53.5306   	 0         	 3.80639   	 14.0634   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2800, m: 56, k: 56) 	 0.0286527 	 700       	 429.039   	 0         	 61.9042   	 6.93069   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 56, m: 2500, k: 50)	 0.0226203 	 800       	 495.13    	 0         	 75.769    	 6.53473   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 56, n: 50, r2: 56)                                                                                         	 0.0218236 	 707       	 0         	 0         	 81.2755   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 106, reductionFactor: 37, colBlockingSize: 12)                   	 0.00972804	 100       	 11.8623   	 0         	 1.35986   	 8.72315   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 56, r: 56, streamingCols: 0)                   	 0.00969581	 101       	 81.6683   	 0         	 23.4645   	 3.48051   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00954095	 109       	 1.90407   	 0         	 0.690036  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 56)                                                         	 0.00672437	 101       	 0         	 0         	 33.6448   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2800, m: 50, k: 50) 	 0.00657167	 100       	 213.036   	 0         	 34.39     	 6.19469   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 56, m: 2500)                                                                  	 0.00516391	 101       	 0         	 0         	 43.8117   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00500583	 8         	 19.9767   	 0         	 3.22824   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00456443	 101       	 5.68142   	 0         	 0.885106  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, n: 50, r2left: 50, r2right: 0)                 	 0.00436979	 100       	 0         	 0         	 51.2611   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00278211	 8         	 36.9154   	 0         	 2.93302   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2800, cols: 56, reductionFactor: 37, colBlockingSize: 12)                  	 0.00220613	 7         	 57.2286   	 0         	 4.05979   	 14.0964   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 56, n: 50, r2: 50)                                                                                         	 0.00188813	 101       	 0         	 0         	 119.822   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 106, leftOrthog: 1)         	 0.00186124	 100       	 28.4756   	 0         	 8.98325   	 3.16986   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, n: 50, r: 56, r2: 56)             	 0.00182278	 7         	 67.4417   	 0         	 9.73088   	 6.93069   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00173886	 8         	 28.7546   	 0         	 9.24746   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 56, m: 56, fromLeft: 1)                	 0.00165454	 808       	 0         	 0         	 24.5036   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 56, Qr2: 50)       	 0.00140373	 100       	 0         	 0         	 302.053   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000993659	 100       	 25.1595   	 0         	 6.03829   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000973281	 100       	 25.6863   	 0         	 6.16472   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2800, m: 56)                                                         	 0.000901334	 7         	 0         	 0         	 19.484    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000873174	 100       	 0.572624  	 0         	 2.29049   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 56)                                                                                          	 0.000851202	 201       	 0         	 0         	 10.5789   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 56, m: 2800)                                                                  	 0.000842161	 7         	 0         	 0         	 20.853    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 56)   	 0.00082569	 100       	 33.911    	 0         	 7.84798   	 4.32099   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000775878	 8         	 0         	 0         	 20.6218   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000752511	 201       	 0         	 0         	 10.6842   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2800, Xcols: 56, r: 56, streamingCols: 0)                   	 0.000666299	 7         	 92.2493   	 0         	 26.4887   	 3.48259   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000620925	 100       	 40.2625   	 0         	 9.663     	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 56, k: 56)   	 0.000610134	 100       	 51.3985   	 0         	 11.4545   	 4.48718   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 56)                 	 0.000572722	 100       	 0         	 0         	 14.8065   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000511444	 100       	 0         	 0         	 7.82099   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000509383	 8         	 0         	 0         	 31.4105   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000484846	 100       	 0         	 0         	 8.25004   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000481779	 101       	 0         	 0         	 8.38559   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000450937	 100       	 1.1088    	 0         	 13.3056   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000424829	 100       	 0         	 0         	 9.41555   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000393421	 101       	 0.641806  	 0         	 10.2689   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 56)                                                                                 	 0.000370896	 101       	 0.762478  	 0         	 12.1996   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000324185	 100       	 0.771165  	 0         	 12.3386   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, n: 50, r: 56, r2: 50)             	 0.000255737	 1         	 61.313    	 0         	 9.37213   	 6.54206   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 56, reductionFactor: 37, colBlockingSize: 12)                    	 4.4732e-05	 1         	 7.20012   	 0         	 1.06161   	 6.78225   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6851e-05	 1         	 3.39204   	 0         	 1.35682   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 56, r: 50, streamingCols: 6)                     	 2.7621e-05	 1         	 4.52554   	 0         	 1.81022   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5431e-05	 9         	 0         	 0         	 23.3297   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.2201e-05	 1         	 20.4901   	 0         	 4.91763   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 56, r2: 56)              	 1.209e-05 	 1         	 25.9388   	 0         	 5.78065   	 4.48718   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.128e-05 	 2         	 0         	 0         	 7.0922    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 56)                                                                                   	 1.031e-05 	 1         	 0.543162  	 0         	 2.17265   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.023e-05 	 1         	 0.488759  	 0         	 1.95503   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2800, m: 0, k: 50)  	 4.92e-06  	 100       	 0         	 0         	 22764.2   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 56)                                                           	 4.8e-06   	 1         	 0         	 0         	 9.33333   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 56, m: 50, fromLeft: 1)                	 1.71e-06  	 1         	 0         	 0         	 26.1988   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.33438   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.33435   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.50473   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.50344   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.95505   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.08997   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.03237   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.829537  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.796904  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.664951  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.562621  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.523034  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.294248  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.109     	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0987452 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0683531 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0507856 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0473841 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0467117 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0461755 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0372492 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0261595 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0261265 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0258002 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0232412 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0221131 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00710864	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00600363	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00359095	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00355174	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00167168	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010885 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000893714	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000450937	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22872663140224 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22872445675520 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22872244349056 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22872043022592 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22871841696128 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22871640369664 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22871439043200 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22871237716736 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22871036390272 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22870835063808 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22870633737344 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22870432410880 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22870231084416 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22870029757952 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22869828431488 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22869627105024 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22869425778560 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22869224452096 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22869023125632 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22868821799168 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22868620472704 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22868419146240 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22868217819776 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22868016493312 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22867815166848 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22867613840384 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22867412513920 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22867211187456 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22867009860992 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22866808534528 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22866607208064 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22866405881600 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22866204551040 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22866003224576 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22865801898112 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22865600571648 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22865399245184 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22865197918720 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22864996592256 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22864795265792 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22864593939328 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22864392612864 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22864191286400 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22863989959936 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22863788633472 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22863587307008 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22863385980544 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22863184654080 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22862983327616 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22862782001152 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22862580674688 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22862379348224 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22862178021760 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22861976695296 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22861775368832 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22861574042368 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22861372715904 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22861171389440 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22860970062976 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22860768736512 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22860567410048 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22860366083584 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22860164757120 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22872557479680 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22872550889216 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 107, m: 107)                                                               	 0.967743  	 700       	 6.20279   	 0         	 0.199374  	 31.1114   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5350, cols: 107, reductionFactor: 37, colBlockingSize: 12)                 	 0.687881  	 600       	 109.741   	 0         	 4.07442   	 26.9343   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5350, r: 107, r2: 107, leftOrthog: 1)      	 0.577239  	 600       	 127.335   	 0         	 14.4709   	 8.79934   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 107, r1_: 107, n: 50, r2: 107)        	 0.461626  	 600       	 159.225   	 0         	 12.0238   	 13.2426   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5350, cols: 57, reductionFactor: 37, colBlockingSize: 12)                  	 0.269672  	 700       	 92.6783   	 0         	 6.40006   	 14.4809   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5350, Xcols: 57, r: 57, streamingCols: 0)                   	 0.100024  	 700       	 121.646   	 0         	 34.2373   	 3.55304   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 107, reductionFactor: 37, colBlockingSize: 12)                 	 0.0940478 	 100       	 62.513    	 0         	 2.37283   	 26.3454   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 57, Qr2: 107)      	 0.0897079 	 700       	 0         	 0         	 62.5746   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 107)                                                                	 0.0559742 	 100       	 3.34529   	 0         	 0.189373  	 17.6651   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 107, r2: 107, leftOrthog: 1)      	 0.0507347 	 100       	 112.832   	 0         	 13.0151   	 8.6693    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, n: 50, r2left: 50, r2right: 57)                	 0.0437428 	 700       	 0         	 0         	 78.0801   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5350, r: 50, r2: 50, leftOrthog: 1)        	 0.0434975 	 100       	 61.4978   	 0         	 14.8514   	 4.14087   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0414637 	 100       	 2.11028   	 0         	 0.14567   	 14.4868   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 57, m: 57)                                                                  	 0.0413058 	 809       	 4.83616   	 0         	 1.53614   	 3.14826   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 57, m: 5350)                                                                  	 0.0405051 	 700       	 0         	 0         	 84.3212   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 57, m: 50, k: 2500)   	 0.0404292 	 800       	 281.975   	 0         	 42.7968   	 6.58868   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5350, m: 57)                                                         	 0.0372779 	 700       	 0         	 0         	 91.6211   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 107, r1_: 50, n: 50, r2: 107)         	 0.0359481 	 100       	 159.244   	 0         	 18.8116   	 8.46519   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 107, r1_: 107, n: 50, r2: 50)         	 0.0343613 	 100       	 166.597   	 0         	 12.7224   	 13.0948   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2850, m: 50, k: 57) 	 0.0340643 	 700       	 333.824   	 0         	 50.6007   	 6.59722   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 57, reductionFactor: 37, colBlockingSize: 12)                  	 0.0319322 	 101       	 52.7708   	 0         	 3.68797   	 14.3089   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0318297 	 100       	 86.3124   	 0         	 6.78612   	 12.719    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 57, m: 2500, k: 50)	 0.0248728 	 800       	 458.333   	 0         	 69.5637   	 6.58868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2850, m: 57, k: 57) 	 0.0226752 	 700       	 571.704   	 0         	 81.0415   	 7.05446   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 57, n: 50, r2: 57)                                                                                         	 0.0215266 	 707       	 0         	 0         	 85.3659   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0185236 	 8         	 5.39852   	 0         	 0.872402  	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 107, reductionFactor: 37, colBlockingSize: 12)                   	 0.010249  	 100       	 11.4728   	 0         	 1.31127   	 8.74935   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 57, r: 57, streamingCols: 0)                   	 0.0100125 	 101       	 81.9351   	 0         	 23.1304   	 3.54231   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00968831	 109       	 1.87511   	 0         	 0.679541  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2850, m: 50, k: 50) 	 0.00597133	 100       	 238.64    	 0         	 38.5174   	 6.19565   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 57, m: 2500)                                                                  	 0.00430255	 101       	 0         	 0         	 53.5218   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0042591 	 101       	 6.08872   	 0         	 0.948558  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 57)                                                         	 0.00371954	 101       	 0         	 0         	 61.9108   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, n: 50, r2left: 50, r2right: 0)                 	 0.00305719	 100       	 0         	 0         	 74.5784   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00257794	 8         	 39.8391   	 0         	 3.16532   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2850, cols: 57, reductionFactor: 37, colBlockingSize: 12)                  	 0.0023318 	 7         	 57.097    	 0         	 3.97939   	 14.3482   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00228011	 8         	 21.9288   	 0         	 7.05229   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 107, leftOrthog: 1)         	 0.00221213	 100       	 24.1849   	 0         	 7.61258   	 3.17696   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, n: 50, r: 57, r2: 57)             	 0.00184459	 7         	 70.2786   	 0         	 9.9623    	 7.05446   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 57, n: 50, r2: 50)                                                                                         	 0.00182766	 101       	 0         	 0         	 125.997   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 57, m: 57, fromLeft: 1)                	 0.00178574	 808       	 0         	 0         	 23.5214   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 57, Qr2: 50)       	 0.00134   	 100       	 0         	 0         	 319.402   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000965545	 100       	 25.8921   	 0         	 6.21411   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 57)   	 0.000883218	 100       	 32.2684   	 0         	 7.42738   	 4.34451   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 57)                                                                                          	 0.000874423	 201       	 0         	 0         	 10.4819   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 57, m: 2850)                                                                  	 0.000861593	 7         	 0         	 0         	 21.1172   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000845727	 100       	 0.591207  	 0         	 2.36483   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000826367	 100       	 30.2529   	 0         	 7.2607    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000815392	 100       	 30.6601   	 0         	 7.35842   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000761653	 201       	 0         	 0         	 10.556    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2850, Xcols: 57, r: 57, streamingCols: 0)                   	 0.000755039	 7         	 85.8466   	 0         	 24.2178   	 3.54478   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2850, m: 57)                                                         	 0.000679717	 7         	 0         	 0         	 26.7676   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 57, k: 57)   	 0.000621252	 100       	 52.2976   	 0         	 11.5238   	 4.53822   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 57)                                                                                 	 0.000593048	 101       	 0.485374  	 0         	 7.76598   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000575425	 8         	 0         	 0         	 27.8055   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000573284	 8         	 0         	 0         	 27.9094   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 57)                 	 0.00055058	 100       	 0         	 0         	 15.5472   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000508156	 100       	 0         	 0         	 7.8716    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000487839	 100       	 0         	 0         	 8.19943   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000471824	 100       	 0         	 0         	 8.47774   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000460421	 100       	 1.08596   	 0         	 13.0316   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000401281	 101       	 0         	 0         	 10.0678   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000393961	 101       	 0.640926  	 0         	 10.2548   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000323855	 100       	 0.77195   	 0         	 12.3512   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, n: 50, r: 57, r2: 50)             	 0.000264367	 1         	 61.4487   	 0         	 9.31432   	 6.59722   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 57, reductionFactor: 37, colBlockingSize: 12)                    	 4.3051e-05	 1         	 7.75083   	 0         	 1.13335   	 6.83885   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2531e-05	 1         	 3.84249   	 0         	 1.537     	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 57, r: 50, streamingCols: 7)                     	 2.7981e-05	 1         	 4.46732   	 0         	 1.78693   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5552e-05	 9         	 0         	 0         	 23.1481   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.4351e-05	 1         	 17.4204   	 0         	 4.18089   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.3311e-05	 2         	 0         	 0         	 6.01007   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 57, r2: 57)              	 1.2811e-05	 1         	 25.361    	 0         	 5.58832   	 4.53822   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 57)                                                                                   	 9.11e-06  	 1         	 0.625686  	 0         	 2.50274   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.7e-06   	 1         	 0.574713  	 0         	 2.29885   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 57)                                                           	 5.52e-06  	 1         	 0         	 0         	 8.26087   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2850, m: 0, k: 50)  	 4.91e-06  	 100       	 0         	 0         	 23217.9   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 57, m: 50, fromLeft: 1)                	 2e-06     	 1         	 0         	 0         	 22.8      	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.41434   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.41431   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.5745    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.57322   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.0193    	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.13482   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.06518   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.839731  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.824676  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.673683  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.578396  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.532762  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.311356  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.113132  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0915198 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0642203 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0509941 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0478587 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0462558 	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0426594 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0413947 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0392711 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.039241  	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0256881 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0254781 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0224691 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0206597 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00606246	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00384166	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0027677 	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00180329	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00131086	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000863537	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000460421	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22584221087616 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22584011778048 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22583810451584 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22583609125120 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22583407798656 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22583206472192 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22583005145728 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22582803819264 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22582602492800 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22582401166336 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22582199839872 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22581998513408 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22581797186944 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22581595860480 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22581394534016 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22581193207552 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22580991881088 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22580790554624 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22580589228160 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22580387901696 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22580186575232 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22579985248768 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22579783922304 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22579582595840 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22579381269376 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22579179942912 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22578978616448 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22578777289984 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22578575963520 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22578374637056 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22578173310592 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22577971984128 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22577770653568 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22577569327104 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22577368000640 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22577166674176 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22576965347712 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22576764021248 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22576562694784 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22576361368320 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22576160041856 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22575958715392 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22575757388928 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22575556062464 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22575354736000 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22575153409536 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22574952083072 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22574750756608 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22574549430144 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22574348103680 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22574146777216 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22573945450752 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22573744124288 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22573542797824 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22573341471360 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22573140144896 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22572938818432 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22572737491968 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22572536165504 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22572334839040 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22572133512576 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22571932186112 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22571730859648 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22584115427072 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22584108836608 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 108, m: 108)                                                               	 0.96112   	 700       	 6.42229   	 0         	 0.204511  	 31.4031   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5400, cols: 108, reductionFactor: 37, colBlockingSize: 12)                 	 0.696534  	 600       	 111.445   	 0         	 4.09937   	 27.186    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5400, r: 108, r2: 108, leftOrthog: 1)      	 0.588977  	 600       	 128.329   	 0         	 14.4489   	 8.88158   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 108, r1_: 108, n: 50, r2: 108)        	 0.474357  	 600       	 159.337   	 0         	 11.9208   	 13.3663   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5400, cols: 58, reductionFactor: 37, colBlockingSize: 12)                  	 0.271375  	 700       	 96.2476   	 0         	 6.53251   	 14.7336   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5400, Xcols: 58, r: 58, streamingCols: 0)                   	 0.0994388 	 700       	 127.877   	 0         	 35.3711   	 3.61529   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 108, reductionFactor: 37, colBlockingSize: 12)                 	 0.0937854 	 100       	 63.8652   	 0         	 2.40262   	 26.5814   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 58, Qr2: 108)      	 0.093125  	 700       	 0         	 0         	 61.4211   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 108)                                                                	 0.0562142 	 100       	 3.36214   	 0         	 0.189988  	 17.6966   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 108, r2: 108, leftOrthog: 1)      	 0.0495884 	 100       	 117.608   	 0         	 13.4439   	 8.74806   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, n: 50, r2left: 50, r2right: 58)                	 0.0429471 	 700       	 0         	 0         	 81.6782   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 58, m: 58)                                                                  	 0.0413947 	 809       	 5.08422   	 0         	 1.58694   	 3.20379   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 58, m: 50, k: 2500)   	 0.0406433 	 800       	 285.41    	 0         	 42.9729   	 6.64163   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5400, m: 58)                                                         	 0.0406024 	 700       	 0         	 0         	 86.3949   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0402566 	 100       	 2.17356   	 0         	 0.150038  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5400, r: 50, r2: 50, leftOrthog: 1)        	 0.0383244 	 100       	 70.4513   	 0         	 17.0127   	 4.1411    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 108, r1_: 50, n: 50, r2: 108)         	 0.0371596 	 100       	 156.945   	 0         	 18.4846   	 8.49057   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 58, m: 5400)                                                                  	 0.035814  	 700       	 0         	 0         	 97.9461   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 108, r1_: 108, n: 50, r2: 50)         	 0.0341893 	 100       	 170.58    	 0         	 12.9085   	 13.2146   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2900, m: 50, k: 58) 	 0.0335083 	 700       	 351.375   	 0         	 52.8275   	 6.65138   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 58, reductionFactor: 37, colBlockingSize: 12)                  	 0.0327944 	 101       	 53.2022   	 0         	 3.65544   	 14.5542   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0317532 	 100       	 87.329    	 0         	 6.86545   	 12.7201   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2900, m: 58, k: 58) 	 0.0267138 	 700       	 511.265   	 0         	 71.2245   	 7.17822   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 58, m: 2500, k: 50)	 0.025295  	 800       	 458.588   	 0         	 69.0476   	 6.64163   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 58, n: 50, r2: 58)                                                                                         	 0.0220034 	 707       	 0         	 0         	 86.4722   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 58, r: 58, streamingCols: 0)                   	 0.010353  	 101       	 82.045    	 0         	 22.7644   	 3.6041    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 108, reductionFactor: 37, colBlockingSize: 12)                   	 0.0098324 	 100       	 12.1834   	 0         	 1.38839   	 8.77523   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00964153	 109       	 1.8842    	 0         	 0.682838  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2900, m: 50, k: 50) 	 0.00726544	 100       	 199.575   	 0         	 32.2072   	 6.19658   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 58)                                                         	 0.00604732	 101       	 0         	 0         	 38.7477   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00512097	 8         	 19.5275   	 0         	 3.15565   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 58, m: 2500)                                                                  	 0.00460461	 101       	 0         	 0         	 50.8881   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00442101	 101       	 5.86573   	 0         	 0.913819  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, n: 50, r2left: 50, r2right: 0)                 	 0.00406065	 100       	 0         	 0         	 57.1337   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00279172	 8         	 36.7883   	 0         	 2.92293   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2900, cols: 58, reductionFactor: 37, colBlockingSize: 12)                  	 0.00250953	 7         	 55.8949   	 0         	 3.82845   	 14.5999   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 108, leftOrthog: 1)         	 0.00222158	 100       	 24.307    	 0         	 7.63419   	 3.18396   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, n: 50, r: 58, r2: 58)             	 0.00198077	 7         	 68.9521   	 0         	 9.60575   	 7.17822   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 58, n: 50, r2: 50)                                                                                         	 0.00183244	 101       	 0         	 0         	 127.873   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00175825	 8         	 28.4373   	 0         	 9.14544   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 58, m: 58, fromLeft: 1)                	 0.00174489	 808       	 0         	 0         	 24.9241   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 58, Qr2: 50)       	 0.00138408	 100       	 0         	 0         	 312.122   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2900, m: 58)                                                         	 0.00103255	 7         	 0         	 0         	 18.2446   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00102243	 100       	 24.4515   	 0         	 5.86837   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 58, m: 2900)                                                                  	 0.000893425	 7         	 0         	 0         	 21.0856   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000892668	 100       	 0.560119  	 0         	 2.24047   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 58)                                                                                          	 0.000867738	 201       	 0         	 0         	 10.7479   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000820857	 100       	 30.456    	 0         	 7.30943   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 58, k: 58)   	 0.000812432	 100       	 41.4065   	 0         	 9.02377   	 4.58861   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 58)   	 0.000793562	 100       	 36.5441   	 0         	 8.36734   	 4.36747   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000788188	 201       	 0         	 0         	 10.2006   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000737868	 8         	 0         	 0         	 21.6841   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2900, Xcols: 58, r: 58, streamingCols: 0)                   	 0.000705981	 7         	 96.7295   	 0         	 26.8174   	 3.60697   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000650098	 100       	 38.4557   	 0         	 9.22938   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 58)                 	 0.000578053	 100       	 0         	 0         	 14.9467   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000548767	 100       	 0         	 0         	 7.28907   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000536786	 8         	 0         	 0         	 29.807    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000503957	 100       	 0         	 0         	 7.93719   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000476982	 100       	 1.04826   	 0         	 12.5791   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000424358	 100       	 0         	 0         	 9.426     	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000418086	 101       	 0         	 0         	 9.66308   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000392341	 101       	 0.643573  	 0         	 10.2972   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 58)                                                                                 	 0.000372622	 101       	 0.786051  	 0         	 12.5768   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00032572	 100       	 0.76753   	 0         	 12.2805   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, n: 50, r: 58, r2: 50)             	 0.000265557	 1         	 63.3386   	 0         	 9.52263   	 6.65138   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 58, reductionFactor: 37, colBlockingSize: 12)                    	 4.8091e-05	 1         	 7.18413   	 0         	 1.04202   	 6.89439   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4041e-05	 1         	 3.67204   	 0         	 1.46882   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 58, r: 50, streamingCols: 8)                     	 2.6921e-05	 1         	 4.64322   	 0         	 1.85729   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.508e-05 	 9         	 0         	 0         	 23.8727   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.393e-05 	 1         	 17.9469   	 0         	 4.30725   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 58, r2: 58)              	 1.242e-05 	 1         	 27.0853   	 0         	 5.90274   	 4.58861   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 58)                                                                                   	 1.1171e-05	 1         	 0.519202  	 0         	 2.07681   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.102e-05 	 2         	 0         	 0         	 7.25953   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.871e-06 	 1         	 0.563634  	 0         	 2.25454   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 58)                                                           	 4.94e-06  	 1         	 0         	 0         	 9.39271   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2900, m: 0, k: 50)  	 4.891e-06 	 100       	 0         	 0         	 23717     	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 58, m: 50, fromLeft: 1)                	 1.9e-06   	 1         	 0         	 0         	 24.4211   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.49457   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.49453   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.64013   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.63881   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.06195   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.14584   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.05759   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.85433   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.832462  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.679112  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.584938  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.546527  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.314649  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.112317  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0949335 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0690985 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0510362 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0488431 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0480897 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0418598 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0416658 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0270637 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0270311 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0260405 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0259451 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0233614 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00739365	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00574318	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00397342	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00266267	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00176187	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109068	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00091271	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000476982	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22519895254912 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22519721486336 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22519520159872 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22519318833408 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22519117506944 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22518916180480 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22518714854016 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22518513527552 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22518312201088 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22518110874624 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22517909548160 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22517708221696 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22517506895232 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22517305568768 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22517104242304 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22516902915840 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22516701589376 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22516500262912 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22516298936448 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22516097609984 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22515896283520 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22515694957056 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22515493630592 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22515292304128 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22515090977664 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22514889651200 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22514688324736 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22514486998272 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22514285671808 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22514084345344 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22513883018880 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22513681692416 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22513480361856 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22513279035392 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22513077708928 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22512876382464 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22512675056000 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22512473729536 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22512272403072 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22512071076608 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22511869750144 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22511668423680 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22511467097216 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22511265770752 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22511064444288 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22510863117824 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22510661791360 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22510460464896 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22510259138432 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22510057811968 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22509856485504 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22509655159040 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22509453832576 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22509252506112 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22509051179648 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22508849853184 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22508648526720 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22508447200256 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22508245873792 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22508044547328 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22507843220864 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22507641894400 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22507440567936 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22519616624384 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22519611021056 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 109, m: 109)                                                               	 0.997614  	 700       	 6.36082   	 0         	 0.20069   	 31.6947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5450, cols: 109, reductionFactor: 37, colBlockingSize: 12)                 	 0.703562  	 600       	 113.425   	 0         	 4.13392   	 27.4377   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5450, r: 109, r2: 109, leftOrthog: 1)      	 0.624131  	 600       	 124.496   	 0         	 13.8887   	 8.96382   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 109, r1_: 109, n: 50, r2: 109)        	 0.478843  	 600       	 162.27    	 0         	 12.0288   	 13.4901   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5450, cols: 59, reductionFactor: 37, colBlockingSize: 12)                  	 0.279936  	 700       	 97.4432   	 0         	 6.50211   	 14.9864   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5450, Xcols: 59, r: 59, streamingCols: 0)                   	 0.100887  	 700       	 131.632   	 0         	 35.7935   	 3.67755   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 109, reductionFactor: 37, colBlockingSize: 12)                 	 0.095849  	 100       	 63.6528   	 0         	 2.37358   	 26.8173   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 59, Qr2: 109)      	 0.0929354 	 700       	 0         	 0         	 62.7034   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 109)                                                                	 0.0561826 	 100       	 3.39518   	 0         	 0.191518  	 17.7277   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 109, r2: 109, leftOrthog: 1)      	 0.049971  	 100       	 118.879   	 0         	 13.468    	 8.82677   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, n: 50, r2left: 50, r2right: 59)                	 0.0449045 	 700       	 0         	 0         	 80.2004   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 59, m: 59)                                                                  	 0.0441269 	 809       	 5.02041   	 0         	 1.54031   	 3.25936   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5450, r: 50, r2: 50, leftOrthog: 1)        	 0.0416842 	 100       	 65.3725   	 0         	 15.7854   	 4.14134   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 59, m: 50, k: 2500)   	 0.0411366 	 800       	 286.849   	 0         	 42.8543   	 6.69359   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0410783 	 100       	 2.13008   	 0         	 0.147036  	 14.4868   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5450, m: 59)                                                         	 0.0392521 	 700       	 0         	 0         	 91.7496   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 109, r1_: 50, n: 50, r2: 109)         	 0.0373505 	 100       	 159.048   	 0         	 18.6771   	 8.51562   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 59, m: 5450)                                                                  	 0.0362809 	 700       	 0         	 0         	 99.2631   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 109, r1_: 109, n: 50, r2: 50)         	 0.035227  	 100       	 168.635   	 0         	 12.6467   	 13.3343   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 59, reductionFactor: 37, colBlockingSize: 12)                  	 0.0339618 	 101       	 53.1601   	 0         	 3.59205   	 14.7994   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2950, m: 50, k: 59) 	 0.0335977 	 700       	 362.628   	 0         	 54.087    	 6.70455   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0324645 	 100       	 86.2065   	 0         	 6.77664   	 12.7211   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2950, m: 59, k: 59) 	 0.0266828 	 700       	 538.794   	 0         	 73.7874   	 7.30198   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 59, m: 2500, k: 50)	 0.0250135 	 800       	 471.746   	 0         	 70.4773   	 6.69359   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 59, n: 50, r2: 59)                                                                                         	 0.0220371 	 707       	 0         	 0         	 89.3426   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 109, reductionFactor: 37, colBlockingSize: 12)                   	 0.0105485 	 100       	 11.5676   	 0         	 1.31438   	 8.80078   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 59, r: 59, streamingCols: 0)                   	 0.0105176 	 101       	 83.5698   	 0         	 22.7967   	 3.66587   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00960403	 109       	 1.89156   	 0         	 0.685504  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2950, m: 50, k: 50) 	 0.00605498	 100       	 243.601   	 0         	 39.3065   	 6.19748   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00513305	 8         	 19.4816   	 0         	 3.14822   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00492743	 101       	 5.26287   	 0         	 0.8199    	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 59, m: 2500)                                                                  	 0.00468578	 101       	 0         	 0         	 50.8688   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 59)                                                         	 0.00459104	 101       	 0         	 0         	 51.9185   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, n: 50, r2left: 50, r2right: 0)                 	 0.00390105	 100       	 0         	 0         	 60.4965   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00255543	 8         	 40.1901   	 0         	 3.19321   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2950, cols: 59, reductionFactor: 37, colBlockingSize: 12)                  	 0.00254307	 7         	 58.0601   	 0         	 3.90935   	 14.8516   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, n: 50, r: 59, r2: 59)             	 0.00209514	 7         	 68.6184   	 0         	 9.39723   	 7.30198   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 109, leftOrthog: 1)         	 0.00198424	 100       	 27.4664   	 0         	 8.60783   	 3.19087   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 59, m: 59, fromLeft: 1)                	 0.00185805	 808       	 0         	 0         	 24.2203   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 59, n: 50, r2: 50)                                                                                         	 0.00183287	 101       	 0         	 0         	 130.047   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00166877	 8         	 29.9621   	 0         	 9.63582   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 59, Qr2: 50)       	 0.00139473	 100       	 0         	 0         	 312.605   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 59, k: 59)   	 0.00104419	 100       	 33.3369   	 0         	 7.18721   	 4.63836   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00102468	 100       	 24.3978   	 0         	 5.85546   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 59, m: 2950)                                                                  	 0.000935474	 7         	 0         	 0         	 20.8382   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 59)                                                                                          	 0.000848511	 201       	 0         	 0         	 11.181    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 59)   	 0.000842853	 100       	 35.0002   	 0         	 7.97292   	 4.38988   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000794464	 100       	 0.629355  	 0         	 2.51742   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000775078	 100       	 32.2548   	 0         	 7.74116   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00077217	 8         	 0         	 0         	 20.7208   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000758337	 201       	 0         	 0         	 10.6021   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2950, Xcols: 59, r: 59, streamingCols: 0)                   	 0.000750828	 7         	 95.7378   	 0         	 26.0926   	 3.66915   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2950, m: 59)                                                         	 0.000696439	 7         	 0         	 0         	 27.9904   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000666774	 100       	 37.494    	 0         	 8.99855   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 59)                 	 0.000566411	 100       	 0         	 0         	 15.3952   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000546686	 100       	 0         	 0         	 7.31681   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000514074	 8         	 0         	 0         	 31.1239   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000473872	 100       	 0         	 0         	 8.4411    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000452132	 101       	 0         	 0         	 8.93544   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000438714	 100       	 0         	 0         	 9.11756   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000432561	 100       	 1.15591   	 0         	 13.8709   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000384258	 101       	 0.657111  	 0         	 10.5138   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 59)                                                                                 	 0.000372487	 101       	 0.799894  	 0         	 12.7983   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000328782	 100       	 0.760382  	 0         	 12.1661   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, n: 50, r: 59, r2: 50)             	 0.000279597	 1         	 62.2503   	 0         	 9.28479   	 6.70455   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 59, reductionFactor: 37, colBlockingSize: 12)                    	 4.4501e-05	 1         	 8.03371   	 0         	 1.15611   	 6.94892   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.8181e-05	 1         	 3.27388   	 0         	 1.30955   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 59, r: 50, streamingCols: 8)                     	 2.5781e-05	 1         	 4.84853   	 0         	 1.93941   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.53e-05  	 9         	 0         	 0         	 23.5294   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.4201e-05	 1         	 17.6044   	 0         	 4.22505   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 59, r2: 59)              	 1.39e-05  	 1         	 25.0432   	 0         	 5.39914   	 4.63836   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.0751e-05	 2         	 0         	 0         	 7.44117   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.43e-06  	 1         	 0.59312   	 0         	 2.37248   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 59)                                                                                   	 7.72e-06  	 1         	 0.764249  	 0         	 3.05699   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2950, m: 0, k: 50)  	 4.78e-06  	 100       	 0         	 0         	 24686.2   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 59)                                                           	 4.39e-06  	 1         	 0         	 0         	 10.7517   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 59, m: 50, fromLeft: 1)                	 1.92e-06  	 1         	 0         	 0         	 24.5833   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.57517   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.57512   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.70735   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.70613   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.13213   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.16639   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.09487   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.867692  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.843211  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.71777   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.594524  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.552196  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.324516  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.113888  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0947688 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0682273 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0537309 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0498459 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0457682 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.042427  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0421613 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0260384 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0260235 	 1310      
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0260091 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0256802 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0232965 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00753589	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00553925	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00394815	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00235891	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00187527	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108553	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000810614	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000432561	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23318241384320 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23318048532480 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23317847206016 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23317645879552 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23317444553088 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23317243226624 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23317041900160 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23316840573696 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23316639247232 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23316437920768 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23316236594304 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23316035267840 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23315833941376 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23315632614912 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23315431288448 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23315229961984 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23315028635520 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23314827309056 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23314625982592 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23314424656128 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23314223329664 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23314022003200 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23313820676736 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23313619350272 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23313418023808 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23313216697344 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23313015370880 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23312814044416 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23312612717952 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23312411391488 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23312210065024 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23312008738560 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23311807408000 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23311606081536 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23311404755072 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23311203428608 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23311002102144 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23310800775680 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23310599449216 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23310398122752 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23310196796288 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23309995469824 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23309794143360 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23309592816896 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23309391490432 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23309190163968 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23308988837504 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23308787511040 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23308586184576 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23308384858112 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23308183531648 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23307982205184 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23307780878720 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23307579552256 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23307378225792 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23307176899328 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23306975572864 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23306774246400 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23306572919936 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23306371593472 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23306170267008 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23305968940544 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23305767614080 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23318135723776 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23318129133312 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 110, m: 110)                                                               	 0.993437  	 700       	 6.56499   	 0         	 0.205243  	 31.9864   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 110, reductionFactor: 37, colBlockingSize: 12)                 	 0.715987  	 600       	 114.553   	 0         	 4.13706   	 27.6895   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5500, r: 110, r2: 110, leftOrthog: 1)      	 0.628026  	 600       	 127.16    	 0         	 14.057    	 9.04605   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 110, r1_: 110, n: 50, r2: 110)        	 0.487717  	 600       	 163.742   	 0         	 12.0276   	 13.6139   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.300422  	 700       	 94.764    	 0         	 6.21845   	 15.2392   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5500, Xcols: 60, r: 60, streamingCols: 0)                   	 0.102938  	 700       	 134.644   	 0         	 36.0031   	 3.7398    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 110, reductionFactor: 37, colBlockingSize: 12)                 	 0.0988683 	 100       	 62.8463   	 0         	 2.32309   	 27.0529   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 60, Qr2: 110)      	 0.0959643 	 700       	 0         	 0         	 61.8564   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 110)                                                                	 0.0550038 	 100       	 3.49976   	 0         	 0.197077  	 17.7583   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 60, m: 5500)                                                                  	 0.052954  	 700       	 0         	 0         	 69.7964   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 110, r2: 110, leftOrthog: 1)      	 0.0503306 	 100       	 120.205   	 0         	 13.4979   	 8.90544   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, n: 50, r2left: 50, r2right: 60)                	 0.0454033 	 700       	 0         	 0         	 81.4037   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5500, m: 60)                                                         	 0.0448113 	 700       	 0         	 0         	 82.4792   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 60, m: 60)                                                                  	 0.0436249 	 809       	 5.34081   	 0         	 1.61114   	 3.31492   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0413995 	 100       	 2.11355   	 0         	 0.145895  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5500, r: 50, r2: 50, leftOrthog: 1)        	 0.0399324 	 100       	 68.8663   	 0         	 16.6281   	 4.14157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 60, m: 50, k: 2500)   	 0.0399034 	 800       	 300.726   	 0         	 44.5877   	 6.7446    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 110, r1_: 50, n: 50, r2: 110)         	 0.0374817 	 100       	 161.412   	 0         	 18.8999   	 8.54037   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.0361922 	 101       	 51.5895   	 0         	 3.42916   	 15.0443   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 110, r1_: 110, n: 50, r2: 50)         	 0.0350563 	 100       	 172.58    	 0         	 12.8274   	 13.454    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3000, m: 50, k: 60) 	 0.0350175 	 700       	 359.82    	 0         	 53.2534   	 6.75676   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0316041 	 100       	 89.3658   	 0         	 7.02441   	 12.7222   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3000, m: 60, k: 60) 	 0.0265574 	 700       	 569.332   	 0         	 76.6701   	 7.42574   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 60, m: 2500, k: 50)	 0.0247007 	 800       	 485.816   	 0         	 72.0303   	 6.7446    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 60, n: 50, r2: 60)                                                                                         	 0.0221715 	 707       	 0         	 0         	 91.8366   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 60, r: 60, streamingCols: 0)                   	 0.0107415 	 101       	 84.6248   	 0         	 22.702    	 3.72763   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 110, reductionFactor: 37, colBlockingSize: 12)                   	 0.0101881 	 100       	 12.1975   	 0         	 1.382     	 8.82601   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00965696	 109       	 1.88119   	 0         	 0.681747  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3000, m: 50, k: 50) 	 0.00719343	 100       	 208.524   	 0         	 33.6418   	 6.19835   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 60)                                                         	 0.00626251	 101       	 0         	 0         	 38.7065   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00542313	 101       	 4.78182   	 0         	 0.744958  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 60, m: 2500)                                                                  	 0.00515799	 101       	 0         	 0         	 46.9951   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00504017	 8         	 19.8406   	 0         	 3.20624   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, n: 50, r2left: 50, r2right: 0)                 	 0.00369313	 100       	 0         	 0         	 64.9855   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00266857	 8         	 38.486    	 0         	 3.05781   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.002646  	 7         	 58.6872   	 0         	 3.88571   	 15.1033   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, n: 50, r: 60, r2: 60)             	 0.00208529	 7         	 72.5081   	 0         	 9.76442   	 7.42574   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 60, m: 60, fromLeft: 1)                	 0.0019193 	 808       	 0         	 0         	 24.2489   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 110, leftOrthog: 1)         	 0.00188562	 100       	 29.1681   	 0         	 9.12165   	 3.19767   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 60, n: 50, r2: 50)                                                                                         	 0.00180209	 101       	 0         	 0         	 134.51    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00178728	 8         	 27.9755   	 0         	 8.99691   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 60, Qr2: 50)       	 0.0014237 	 100       	 0         	 0         	 309.054   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.0010765 	 100       	 23.2234   	 0         	 5.57361   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 60, m: 3000)                                                                  	 0.000933614	 7         	 0         	 0         	 21.5935   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 60)                                                                                          	 0.000873684	 201       	 0         	 0         	 11.0429   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000864864	 8         	 0         	 0         	 18.5      	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3000, m: 60)                                                         	 0.000860804	 7         	 0         	 0         	 23.42     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 60, k: 60)   	 0.000834776	 100       	 43.1253   	 0         	 9.20007   	 4.6875    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 60)   	 0.000829677	 100       	 36.1586   	 0         	 8.19596   	 4.41176   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000808398	 100       	 0.618507  	 0         	 2.47403   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000800736	 100       	 31.2213   	 0         	 7.49311   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000797973	 201       	 0         	 0         	 10.0755   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3000, Xcols: 60, r: 60, streamingCols: 0)                   	 0.000770961	 7         	 98.0594   	 0         	 26.2799   	 3.73134   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000665957	 100       	 37.54     	 0         	 9.00959   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000616967	 8         	 0         	 0         	 25.9333   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 60)                 	 0.000556537	 100       	 0         	 0         	 15.8121   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000494412	 100       	 0         	 0         	 8.09042   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000481076	 100       	 0         	 0         	 8.31469   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000447609	 100       	 0         	 0         	 8.93637   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000436238	 101       	 0         	 0         	 9.261     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000434884	 100       	 1.14973   	 0         	 13.7968   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 60)                                                                                 	 0.000389491	 101       	 0.777938  	 0         	 12.447    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000373345	 101       	 0.676318  	 0         	 10.8211   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000348337	 100       	 0.717696  	 0         	 11.4831   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, n: 50, r: 60, r2: 50)             	 0.000279418	 1         	 64.4196   	 0         	 9.5341    	 6.75676   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 60, reductionFactor: 37, colBlockingSize: 12)                    	 4.4031e-05	 1         	 8.39703   	 0         	 1.19916   	 7.00246   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 60, r: 50, streamingCols: 9)                     	 3.7051e-05	 1         	 3.37373   	 0         	 1.34949   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.5131e-05	 1         	 3.55811   	 0         	 1.42324   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.533e-05 	 9         	 0         	 0         	 23.4834   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.516e-05 	 1         	 16.4908   	 0         	 3.95778   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 60, r2: 60)              	 1.342e-05 	 1         	 26.8256   	 0         	 5.7228    	 4.6875    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.075e-05 	 2         	 0         	 0         	 7.44186   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 60)                                                                                   	 9.07e-06  	 1         	 0.661521  	 0         	 2.64609   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.87e-06  	 1         	 0.563698  	 0         	 2.25479   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3000, m: 0, k: 50)  	 4.8e-06   	 100       	 0         	 0         	 25000     	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 60)                                                           	 4.1e-06   	 1         	 0         	 0         	 11.7073   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 60, m: 50, fromLeft: 1)                	 1.93e-06  	 1         	 0         	 0         	 24.8705   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.69328   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.69323   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.7726    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.77135   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.18421   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.20404   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.08984   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.920556  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.857334  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.720175  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.644685  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.561056  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.34789   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.11631   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0978356 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0704376 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0596734 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0532818 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0532398 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0501341 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0409799 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0270376 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0269902 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0261397 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0253667 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0239097 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00743346	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00580949	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00375898	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00260369	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00193656	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111117	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000826338	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000434884	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23251753867136 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23251543648256 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23251342321792 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23251140995328 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23250939668864 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23250738342400 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23250537015936 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23250335689472 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23250134363008 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23249933036544 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23249731710080 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23249530383616 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23249329057152 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23249127730688 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23248926404224 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23248725077760 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23248523751296 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23248322424832 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23248121098368 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23247919771904 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23247718445440 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23247517118976 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23247315792512 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23247114466048 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23246913139584 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23246711813120 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23246510486656 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23246309160192 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23246107833728 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23245906507264 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23245705180800 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23245503854336 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23245302523776 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23245101197312 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23244899870848 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23244698544384 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23244497217920 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23244295891456 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23244094564992 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23243893238528 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23243691912064 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23243490585600 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23243289259136 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23243087932672 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23242886606208 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23242685279744 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23242483953280 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23242282626816 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23242081300352 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23241879973888 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23241678647424 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23241477320960 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23241275994496 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23241074668032 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23240873341568 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23240672015104 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23240470688640 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23240269362176 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23240068035712 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23239866709248 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23239665382784 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23239464056320 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23239262729856 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23251648206592 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23251641616128 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 111, m: 111)                                                               	 1.03703   	 700       	 6.46209   	 0         	 0.200201  	 32.2781   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5550, cols: 111, reductionFactor: 37, colBlockingSize: 12)                 	 0.731017  	 600       	 115.285   	 0         	 4.12601   	 27.9412   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5550, r: 111, r2: 111, leftOrthog: 1)      	 0.621817  	 600       	 131.965   	 0         	 14.4567   	 9.12829   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 111, r1_: 111, n: 50, r2: 111)        	 0.499751  	 600       	 164.197   	 0         	 11.9524   	 13.7376   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5550, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.304598  	 700       	 97.4846   	 0         	 6.29262   	 15.4919   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5550, Xcols: 61, r: 61, streamingCols: 0)                   	 0.102697  	 700       	 140.765   	 0         	 37.0234   	 3.80205   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 61, Qr2: 111)      	 0.101059  	 700       	 0         	 0         	 59.8242   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 111, reductionFactor: 37, colBlockingSize: 12)                 	 0.0989095 	 100       	 63.9676   	 0         	 2.34413   	 27.2884   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 111)                                                                	 0.0576234 	 100       	 3.37103   	 0         	 0.189506  	 17.7885   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 111, r2: 111, leftOrthog: 1)      	 0.0515122 	 100       	 119.593   	 0         	 13.3117   	 8.98407   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5550, m: 61)                                                         	 0.0482906 	 700       	 0         	 0         	 78.5196   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, n: 50, r2left: 50, r2right: 61)                	 0.047449  	 700       	 0         	 0         	 79.9123   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 61, m: 61)                                                                  	 0.0466123 	 809       	 5.2526    	 0         	 1.55843   	 3.37046   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 61, m: 50, k: 2500)   	 0.0410599 	 800       	 297.127   	 0         	 43.7292   	 6.79469   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 61, m: 5550)                                                                  	 0.0406535 	 700       	 0         	 0         	 93.2702   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0395634 	 100       	 2.21164   	 0         	 0.152667  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 111, r1_: 50, n: 50, r2: 111)         	 0.0386705 	 100       	 159.307   	 0         	 18.6002   	 8.56481   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.0362165 	 101       	 53.2877   	 0         	 3.48534   	 15.2891   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 111, r1_: 111, n: 50, r2: 50)         	 0.0356169 	 100       	 172.966   	 0         	 12.7427   	 13.5737   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3050, m: 50, k: 61) 	 0.0354187 	 700       	 367.702   	 0         	 54.0099   	 6.80804   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5550, r: 50, r2: 50, leftOrthog: 1)        	 0.0351538 	 100       	 78.9389   	 0         	 19.0591   	 4.14179   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3050, m: 61, k: 61) 	 0.0317608 	 700       	 500.261   	 0         	 66.264    	 7.5495    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0315987 	 100       	 90.1935   	 0         	 7.08889   	 12.7232   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 61, m: 2500, k: 50)	 0.0258847 	 800       	 471.322   	 0         	 69.3662   	 6.79469   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 61, n: 50, r2: 61)                                                                                         	 0.0227821 	 707       	 0         	 0         	 92.3796   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 111, reductionFactor: 37, colBlockingSize: 12)                   	 0.0120705 	 100       	 10.4834   	 0         	 1.18445   	 8.85093   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 61, r: 61, streamingCols: 0)                   	 0.0109894 	 101       	 85.4961   	 0         	 22.562    	 3.78938   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00966803	 109       	 1.87904   	 0         	 0.680966  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3050, m: 50, k: 50) 	 0.0064522 	 100       	 236.353   	 0         	 38.1265   	 6.19919   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 61)                                                         	 0.0050204 	 101       	 0         	 0         	 49.0877   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0050155 	 8         	 19.9382   	 0         	 3.22201   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 61, m: 2500)                                                                  	 0.00494364	 101       	 0         	 0         	 49.8499   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0042752 	 101       	 6.06579   	 0         	 0.944986  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, n: 50, r2left: 50, r2right: 0)                 	 0.00375637	 100       	 0         	 0         	 64.9564   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3050, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.00272061	 7         	 59.9795   	 0         	 3.90617   	 15.3551   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00269843	 8         	 38.0601   	 0         	 3.02398   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 111, leftOrthog: 1)         	 0.00257354	 100       	 21.5656   	 0         	 6.73003   	 3.20439   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, n: 50, r: 61, r2: 61)             	 0.00221849	 7         	 71.6193   	 0         	 9.48663   	 7.5495    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 61, n: 50, r2: 50)                                                                                         	 0.00206662	 101       	 0         	 0         	 119.248   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 61, m: 61, fromLeft: 1)                	 0.00201153	 808       	 0         	 0         	 23.9147   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00190583	 8         	 26.2353   	 0         	 8.43726   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 61, Qr2: 50)       	 0.00146489	 100       	 0         	 0         	 303.094   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00103904	 100       	 24.0607   	 0         	 5.77458   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 61, k: 61)   	 0.00090453	 100       	 41.1374   	 0         	 8.68606   	 4.73602   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3050, m: 61)                                                         	 0.000895775	 7         	 0         	 0         	 23.2621   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 61, m: 3050)                                                                  	 0.000889773	 7         	 0         	 0         	 23.419    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 61)                                                                                          	 0.000858697	 201       	 0         	 0         	 11.4229   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000842723	 100       	 0.593315  	 0         	 2.37326   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 61)   	 0.000837803	 100       	 36.4047   	 0         	 8.21195   	 4.43314   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000799523	 100       	 31.2686   	 0         	 7.50447   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3050, Xcols: 61, r: 61, streamingCols: 0)                   	 0.000791802	 7         	 100.332   	 0         	 26.4483   	 3.79353   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000771992	 201       	 0         	 0         	 10.4146   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000630359	 100       	 39.6599   	 0         	 9.51839   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000603497	 8         	 0         	 0         	 26.5121   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 61)                 	 0.00057221	 100       	 0         	 0         	 15.5188   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000539095	 8         	 0         	 0         	 29.6794   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000507262	 100       	 0         	 0         	 7.88547   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000479213	 100       	 0         	 0         	 8.34702   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000454504	 100       	 0         	 0         	 8.8008    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000452195	 100       	 1.10572   	 0         	 13.2686   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.00041051	 101       	 0         	 0         	 9.84142   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000407902	 101       	 0.619021  	 0         	 9.90434   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 61)                                                                                 	 0.0003683 	 101       	 0.836411  	 0         	 13.3826   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000339795	 100       	 0.735738  	 0         	 11.7718   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, n: 50, r: 61, r2: 50)             	 0.000291098	 1         	 63.9132   	 0         	 9.3879    	 6.80804   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 61, reductionFactor: 37, colBlockingSize: 12)                    	 4.4421e-05	 1         	 8.60307   	 0         	 1.21942   	 7.05503   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6761e-05	 1         	 3.40034   	 0         	 1.36014   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 61, r: 50, streamingCols: 8)                     	 2.8831e-05	 1         	 4.33561   	 0         	 1.73424   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.535e-05 	 9         	 0         	 0         	 23.4528   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 61, r2: 61)              	 1.3101e-05	 1         	 28.4024   	 0         	 5.9971    	 4.73602   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.207e-05 	 2         	 0         	 0         	 6.628     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.159e-05 	 1         	 21.5703   	 0         	 5.17688   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.058e-05 	 1         	 0.47259   	 0         	 1.89036   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 61)                                                                                   	 9.591e-06 	 1         	 0.636013  	 0         	 2.54405   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3050, m: 0, k: 50)  	 5.2e-06   	 100       	 0         	 0         	 23461.5   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 61)                                                           	 5.2e-06   	 1         	 0         	 0         	 9.38462   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 61, m: 50, fromLeft: 1)                	 2.06e-06  	 1         	 0         	 0         	 23.6893   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.78289   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.78285   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.8509    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.84962   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.24419   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.22415   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.13422   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.931889  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.874185  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.711057  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.641576  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.574838  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.351194  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.116449  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.102978  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0753792 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0562803 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.055226  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0522568 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0470381 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.042099  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0269866 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0266783 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0266458 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.026515  	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0243346 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00754978	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00705626	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00379913	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0026168 	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00202894	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.001116  	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000862894	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000452195	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22463855462272 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22463618476032 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22463417149568 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22463215823104 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22463014496640 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22462813170176 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22462611843712 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22462410517248 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22462209190784 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22462007864320 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22461806537856 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22461605211392 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22461403884928 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22461202558464 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22461001232000 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22460799905536 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22460598579072 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22460397252608 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22460195926144 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22459994599680 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22459793273216 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22459591946752 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22459390620288 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22459189293824 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22458987967360 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22458786640896 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22458585314432 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22458383987968 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22458182661504 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22457981335040 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22457780008576 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22457578682112 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22457377351552 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22457176025088 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22456974698624 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22456773372160 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22456572045696 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22456370719232 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22456169392768 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22455968066304 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22455766739840 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22455565413376 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22455364086912 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22455162760448 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22454961433984 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22454760107520 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22454558781056 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22454357454592 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22454156128128 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22453954801664 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22453753475200 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22453552148736 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22453350822272 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22453149495808 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22452948169344 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22452746842880 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22452545516416 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22452344189952 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22452142863488 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22451941537024 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22451740210560 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22451538884096 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22451337557632 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22463749801728 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22463743211264 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 112, m: 112)                                                               	 1.00904   	 700       	 6.8225    	 0         	 0.209474  	 32.5697   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5600, cols: 112, reductionFactor: 37, colBlockingSize: 12)                 	 0.738999  	 600       	 117.15    	 0         	 4.15531   	 28.1929   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5600, r: 112, r2: 112, leftOrthog: 1)      	 0.664922  	 600       	 126.775   	 0         	 13.7642   	 9.21053   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 112, r1_: 112, n: 50, r2: 112)        	 0.511972  	 600       	 164.649   	 0         	 11.8782   	 13.8614   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5600, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.309774  	 700       	 99.9163   	 0         	 6.34607   	 15.7446   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5600, Xcols: 62, r: 62, streamingCols: 0)                   	 0.106581  	 700       	 141.38    	 0         	 36.5862   	 3.8643    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 112, reductionFactor: 37, colBlockingSize: 12)                 	 0.100905  	 100       	 63.8376   	 0         	 2.31937   	 27.5237   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 62, Qr2: 112)      	 0.100889  	 700       	 0         	 0         	 61.0236   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 112)                                                                	 0.0570086 	 100       	 3.43808   	 0         	 0.192953  	 17.8182   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 112, r2: 112, leftOrthog: 1)      	 0.0511331 	 100       	 122.66    	 0         	 13.5347   	 9.06266   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5600, m: 62)                                                         	 0.0500723 	 700       	 0         	 0         	 77.6605   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 62, m: 62)                                                                  	 0.0483264 	 809       	 5.31957   	 0         	 1.5527    	 3.42602   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, n: 50, r2left: 50, r2right: 62)                	 0.0482734 	 700       	 0         	 0         	 80.5545   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3100, m: 50, k: 62) 	 0.0432905 	 700       	 310.784   	 0         	 45.3143   	 6.85841   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 62, m: 50, k: 2500)   	 0.0413692 	 800       	 299.74    	 0         	 43.7969   	 6.84387   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5600, r: 50, r2: 50, leftOrthog: 1)        	 0.0412668 	 100       	 67.8512   	 0         	 16.3812   	 4.14201   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0411347 	 100       	 2.12716   	 0         	 0.146835  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 112, r1_: 50, n: 50, r2: 112)         	 0.0386907 	 100       	 162.106   	 0         	 18.8738   	 8.58896   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 62, m: 5600)                                                                  	 0.0381489 	 700       	 0         	 0         	 101.933   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 112, r1_: 112, n: 50, r2: 50)         	 0.0377766 	 100       	 166.029   	 0         	 12.1248   	 13.6933   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.0375529 	 101       	 53.0901   	 0         	 3.41774   	 15.5337   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0314649 	 100       	 91.3932   	 0         	 7.18261   	 12.7242   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3100, m: 62, k: 62) 	 0.0278655 	 700       	 598.696   	 0         	 78.0236   	 7.67327   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 62, m: 2500, k: 50)	 0.0268444 	 800       	 461.921   	 0         	 67.4941   	 6.84387   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 62, n: 50, r2: 62)                                                                                         	 0.0255401 	 707       	 0         	 0         	 85.1275   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 112, reductionFactor: 37, colBlockingSize: 12)                   	 0.011836  	 100       	 10.8846   	 0         	 1.22636   	 8.87554   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 62, r: 62, streamingCols: 0)                   	 0.0109615 	 101       	 88.5469   	 0         	 22.9925   	 3.85112   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00939756	 109       	 1.93312   	 0         	 0.700565  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3100, m: 50, k: 50) 	 0.00727936	 100       	 212.931   	 0         	 34.3437   	 6.2       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 62, m: 2500)                                                                  	 0.00666831	 101       	 0         	 0         	 37.5627   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 62)                                                         	 0.00620643	 101       	 0         	 0         	 40.3582   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00496893	 8         	 20.1251   	 0         	 3.25221   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, n: 50, r2left: 50, r2right: 0)                 	 0.00435408	 100       	 0         	 0         	 56.958    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00406455	 101       	 6.38015   	 0         	 0.993961  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3100, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.00305856	 7         	 56.0193   	 0         	 3.58942   	 15.6068   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00292115	 8         	 35.1583   	 0         	 2.79342   	 12.5861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, n: 50, r: 62, r2: 62)             	 0.00223654	 7         	 74.5927   	 0         	 9.72112   	 7.67327   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00211614	 8         	 23.628    	 0         	 7.59875   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 62, m: 62, fromLeft: 1)                	 0.00202204	 808       	 0         	 0         	 24.5768   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 62, n: 50, r2: 50)                                                                                         	 0.00194898	 101       	 0         	 0         	 128.518   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 112, leftOrthog: 1)         	 0.00189109	 100       	 29.6125   	 0         	 9.22218   	 3.21101   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 62, Qr2: 50)       	 0.00158929	 100       	 0         	 0         	 281.887   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3100, m: 62)                                                         	 0.0010143 	 7         	 0         	 0         	 21.223    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00101412	 100       	 24.6519   	 0         	 5.91647   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000944383	 100       	 0.529446  	 0         	 2.11778   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000899315	 8         	 0         	 0         	 17.7913   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 62, m: 3100)                                                                  	 0.000898776	 7         	 0         	 0         	 23.9508   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3100, Xcols: 62, r: 62, streamingCols: 0)                   	 0.000870742	 7         	 95.7974   	 0         	 24.8455   	 3.85572   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 62)   	 0.000866206	 100       	 35.7883   	 0         	 8.03504   	 4.45402   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 62)                                                                                          	 0.000861585	 201       	 0         	 0         	 11.5712   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 62, k: 62)   	 0.000832673	 100       	 46.1646   	 0         	 9.64989   	 4.78395   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000782032	 201       	 0         	 0         	 10.2809   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000757761	 100       	 32.9919   	 0         	 7.91806   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000639285	 100       	 39.1062   	 0         	 9.38549   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000599875	 8         	 0         	 0         	 26.6722   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 62)                 	 0.000549269	 100       	 0         	 0         	 16.3126   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000516146	 100       	 0         	 0         	 7.74975   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000481393	 101       	 0         	 0         	 8.39231   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000479138	 100       	 0         	 0         	 8.34833   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000456322	 100       	 0         	 0         	 8.76574   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000453174	 100       	 1.10333   	 0         	 13.2399   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000392349	 101       	 0.64356   	 0         	 10.297    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 62)                                                                                 	 0.000370097	 101       	 0.845994  	 0         	 13.5359   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000324408	 100       	 0.770635  	 0         	 12.3302   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, n: 50, r: 62, r2: 50)             	 0.000309839	 1         	 62.0322   	 0         	 9.0447    	 6.85841   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 62, reductionFactor: 37, colBlockingSize: 12)                    	 4.8101e-05	 1         	 8.2075    	 0         	 1.1549    	 7.10666   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.7951e-05	 1         	 3.29372   	 0         	 1.31749   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 62, r: 50, streamingCols: 9)                     	 2.6921e-05	 1         	 4.64322   	 0         	 1.85729   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.51e-05  	 9         	 0         	 0         	 23.8411   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.451e-05 	 1         	 17.2295   	 0         	 4.13508   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 62, r2: 62)              	 1.4221e-05	 1         	 27.0304   	 0         	 5.65024   	 4.78395   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.162e-05 	 2         	 0         	 0         	 6.88468   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.0761e-05	 1         	 0.464641  	 0         	 1.85856   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 62)                                                                                   	 8.751e-06 	 1         	 0.70849   	 0         	 2.83396   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3100, m: 0, k: 50)  	 4.84e-06  	 100       	 0         	 0         	 25619.8   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 62)                                                           	 4.56e-06  	 1         	 0         	 0         	 10.8772   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 62, m: 50, fromLeft: 1)                	 2.11e-06  	 1         	 0         	 0         	 23.5071   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.82614   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.8261    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.87451   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.87314   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.2594    	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.24062   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.10718   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.95152   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.883842  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.759213  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.655871  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.589197  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.35798   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.120595  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.102935  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0801391 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0586783 	 918       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.057724  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0536559 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0463275 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0423833 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0296489 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0279687 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.027937  	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0274837 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0248754 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00754404	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00414409	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00374036	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00216349	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00203925	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108685	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000963895	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000453174	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22788428560256 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22788224051200 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22788022724736 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22787821398272 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22787620071808 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22787418745344 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22787217418880 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22787016092416 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22786814765952 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22786613439488 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22786412113024 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22786210786560 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22786009460096 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22785808133632 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22785606807168 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22785405480704 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22785204154240 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22785002827776 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22784801501312 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22784600174848 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22784398848384 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22784197521920 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22783996195456 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22783794868992 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22783593542528 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22783392216064 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22783190889600 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22782989563136 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22782788236672 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22782586910208 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22782385583744 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22782184257280 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22781982926720 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22781781600256 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22781580273792 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22781378947328 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22781177620864 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22780976294400 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22780774967936 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22780573641472 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22780372315008 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22780170988544 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22779969662080 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22779768335616 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22779567009152 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22779365682688 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22779164356224 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22778963029760 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22778761703296 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22778560376832 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22778359050368 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22778157723904 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22777956397440 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22777755070976 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22777553744512 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22777352418048 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22777151091584 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22776949765120 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22776748438656 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22776547112192 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22776345785728 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22776144459264 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22775943132800 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22788322899712 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22788316309248 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 113, m: 113)                                                               	 1.07523   	 700       	 6.57552   	 0         	 0.200099  	 32.8614   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5650, cols: 113, reductionFactor: 37, colBlockingSize: 12)                 	 0.74562   	 600       	 119.248   	 0         	 4.19228   	 28.4446   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5650, r: 113, r2: 113, leftOrthog: 1)      	 0.652225  	 600       	 132.736   	 0         	 14.2838   	 9.29276   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 113, r1_: 113, n: 50, r2: 113)        	 0.508743  	 600       	 170.172   	 0         	 12.1681   	 13.9851   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5650, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.317171  	 700       	 101.659   	 0         	 6.35477   	 15.9973   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5650, Xcols: 63, r: 63, streamingCols: 0)                   	 0.107464  	 700       	 146.071   	 0         	 37.2009   	 3.92655   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 113, reductionFactor: 37, colBlockingSize: 12)                 	 0.101268  	 100       	 64.7494   	 0         	 2.33257   	 27.7588   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 63, Qr2: 113)      	 0.0998227 	 700       	 0         	 0         	 62.7977   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 113)                                                                	 0.0574416 	 100       	 3.44262   	 0         	 0.192891  	 17.8475   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 113, r2: 113, leftOrthog: 1)      	 0.0514381 	 100       	 124.12    	 0         	 13.5781   	 9.14121   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 63, m: 63)                                                                  	 0.0502067 	 809       	 5.37214   	 0         	 1.54302   	 3.48158   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, n: 50, r2left: 50, r2right: 63)                	 0.0486029 	 700       	 0         	 0         	 82.0247   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 63, m: 50, k: 2500)   	 0.0420019 	 800       	 299.987   	 0         	 43.5257   	 6.89218   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 63, m: 5650)                                                                  	 0.0418586 	 700       	 0         	 0         	 95.2405   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5650, m: 63)                                                         	 0.0413071 	 700       	 0         	 0         	 96.5123   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0402108 	 100       	 2.17603   	 0         	 0.150208  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5650, r: 50, r2: 50, leftOrthog: 1)        	 0.0389669 	 100       	 72.4975   	 0         	 17.502    	 4.14223   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.0378587 	 101       	 54.3736   	 0         	 3.44615   	 15.7781   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 113, r1_: 50, n: 50, r2: 113)         	 0.037025  	 100       	 172.437   	 0         	 20.0211   	 8.6128    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 113, r1_: 113, n: 50, r2: 50)         	 0.0359656 	 100       	 177.517   	 0         	 12.8516   	 13.8128   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3150, m: 50, k: 63) 	 0.0359361 	 700       	 386.561   	 0         	 55.9593   	 6.90789   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0314701 	 100       	 92.194    	 0         	 7.24498   	 12.7252   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3150, m: 63, k: 63) 	 0.0295203 	 700       	 592.925   	 0         	 76.045    	 7.79703   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 63, m: 2500, k: 50)	 0.0267344 	 800       	 471.303   	 0         	 68.3823   	 6.89218   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 63, n: 50, r2: 63)                                                                                         	 0.0253963 	 707       	 0         	 0         	 88.3935   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 63, r: 63, streamingCols: 0)                   	 0.011298  	 101       	 88.7034   	 0         	 22.6698   	 3.91285   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 113, reductionFactor: 37, colBlockingSize: 12)                   	 0.0107987 	 100       	 12.1442   	 0         	 1.36454   	 8.89985   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00992252	 109       	 1.83084   	 0         	 0.663501  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3150, m: 50, k: 50) 	 0.00688891	 100       	 228.628   	 0         	 36.8708   	 6.20079   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 63)                                                         	 0.0060651 	 101       	 0         	 0         	 41.9647   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00516137	 8         	 19.3747   	 0         	 3.13095   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 63, m: 2500)                                                                  	 0.00478204	 101       	 0         	 0         	 53.2242   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00449267	 101       	 5.77216   	 0         	 0.899242  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, n: 50, r2left: 50, r2right: 0)                 	 0.00439435	 100       	 0         	 0         	 57.3464   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3150, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.00278765	 7         	 64.4856   	 0         	 4.06631   	 15.8585   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00278327	 8         	 36.9001   	 0         	 2.93181   	 12.5861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, n: 50, r: 63, r2: 63)             	 0.00232237	 7         	 75.3681   	 0         	 9.66626   	 7.79703   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 63, n: 50, r2: 50)                                                                                         	 0.00224886	 101       	 0         	 0         	 113.178   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 63, m: 63, fromLeft: 1)                	 0.00212179	 808       	 0         	 0         	 24.183    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 113, leftOrthog: 1)         	 0.00195727	 100       	 28.8668   	 0         	 8.97169   	 3.21754   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00190788	 8         	 26.2071   	 0         	 8.42819   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 63, Qr2: 50)       	 0.00141363	 100       	 0         	 0         	 319.745   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00109445	 100       	 22.8425   	 0         	 5.48221   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 63, m: 3150)                                                                  	 0.00109068	 7         	 0         	 0         	 20.3785   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000999416	 201       	 0         	 0         	 8.0447    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000914798	 100       	 0.546569  	 0         	 2.18628   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 63, k: 63)   	 0.00090779	 100       	 43.7216   	 0         	 9.04967   	 4.83129   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000898884	 100       	 27.8123   	 0         	 6.67494   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 63)   	 0.000863894	 100       	 36.4628   	 0         	 8.14915   	 4.47443   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3150, Xcols: 63, r: 63, streamingCols: 0)                   	 0.000856314	 7         	 102.201   	 0         	 26.0857   	 3.91791   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 63)                                                                                          	 0.000839098	 201       	 0         	 0         	 12.073    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3150, m: 63)                                                         	 0.000687448	 7         	 0         	 0         	 32.3318   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000661791	 100       	 37.7763   	 0         	 9.06631   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000568285	 8         	 0         	 0         	 28.1549   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 63)                 	 0.000535321	 100       	 0         	 0         	 16.8871   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.00052071	 100       	 0         	 0         	 7.68182   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000496624	 100       	 0         	 0         	 8.05438   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000466772	 8         	 0         	 0         	 34.278    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000460103	 100       	 1.08671   	 0         	 13.0406   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000430161	 101       	 0         	 0         	 9.39183   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000426732	 100       	 0         	 0         	 9.37356   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000410566	 101       	 0.615005  	 0         	 9.84007   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 63)                                                                                 	 0.000359702	 101       	 0.884482  	 0         	 14.1517   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00034026	 100       	 0.734732  	 0         	 11.7557   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, n: 50, r: 63, r2: 50)             	 0.000281708	 1         	 70.4453   	 0         	 10.1978   	 6.90789   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 63, reductionFactor: 37, colBlockingSize: 12)                    	 5.3231e-05	 1         	 7.6577    	 0         	 1.0699    	 7.15738   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4051e-05	 1         	 3.67096   	 0         	 1.46839   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 63, r: 50, streamingCols: 11)                    	 2.7591e-05	 1         	 4.53046   	 0         	 1.81219   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.6591e-05	 1         	 15.0684   	 0         	 3.61642   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.503e-05 	 9         	 0         	 0         	 23.9521   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 63, r2: 63)              	 1.39e-05  	 1         	 28.554    	 0         	 5.91022   	 4.83129   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.082e-05 	 2         	 0         	 0         	 7.39372   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.045e-05 	 1         	 0.478469  	 0         	 1.91388   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 63)                                                                                   	 1.0421e-05	 1         	 0.604549  	 0         	 2.41819   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 63)                                                           	 5.431e-06 	 1         	 0         	 0         	 9.28006   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3150, m: 0, k: 50)  	 4.56e-06  	 100       	 0         	 0         	 27631.6   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 63, m: 50, fromLeft: 1)                	 2.1e-06   	 1         	 0         	 0         	 24        	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.89569   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.89565   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.94254   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.9412    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.33817   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.2543    	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.17288   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.953037  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.889853  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.744587  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.660672  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.582632  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.365681  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.121588  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.101663  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0741215 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0601292 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0540533 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0490635 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.048209  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0430963 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0299803 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0283659 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.028333  	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0273962 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0256683 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00779594	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00555201	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0040266 	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00363105	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00213892	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111053	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000935669	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000460103	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22599826941824 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22599648143360 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22599446816896 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22599245490432 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22599044163968 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22598842837504 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22598641511040 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22598440184576 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22598238858112 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22598037531648 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22597836205184 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22597634878720 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22597433552256 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22597232225792 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22597030899328 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22596829572864 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22596628246400 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22596426919936 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22596225593472 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22596024267008 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22595822940544 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22595621614080 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22595420287616 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22595218961152 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22595017634688 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22594816308224 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22594614981760 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22594413655296 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22594212328832 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22594011002368 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22593809675904 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22593608349440 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22593407018880 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22593205692416 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22593004365952 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22592803039488 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22592601713024 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22592400386560 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22592199060096 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22591997733632 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22591796407168 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22591595080704 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22591393754240 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22591192427776 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22590991101312 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22590789774848 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22590588448384 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22590387121920 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22590185795456 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22589984468992 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22589783142528 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22589581816064 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22589380489600 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22589179163136 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22588977836672 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22588776510208 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22588575183744 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22588373857280 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22588172530816 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22587971204352 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22587769877888 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22587568551424 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22587367224960 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22599721281280 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22599542613760 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 114, m: 114)                                                               	 1.06437   	 700       	 6.82051   	 0         	 0.205728  	 33.1531   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5700, cols: 114, reductionFactor: 37, colBlockingSize: 12)                 	 0.754211  	 600       	 121.047   	 0         	 4.21821   	 28.6963   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5700, r: 114, r2: 114, leftOrthog: 1)      	 0.660365  	 600       	 134.611   	 0         	 14.3585   	 9.375     
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 114, r1_: 114, n: 50, r2: 114)        	 0.519024  	 600       	 171.269   	 0         	 12.1391   	 14.1089   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5700, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.323434  	 700       	 103.791   	 0         	 6.38714   	 16.25     
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 64, Qr2: 114)      	 0.117105  	 700       	 0         	 0         	 54.496    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5700, Xcols: 64, r: 64, streamingCols: 0)                   	 0.109899  	 700       	 148.709   	 0         	 37.2816   	 3.9888    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 114, reductionFactor: 37, colBlockingSize: 12)                 	 0.103133  	 100       	 64.7091   	 0         	 2.31155   	 27.9938   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 64, m: 5700)                                                                  	 0.0665935 	 700       	 0         	 0         	 61.3538   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 114)                                                                	 0.0567347 	 100       	 3.51637   	 0         	 0.196705  	 17.8763   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 114, r2: 114, leftOrthog: 1)      	 0.0529547 	 100       	 122.709   	 0         	 13.3094   	 9.21972   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, n: 50, r2left: 50, r2right: 64)                	 0.0517776 	 700       	 0         	 0         	 78.9098   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3200, m: 50, k: 64) 	 0.050657  	 700       	 283.001   	 0         	 40.6815   	 6.95652   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 64, m: 64)                                                                  	 0.0491993 	 809       	 5.74734   	 0         	 1.62486   	 3.53712   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5700, m: 64)                                                         	 0.0480751 	 700       	 0         	 0         	 84.987    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5700, r: 50, r2: 50, leftOrthog: 1)        	 0.0403953 	 100       	 70.5527   	 0         	 17.0317   	 4.14244   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0401532 	 100       	 2.17915   	 0         	 0.150424  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.0383492 	 101       	 55.3958   	 0         	 3.45743   	 16.0223   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 114, r1_: 50, n: 50, r2: 114)         	 0.0378415 	 100       	 171.716   	 0         	 19.8829   	 8.63636   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 64, m: 50, k: 2500)   	 0.037542  	 800       	 340.952   	 0         	 49.1311   	 6.93963   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 114, r1_: 114, n: 50, r2: 50)         	 0.0358822 	 100       	 181.093   	 0         	 12.998    	 13.9323   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3200, m: 64, k: 64) 	 0.0343818 	 700       	 533.715   	 0         	 67.3816   	 7.92079   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0319694 	 100       	 91.5571   	 0         	 7.19438   	 12.7262   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 64, n: 50, r2: 64)                                                                                         	 0.0259855 	 707       	 0         	 0         	 89.1536   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 64, m: 2500, k: 50)	 0.0254488 	 800       	 502.971   	 0         	 72.4782   	 6.93963   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0189348 	 8         	 5.28129   	 0         	 0.853457  	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 114, reductionFactor: 37, colBlockingSize: 12)                   	 0.0118525 	 100       	 11.2611   	 0         	 1.26191   	 8.92386   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 64, r: 64, streamingCols: 0)                   	 0.0116829 	 101       	 88.5263   	 0         	 22.2732   	 3.97456   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00980902	 109       	 1.85203   	 0         	 0.671178  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3200, m: 50, k: 50) 	 0.00677326	 100       	 236.223   	 0         	 38.091    	 6.20155   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 64, m: 2500)                                                                  	 0.00632035	 101       	 0         	 0         	 40.9092   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 64)                                                         	 0.00593639	 101       	 0         	 0         	 43.5551   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, n: 50, r2left: 50, r2right: 0)                 	 0.00453058	 100       	 0         	 0         	 56.5049   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00434853	 101       	 5.9635    	 0         	 0.929051  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3200, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.00285747	 7         	 65.9536   	 0         	 4.0939    	 16.1102   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 64, m: 64, fromLeft: 1)                	 0.00262825	 808       	 0         	 0         	 20.1477   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00258976	 8         	 39.6572   	 0         	 3.15087   	 12.5861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, n: 50, r: 64, r2: 64)             	 0.00256984	 7         	 71.4055   	 0         	 9.01495   	 7.92079   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00221041	 8         	 22.6202   	 0         	 7.27467   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 114, leftOrthog: 1)         	 0.0021921 	 100       	 26.0025   	 0         	 8.06532   	 3.22398   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 64, n: 50, r2: 50)                                                                                         	 0.00210296	 101       	 0         	 0         	 122.951   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 64, Qr2: 50)       	 0.00143728	 100       	 0         	 0         	 317.265   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 64, m: 3200)                                                                  	 0.00104407	 7         	 0         	 0         	 21.9695   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000943746	 100       	 26.4902   	 0         	 6.35764   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 64, k: 64)   	 0.000903496	 100       	 45.335    	 0         	 9.29368   	 4.87805   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 64)   	 0.000901723	 100       	 35.4876   	 0         	 7.89599   	 4.49438   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3200, Xcols: 64, r: 64, streamingCols: 0)                   	 0.000867165	 7         	 105.805   	 0         	 26.5835   	 3.9801    
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000865625	 100       	 0.577617  	 0         	 2.31047   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 64)                                                                                          	 0.000858892	 201       	 0         	 0         	 11.9819   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3200, m: 64)                                                         	 0.000829311	 7         	 0         	 0         	 27.6586   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000788409	 100       	 31.7094   	 0         	 7.61026   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000766095	 201       	 0         	 0         	 10.4948   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000732081	 8         	 0         	 0         	 21.8555   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000641364	 100       	 38.9794   	 0         	 9.35506   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 64)                 	 0.000565393	 100       	 0         	 0         	 16.1304   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000518294	 8         	 0         	 0         	 30.8705   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000509888	 100       	 0         	 0         	 7.84486   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000501513	 100       	 0         	 0         	 7.97587   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000481804	 100       	 1.03777   	 0         	 12.4532   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000435746	 100       	 0         	 0         	 9.17966   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000407181	 101       	 0         	 0         	 9.92188   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000383721	 101       	 0.65803   	 0         	 10.5285   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 64)                                                                                 	 0.000341131	 101       	 0.947437  	 0         	 15.159    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, n: 50, r: 64, r2: 50)             	 0.000327819	 1         	 62.4735   	 0         	 8.98057   	 6.95652   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000315569	 100       	 0.79222   	 0         	 12.6755   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 64, reductionFactor: 37, colBlockingSize: 12)                    	 5.6942e-05	 1         	 7.3877    	 0         	 1.02504   	 7.20721   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.5551e-05	 1         	 3.51608   	 0         	 1.40643   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 64, r: 50, streamingCols: 10)                    	 2.9061e-05	 1         	 4.3013    	 0         	 1.72052   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.636e-05 	 9         	 0         	 0         	 22.0049   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 64, r2: 64)              	 1.546e-05 	 1         	 26.4942   	 0         	 5.43131   	 4.87805   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.3951e-05	 1         	 17.9199   	 0         	 4.30077   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.254e-05 	 2         	 0         	 0         	 6.37959   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.7e-06   	 1         	 0.515464  	 0         	 2.06186   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 64)                                                                                   	 8.66e-06  	 1         	 0.73903   	 0         	 2.95612   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3200, m: 0, k: 50)  	 4.88e-06  	 100       	 0         	 0         	 26229.5   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 64)                                                           	 4.49e-06  	 1         	 0         	 0         	 11.4031   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 64, m: 50, fromLeft: 1)                	 2.19e-06  	 1         	 0         	 0         	 23.379    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.01051   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.01047   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.98114   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.97987   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.35318   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.2728    	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.16126   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.02926   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.901868  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.755907  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.703596  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.593536  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.37221   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.124724  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.118978  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0936221 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0744887 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0590083 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0573835 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0559846 	 918       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0430313 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0430017 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0384857 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0302149 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0264742 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0260901 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0218618 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00537853	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00483711	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00376733	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0026468 	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00104042	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000883985	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000481804	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22401963833216 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22401744103424 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22401542776960 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22401341450496 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22401140124032 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22400938797568 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22400737471104 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22400536144640 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22400334818176 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22400133491712 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22399932165248 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22399730838784 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22399529512320 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22399328185856 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22399126859392 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22398925532928 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22398724206464 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22398522880000 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22398321553536 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22398120227072 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22397918900608 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22397717574144 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22397516247680 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22397314921216 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22397113594752 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22396912268288 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22396710941824 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22396509615360 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22396308288896 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22396106962432 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22395905635968 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22395704309504 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22395502978944 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22395301652480 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22395100326016 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22394898999552 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22394697673088 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22394496346624 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22394295020160 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22394093693696 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22393892367232 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22393691040768 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22393489714304 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22393288387840 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22393087061376 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22392885734912 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22392684408448 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22392483081984 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22392281755520 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22392080429056 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22391879102592 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22391677776128 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22391476449664 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22391275123200 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22391073796736 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22390872470272 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22390671143808 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22390469817344 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22390268490880 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22390067164416 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22389865837952 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22389664511488 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22389463185024 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22401858172672 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22401851582208 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 115, m: 115)                                                               	 1.11025   	 700       	 6.71226   	 0         	 0.200697  	 33.4447   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5750, cols: 115, reductionFactor: 37, colBlockingSize: 12)                 	 0.761543  	 600       	 123.064   	 0         	 4.25121   	 28.9481   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5750, r: 115, r2: 115, leftOrthog: 1)      	 0.695821  	 600       	 131.144   	 0         	 13.867    	 9.45724   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 115, r1_: 115, n: 50, r2: 115)        	 0.537625  	 600       	 169.733   	 0         	 11.9256   	 14.2327   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5750, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.327513  	 700       	 106.654   	 0         	 6.46283   	 16.5026   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5750, Xcols: 65, r: 65, streamingCols: 0)                   	 0.108404  	 700       	 156.873   	 0         	 38.7241   	 4.05105   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 65, Qr2: 115)      	 0.105097  	 700       	 0         	 0         	 61.8096   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 115, reductionFactor: 37, colBlockingSize: 12)                 	 0.102598  	 100       	 66.1925   	 0         	 2.34488   	 28.2285   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, n: 50, r2left: 50, r2right: 65)                	 0.0583705 	 700       	 0         	 0         	 71.7144   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 115)                                                                	 0.0580697 	 100       	 3.46566   	 0         	 0.193561  	 17.9048   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 115, r2: 115, leftOrthog: 1)      	 0.053474  	 100       	 123.658   	 0         	 13.2992   	 9.29819   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 65, m: 65)                                                                  	 0.0527122 	 809       	 5.61972   	 0         	 1.56422   	 3.59268   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5750, m: 65)                                                         	 0.0477587 	 700       	 0         	 0         	 87.649    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 65, m: 50, k: 2500)   	 0.0456581 	 800       	 284.725   	 0         	 40.7551   	 6.98624   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 65, m: 5750)                                                                  	 0.0449793 	 700       	 0         	 0         	 93.065    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3250, m: 50, k: 65) 	 0.0433315 	 700       	 341.265   	 0         	 48.7221   	 7.00431   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 65, m: 2500, k: 50)	 0.0422017 	 800       	 308.044   	 0         	 44.093    	 6.98624   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 115, r1_: 50, n: 50, r2: 115)         	 0.0405474 	 100       	 163.081   	 0         	 18.8323   	 8.65964   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0401989 	 100       	 2.17668   	 0         	 0.150253  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.039416  	 101       	 55.5939   	 0         	 3.41774   	 16.2663   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 115, r1_: 115, n: 50, r2: 50)         	 0.0369251 	 100       	 179.079   	 0         	 12.7442   	 14.0518   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5750, r: 50, r2: 50, leftOrthog: 1)        	 0.0334755 	 100       	 85.8838   	 0         	 20.7316   	 4.14265   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0320045 	 100       	 92.2589   	 0         	 7.24898   	 12.7272   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3250, m: 65, k: 65) 	 0.0295187 	 700       	 651.239   	 0         	 80.954    	 8.04455   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 65, n: 50, r2: 65)                                                                                         	 0.0252372 	 707       	 0         	 0         	 94.688    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 115, reductionFactor: 37, colBlockingSize: 12)                   	 0.0117802 	 100       	 11.5299   	 0         	 1.2886    	 8.94758   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 65, r: 65, streamingCols: 0)                   	 0.0115516 	 101       	 92.3521   	 0         	 22.8806   	 4.03626   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00986767	 109       	 1.84102   	 0         	 0.667189  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3250, m: 50, k: 50) 	 0.00742414	 100       	 218.881   	 0         	 35.2903   	 6.20229   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 65)                                                         	 0.0060378 	 101       	 0         	 0         	 43.4927   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 65, m: 2500)                                                                  	 0.00519842	 101       	 0         	 0         	 50.5154   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00505267	 8         	 19.7915   	 0         	 3.19831   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, n: 50, r2left: 50, r2right: 0)                 	 0.004976  	 100       	 0         	 0         	 52.2508   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0039788 	 101       	 6.51764   	 0         	 1.01538   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3250, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.00294838	 7         	 66.9633   	 0         	 4.09262   	 16.362    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00263827	 8         	 38.928    	 0         	 3.09293   	 12.5861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, n: 50, r: 65, r2: 65)             	 0.00244624	 7         	 78.585    	 0         	 9.76872   	 8.04455   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 65, m: 65, fromLeft: 1)                	 0.00227317	 808       	 0         	 0         	 24.0285   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 115, leftOrthog: 1)         	 0.00221064	 100       	 26.0106   	 0         	 8.05196   	 3.23034   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 65, n: 50, r2: 50)                                                                                         	 0.00212196	 101       	 0         	 0         	 123.754   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0020306 	 8         	 24.6233   	 0         	 7.91886   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 65, Qr2: 50)       	 0.00148073	 100       	 0         	 0         	 310.657   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3250, m: 65)                                                         	 0.00121021	 7         	 0         	 0         	 19.5503   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00102427	 100       	 24.4077   	 0         	 5.85785   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 65, m: 3250)                                                                  	 0.000981626	 7         	 0         	 0         	 24.1029   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 65)   	 0.000898516	 100       	 36.1708   	 0         	 8.01321   	 4.51389   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 65)                                                                                          	 0.000885031	 201       	 0         	 0         	 11.8098   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3250, Xcols: 65, r: 65, streamingCols: 0)                   	 0.000879603	 7         	 109.275   	 0         	 27.033    	 4.04229   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000860754	 100       	 0.580886  	 0         	 2.32354   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 65, k: 65)   	 0.000850862	 100       	 49.6555   	 0         	 10.0839   	 4.92424   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000814384	 100       	 30.698    	 0         	 7.36753   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000762954	 201       	 0         	 0         	 10.538    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00063445	 100       	 39.4042   	 0         	 9.45701   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000628947	 8         	 0         	 0         	 25.4393   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000547624	 8         	 0         	 0         	 29.2171   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 65)                 	 0.00053898	 100       	 0         	 0         	 17.0693   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000512374	 100       	 0         	 0         	 7.8068    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000475373	 100       	 0         	 0         	 8.41445   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000466263	 100       	 1.07236   	 0         	 12.8683   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000460622	 100       	 0         	 0         	 8.68391   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000453231	 101       	 0         	 0         	 8.91378   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000376832	 101       	 0.67006   	 0         	 10.721    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 65)                                                                                 	 0.000356491	 101       	 0.920781  	 0         	 14.7325   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00033549	 100       	 0.745179  	 0         	 11.9229   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, n: 50, r: 65, r2: 50)             	 0.000318189	 1         	 66.3914   	 0         	 9.47864   	 7.00431   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 65, reductionFactor: 37, colBlockingSize: 12)                    	 5.0341e-05	 1         	 8.61959   	 0         	 1.1879    	 7.25617   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2401e-05	 1         	 3.85791   	 0         	 1.54316   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 65, r: 50, streamingCols: 13)                    	 2.7961e-05	 1         	 4.47051   	 0         	 1.7882    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.675e-05 	 1         	 14.9254   	 0         	 3.58209   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5271e-05	 9         	 0         	 0         	 23.5741   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 65, r2: 65)              	 1.463e-05 	 1         	 28.879    	 0         	 5.86466   	 4.92424   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.293e-05 	 2         	 0         	 0         	 6.18716   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.82e-06  	 1         	 0.566893  	 0         	 2.26757   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 65)                                                                                   	 8.41e-06  	 1         	 0.772889  	 0         	 3.09156   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3250, m: 0, k: 50)  	 4.67e-06  	 100       	 0         	 0         	 27837.3   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 65)                                                           	 4.37e-06  	 1         	 0         	 0         	 11.8993   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 65, m: 50, fromLeft: 1)                	 2.01e-06  	 1         	 0         	 0         	 25.8706   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.12708   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.12703   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.10777   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.10647   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.45884   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.28447   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.20852   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.0192    	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.908584  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.784981  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.686464  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.615912  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.377105  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.122926  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.107038  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0820284 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0643978 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0625799 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0560932 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0517199 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0466824 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0428362 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0294825 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0284112 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0283808 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0269645 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00784847	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00489447	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00379832	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0024632 	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00229045	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106881	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000877984	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000466263	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22758366975872 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22758159280128 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22757957953664 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22757756627200 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22757555300736 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22757353974272 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22757152647808 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22756951321344 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22756749994880 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22756548668416 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22756347341952 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22756146015488 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22755944689024 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22755743362560 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22755542036096 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22755340709632 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22755139383168 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22754938056704 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22754736730240 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22754535403776 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22754334077312 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22754132750848 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22753931424384 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22753730097920 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22753528771456 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22753327444992 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22753126118528 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22752924792064 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22752723465600 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22752522139136 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22752320812672 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22752119486208 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22751918155648 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22751716829184 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22751515502720 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22751314176256 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22751112849792 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22750911523328 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22750710196864 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22750508870400 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22750307543936 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22750106217472 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22749904891008 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22749703564544 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22749502238080 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22749300911616 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22749099585152 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22748898258688 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22748696932224 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22748495605760 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22748294279296 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22748092952832 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22747891626368 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22747690299904 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22747488973440 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22747287646976 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22747086320512 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22746884994048 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22746683667584 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22746482341120 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22746281014656 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22746079688192 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22745878361728 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22758261315328 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22758254724864 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 116, m: 116)                                                               	 1.08946   	 700       	 7.02032   	 0         	 0.208093  	 33.7364   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5800, cols: 116, reductionFactor: 37, colBlockingSize: 12)                 	 0.774033  	 600       	 124.265   	 0         	 4.25567   	 29.1998   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5800, r: 116, r2: 116, leftOrthog: 1)      	 0.683083  	 600       	 137.104   	 0         	 14.3723   	 9.53947   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 116, r1_: 116, n: 50, r2: 116)        	 0.54207   	 600       	 172.77    	 0         	 12.0344   	 14.3564   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5800, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.337733  	 700       	 107.56    	 0         	 6.41948   	 16.7553   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5800, Xcols: 66, r: 66, streamingCols: 0)                   	 0.123238  	 700       	 143.505   	 0         	 34.8881   	 4.1133    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 66, Qr2: 116)      	 0.108707  	 700       	 0         	 0         	 60.8179   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 116, reductionFactor: 37, colBlockingSize: 12)                 	 0.106502  	 100       	 64.8797   	 0         	 2.27943   	 28.4631   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, n: 50, r2left: 50, r2right: 66)                	 0.0602166 	 700       	 0         	 0         	 71.199    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 116)                                                                	 0.0579381 	 100       	 3.50374   	 0         	 0.195381  	 17.9329   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 66, m: 66)                                                                  	 0.0537213 	 809       	 5.77262   	 0         	 1.5823    	 3.64824   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 116, r2: 116, leftOrthog: 1)      	 0.0524867 	 100       	 128.185   	 0         	 13.6707   	 9.37662   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3300, m: 50, k: 66) 	 0.0457682 	 700       	 333.113   	 0         	 47.2415   	 7.05128   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 66, m: 50, k: 2500)   	 0.0455599 	 800       	 289.728   	 0         	 41.2011   	 7.03205   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 66, m: 5800)                                                                  	 0.0443176 	 700       	 0         	 0         	 96.7417   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5800, m: 66)                                                         	 0.0441521 	 700       	 0         	 0         	 97.1043   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.0413672 	 101       	 54.6141   	 0         	 3.30793   	 16.5101   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0411055 	 100       	 2.12867   	 0         	 0.146939  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 66, m: 2500, k: 50)	 0.040291  	 800       	 327.617   	 0         	 46.5891   	 7.03205   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5800, r: 50, r2: 50, leftOrthog: 1)        	 0.0398907 	 100       	 72.6986   	 0         	 17.5479   	 4.14286   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 116, r1_: 50, n: 50, r2: 116)         	 0.0390531 	 100       	 172.278   	 0         	 19.8417   	 8.68263   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 116, r1_: 116, n: 50, r2: 50)         	 0.0383786 	 100       	 175.306   	 0         	 12.3706   	 14.1712   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3300, m: 66, k: 66) 	 0.0333092 	 700       	 604.178   	 0         	 73.9661   	 8.16832   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0321394 	 100       	 92.6707   	 0         	 7.28079   	 12.7281   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 66, n: 50, r2: 66)                                                                                         	 0.0270526 	 707       	 0         	 0         	 91.0728   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 66, r: 66, streamingCols: 0)                   	 0.0121513 	 101       	 90.5165   	 0         	 22.0882   	 4.09795   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 116, reductionFactor: 37, colBlockingSize: 12)                   	 0.0119426 	 100       	 11.5718   	 0         	 1.28991   	 8.97102   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00973184	 109       	 1.86672   	 0         	 0.676501  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3300, m: 50, k: 50) 	 0.00651865	 100       	 253.12    	 0         	 40.806    	 6.20301   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 66)                                                         	 0.00537716	 101       	 0         	 0         	 49.5875   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00521834	 101       	 4.96948   	 0         	 0.774193  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, n: 50, r2left: 50, r2right: 0)                 	 0.00512796	 100       	 0         	 0         	 51.4824   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 66, m: 2500)                                                                  	 0.00511939	 101       	 0         	 0         	 52.0844   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00501923	 8         	 19.9234   	 0         	 3.21962   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3300, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.00298637	 7         	 69.2099   	 0         	 4.16584   	 16.6137   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00266952	 8         	 38.4723   	 0         	 3.05673   	 12.5861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, n: 50, r: 66, r2: 66)             	 0.00258954	 7         	 77.7155   	 0         	 9.51426   	 8.16832   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 66, m: 66, fromLeft: 1)                	 0.00242568	 808       	 0         	 0         	 23.216    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00221214	 8         	 22.6026   	 0         	 7.26898   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 116, leftOrthog: 1)         	 0.00220039	 100       	 26.359    	 0         	 8.14401   	 3.23661   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 66, n: 50, r2: 50)                                                                                         	 0.00211044	 101       	 0         	 0         	 126.343   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 66, Qr2: 50)       	 0.00161201	 100       	 0         	 0         	 287.839   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 66, m: 3300)                                                                  	 0.00102343	 7         	 0         	 0         	 23.8352   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3300, m: 66)                                                         	 0.000984248	 7         	 0         	 0         	 24.784    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000969595	 100       	 25.784    	 0         	 6.18815   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000960117	 201       	 0         	 0         	 8.37398   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3300, Xcols: 66, r: 66, streamingCols: 0)                   	 0.000921117	 7         	 109.241   	 0         	 26.615    	 4.10448   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000900178	 100       	 0.555446  	 0         	 2.22178   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 66)   	 0.000899543	 100       	 36.6853   	 0         	 8.093     	 4.53297   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 66, k: 66)   	 0.000857957	 100       	 50.7718   	 0         	 10.2159   	 4.96988   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 66)                                                                                          	 0.000849069	 201       	 0         	 0         	 12.4993   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000799571	 100       	 31.2668   	 0         	 7.50402   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000630114	 100       	 39.6754   	 0         	 9.52209   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000610048	 8         	 0         	 0         	 26.2274   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000603259	 8         	 0         	 0         	 26.5226   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 66)                 	 0.000560643	 100       	 0         	 0         	 16.5524   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000517073	 100       	 0         	 0         	 7.73585   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000478847	 100       	 0         	 0         	 8.3534    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000471779	 100       	 0         	 0         	 8.47855   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00044914	 100       	 1.11324   	 0         	 13.3589   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000437387	 101       	 0         	 0         	 9.23667   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00038948	 101       	 0.6483    	 0         	 10.3728   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 66)                                                                                 	 0.00036245	 101       	 0.919575  	 0         	 14.7132   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000326703	 100       	 0.765221  	 0         	 12.2435   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, n: 50, r: 66, r2: 50)             	 0.000317658	 1         	 68.5643   	 0         	 9.72367   	 7.05128   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 66, reductionFactor: 37, colBlockingSize: 12)                    	 6.5552e-05	 1         	 6.8247    	 0         	 0.934342  	 7.30429   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6691e-05	 1         	 3.40683   	 0         	 1.36273   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 66, r: 50, streamingCols: 13)                    	 2.7371e-05	 1         	 4.56688   	 0         	 1.82675   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.561e-05 	 1         	 16.0154   	 0         	 3.84369   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.506e-05 	 9         	 0         	 0         	 23.9044   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 66, r2: 66)              	 1.2991e-05	 1         	 33.5309   	 0         	 6.74682   	 4.96988   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.0901e-05	 2         	 0         	 0         	 7.33878   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.851e-06 	 1         	 0.564908  	 0         	 2.25963   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 66)                                                                                   	 8.72e-06  	 1         	 0.756881  	 0         	 3.02752   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3300, m: 0, k: 50)  	 4.69e-06  	 100       	 0         	 0         	 28145     	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 66)                                                           	 4.6e-06   	 1         	 0         	 0         	 11.4783   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 66, m: 50, fromLeft: 1)                	 2.22e-06  	 1         	 0         	 0         	 23.7838   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.11733   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.11729   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.06069   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.05935   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.4137    	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.31466   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.18851   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.05652   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.925494  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.777661  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.710441  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.620302  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.3906    	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.138587  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.110798  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0873583 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.066377  	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0634531 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0515588 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0510814 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0465295 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0409211 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0314893 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0283726 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0283428 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0271021 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00795503	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00526203	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00431313	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00414964	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00244296	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107863	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000917749	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00044914	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22523873363840 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22523680909312 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22523479582848 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22523278256384 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22523076929920 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22522875603456 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22522674276992 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22522472950528 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22522271624064 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22522070297600 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22521868971136 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22521667644672 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22521466318208 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22521264991744 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22521063665280 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22520862338816 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22520661012352 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22520459685888 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22520258359424 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22520057032960 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22519855706496 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22519654380032 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22519453053568 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22519251727104 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22519050400640 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22518849074176 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22518647747712 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22518446421248 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22518245094784 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22518043768320 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22517842441856 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22517641115392 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22517439784832 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22517238458368 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22517037131904 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22516835805440 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22516634478976 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22516433152512 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22516231826048 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22516030499584 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22515829173120 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22515627846656 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22515426520192 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22515225193728 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22515023867264 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22514822540800 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22514621214336 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22514419887872 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22514218561408 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22514017234944 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22513815908480 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22513614582016 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22513413255552 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22513211929088 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22513010602624 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22512809276160 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22512607949696 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22512406623232 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22512205296768 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22512003970304 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22511802643840 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22511601317376 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22511399990912 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22523767703296 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22523761112832 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 117, m: 117)                                                               	 1.15182   	 700       	 6.81345   	 0         	 0.200231  	 34.0281   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5850, cols: 117, reductionFactor: 37, colBlockingSize: 12)                 	 0.785131  	 600       	 125.704   	 0         	 4.26817   	 29.4515   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5850, r: 117, r2: 117, leftOrthog: 1)      	 0.695446  	 600       	 138.18    	 0         	 14.3613   	 9.62171   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 117, r1_: 117, n: 50, r2: 117)        	 0.555485  	 600       	 172.996   	 0         	 11.9471   	 14.4802   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5850, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.34436   	 700       	 109.649   	 0         	 6.44691   	 17.0079   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5850, Xcols: 67, r: 67, streamingCols: 0)                   	 0.12724   	 700       	 144.471   	 0         	 34.5993   	 4.17554   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 67, Qr2: 117)      	 0.105668  	 700       	 0         	 0         	 63.6697   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 117, reductionFactor: 37, colBlockingSize: 12)                 	 0.105125  	 100       	 66.8676   	 0         	 2.33008   	 28.6975   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, n: 50, r2left: 50, r2right: 67)                	 0.0621122 	 700       	 0         	 0         	 70.676    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 117)                                                                	 0.0583125 	 100       	 3.51125   	 0         	 0.195498  	 17.9605   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 117, r2: 117, leftOrthog: 1)      	 0.0579212 	 100       	 118.169   	 0         	 12.4981   	 9.455     
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 67, m: 67)                                                                  	 0.0565209 	 809       	 5.73986   	 0         	 1.54973   	 3.70378   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5850, m: 67)                                                         	 0.0545883 	 700       	 0         	 0         	 80.4172   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 67, m: 50, k: 2500)   	 0.0476453 	 800       	 281.245   	 0         	 39.7404   	 7.07707   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 67, m: 5850)                                                                  	 0.045731  	 700       	 0         	 0         	 95.9927   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3350, m: 50, k: 67) 	 0.0428375 	 700       	 366.77    	 0         	 51.6762   	 7.09746   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5850, r: 50, r2: 50, leftOrthog: 1)        	 0.0425855 	 100       	 68.6853   	 0         	 16.5784   	 4.14306   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0413076 	 100       	 2.11825   	 0         	 0.14622   	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.0410211 	 101       	 56.7565   	 0         	 3.3877    	 16.7537   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 67, m: 2500, k: 50)	 0.0407492 	 800       	 328.84    	 0         	 46.4656   	 7.07707   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 117, r1_: 50, n: 50, r2: 117)         	 0.0403644 	 100       	 169.568   	 0         	 19.4785   	 8.70536   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 117, r1_: 117, n: 50, r2: 50)         	 0.0370035 	 100       	 184.969   	 0         	 12.9434   	 14.2906   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3350, m: 67, k: 67) 	 0.0326181 	 700       	 645.451   	 0         	 77.8395   	 8.29208   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0320305 	 100       	 93.7872   	 0         	 7.36797   	 12.729    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 67, n: 50, r2: 67)                                                                                         	 0.0264934 	 707       	 0         	 0         	 95.8343   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.017335  	 8         	 5.76868   	 0         	 0.932218  	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 117, reductionFactor: 37, colBlockingSize: 12)                   	 0.012226  	 100       	 11.4992   	 0         	 1.27852   	 8.99417   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 67, r: 67, streamingCols: 0)                   	 0.0120109 	 101       	 94.3702   	 0         	 22.6872   	 4.15963   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00953349	 109       	 1.90556   	 0         	 0.690576  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3350, m: 50, k: 50) 	 0.00782922	 100       	 213.942   	 0         	 34.4862   	 6.2037    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 67, m: 2500)                                                                  	 0.00565054	 101       	 0         	 0         	 47.9034   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 67)                                                         	 0.00517838	 101       	 0         	 0         	 52.2712   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, n: 50, r2left: 50, r2right: 0)                 	 0.00449534	 100       	 0         	 0         	 59.6173   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00375992	 101       	 6.89706   	 0         	 1.07449   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3350, m: 67)                                                         	 0.00324679	 7         	 0         	 0         	 7.74254   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3350, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.00296691	 7         	 72.8786   	 0         	 4.32119   	 16.8654   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00259555	 8         	 39.5688   	 0         	 3.14384   	 12.5861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, n: 50, r: 67, r2: 67)             	 0.00256854	 7         	 81.9664   	 0         	 9.88491   	 8.29208   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 67, m: 67, fromLeft: 1)                	 0.00250065	 808       	 0         	 0         	 23.2075   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00215597	 8         	 23.1914   	 0         	 7.45836   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 67, n: 50, r2: 50)                                                                                         	 0.00200089	 101       	 0         	 0         	 135.28    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 117, leftOrthog: 1)         	 0.00197001	 100       	 29.6953   	 0         	 9.15733   	 3.24279   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 67, Qr2: 50)       	 0.00152521	 100       	 0         	 0         	 306.842   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00104833	 100       	 23.8476   	 0         	 5.72342   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3350, Xcols: 67, r: 67, streamingCols: 0)                   	 0.000932524	 7         	 112.884   	 0         	 27.0922   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 67)                                                                                          	 0.000881107	 201       	 0         	 0         	 12.2273   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000871818	 100       	 0.573514  	 0         	 2.29406   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 67)   	 0.0008598 	 100       	 38.9625   	 0         	 8.56013   	 4.55163   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000786471	 201       	 0         	 0         	 10.2229   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000785076	 100       	 31.8441   	 0         	 7.64257   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000763811	 8         	 0         	 0         	 20.9476   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 67, k: 67)   	 0.000733165	 100       	 61.2277   	 0         	 12.209    	 5.01497   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000640205	 100       	 39.05     	 0         	 9.372     	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 67, m: 3350)                                                                  	 0.000636008	 7         	 0         	 0         	 39.5253   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000611276	 8         	 0         	 0         	 26.1748   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 67)                 	 0.000524552	 100       	 0         	 0         	 17.8438   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000513734	 100       	 0         	 0         	 7.78613   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000490033	 100       	 0         	 0         	 8.16272   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000461862	 100       	 1.08257   	 0         	 12.9909   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000449954	 100       	 0         	 0         	 8.8898    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000408661	 101       	 0         	 0         	 9.88594   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000406631	 101       	 0.620956  	 0         	 9.9353    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 67)                                                                                 	 0.000360098	 101       	 0.939605  	 0         	 15.0337   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, n: 50, r: 67, r2: 50)             	 0.000337479	 1         	 66.5078   	 0         	 9.37066   	 7.09746   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000336397	 100       	 0.74317   	 0         	 11.8907   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 67, reductionFactor: 37, colBlockingSize: 12)                    	 5.3812e-05	 1         	 8.56747   	 0         	 1.16539   	 7.35158   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.8401e-05	 1         	 3.25512   	 0         	 1.30205   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 67, r: 50, streamingCols: 11)                    	 2.7971e-05	 1         	 4.46891   	 0         	 1.78757   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.532e-05 	 9         	 0         	 0         	 23.4987   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 67, r2: 67)              	 1.393e-05 	 1         	 32.2254   	 0         	 6.42584   	 5.01497   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.3441e-05	 1         	 18.5998   	 0         	 4.46395   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.141e-05 	 2         	 0         	 0         	 7.01139   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 67)                                                                                   	 1.029e-05 	 1         	 0.651118  	 0         	 2.60447   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.93e-06  	 1         	 0.503525  	 0         	 2.0141    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3350, m: 0, k: 50)  	 4.95e-06  	 100       	 0         	 0         	 27070.7   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 67)                                                           	 4.89e-06  	 1         	 0         	 0         	 10.9611   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 67, m: 50, fromLeft: 1)                	 2.22e-06  	 1         	 0         	 0         	 24.1441   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.26443   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.26439   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.18899   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.18768   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.52345   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.32927   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.25144   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.07533   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.935223  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.797923  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.737521  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.633638  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.395261  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.142405  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.107643  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0848828 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0676458 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0660544 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0641908 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0526402 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0486936 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0428232 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0427906 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0413895 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0306519 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0274287 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0202684 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00756366	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00370705	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00267688	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00251819	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110313	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000892038	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000461862	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23032452982656 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23032231880704 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23032030554240 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23031829227776 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23031627901312 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23031426574848 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23031225248384 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23031023921920 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23030822595456 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23030621268992 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23030419942528 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23030218616064 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23030017289600 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23029815963136 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23029614636672 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23029413310208 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23029211983744 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23029010657280 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23028809330816 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23028608004352 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23028406677888 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23028205351424 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23028004024960 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23027802698496 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23027601372032 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23027400045568 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23027198719104 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23026997392640 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23026796066176 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23026594739712 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23026393413248 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23026192086784 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23025990756224 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23025789429760 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23025588103296 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23025386776832 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23025185450368 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23024984123904 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23024782797440 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23024581470976 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23024380144512 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23024178818048 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23023977491584 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23023776165120 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23023574838656 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23023373512192 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23023172185728 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23022970859264 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23022769532800 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23022568206336 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23022366879872 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23022165553408 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23021964226944 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23021762900480 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23021561574016 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23021360247552 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23021158921088 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23020957594624 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23020756268160 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23020554941696 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23020353615232 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23020152288768 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23019950962304 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23032347322112 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23032340731648 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 118, m: 118)                                                               	 1.1296    	 700       	 7.12716   	 0         	 0.207669  	 34.3197   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5900, cols: 118, reductionFactor: 37, colBlockingSize: 12)                 	 0.799614  	 600       	 126.619   	 0         	 4.2628    	 29.7032   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5900, r: 118, r2: 118, leftOrthog: 1)      	 0.709002  	 600       	 139.043   	 0         	 14.3285   	 9.70395   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 118, r1_: 118, n: 50, r2: 118)        	 0.559704  	 600       	 176.132   	 0         	 12.0606   	 14.604    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5900, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.353018  	 700       	 111.118   	 0         	 6.43767   	 17.2605   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5900, Xcols: 68, r: 68, streamingCols: 0)                   	 0.130681  	 700       	 146.136   	 0         	 34.484    	 4.23779   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 68, Qr2: 118)      	 0.117228  	 700       	 0         	 0         	 58.3943   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 118, reductionFactor: 37, colBlockingSize: 12)                 	 0.111505  	 100       	 64.1242   	 0         	 2.2164    	 28.9317   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 68, m: 5900)                                                                  	 0.076683  	 700       	 0         	 0         	 58.5976   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, n: 50, r2left: 50, r2right: 68)                	 0.0638245 	 700       	 0         	 0         	 70.4031   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 118)                                                                	 0.057742  	 100       	 3.57625   	 0         	 0.198815  	 17.9878   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 68, m: 68)                                                                  	 0.0563549 	 809       	 6.0184    	 0         	 1.60092   	 3.75934   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 118, r2: 118, leftOrthog: 1)      	 0.0526519 	 100       	 132.227   	 0         	 13.8699   	 9.53335   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5900, m: 68)                                                         	 0.0476516 	 700       	 0         	 0         	 94.2979   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5900, r: 50, r2: 50, leftOrthog: 1)        	 0.0454859 	 100       	 64.8552   	 0         	 15.6532   	 4.14326   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 68, m: 50, k: 2500)   	 0.0438219 	 800       	 310.347   	 0         	 43.58     	 7.12131   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3400, m: 50, k: 68) 	 0.0436862 	 700       	 370.461   	 0         	 51.8645   	 7.14286   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.0420062 	 101       	 57.0923   	 0         	 3.35893   	 16.9971   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 118, r1_: 50, n: 50, r2: 118)         	 0.0406301 	 100       	 171.351   	 0         	 19.6327   	 8.72781   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0400815 	 100       	 2.18305   	 0         	 0.150693  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 68, m: 2500, k: 50)	 0.0374944 	 800       	 362.721   	 0         	 50.9346   	 7.12131   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 118, r1_: 118, n: 50, r2: 50)         	 0.0373676 	 100       	 186.311   	 0         	 12.9294   	 14.4099   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3400, m: 68, k: 68) 	 0.033733  	 700       	 652.483   	 0         	 77.5304   	 8.41584   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0322568 	 100       	 93.9254   	 0         	 7.37829   	 12.73     
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 68, n: 50, r2: 68)                                                                                         	 0.0270611 	 707       	 0         	 0         	 96.6457   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 68, r: 68, streamingCols: 0)                   	 0.0124083 	 101       	 94.0953   	 0         	 22.2906   	 4.2213    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 118, reductionFactor: 37, colBlockingSize: 12)                   	 0.0117237 	 100       	 12.1978   	 0         	 1.35275   	 9.01705   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00952049	 109       	 1.90816   	 0         	 0.691519  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3400, m: 50, k: 50) 	 0.00802254	 100       	 211.903   	 0         	 34.1538   	 6.20438   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 68, m: 2500)                                                                  	 0.00662852	 101       	 0         	 0         	 41.4451   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 68)                                                         	 0.00608846	 101       	 0         	 0         	 45.1215   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, n: 50, r2left: 50, r2right: 0)                 	 0.00595397	 100       	 0         	 0         	 45.6838   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00504299	 8         	 19.8295   	 0         	 3.20445   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3400, m: 68)                                                         	 0.00416835	 7         	 0         	 0         	 6.21214   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00412679	 101       	 6.28392   	 0         	 0.978968  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3400, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.00313582	 7         	 72.0867   	 0         	 4.21138   	 17.1171   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, n: 50, r: 68, r2: 68)             	 0.00265353	 7         	 82.947    	 0         	 9.85605   	 8.41584   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00261212	 8         	 39.3177   	 0         	 3.1239    	 12.5861   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 68, m: 68, fromLeft: 1)                	 0.00255963	 808       	 0         	 0         	 23.3546   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 68, n: 50, r2: 50)                                                                                         	 0.00229284	 101       	 0         	 0         	 119.817   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 118, leftOrthog: 1)         	 0.00189292	 100       	 31.1687   	 0         	 9.59363   	 3.2489    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00162448	 8         	 30.779    	 0         	 9.89853   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 68, Qr2: 50)       	 0.00160033	 100       	 0         	 0         	 294.939   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.0010887 	 100       	 22.9631   	 0         	 5.51114   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3400, Xcols: 68, r: 68, streamingCols: 0)                   	 0.000955457	 7         	 115.182   	 0         	 27.2371   	 4.22886   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 68)   	 0.000874329	 100       	 38.887    	 0         	 8.50938   	 4.56989   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 68)                                                                                          	 0.000871234	 201       	 0         	 0         	 12.5505   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00083426	 100       	 0.599334  	 0         	 2.39733   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000827124	 100       	 30.2252   	 0         	 7.25405   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 68, k: 68)   	 0.000771222	 100       	 59.9568   	 0         	 11.8503   	 5.05952   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000762864	 201       	 0         	 0         	 10.5392   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000655151	 100       	 38.1591   	 0         	 9.15819   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 68, m: 3400)                                                                  	 0.000602257	 7         	 0         	 0         	 42.9956   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 68)                 	 0.000555904	 100       	 0         	 0         	 16.9813   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000537694	 8         	 0         	 0         	 29.7567   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000536784	 8         	 0         	 0         	 29.8071   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000477925	 100       	 0         	 0         	 8.36951   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000475796	 100       	 0         	 0         	 8.40696   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000466705	 100       	 0         	 0         	 8.57072   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000428312	 100       	 1.16737   	 0         	 14.0085   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000408022	 101       	 0         	 0         	 9.90143   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 68)                                                                                 	 0.000387491	 101       	 0.886214  	 0         	 14.1794   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000376696	 101       	 0.670302  	 0         	 10.7248   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, n: 50, r: 68, r2: 50)             	 0.000325549	 1         	 71.0185   	 0         	 9.94259   	 7.14286   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00032474	 100       	 0.769847  	 0         	 12.3175   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 68, reductionFactor: 37, colBlockingSize: 12)                    	 5.4582e-05	 1         	 8.70062   	 0         	 1.17607   	 7.39808   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3181e-05	 1         	 3.76722   	 0         	 1.50689   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 68, r: 50, streamingCols: 14)                    	 2.8001e-05	 1         	 4.46413   	 0         	 1.78565   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.553e-05 	 9         	 0         	 0         	 23.1809   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 68, r2: 68)              	 1.4241e-05	 1         	 32.4696   	 0         	 6.41753   	 5.05952   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.3821e-05	 1         	 18.0884   	 0         	 4.34122   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.142e-05 	 2         	 0         	 0         	 7.00525   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 68)                                                                                   	 8.83e-06  	 1         	 0.770102  	 0         	 3.08041   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.26e-06  	 1         	 0.605327  	 0         	 2.42131   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3400, m: 0, k: 50)  	 5.23e-06  	 100       	 0         	 0         	 26003.8   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 68)                                                           	 4.54e-06  	 1         	 0         	 0         	 11.9824   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 68, m: 50, fromLeft: 1)                	 2.3e-06   	 1         	 0         	 0         	 23.6522   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.34061   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.34056   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.21354   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.21229   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.53745   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.36005   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.22743   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.12694   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.955726  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.809033  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.779183  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.638529  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.40549   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.14573   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.119295  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0870925 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0844619 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0708101 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0658754 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0588586 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0449106 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0381495 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0314659 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0308117 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0307825 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0278991 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00805013	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00672942	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00383945	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00339866	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00257746	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108893	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00085135	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000428312	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22779228510080 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22779030136832 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22778828810368 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22778627483904 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22778426157440 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22778224830976 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22778023504512 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22777822178048 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22777620851584 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22777419525120 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22777218198656 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22777016872192 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22776815545728 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22776614219264 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22776412892800 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22776211566336 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22776010239872 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22775808913408 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22775607586944 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22775406260480 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22775204934016 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22775003607552 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22774802281088 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22774600954624 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22774399628160 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22774198301696 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22773996975232 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22773795648768 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22773594322304 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22773392995840 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22773191669376 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22772990342912 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22772789012352 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22772587685888 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22772386359424 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22772185032960 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22771983706496 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22771782380032 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22771581053568 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22771379727104 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22771178400640 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22770977074176 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22770775747712 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22770574421248 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22770373094784 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22770171768320 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22769970441856 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22769769115392 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22769567788928 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22769366462464 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22769165136000 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22768963809536 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22768762483072 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22768561156608 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22768359830144 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22768158503680 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22767957177216 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22767755850752 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22767554524288 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22767353197824 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22767151871360 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22766950544896 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22766749218432 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22779122849536 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22779116259072 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 119, m: 119)                                                               	 1.16911   	 700       	 7.06286   	 0         	 0.204062  	 34.6114   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5950, cols: 119, reductionFactor: 37, colBlockingSize: 12)                 	 0.814548  	 600       	 127.485   	 0         	 4.25587   	 29.955    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5950, r: 119, r2: 119, leftOrthog: 1)      	 0.718332  	 600       	 140.756   	 0         	 14.3831   	 9.78618   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 119, r1_: 119, n: 50, r2: 119)        	 0.572735  	 600       	 176.538   	 0         	 11.9868   	 14.7277   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5950, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.358559  	 700       	 113.596   	 0         	 6.48636   	 17.5131   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5950, Xcols: 69, r: 69, streamingCols: 0)                   	 0.134152  	 700       	 147.814   	 0         	 34.3751   	 4.30003   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 69, Qr2: 119)      	 0.114516  	 700       	 0         	 0         	 60.8138   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 119, reductionFactor: 37, colBlockingSize: 12)                 	 0.107582  	 100       	 67.5938   	 0         	 2.31757   	 29.1658   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, n: 50, r2left: 50, r2right: 69)                	 0.0629185 	 700       	 0         	 0         	 73.0812   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 69, m: 69)                                                                  	 0.0611338 	 809       	 5.79633   	 0         	 1.51939   	 3.8149    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 119)                                                                	 0.0589921 	 100       	 3.53013   	 0         	 0.195958  	 18.0147   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 119, r2: 119, leftOrthog: 1)      	 0.0555846 	 100       	 127.382   	 0         	 13.2529   	 9.61166   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5950, m: 69)                                                         	 0.0516478 	 700       	 0         	 0         	 89.0292   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3450, m: 50, k: 69) 	 0.0509113 	 700       	 327.304   	 0         	 45.538    	 7.1875    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 69, m: 5950)                                                                  	 0.0506533 	 700       	 0         	 0         	 90.7772   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 69, m: 50, k: 2500)   	 0.0468326 	 800       	 294.667   	 0         	 41.1269   	 7.16481   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5950, r: 50, r2: 50, leftOrthog: 1)        	 0.0435125 	 100       	 68.3712   	 0         	 16.501    	 4.14345   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.0434734 	 101       	 56.7999   	 0         	 3.29458   	 17.2404   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0415818 	 100       	 2.10429   	 0         	 0.145256  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 69, m: 2500, k: 50)	 0.04111   	 800       	 335.685   	 0         	 46.8519   	 7.16481   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 119, r1_: 50, n: 50, r2: 119)         	 0.0409426 	 100       	 172.937   	 0         	 19.7642   	 8.75      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 119, r1_: 119, n: 50, r2: 50)         	 0.0374106 	 100       	 189.264   	 0         	 13.0265   	 14.5292   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3450, m: 69, k: 69) 	 0.0353604 	 700       	 650.322   	 0         	 76.1537   	 8.5396    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0328096 	 100       	 93.1253   	 0         	 7.31493   	 12.7309   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 69, n: 50, r2: 69)                                                                                         	 0.0281921 	 707       	 0         	 0         	 95.5169   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 119, reductionFactor: 37, colBlockingSize: 12)                   	 0.0125479 	 100       	 11.5906   	 0         	 1.2822    	 9.03966   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 69, r: 69, streamingCols: 0)                   	 0.0122564 	 101       	 98.084    	 0         	 22.901    	 4.28295   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0096956 	 109       	 1.87369   	 0         	 0.67903   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3450, m: 50, k: 50) 	 0.00724066	 100       	 238.238   	 0         	 38.3943   	 6.20504   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 69)                                                         	 0.00580872	 101       	 0         	 0         	 47.9899   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 69, m: 2500)                                                                  	 0.00542442	 101       	 0         	 0         	 51.3898   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00524523	 8         	 19.0649   	 0         	 3.08089   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, n: 50, r2left: 50, r2right: 0)                 	 0.00517025	 100       	 0         	 0         	 53.3824   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00433657	 101       	 5.97994   	 0         	 0.931611  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, n: 50, r: 69, r2: 69)             	 0.00331344	 7         	 69.4011   	 0         	 8.12697   	 8.5396    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3450, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.0032956 	 7         	 71.6626   	 0         	 4.12593   	 17.3688   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00266036	 8         	 38.6048   	 0         	 3.06725   	 12.5861   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 69, m: 69, fromLeft: 1)                	 0.00261836	 808       	 0         	 0         	 23.5072   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 69, n: 50, r2: 50)                                                                                         	 0.0021206 	 101       	 0         	 0         	 131.453   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 119, leftOrthog: 1)         	 0.00205473	 100       	 28.9576   	 0         	 8.89655   	 3.25492   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0016243 	 8         	 30.7824   	 0         	 9.89962   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 69, Qr2: 50)       	 0.00160526	 100       	 0         	 0         	 296.525   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3450, Xcols: 69, r: 69, streamingCols: 0)                   	 0.00127979	 7         	 89.8411   	 0         	 20.9369   	 4.29104   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3450, m: 69)                                                         	 0.00111741	 7         	 0         	 0         	 23.8602   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 69, m: 3450)                                                                  	 0.00107365	 7         	 0         	 0         	 24.8327   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 69)                                                                                          	 0.00106854	 201       	 0         	 0         	 10.3835   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00101291	 100       	 24.6814   	 0         	 5.92354   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 69)   	 0.000905313	 100       	 38.1084   	 0         	 8.30652   	 4.58777   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000836871	 100       	 0.597464  	 0         	 2.38985   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00079344	 100       	 31.5084   	 0         	 7.56201   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000782322	 8         	 0         	 0         	 20.4519   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 69, k: 69)   	 0.000776047	 100       	 61.3494   	 0         	 12.0209   	 5.10355   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000772294	 201       	 0         	 0         	 10.4105   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000631827	 100       	 39.5678   	 0         	 9.49627   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 69)                 	 0.000545594	 100       	 0         	 0         	 17.4489   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00050895	 100       	 0         	 0         	 7.85932   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000498843	 8         	 0         	 0         	 32.0742   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000484547	 100       	 0         	 0         	 8.25513   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000446985	 100       	 1.11861   	 0         	 13.4233   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000445285	 100       	 0         	 0         	 8.98301   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000400341	 101       	 0         	 0         	 10.0914   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000375907	 101       	 0.671709  	 0         	 10.7473   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 69)                                                                                 	 0.000362179	 101       	 0.962093  	 0         	 15.3935   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, n: 50, r: 69, r2: 50)             	 0.000340119	 1         	 69.9902   	 0         	 9.73777   	 7.1875    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000333117	 100       	 0.750487  	 0         	 12.0078   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 69, reductionFactor: 37, colBlockingSize: 12)                    	 6.1232e-05	 1         	 7.98549   	 0         	 1.07277   	 7.44379   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3411e-05	 1         	 3.74128   	 0         	 1.49651   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 69, r: 50, streamingCols: 12)                    	 2.6421e-05	 1         	 4.73109   	 0         	 1.89243   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 69, r2: 69)              	 1.562e-05 	 1         	 30.4802   	 0         	 5.97234   	 5.10355   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5151e-05	 9         	 0         	 0         	 23.7608   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.4781e-05	 1         	 16.9136   	 0         	 4.05927   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.278e-05 	 2         	 0         	 0         	 6.25978   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 69)                                                                                   	 1.036e-05 	 1         	 0.666023  	 0         	 2.66409   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.95e-06  	 1         	 0.558659  	 0         	 2.23464   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3450, m: 0, k: 50)  	 5.07e-06  	 100       	 0         	 0         	 27218.9   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 69)                                                           	 4.57e-06  	 1         	 0         	 0         	 12.0788   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 69, m: 50, fromLeft: 1)                	 2.31e-06  	 1         	 0         	 0         	 23.8961   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.42956   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.42951   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.30179   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.30051   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.61302   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.37987   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.26969   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.12766   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.968093  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.819483  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.769096  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.651881  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.412897  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.149373  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.116567  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0951988 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0708294 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0691189 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0597611 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.057663  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0478455 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0417418 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0326625 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.031095  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0310632 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0282735 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00892919	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00521153	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00401831	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00277331	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00263582	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010712 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000856181	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000446985	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22552817461120 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22552604829696 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22552403503232 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22552202176768 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22552000850304 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22551799523840 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22551598197376 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22551396870912 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22551195544448 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22550994217984 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22550792891520 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22550591565056 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22550390238592 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22550188912128 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22549987585664 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22549786259200 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22549584932736 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22549383606272 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22549182279808 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22548980953344 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22548779626880 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22548578300416 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22548376973952 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22548175647488 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22547974321024 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22547772994560 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22547571668096 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22547370341632 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22547169015168 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22546967688704 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22546766362240 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22546565035776 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22546363705216 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22546162378752 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22545961052288 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22545759725824 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22545558399360 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22545357072896 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22545155746432 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22544954419968 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22544753093504 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22544551767040 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22544350440576 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22544149114112 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22543947787648 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22543746461184 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22543545134720 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22543343808256 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22543142481792 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22542941155328 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22542739828864 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22542538502400 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22542337175936 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22542135849472 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22541934523008 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22541733196544 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22541531870080 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22541330543616 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22541129217152 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22540927890688 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22540726564224 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22540525237760 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22540323911296 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22552711800576 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22552705210112 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 120, m: 120)                                                               	 1.13619   	 700       	 7.45227   	 0         	 0.213513  	 34.903    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6000, cols: 120, reductionFactor: 37, colBlockingSize: 12)                 	 0.835216  	 600       	 127.491   	 0         	 4.22061   	 30.2067   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6000, r: 120, r2: 120, leftOrthog: 1)      	 0.712562  	 600       	 145.503   	 0         	 14.7443   	 9.86842   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 120, r1_: 120, n: 50, r2: 120)        	 0.577845  	 600       	 179.425   	 0         	 12.0813   	 14.8515   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6000, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.370404  	 700       	 114.125   	 0         	 6.42391   	 17.7657   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6000, Xcols: 70, r: 70, streamingCols: 0)                   	 0.135808  	 700       	 151.538   	 0         	 34.7382   	 4.36228   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 70, Qr2: 120)      	 0.109523  	 700       	 0         	 0         	 64.6802   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 120, reductionFactor: 37, colBlockingSize: 12)                 	 0.109379  	 100       	 67.6053   	 0         	 2.29953   	 29.3996   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 50, r2left: 50, r2right: 70)                	 0.0635313 	 700       	 0         	 0         	 74.0423   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 70, m: 70)                                                                  	 0.0611422 	 809       	 6.05117   	 0         	 1.56343   	 3.87045   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 120)                                                                	 0.0572057 	 100       	 3.67096   	 0         	 0.203476  	 18.0412   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 120, r2: 120, leftOrthog: 1)      	 0.0543181 	 100       	 132.552   	 0         	 13.6794   	 9.68992   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3500, m: 50, k: 70) 	 0.0536493 	 700       	 319.668   	 0         	 44.2056   	 7.2314    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6000, m: 70)                                                         	 0.052659  	 700       	 0         	 0         	 89.3294   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 70, m: 6000)                                                                  	 0.0463929 	 700       	 0         	 0         	 101.395   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.0461885 	 101       	 55.0219   	 0         	 3.14709   	 17.4834   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 70, m: 50, k: 2500)   	 0.0461024 	 800       	 303.672   	 0         	 42.1323   	 7.20758   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0422463 	 100       	 2.07119   	 0         	 0.142971  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 70, m: 2500, k: 50)	 0.0406365 	 800       	 344.518   	 0         	 47.7994   	 7.20758   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6000, r: 50, r2: 50, leftOrthog: 1)        	 0.0403189 	 100       	 74.4069   	 0         	 17.9569   	 4.14365   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 120, r1_: 50, n: 50, r2: 120)         	 0.039363  	 100       	 182.913   	 0         	 20.8521   	 8.77193   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 120, r1_: 120, n: 50, r2: 50)         	 0.0366981 	 100       	 196.196   	 0         	 13.3936   	 14.6484   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3500, m: 70, k: 70) 	 0.0322921 	 700       	 743.527   	 0         	 85.8242   	 8.66337   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0321071 	 100       	 95.9627   	 0         	 7.53728   	 12.7317   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 70, n: 50, r2: 70)                                                                                         	 0.0292154 	 707       	 0         	 0         	 94.8624   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 120, reductionFactor: 37, colBlockingSize: 12)                   	 0.0130387 	 100       	 11.3425   	 0         	 1.25165   	 9.062     
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 70, r: 70, streamingCols: 0)                   	 0.0126002 	 101       	 98.1926   	 0         	 22.6011   	 4.34459   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0103754 	 109       	 1.75092   	 0         	 0.634537  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3500, m: 50, k: 50) 	 0.00731297	 100       	 239.301   	 0         	 38.5616   	 6.20567   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00537196	 8         	 18.6152   	 0         	 3.00821   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 70, m: 2500)                                                                  	 0.0052525 	 101       	 0         	 0         	 53.8411   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 70)                                                         	 0.00426758	 101       	 0         	 0         	 66.2671   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00378581	 101       	 6.84991   	 0         	 1.06714   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3500, m: 70)                                                         	 0.00365036	 7         	 0         	 0         	 7.51707   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 50, r2left: 50, r2right: 0)                 	 0.00342899	 100       	 0         	 0         	 81.6567   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3500, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.00327133	 7         	 75.3789   	 0         	 4.27789   	 17.6206   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 50, r: 70, r2: 70)             	 0.00283492	 7         	 84.6938   	 0         	 9.77609   	 8.66337   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 70, m: 70, fromLeft: 1)                	 0.0027863 	 808       	 0         	 0         	 22.7352   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268844	 8         	 38.2016   	 0         	 3.03521   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 70, n: 50, r2: 50)                                                                                         	 0.00222728	 101       	 0         	 0         	 126.971   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 120, leftOrthog: 1)         	 0.00220498	 100       	 27.2111   	 0         	 8.34473   	 3.26087   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00217582	 8         	 22.9799   	 0         	 7.39033   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 70, Qr2: 50)       	 0.00163064	 100       	 0         	 0         	 294.363   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00105097	 100       	 23.7875   	 0         	 5.709     	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3500, Xcols: 70, r: 70, streamingCols: 0)                   	 0.00100188	 7         	 119.825   	 0         	 27.5256   	 4.35323   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 70)   	 0.000970485	 100       	 36.0644   	 0         	 7.83114   	 4.60526   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000862642	 100       	 0.579615  	 0         	 2.31846   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 70)                                                                                          	 0.000848238	 201       	 0         	 0         	 13.2699   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 70, k: 70)   	 0.000785556	 100       	 62.3762   	 0         	 12.1188   	 5.14706   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000769004	 100       	 32.5096   	 0         	 7.8023    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000755465	 201       	 0         	 0         	 10.6425   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000739301	 8         	 0         	 0         	 21.6421   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000665459	 100       	 37.5681   	 0         	 9.01633   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 70, m: 3500)                                                                  	 0.000652028	 7         	 0         	 0         	 42.0841   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000596428	 8         	 0         	 0         	 26.8264   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 70)                 	 0.0005709 	 100       	 0         	 0         	 16.8156   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000504972	 100       	 0         	 0         	 7.92123   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000483901	 100       	 0         	 0         	 8.26615   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000470463	 100       	 1.06278   	 0         	 12.7534   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000447543	 100       	 0         	 0         	 8.93769   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000389968	 101       	 0         	 0         	 10.3598   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000388317	 101       	 0.650242  	 0         	 10.4039   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 50, r: 70, r2: 50)             	 0.00035988	 1         	 68.0782   	 0         	 9.41425   	 7.2314    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 70)                                                                                 	 0.000356917	 101       	 0.990426  	 0         	 15.8468   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00031754	 100       	 0.787302  	 0         	 12.5968   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 70, reductionFactor: 37, colBlockingSize: 12)                    	 6.1182e-05	 1         	 8.22535   	 0         	 1.09836   	 7.48874   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.8991e-05	 1         	 3.20587   	 0         	 1.28235   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 70, r: 50, streamingCols: 15)                    	 2.8681e-05	 1         	 4.35829   	 0         	 1.74331   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.563e-05 	 1         	 15.9949   	 0         	 3.83877   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 70, r2: 70)              	 1.521e-05 	 1         	 32.2156   	 0         	 6.25904   	 5.14706   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.516e-05 	 9         	 0         	 0         	 23.7467   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.296e-05 	 2         	 0         	 0         	 6.17284   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.891e-06 	 1         	 0.50551   	 0         	 2.02204   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 70)                                                                                   	 9.051e-06 	 1         	 0.773395  	 0         	 3.09358   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3500, m: 0, k: 50)  	 4.97e-06  	 100       	 0         	 0         	 28169     	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 70)                                                           	 4.45e-06  	 1         	 0         	 0         	 12.5843   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 70, m: 50, fromLeft: 1)                	 2.31e-06  	 1         	 0         	 0         	 24.2424   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.4036    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.40357   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.27115   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.26988   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.59077   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.41614   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.23564   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.13235   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.990325  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.809404  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.78254   	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.654675  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.426926  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.151653  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.111602  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0950154 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0715176 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0680361 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0617107 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0529068 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0471533 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0413019 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0335303 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0329907 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0329598 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.029136  	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0085976 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00628777	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00399298	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00280377	 818       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00259854	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106277	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000881584	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000470463	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23200208553856 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23200004040704 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23199802714240 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23199601387776 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23199400061312 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23199198734848 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23198997408384 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23198796081920 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23198594755456 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23198393428992 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23198192102528 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23197990776064 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23197789449600 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23197588123136 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23197386796672 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23197185470208 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23196984143744 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23196782817280 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23196581490816 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23196380164352 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23196178837888 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23195977511424 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23195776184960 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23195574858496 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23195373532032 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23195172205568 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23194970879104 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23194769552640 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23194568226176 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23194366899712 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23194165573248 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23193964246784 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23193762916224 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23193561589760 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23193360263296 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23193158936832 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23192957610368 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23192756283904 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23192554957440 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23192353630976 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23192152304512 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23191950978048 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23191749651584 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23191548325120 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23191346998656 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23191145672192 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23190944345728 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23190743019264 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23190541692800 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23190340366336 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23190139039872 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23189937713408 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23189736386944 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23189535060480 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23189333734016 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23189132407552 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23188931081088 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23188729754624 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23188528428160 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23188327101696 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23188125775232 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23187924448768 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23187723122304 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23200102893312 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23200096302848 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 121, m: 121)                                                               	 1.20548   	 700       	 7.20101   	 0         	 0.204605  	 35.1947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6050, cols: 121, reductionFactor: 37, colBlockingSize: 12)                 	 0.844106  	 600       	 129.328   	 0         	 4.24605   	 30.4584   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6050, r: 121, r2: 121, leftOrthog: 1)      	 0.745493  	 600       	 142.582   	 0         	 14.3289   	 9.95066   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 121, r1_: 121, n: 50, r2: 121)        	 0.597077  	 600       	 178.023   	 0         	 11.8878   	 14.9752   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6050, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.373137  	 700       	 117.52    	 0         	 6.52229   	 18.0183   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6050, Xcols: 71, r: 71, streamingCols: 0)                   	 0.139079  	 700       	 153.5     	 0         	 34.6931   	 4.42452   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 71, Qr2: 121)      	 0.117066  	 700       	 0         	 0         	 61.546    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 121, reductionFactor: 37, colBlockingSize: 12)                 	 0.112512  	 100       	 66.8226   	 0         	 2.25498   	 29.6333   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 71, m: 71)                                                                  	 0.0648126 	 809       	 5.95665   	 0         	 1.51723   	 3.92601   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, n: 50, r2left: 50, r2right: 71)                	 0.0647553 	 700       	 0         	 0         	 74.2945   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 121)                                                                	 0.0577405 	 100       	 3.66727   	 0         	 0.202977  	 18.0674   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 121, r2: 121, leftOrthog: 1)      	 0.0558716 	 100       	 131.024   	 0         	 13.4133   	 9.76815   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6050, m: 71)                                                         	 0.0539007 	 700       	 0         	 0         	 89.2559   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 71, m: 6050)                                                                  	 0.0524349 	 700       	 0         	 0         	 91.7511   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3550, m: 50, k: 71) 	 0.0482907 	 700       	 365.36    	 0         	 50.2242   	 7.27459   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 71, m: 50, k: 2500)   	 0.0481875 	 800       	 294.683   	 0         	 40.6479   	 7.24963   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.0444026 	 101       	 58.8818   	 0         	 3.32172   	 17.7263   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6050, r: 50, r2: 50, leftOrthog: 1)        	 0.0439679 	 100       	 68.8001   	 0         	 16.603    	 4.14384   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 71, m: 2500, k: 50)	 0.0414767 	 800       	 342.361   	 0         	 47.2246   	 7.24963   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0403311 	 100       	 2.16954   	 0         	 0.149761  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 121, r1_: 50, n: 50, r2: 121)         	 0.0400398 	 100       	 182.831   	 0         	 20.7913   	 8.7936    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3550, m: 71, k: 71) 	 0.0398836 	 700       	 628.172   	 0         	 71.4877   	 8.78713   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 121, r1_: 121, n: 50, r2: 50)         	 0.039046  	 100       	 187.484   	 0         	 12.6956   	 14.7676   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0326752 	 100       	 95.0799   	 0         	 7.46743   	 12.7326   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 71, n: 50, r2: 71)                                                                                         	 0.0300153 	 707       	 0         	 0         	 94.9912   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 71, r: 71, streamingCols: 0)                   	 0.0125981 	 101       	 101.035   	 0         	 22.9302   	 4.40622   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 121, reductionFactor: 37, colBlockingSize: 12)                   	 0.0121181 	 100       	 12.4084   	 0         	 1.36595   	 9.08408   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0101082 	 109       	 1.79721   	 0         	 0.65131   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3550, m: 50, k: 50) 	 0.00786281	 100       	 225.746   	 0         	 36.3738   	 6.20629   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 71)                                                         	 0.00610012	 101       	 0         	 0         	 47.0221   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 71, m: 2500)                                                                  	 0.00532972	 101       	 0         	 0         	 53.819    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, n: 50, r2left: 50, r2right: 0)                 	 0.00530485	 100       	 0         	 0         	 53.5359   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00510602	 8         	 19.5847   	 0         	 3.16489   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00437455	 101       	 5.92803   	 0         	 0.923525  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3550, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.00334284	 7         	 76.9732   	 0         	 4.30685   	 17.8723   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, n: 50, r: 71, r2: 71)             	 0.00294168	 7         	 85.1682   	 0         	 9.69239   	 8.78713   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 71, m: 71, fromLeft: 1)                	 0.00284466	 808       	 0         	 0         	 22.9096   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00256958	 8         	 39.9687   	 0         	 3.17562   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 71, n: 50, r2: 50)                                                                                         	 0.00220439	 101       	 0         	 0         	 130.122   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 121, leftOrthog: 1)         	 0.00201198	 100       	 30.0699   	 0         	 9.20485   	 3.26674   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00191085	 8         	 26.1664   	 0         	 8.4151    	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 71, Qr2: 50)       	 0.00160724	 100       	 0         	 0         	 301.136   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 71, m: 3550)                                                                  	 0.00119997	 7         	 0         	 0         	 23.5252   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00106731	 100       	 23.4234   	 0         	 5.62161   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3550, Xcols: 71, r: 71, streamingCols: 0)                   	 0.00103405	 7         	 121.144   	 0         	 27.4366   	 4.41542   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000921506	 100       	 0.54259   	 0         	 2.17036   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 71)   	 0.000905944	 100       	 39.1856   	 0         	 8.47735   	 4.6224    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 71)                                                                                          	 0.000880625	 201       	 0         	 0         	 12.9644   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 71, k: 71)   	 0.000800341	 100       	 62.9857   	 0         	 12.1358   	 5.19006   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000792521	 100       	 31.5449   	 0         	 7.57078   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000779721	 201       	 0         	 0         	 10.3114   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000758881	 8         	 0         	 0         	 21.0837   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000656106	 100       	 38.1036   	 0         	 9.14486   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000643437	 8         	 0         	 0         	 24.8665   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 71)                 	 0.000541127	 100       	 0         	 0         	 17.8886   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000514244	 100       	 0         	 0         	 7.77841   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000493763	 100       	 0         	 0         	 8.10105   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000468612	 100       	 1.06698   	 0         	 12.8038   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000451716	 100       	 0         	 0         	 8.85512   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000424092	 101       	 0         	 0         	 9.52623   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00039896	 101       	 0.632896  	 0         	 10.1263   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 71)                                                                                 	 0.000381624	 101       	 0.939537  	 0         	 15.0326   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, n: 50, r: 71, r2: 50)             	 0.000350109	 1         	 71.9919   	 0         	 9.89635   	 7.27459   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000339529	 100       	 0.736314  	 0         	 11.781    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3550, m: 71)                                                         	 0.000221276	 7         	 0         	 0         	 127.576   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 71, reductionFactor: 37, colBlockingSize: 12)                    	 6.3332e-05	 1         	 8.17477   	 0         	 1.0852    	 7.53295   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6001e-05	 1         	 3.47213   	 0         	 1.38885   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 71, r: 50, streamingCols: 14)                    	 2.645e-05 	 1         	 4.7259    	 0         	 1.89036   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.6111e-05	 1         	 15.5173   	 0         	 3.72416   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 71, r2: 71)              	 1.6051e-05	 1         	 31.4061   	 0         	 6.05121   	 5.19006   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5131e-05	 9         	 0         	 0         	 23.7922   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.128e-05 	 1         	 0.443262  	 0         	 1.77305   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.102e-05 	 2         	 0         	 0         	 7.25953   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 71)                                                                                   	 8.89e-06  	 1         	 0.79865   	 0         	 3.1946    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3550, m: 0, k: 50)  	 4.76e-06  	 100       	 0         	 0         	 29831.9   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 71)                                                           	 4.53e-06  	 1         	 0         	 0         	 12.5386   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 71, m: 50, fromLeft: 1)                	 2.34e-06  	 1         	 0         	 0         	 24.2735   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.60351   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.60347   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.43419   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.43283   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.72433   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.4293    	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.30355   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.1692    	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.00215   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.847345  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.797839  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.676955  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.428403  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.154684  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.119125  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0977482 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0749209 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0711155 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0614096 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0596191 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0492548 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0421328 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0343738 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.030202  	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0290237 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0289911 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00842997	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00558245	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0048656 	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00362083	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00286214	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112011	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000941676	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000468612	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23419839158144 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23419651352576 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23419450026112 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23419248699648 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23419047373184 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23418846046720 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23418644720256 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23418443393792 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23418242067328 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23418040740864 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23417839414400 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23417638087936 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23417436761472 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23417235435008 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23417034108544 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23416832782080 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23416631455616 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23416430129152 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23416228802688 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23416027476224 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23415826149760 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23415624823296 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23415423496832 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23415222170368 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23415020843904 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23414819517440 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23414618190976 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23414416864512 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23414215538048 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23414014211584 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23413812885120 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23413611558656 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23413410228096 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23413208901632 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23413007575168 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23412806248704 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23412604922240 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23412403595776 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23412202269312 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23412000942848 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23411799616384 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23411598289920 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23411396963456 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23411195636992 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23410994310528 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23410792984064 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23410591657600 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23410390331136 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23410189004672 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23409987678208 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23409786351744 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23409585025280 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23409383698816 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23409182372352 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23408981045888 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23408779719424 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23408578392960 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23408377066496 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23408175740032 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23407974413568 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23407773087104 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23407571760640 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23407370434176 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23419733497600 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23419726907136 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 122, m: 122)                                                               	 1.17842   	 700       	 7.5505    	 0         	 0.212772  	 35.4864   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6100, cols: 122, reductionFactor: 37, colBlockingSize: 12)                 	 0.858515  	 600       	 130.336   	 0         	 4.24407   	 30.7101   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6100, r: 122, r2: 122, leftOrthog: 1)      	 0.762933  	 600       	 142.805   	 0         	 14.2337   	 10.0329   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 122, r1_: 122, n: 50, r2: 122)        	 0.60343   	 600       	 180.553   	 0         	 11.9579   	 15.099    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6100, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.39416   	 700       	 115.354   	 0         	 6.31356   	 18.2708   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6100, Xcols: 72, r: 72, streamingCols: 0)                   	 0.144851  	 700       	 152.817   	 0         	 34.0595   	 4.48676   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 72, Qr2: 122)      	 0.123193  	 700       	 0         	 0         	 59.4762   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 122, reductionFactor: 37, colBlockingSize: 12)                 	 0.113192  	 100       	 67.5235   	 0         	 2.26082   	 29.8668   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 72, m: 6100)                                                                  	 0.0673947 	 700       	 0         	 0         	 72.9885   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, n: 50, r2left: 50, r2right: 72)                	 0.0662003 	 700       	 0         	 0         	 74.3054   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 72, m: 72)                                                                  	 0.0627629 	 809       	 6.41478   	 0         	 1.61112   	 3.98157   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 122)                                                                	 0.0591294 	 100       	 3.61072   	 0         	 0.199562  	 18.0932   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 122, r2: 122, leftOrthog: 1)      	 0.057343  	 100       	 129.78    	 0         	 13.1806   	 9.84633   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6100, m: 72)                                                         	 0.0550279 	 700       	 0         	 0         	 89.3918   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.0488083 	 101       	 55.0864   	 0         	 3.06564   	 17.969    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3600, m: 50, k: 72) 	 0.0483336 	 700       	 375.391   	 0         	 51.3034   	 7.31707   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6100, r: 50, r2: 50, leftOrthog: 1)        	 0.0457412 	 100       	 66.6795   	 0         	 16.0905   	 4.14402   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 72, m: 50, k: 2500)   	 0.0416924 	 800       	 345.387   	 0         	 47.3717   	 7.29099   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0416179 	 100       	 2.10246   	 0         	 0.14513   	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 122, r1_: 50, n: 50, r2: 122)         	 0.0408782 	 100       	 182.053   	 0         	 20.6526   	 8.81503   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 122, r1_: 122, n: 50, r2: 50)         	 0.0372708 	 100       	 199.674   	 0         	 13.4129   	 14.8868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 72, m: 2500, k: 50)	 0.0366231 	 800       	 393.195   	 0         	 53.9288   	 7.29099   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3600, m: 72, k: 72) 	 0.0364798 	 700       	 716.214   	 0         	 80.3751   	 8.91089   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0318996 	 100       	 98.1965   	 0         	 7.71168   	 12.7335   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 72, n: 50, r2: 72)                                                                                         	 0.0311456 	 707       	 0         	 0         	 94.1406   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 122, reductionFactor: 37, colBlockingSize: 12)                   	 0.0132492 	 100       	 11.5375   	 0         	 1.26703   	 9.10591   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 72, r: 72, streamingCols: 0)                   	 0.0128484 	 101       	 101.878   	 0         	 22.8025   	 4.46783   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00939539	 109       	 1.93356   	 0         	 0.700727  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3600, m: 50, k: 50) 	 0.00683229	 100       	 263.455   	 0         	 42.4455   	 6.2069    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 72, m: 2500)                                                                  	 0.0060333 	 101       	 0         	 0         	 48.2124   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00531569	 8         	 18.8123   	 0         	 3.04006   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 72)                                                         	 0.00510443	 101       	 0         	 0         	 56.9858   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00437387	 101       	 5.92894   	 0         	 0.923667  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3600, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.00347108	 7         	 77.3058   	 0         	 4.26538   	 18.124    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, n: 50, r: 72, r2: 72)             	 0.00294597	 7         	 88.6885   	 0         	 9.95283   	 8.91089   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 72, m: 72, fromLeft: 1)                	 0.00291236	 808       	 0         	 0         	 23.0119   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, n: 50, r2left: 50, r2right: 0)                 	 0.00287839	 100       	 0         	 0         	 100.056   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00267295	 8         	 38.423    	 0         	 3.0528    	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 72, n: 50, r2: 50)                                                                                         	 0.0022444 	 101       	 0         	 0         	 129.603   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 122, leftOrthog: 1)         	 0.00208696	 100       	 29.2291   	 0         	 8.93166   	 3.27253   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00195996	 8         	 25.5107   	 0         	 8.20424   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3600, m: 72)                                                         	 0.00187855	 7         	 0         	 0         	 15.4536   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 72, Qr2: 50)       	 0.00165695	 100       	 0         	 0         	 294.517   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 72, m: 3600)                                                                  	 0.0012371 	 7         	 0         	 0         	 23.4665   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00107458	 100       	 23.2649   	 0         	 5.58357   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3600, Xcols: 72, r: 72, streamingCols: 0)                   	 0.00105316	 7         	 124.043   	 0         	 27.7029   	 4.47761   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 72)   	 0.000914764	 100       	 39.3544   	 0         	 8.48306   	 4.63918   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000892069	 100       	 0.560495  	 0         	 2.24198   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 72)                                                                                          	 0.00086517	 201       	 0         	 0         	 13.3819   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000796786	 100       	 31.3761   	 0         	 7.53025   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 72, k: 72)   	 0.000765381	 100       	 67.731    	 0         	 12.9441   	 5.23256   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000763904	 201       	 0         	 0         	 10.5249   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000739549	 8         	 0         	 0         	 21.6348   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000648997	 100       	 38.521    	 0         	 9.24504   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 72)                                                                                 	 0.000562782	 101       	 0.646076  	 0         	 10.3372   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 72)                 	 0.000548986	 100       	 0         	 0         	 17.7782   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000516822	 100       	 0         	 0         	 7.73961   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000486554	 8         	 0         	 0         	 32.8843   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000473824	 100       	 0         	 0         	 8.44195   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000464122	 100       	 1.0773    	 0         	 12.9276   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000438029	 100       	 0         	 0         	 9.13182   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000394282	 101       	 0.640405  	 0         	 10.2465   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000375009	 101       	 0         	 0         	 10.7731   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, n: 50, r: 72, r2: 50)             	 0.00035385	 1         	 73.2514   	 0         	 10.011    	 7.31707   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000332585	 100       	 0.751688  	 0         	 12.027    	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 72, reductionFactor: 37, colBlockingSize: 12)                    	 6.0361e-05	 1         	 8.82044   	 0         	 1.1642    	 7.57643   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.2741e-05	 1         	 2.92459   	 0         	 1.16984   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 72, r: 50, streamingCols: 15)                    	 2.8531e-05	 1         	 4.3812    	 0         	 1.75248   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.505e-05 	 9         	 0         	 0         	 23.9203   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 72, r2: 72)              	 1.4861e-05	 1         	 34.8833   	 0         	 6.66658   	 5.23256   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.363e-05 	 1         	 18.3419   	 0         	 4.40205   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.312e-05 	 2         	 0         	 0         	 6.09756   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.91e-06  	 1         	 0.504541  	 0         	 2.01816   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 72)                                                                                   	 8.3e-06   	 1         	 0.86747   	 0         	 3.46988   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 72)                                                           	 5.58e-06  	 1         	 0         	 0         	 10.3226   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3600, m: 0, k: 50)  	 4.72e-06  	 100       	 0         	 0         	 30508.5   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 72, m: 50, fromLeft: 1)                	 2.39e-06  	 1         	 0         	 0         	 24.1004   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.68961   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.68956   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.48967   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.48833   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.77002   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.4704    	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.27917   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.19982   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.01747   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.868105  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.844354  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.682376  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.454105  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.160784  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.125288  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0933306 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0751648 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0721583 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0701015 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.063131  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0427669 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0372721 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0355359 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0318997 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0318693 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0307475 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00864399	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0082588 	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00399842	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00295066	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0029298 	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00128965	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000910279	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000464122	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22616702011264 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22616492468224 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22616291141760 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22616089815296 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22615888488832 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22615687162368 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22615485835904 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22615284509440 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22615083182976 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22614881856512 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22614680530048 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22614479203584 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22614277877120 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22614076550656 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22613875224192 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22613673897728 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22613472571264 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22613271244800 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22613069918336 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22612868591872 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22612667265408 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22612465938944 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22612264612480 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22612063286016 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22611861959552 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22611660633088 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22611459306624 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22611257980160 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22611056653696 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22610855327232 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22610654000768 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22610452674304 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22610251343744 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22610050017280 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22609848690816 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22609647364352 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22609446037888 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22609244711424 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22609043384960 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22608842058496 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22608640732032 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22608439405568 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22608238079104 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22608036752640 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22607835426176 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22607634099712 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22607432773248 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22607231446784 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22607030120320 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22606828793856 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22606627467392 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22606426140928 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22606224814464 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22606023488000 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22605822161536 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22605620835072 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22605419508608 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22605218182144 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22605016855680 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22604815529216 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22604614202752 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22604412876288 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22604211549824 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22616596350720 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22616589760256 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 123, m: 123)                                                               	 1.24543   	 700       	 7.32138   	 0         	 0.204633  	 35.778    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6150, cols: 123, reductionFactor: 37, colBlockingSize: 12)                 	 0.865454  	 600       	 132.497   	 0         	 4.27935   	 30.9618   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6150, r: 123, r2: 123, leftOrthog: 1)      	 0.776563  	 600       	 143.777   	 0         	 14.2141   	 10.1151   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 123, r1_: 123, n: 50, r2: 123)        	 0.614422  	 600       	 181.719   	 0         	 11.9373   	 15.2228   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6150, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.401675  	 700       	 117.316   	 0         	 6.33339   	 18.5234   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6150, Xcols: 73, r: 73, streamingCols: 0)                   	 0.149351  	 700       	 153.607   	 0         	 33.7672   	 4.549     
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 73, Qr2: 123)      	 0.120357  	 700       	 0         	 0         	 61.9009   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 123, reductionFactor: 37, colBlockingSize: 12)                 	 0.114241  	 100       	 68.0049   	 0         	 2.25929   	 30.1002   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 73, m: 73)                                                                  	 0.0692001 	 809       	 6.06384   	 0         	 1.50203   	 4.03711   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, n: 50, r2left: 50, r2right: 73)                	 0.0682062 	 700       	 0         	 0         	 73.7211   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 123)                                                                	 0.0595867 	 100       	 3.61238   	 0         	 0.199373  	 18.1187   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 123, r2: 123, leftOrthog: 1)      	 0.058025  	 100       	 130.366   	 0         	 13.1358   	 9.92448   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6150, m: 73)                                                         	 0.0569871 	 700       	 0         	 0         	 88.2346   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 73, m: 6150)                                                                  	 0.0563266 	 700       	 0         	 0         	 89.2693   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3650, m: 50, k: 73) 	 0.0509867 	 700       	 365.811   	 0         	 49.7102   	 7.35887   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.0479522 	 101       	 57.6382   	 0         	 3.16494   	 18.2115   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 73, m: 50, k: 2500)   	 0.0478099 	 800       	 305.376   	 0         	 41.6516   	 7.33167   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 73, m: 2500, k: 50)	 0.0439012 	 800       	 332.565   	 0         	 45.36     	 7.33167   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6150, r: 50, r2: 50, leftOrthog: 1)        	 0.0421959 	 100       	 72.8744   	 0         	 17.5847   	 4.1442    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3650, m: 73, k: 73) 	 0.0418721 	 700       	 650.343   	 0         	 71.9831   	 9.03465   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0412052 	 100       	 2.12352   	 0         	 0.146583  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 123, r1_: 50, n: 50, r2: 123)         	 0.0397073 	 100       	 190.507   	 0         	 21.5598   	 8.83621   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 123, r1_: 123, n: 50, r2: 50)         	 0.0379179 	 100       	 199.497   	 0         	 13.2946   	 15.0059   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0323644 	 100       	 97.5798   	 0         	 7.66275   	 12.7343   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 73, n: 50, r2: 73)                                                                                         	 0.0305245 	 707       	 0         	 0         	 98.743    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 123, reductionFactor: 37, colBlockingSize: 12)                   	 0.0138778 	 100       	 11.1962   	 0         	 1.22665   	 9.12748   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 73, r: 73, streamingCols: 0)                   	 0.0133182 	 101       	 101.032   	 0         	 22.3057   	 4.52944   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0096071 	 109       	 1.89096   	 0         	 0.685285  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3650, m: 50, k: 50) 	 0.00770038	 100       	 237.001   	 0         	 38.1799   	 6.20748   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 73, m: 2500)                                                                  	 0.0060044 	 101       	 0         	 0         	 49.1173   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 73)                                                         	 0.00565333	 101       	 0         	 0         	 52.1675   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, n: 50, r2left: 50, r2right: 0)                 	 0.00524815	 100       	 0         	 0         	 55.6387   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0050706 	 8         	 19.7215   	 0         	 3.187     	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00396539	 101       	 6.53969   	 0         	 1.01881   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 73, m: 73, fromLeft: 1)                	 0.0037839 	 808       	 0         	 0         	 18.207    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3650, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.00352466	 7         	 79.3471   	 0         	 4.31804   	 18.3757   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, n: 50, r: 73, r2: 73)             	 0.00300462	 7         	 90.6311   	 0         	 10.0315   	 9.03465   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00262064	 8         	 39.1899   	 0         	 3.11374   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 123, leftOrthog: 1)         	 0.00253799	 100       	 24.2318   	 0         	 7.39167   	 3.27825   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 73, n: 50, r2: 50)                                                                                         	 0.00246408	 101       	 0         	 0         	 119.688   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0021949 	 8         	 22.7801   	 0         	 7.32608   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 73, Qr2: 50)       	 0.00159768	 100       	 0         	 0         	 307.947   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 73, m: 3650)                                                                  	 0.00140843	 7         	 0         	 0         	 21.1885   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3650, Xcols: 73, r: 73, streamingCols: 0)                   	 0.00107011	 7         	 127.236   	 0         	 28.0267   	 4.5398    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 73, k: 73)   	 0.00104947	 100       	 50.7781   	 0         	 9.62696   	 5.27457   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.0010179 	 100       	 24.5604   	 0         	 5.89449   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 73)   	 0.000971467	 100       	 37.572    	 0         	 8.07027   	 4.65561   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000895788	 100       	 0.558168  	 0         	 2.23267   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 73)                                                                                          	 0.000889397	 201       	 0         	 0         	 13.1982   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000824224	 100       	 30.3316   	 0         	 7.27957   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00079604	 201       	 0         	 0         	 10.1      	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000711768	 8         	 0         	 0         	 22.4792   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000678919	 100       	 0         	 0         	 5.89172   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000640878	 100       	 39.009    	 0         	 9.36216   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000604637	 8         	 0         	 0         	 26.4622   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 73)                 	 0.000556068	 100       	 0         	 0         	 17.6957   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000538654	 100       	 0         	 0         	 7.42592   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000500119	 100       	 0.999762  	 0         	 11.9971   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000480753	 100       	 0         	 0         	 8.32028   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000397328	 101       	 0         	 0         	 10.1679   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000392972	 101       	 0.642539  	 0         	 10.2806   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, n: 50, r: 73, r2: 50)             	 0.00037674	 1         	 70.7252   	 0         	 9.61087   	 7.35887   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 73)                                                                                 	 0.000367612	 101       	 1.00282   	 0         	 16.0452   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00034154	 100       	 0.731979  	 0         	 11.7117   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3650, m: 73)                                                         	 0.000271058	 7         	 0         	 0         	 110.096   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 73, reductionFactor: 37, colBlockingSize: 12)                    	 6.4991e-05	 1         	 8.42121   	 0         	 1.10526   	 7.6192    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3631e-05	 1         	 3.71681   	 0         	 1.48672   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 73, r: 50, streamingCols: 18)                    	 2.6711e-05	 1         	 4.67972   	 0         	 1.87189   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 73, r2: 73)              	 2.0971e-05	 1         	 25.4113   	 0         	 4.8177    	 5.27457   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.555e-05 	 1         	 16.0772   	 0         	 3.85852   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5231e-05	 9         	 0         	 0         	 23.636    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.099e-05 	 2         	 0         	 0         	 7.27934   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.011e-05 	 1         	 0.49456   	 0         	 1.97824   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 73)                                                                                   	 7.76e-06  	 1         	 0.940722  	 0         	 3.76289   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3650, m: 0, k: 50)  	 5.18e-06  	 100       	 0         	 0         	 28185.3   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 73)                                                           	 3.63e-06  	 1         	 0         	 0         	 16.0882   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 73, m: 50, fromLeft: 1)                	 2.42e-06  	 1         	 0         	 0         	 24.1322   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.83062   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.83057   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.59291   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.59157   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.8633    	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.48574   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.34622   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.2376    	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.02663   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.879322  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.853693  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.692871  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.46052   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.165994  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.122494  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.102585  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0788072 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0746894 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0643551 	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0640243 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0488278 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0445421 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0351548 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0305441 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0296552 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0296254 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00848848	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00698649	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00517893	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00384697	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00380155	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110212	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000913658	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000500119	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22910176999296 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22909959530496 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22909758204032 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22909556877568 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22909355551104 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22909154224640 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22908952898176 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22908751571712 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22908550245248 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22908348918784 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22908147592320 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22907946265856 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22907744939392 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22907543612928 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22907342286464 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22907140960000 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22906939633536 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22906738307072 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22906536980608 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22906335654144 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22906134327680 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22905933001216 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22905731674752 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22905530348288 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22905329021824 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22905127695360 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22904926368896 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22904725042432 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22904523715968 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22904322389504 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22904121063040 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22903919736576 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22903718406016 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22903517079552 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22903315753088 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22903114426624 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22902913100160 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22902711773696 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22902510447232 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22902309120768 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22902107794304 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22901906467840 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22901705141376 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22901503814912 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22901302488448 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22901101161984 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22900899835520 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22900698509056 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22900497182592 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22900295856128 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22900094529664 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22899893203200 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22899691876736 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22899490550272 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22899289223808 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22899087897344 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22898886570880 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22898685244416 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22898483917952 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22898282591488 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22898081265024 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22897879938560 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22897678612096 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22910071338752 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22910064748288 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 124, m: 124)                                                               	 1.22621   	 700       	 7.61895   	 0         	 0.211229  	 36.0697   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6200, cols: 124, reductionFactor: 37, colBlockingSize: 12)                 	 0.872132  	 600       	 134.715   	 0         	 4.31591   	 31.2136   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6200, r: 124, r2: 124, leftOrthog: 1)      	 0.770683  	 600       	 148.436   	 0         	 14.5564   	 10.1974   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 124, r1_: 124, n: 50, r2: 124)        	 0.626251  	 600       	 182.67    	 0         	 11.903    	 15.3465   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6200, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.405502  	 700       	 120.385   	 0         	 6.41167   	 18.7759   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6200, Xcols: 74, r: 74, streamingCols: 0)                   	 0.15366   	 700       	 154.665   	 0         	 33.5408   	 4.61124   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 74, Qr2: 124)      	 0.128131  	 700       	 0         	 0         	 59.1158   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 124, reductionFactor: 37, colBlockingSize: 12)                 	 0.116183  	 100       	 67.9599   	 0         	 2.24044   	 30.3333   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, n: 50, r2left: 50, r2right: 74)                	 0.0711502 	 700       	 0         	 0         	 72.2213   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 74, m: 74)                                                                  	 0.0689694 	 809       	 6.33761   	 0         	 1.54853   	 4.09267   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 124)                                                                	 0.0594224 	 100       	 3.65182   	 0         	 0.201271  	 18.1438   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 124, r2: 124, leftOrthog: 1)      	 0.0562326 	 100       	 136.718   	 0         	 13.6683   	 10.0026   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3700, m: 50, k: 74) 	 0.0544241 	 700       	 352.16    	 0         	 47.5892   	 7.4       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 74, m: 6200)                                                                  	 0.0541333 	 700       	 0         	 0         	 94.9242   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6200, m: 74)                                                         	 0.0536756 	 700       	 0         	 0         	 95.7336   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.0480914 	 101       	 59.0567   	 0         	 3.20025   	 18.4538   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 74, m: 50, k: 2500)   	 0.047124  	 800       	 314.065   	 0         	 42.6042   	 7.37169   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3700, m: 74, k: 74) 	 0.0450145 	 700       	 630.146   	 0         	 68.8051   	 9.15842   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 74, m: 2500, k: 50)	 0.0422029 	 800       	 350.687   	 0         	 47.5721   	 7.37169   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 124, r1_: 50, n: 50, r2: 124)         	 0.0420602 	 100       	 182.786   	 0         	 20.6371   	 8.85714   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0409829 	 100       	 2.13504   	 0         	 0.147378  	 14.4868   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6200, r: 50, r2: 50, leftOrthog: 1)        	 0.0400031 	 100       	 77.4939   	 0         	 18.6985   	 4.14439   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 124, r1_: 124, n: 50, r2: 50)         	 0.0377897 	 100       	 203.442   	 0         	 13.4508   	 15.1249   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0326965 	 100       	 97.374    	 0         	 7.64609   	 12.7351   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 74, n: 50, r2: 74)                                                                                         	 0.0315619 	 707       	 0         	 0         	 98.1319   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 124, reductionFactor: 37, colBlockingSize: 12)                   	 0.0141188 	 100       	 11.1848   	 0         	 1.22254   	 9.1488    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 74, r: 74, streamingCols: 0)                   	 0.0133852 	 101       	 103.3     	 0         	 22.5004   	 4.59103   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00972974	 109       	 1.86712   	 0         	 0.676647  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3700, m: 50, k: 50) 	 0.00750775	 100       	 246.412   	 0         	 39.6923   	 6.20805   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 74)                                                         	 0.00641706	 101       	 0         	 0         	 46.5883   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, n: 50, r2left: 50, r2right: 0)                 	 0.00602974	 100       	 0         	 0         	 49.09     	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 74, m: 2500)                                                                  	 0.00582816	 101       	 0         	 0         	 51.2958   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00511882	 8         	 19.5358   	 0         	 3.15698   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00487435	 101       	 5.32019   	 0         	 0.828829  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, n: 50, r: 74, r2: 74)             	 0.00383936	 7         	 73.8812   	 0         	 8.06703   	 9.15842   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3700, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.00362929	 7         	 80.2701   	 0         	 4.30924   	 18.6275   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 74, m: 74, fromLeft: 1)                	 0.00314404	 808       	 0         	 0         	 22.5168   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00269299	 8         	 38.137    	 0         	 3.03009   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 74, n: 50, r2: 50)                                                                                         	 0.00236278	 101       	 0         	 0         	 126.529   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0023592 	 8         	 21.1936   	 0         	 6.81586   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 124, leftOrthog: 1)         	 0.00208556	 100       	 29.7282   	 0         	 9.05272   	 3.2839    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 74, Qr2: 50)       	 0.00168675	 100       	 0         	 0         	 294.057   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3700, Xcols: 74, r: 74, streamingCols: 0)                   	 0.00141722	 7         	 100.075   	 0         	 21.7461   	 4.60199   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 74, m: 3700)                                                                  	 0.00122366	 7         	 0         	 0         	 25.0607   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00105936	 100       	 23.5993   	 0         	 5.66382   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000971274	 100       	 0.514788  	 0         	 2.05915   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 74, k: 74)   	 0.00093028	 100       	 58.864    	 0         	 11.0728   	 5.31609   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 74)   	 0.000922196	 100       	 40.1216   	 0         	 8.5882    	 4.67172   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 74)                                                                                          	 0.000899122	 201       	 0         	 0         	 13.2342   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000781651	 201       	 0         	 0         	 10.2859   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000771322	 8         	 0         	 0         	 20.7436   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000767984	 100       	 32.5528   	 0         	 7.81266   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000651007	 100       	 38.402    	 0         	 9.21649   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000560046	 8         	 0         	 0         	 28.5691   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 74)                 	 0.000557385	 100       	 0         	 0         	 17.7974   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000496545	 100       	 0         	 0         	 8.05566   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000482791	 100       	 0         	 0         	 8.28516   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000456832	 100       	 1.09449   	 0         	 13.1339   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000453155	 100       	 0         	 0         	 8.827     	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000410341	 101       	 0         	 0         	 9.84547   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 74)                                                                                 	 0.000373452	 101       	 1.00066   	 0         	 16.0106   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000373345	 101       	 0.676318  	 0         	 10.8211   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, n: 50, r: 74, r2: 50)             	 0.00037068	 1         	 73.8642   	 0         	 9.98166   	 7.4       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00032898	 100       	 0.759925  	 0         	 12.1588   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3700, m: 74)                                                         	 0.000254136	 7         	 0         	 0         	 120.666   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 74, reductionFactor: 37, colBlockingSize: 12)                    	 6.7592e-05	 1         	 8.32051   	 0         	 1.08605   	 7.66129   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.5171e-05	 1         	 3.55406   	 0         	 1.42163   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 74, r: 50, streamingCols: 16)                    	 2.7731e-05	 1         	 4.50759   	 0         	 1.80304   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 74, r2: 74)              	 1.8101e-05	 1         	 30.2525   	 0         	 5.69074   	 5.31609   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5242e-05	 9         	 0         	 0         	 23.6189   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.387e-05 	 1         	 18.0245   	 0         	 4.32588   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.0721e-05	 2         	 0         	 0         	 7.46199   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.0001e-05	 1         	 0.49995   	 0         	 1.9998    	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 74)                                                                                   	 9.39e-06  	 1         	 0.788072  	 0         	 3.15229   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3700, m: 0, k: 50)  	 5.12e-06  	 100       	 0         	 0         	 28906.2   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 74)                                                           	 3.65e-06  	 1         	 0         	 0         	 16.2192   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 74, m: 50, fromLeft: 1)                	 2.45e-06  	 1         	 0         	 0         	 24.1633   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.86169   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.86165   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.6055    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.60411   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.86013   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.49999   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.32662   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.25608   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.03582   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.869004  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.858543  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.706869  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.465345  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.170885  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.130271  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.108804  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0786991 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0782201 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0617559 	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0615321 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0481834 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0428539 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.036102  	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0317643 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0312116 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0311795 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00936083	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00648517	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00425643	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00376835	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00316173	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107578	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000990665	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000456832	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23076995803008 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23076792166400 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23076590839936 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23076389513472 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23076188187008 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23075986860544 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23075785534080 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23075584207616 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23075382881152 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23075181554688 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23074980228224 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23074778901760 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23074577575296 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23074376248832 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23074174922368 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23073973595904 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23073772269440 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23073570942976 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23073369616512 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23073168290048 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23072966963584 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23072765637120 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23072564310656 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23072362984192 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23072161657728 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23071960331264 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23071759004800 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23071557678336 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23071356351872 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23071155025408 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23070953698944 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23070752372480 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23070551041920 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23070349715456 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23070148388992 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23069947062528 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23069745736064 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23069544409600 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23069343083136 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23069141756672 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23068940430208 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23068739103744 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23068537777280 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23068336450816 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23068135124352 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23067933797888 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23067732471424 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23067531144960 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23067329818496 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23067128492032 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23066927165568 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23066725839104 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23066524512640 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23066323186176 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23066121859712 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23065920533248 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23065719206784 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23065517880320 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23065316553856 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23065115227392 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23064913900928 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23064712574464 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23064511248000 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23076890142464 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23076883552000 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 125, m: 125)                                                               	 1.2696    	 700       	 7.53804   	 0         	 0.207309  	 36.3614   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6250, cols: 125, reductionFactor: 37, colBlockingSize: 12)                 	 0.883514  	 600       	 136.223   	 0         	 4.32931   	 31.4653   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6250, r: 125, r2: 125, leftOrthog: 1)      	 0.799495  	 600       	 146.577   	 0         	 14.259    	 10.2796   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 125, r1_: 125, n: 50, r2: 125)        	 0.631971  	 600       	 185.432   	 0         	 11.9863   	 15.4703   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6250, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.413389  	 700       	 122.279   	 0         	 6.42615   	 19.0284   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6250, Xcols: 75, r: 75, streamingCols: 0)                   	 0.156469  	 700       	 157.28    	 0         	 33.6536   	 4.67348   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 75, Qr2: 125)      	 0.130033  	 700       	 0         	 0         	 59.216    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 125, reductionFactor: 37, colBlockingSize: 12)                 	 0.117824  	 100       	 68.0986   	 0         	 2.2279    	 30.5663   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 75, m: 75)                                                                  	 0.0728185 	 809       	 6.24927   	 0         	 1.50649   	 4.14823   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, n: 50, r2left: 50, r2right: 75)                	 0.0723461 	 700       	 0         	 0         	 72.5678   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 125)                                                                	 0.0601532 	 100       	 3.63655   	 0         	 0.200156  	 18.1686   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 125, r2: 125, leftOrthog: 1)      	 0.0589199 	 100       	 132.595   	 0         	 13.1535   	 10.0806   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 75, m: 6250)                                                                  	 0.0564374 	 700       	 0         	 0         	 93.0233   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3750, m: 50, k: 75) 	 0.0550091 	 700       	 357.895   	 0         	 48.1011   	 7.44048   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6250, m: 75)                                                         	 0.0542048 	 700       	 0         	 0         	 96.855    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.0501372 	 101       	 58.1883   	 0         	 3.11236   	 18.6959   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 75, m: 50, k: 2500)   	 0.0490939 	 800       	 305.537   	 0         	 41.2271   	 7.41107   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3750, m: 75, k: 75) 	 0.0482346 	 700       	 612.242   	 0         	 65.9589   	 9.28218   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 75, m: 2500, k: 50)	 0.0433783 	 800       	 345.795   	 0         	 46.6593   	 7.41107   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6250, r: 50, r2: 50, leftOrthog: 1)        	 0.0425303 	 100       	 73.477    	 0         	 17.7285   	 4.14456   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 125, r1_: 50, n: 50, r2: 125)         	 0.0421049 	 100       	 185.548   	 0         	 20.9002   	 8.87784   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0410851 	 100       	 2.12973   	 0         	 0.147012  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 125, r1_: 125, n: 50, r2: 50)         	 0.0385102 	 100       	 202.869   	 0         	 13.3082   	 15.2439   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0330684 	 100       	 97.0551   	 0         	 7.62056   	 12.736    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 75, n: 50, r2: 75)                                                                                         	 0.0317443 	 707       	 0         	 0         	 100.223   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 75, r: 75, streamingCols: 0)                   	 0.0137699 	 101       	 103.146   	 0         	 22.1695   	 4.65261   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 125, reductionFactor: 37, colBlockingSize: 12)                   	 0.0132354 	 100       	 12.1245   	 0         	 1.32221   	 9.16988   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0101666 	 109       	 1.78689   	 0         	 0.647571  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 75)                                                         	 0.00729304	 101       	 0         	 0         	 41.5465   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3750, m: 50, k: 50) 	 0.00723724	 100       	 259.077   	 0         	 41.7286   	 6.20861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 75, m: 2500)                                                                  	 0.00617488	 101       	 0         	 0         	 49.0698   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, n: 50, r2left: 50, r2right: 0)                 	 0.00616075	 100       	 0         	 0         	 48.6953   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00514872	 8         	 19.4223   	 0         	 3.13865   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00439509	 101       	 5.90031   	 0         	 0.919207  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3750, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.00366919	 7         	 82.6597   	 0         	 4.37835   	 18.8792   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, n: 50, r: 75, r2: 75)             	 0.00323857	 7         	 91.1862   	 0         	 9.82379   	 9.28218   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 75, m: 75, fromLeft: 1)                	 0.00320539	 808       	 0         	 0         	 22.6868   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0027432 	 8         	 37.439    	 0         	 2.97462   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 75, n: 50, r2: 50)                                                                                         	 0.00230851	 101       	 0         	 0         	 131.254   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 125, leftOrthog: 1)         	 0.00209138	 100       	 29.8846   	 0         	 9.08493   	 3.28947   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 75, Qr2: 50)       	 0.0018612 	 100       	 0         	 0         	 268.643   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00174531	 8         	 28.6483   	 0         	 9.21328   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 75, m: 3750)                                                                  	 0.00137211	 7         	 0         	 0         	 22.9574   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3750, Xcols: 75, r: 75, streamingCols: 0)                   	 0.00114161	 7         	 129.34    	 0         	 27.7305   	 4.66418   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00102401	 100       	 24.4138   	 0         	 5.85931   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 75, k: 75)   	 0.00100425	 100       	 56.0118   	 0         	 10.4555   	 5.35714   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 75)   	 0.000961538	 100       	 39        	 0         	 8.32      	 4.6875    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 75)                                                                                          	 0.000900185	 201       	 0         	 0         	 13.3972   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000826207	 100       	 0.605175  	 0         	 2.4207    	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00080715	 100       	 30.9732   	 0         	 7.43356   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000784209	 8         	 0         	 0         	 20.4027   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000768372	 201       	 0         	 0         	 10.4637   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000653716	 100       	 38.2429   	 0         	 9.1783    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000617139	 8         	 0         	 0         	 25.9261   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 75)                 	 0.000538943	 100       	 0         	 0         	 18.5548   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000497108	 100       	 0         	 0         	 8.04654   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000470084	 100       	 0         	 0         	 8.50912   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000463052	 100       	 0         	 0         	 8.63834   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000460028	 100       	 1.08689   	 0         	 13.0427   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000399853	 101       	 0         	 0         	 10.1037   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000392855	 101       	 0.642731  	 0         	 10.2837   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 75)                                                                                 	 0.000391727	 101       	 0.966872  	 0         	 15.47     	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, n: 50, r: 75, r2: 50)             	 0.0003852 	 1         	 73.014    	 0         	 9.81308   	 7.44048   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000325151	 100       	 0.768874  	 0         	 12.302    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3750, m: 75)                                                         	 0.000248668	 7         	 0         	 0         	 126.675   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 75, reductionFactor: 37, colBlockingSize: 12)                    	 6.9442e-05	 1         	 8.31921   	 0         	 1.08004   	 7.7027    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4181e-05	 1         	 3.657     	 0         	 1.4628    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 75, r: 50, streamingCols: 18)                    	 2.7221e-05	 1         	 4.59204   	 0         	 1.83682   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 75, r2: 75)              	 2.241e-05 	 1         	 25.1004   	 0         	 4.68541   	 5.35714   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.6441e-05	 1         	 15.2059   	 0         	 3.64941   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.516e-05 	 9         	 0         	 0         	 23.7467   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.3541e-05	 2         	 0         	 0         	 5.90798   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.88e-06  	 1         	 0.563063  	 0         	 2.25225   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 75)                                                                                   	 6.87e-06  	 1         	 1.0917    	 0         	 4.36681   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3750, m: 0, k: 50)  	 4.77e-06  	 100       	 0         	 0         	 31446.5   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 75)                                                           	 3.61e-06  	 1         	 0         	 0         	 16.6205   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 75, m: 50, fromLeft: 1)                	 2.54e-06  	 1         	 0         	 0         	 23.622    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.00568   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.00564   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.71378   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.71254   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.95924   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.52204   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.37084   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.29179   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.04824   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.903037  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.879048  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.713394  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.474928  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.173187  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.132357  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.112452  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0829851 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0795159 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0646151 	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0629341 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0501179 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.044032  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0362184 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0323232 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0306101 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0305827 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00881134	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00861228	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00799737	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00374957	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00322309	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110973	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000841957	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000460028	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22503289771904 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22503078488064 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22502877161600 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22502675835136 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22502474508672 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22502273182208 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22502071855744 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22501870529280 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22501669202816 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22501467876352 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22501266549888 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22501065223424 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22500863896960 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22500662570496 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22500461244032 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22500259917568 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22500058591104 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22499857264640 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22499655938176 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22499454611712 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22499253285248 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22499051958784 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22498850632320 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22498649305856 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22498447979392 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22498246652928 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22498045326464 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22497844000000 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22497642673536 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22497441347072 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22497240020608 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22497038694144 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22496837363584 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22496636037120 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22496434710656 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22496233384192 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22496032057728 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22495830731264 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22495629404800 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22495428078336 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22495226751872 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22495025425408 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22494824098944 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22494622772480 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22494421446016 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22494220119552 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22494018793088 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22493817466624 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22493616140160 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22493414813696 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22493213487232 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22493012160768 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22492810834304 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22492609507840 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22492408181376 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22492206854912 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22492005528448 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22491804201984 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22491602875520 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22491401549056 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22491200222592 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22490998896128 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22490797569664 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22503184111360 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22503177520896 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 126, m: 126)                                                               	 1.26439   	 700       	 7.75221   	 0         	 0.211503  	 36.653    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6300, cols: 126, reductionFactor: 37, colBlockingSize: 12)                 	 0.897037  	 600       	 137.415   	 0         	 4.33253   	 31.717    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6300, r: 126, r2: 126, leftOrthog: 1)      	 0.833801  	 600       	 143.946   	 0         	 13.892    	 10.3618   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 126, r1_: 126, n: 50, r2: 126)        	 0.64673   	 600       	 185.584   	 0         	 11.9009   	 15.5941   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6300, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.42059   	 700       	 124.4     	 0         	 6.45195   	 19.2809   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6300, Xcols: 76, r: 76, streamingCols: 0)                   	 0.1627    	 700       	 156.559   	 0         	 33.0592   	 4.73572   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 76, Qr2: 126)      	 0.130762  	 700       	 0         	 0         	 59.8537   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 126, reductionFactor: 37, colBlockingSize: 12)                 	 0.118532  	 100       	 68.7793   	 0         	 2.23316   	 30.7991   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 76, m: 6300)                                                                  	 0.0771047 	 700       	 0         	 0         	 69.549    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, n: 50, r2left: 50, r2right: 76)                	 0.0720577 	 700       	 0         	 0         	 74.4204   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 76, m: 76)                                                                  	 0.0714463 	 809       	 6.62746   	 0         	 1.57655   	 4.20377   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 126)                                                                	 0.0607428 	 100       	 3.63006   	 0         	 0.19953   	 18.1931   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 126, r2: 126, leftOrthog: 1)      	 0.0583021 	 100       	 136.153   	 0         	 13.4026   	 10.1587   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6300, m: 76)                                                         	 0.0579779 	 700       	 0         	 0         	 92.4932   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3800, m: 50, k: 76) 	 0.0556841 	 700       	 363.048   	 0         	 48.5338   	 7.48031   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.0506572 	 101       	 59.137    	 0         	 3.12269   	 18.9378   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 76, m: 50, k: 2500)   	 0.0461013 	 800       	 329.709   	 0         	 44.2573   	 7.44981   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3800, m: 76, k: 76) 	 0.0442009 	 700       	 695.196   	 0         	 73.9103   	 9.40594   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 126, r1_: 50, n: 50, r2: 126)         	 0.0436317 	 100       	 181.932   	 0         	 20.4457   	 8.89831   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6300, r: 50, r2: 50, leftOrthog: 1)        	 0.0421294 	 100       	 74.7696   	 0         	 18.0396   	 4.14474   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.041437  	 100       	 2.11164   	 0         	 0.145763  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 76, m: 2500, k: 50)	 0.0393717 	 800       	 386.064   	 0         	 51.822    	 7.44981   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 126, r1_: 126, n: 50, r2: 50)         	 0.0385746 	 100       	 205.783   	 0         	 13.3948   	 15.3629   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 76, n: 50, r2: 76)                                                                                         	 0.0328019 	 707       	 0         	 0         	 99.595    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0325734 	 100       	 99.3183   	 0         	 7.79777   	 12.7368   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 126, reductionFactor: 37, colBlockingSize: 12)                   	 0.0147569 	 100       	 11.0491   	 0         	 1.2022    	 9.19072   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 76, r: 76, streamingCols: 0)                   	 0.013872  	 101       	 105.136   	 0         	 22.3021   	 4.71417   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00964316	 109       	 1.88388   	 0         	 0.682722  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3800, m: 50, k: 50) 	 0.00723018	 100       	 262.787   	 0         	 42.3226   	 6.20915   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 76, m: 2500)                                                                  	 0.00692056	 101       	 0         	 0         	 44.3663   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 76)                                                         	 0.00628388	 101       	 0         	 0         	 48.8615   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, n: 50, r2left: 50, r2right: 0)                 	 0.0055088 	 100       	 0         	 0         	 55.1844   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00503371	 8         	 19.8661   	 0         	 3.21036   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00387936	 101       	 6.68471   	 0         	 1.04141   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3800, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.00372647	 7         	 84.6883   	 0         	 4.42678   	 19.1309   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 76, m: 76, fromLeft: 1)                	 0.0033976 	 808       	 0         	 0         	 21.9779   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, n: 50, r: 76, r2: 76)             	 0.00328382	 7         	 93.575    	 0         	 9.94849   	 9.40594   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00260637	 8         	 39.4045   	 0         	 3.13079   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 76, n: 50, r2: 50)                                                                                         	 0.00236932	 101       	 0         	 0         	 129.59    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 126, leftOrthog: 1)         	 0.00220256	 100       	 28.6031   	 0         	 8.68082   	 3.29498   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00188355	 8         	 26.5456   	 0         	 8.53707   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 76, Qr2: 50)       	 0.00168668	 100       	 0         	 0         	 298.812   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 76, m: 3800)                                                                  	 0.00115967	 7         	 0         	 0         	 27.892    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3800, Xcols: 76, r: 76, streamingCols: 0)                   	 0.00114241	 7         	 134.489   	 0         	 28.455    	 4.72637   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.001059  	 100       	 23.6071   	 0         	 5.66571   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 76)   	 0.000957537	 100       	 39.6852   	 0         	 8.43832   	 4.70297   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 76, k: 76)   	 0.00095546	 100       	 60.4526   	 0         	 11.1996   	 5.39773   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 76)                                                                                          	 0.000900525	 201       	 0         	 0         	 13.5708   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000852653	 100       	 29.3203   	 0         	 7.03686   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.0007998 	 8         	 0         	 0         	 20.005    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00077687	 100       	 0.643608  	 0         	 2.57443   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000769731	 201       	 0         	 0         	 10.4452   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000681549	 100       	 36.6811   	 0         	 8.80348   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 76)                 	 0.000582768	 100       	 0         	 0         	 17.2968   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000519924	 8         	 0         	 0         	 30.7737   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000500794	 100       	 0         	 0         	 7.98732   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000463015	 100       	 0         	 0         	 8.63903   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000457414	 100       	 1.0931    	 0         	 13.1172   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000453636	 100       	 0         	 0         	 8.81764   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000415163	 101       	 0         	 0         	 9.73112   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, n: 50, r: 76, r2: 50)             	 0.00038474	 1         	 75.0637   	 0         	 10.0348   	 7.48031   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000368411	 101       	 0.685376  	 0         	 10.966    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 76)                                                                                 	 0.000356868	 101       	 1.07547   	 0         	 17.2075   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000328796	 100       	 0.76035   	 0         	 12.1656   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3800, m: 76)                                                         	 0.000257098	 7         	 0         	 0         	 125.81    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 76, reductionFactor: 37, colBlockingSize: 12)                    	 7.0312e-05	 1         	 8.43684   	 0         	 1.08954   	 7.74346   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.493e-05 	 1         	 3.57859   	 0         	 1.43143   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 76, r: 50, streamingCols: 18)                    	 2.797e-05 	 1         	 4.46907   	 0         	 1.78763   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 76, r2: 76)              	 1.752e-05 	 1         	 32.968    	 0         	 6.10776   	 5.39773   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.522e-05 	 9         	 0         	 0         	 23.6531   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.449e-05 	 1         	 17.2533   	 0         	 4.14079   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.129e-05 	 2         	 0         	 0         	 7.08592   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.201e-06 	 1         	 0.609682  	 0         	 2.43873   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 76)                                                                                   	 7.86e-06  	 1         	 0.966921  	 0         	 3.86768   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3800, m: 0, k: 50)  	 5.17e-06  	 100       	 0         	 0         	 29400.4   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 76)                                                           	 4.02e-06  	 1         	 0         	 0         	 15.1244   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 76, m: 50, fromLeft: 1)                	 2.41e-06  	 1         	 0         	 0         	 25.2282   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.08415   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.0841    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.7698    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.76858   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.0012    	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.54443   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.36657   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.31423   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.06351   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.936435  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.914407  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.729789  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.482124  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.179661  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.132902  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.109033  	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0857162 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0810894 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0786123 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0657379 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0471603 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0400532 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0373423 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.032716  	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0297525 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0297244 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00873428	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00646988	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00400426	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00391223	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00341523	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105408	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000792931	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000457414	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22890463901568 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22890229524480 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22890028198016 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22889826871552 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22889625545088 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22889424218624 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22889222892160 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22889021565696 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22888820239232 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22888618912768 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22888417586304 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22888216259840 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22888014933376 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22887813606912 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22887612280448 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22887410953984 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22887209627520 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22887008301056 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22886806974592 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22886605648128 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22886404321664 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22886202995200 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22886001668736 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22885800342272 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22885599015808 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22885397689344 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22885196362880 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22884995036416 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22884793709952 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22884592383488 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22884391057024 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22884189730560 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22883988400000 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22883787073536 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22883585747072 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22883384420608 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22883183094144 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22882981767680 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22882780441216 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22882579114752 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22882377788288 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22882176461824 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22881975135360 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22881773808896 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22881572482432 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22881371155968 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22881169829504 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22880968503040 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22880767176576 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22880565850112 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22880364523648 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22880163197184 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22879961870720 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22879760544256 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22879559217792 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22879357891328 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22879156564864 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22878955238400 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22878753911936 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22878552585472 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22878351259008 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22878149932544 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22877948606080 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22890358241024 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22890351650560 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 127, m: 127)                                                               	 1.32312   	 700       	 7.58593   	 0         	 0.205332  	 36.9447   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6350, cols: 127, reductionFactor: 37, colBlockingSize: 12)                 	 0.910362  	 600       	 138.653   	 0         	 4.33715   	 31.9687   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6350, r: 127, r2: 127, leftOrthog: 1)      	 0.822933  	 600       	 149.347   	 0         	 14.2997   	 10.4441   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 127, r1_: 127, n: 50, r2: 127)        	 0.655742  	 600       	 187.426   	 0         	 11.9244   	 15.7178   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6350, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.429285  	 700       	 126.101   	 0         	 6.45567   	 19.5334   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6350, Xcols: 77, r: 77, streamingCols: 0)                   	 0.165963  	 700       	 158.797   	 0         	 33.0968   	 4.79796   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 77, Qr2: 127)      	 0.130137  	 700       	 0         	 0         	 61.1222   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 127, reductionFactor: 37, colBlockingSize: 12)                 	 0.120451  	 100       	 68.7621   	 0         	 2.21587   	 31.0317   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 77, m: 77)                                                                  	 0.0757626 	 809       	 6.49986   	 0         	 1.52603   	 4.25933   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, n: 50, r2left: 50, r2right: 77)                	 0.0731846 	 700       	 0         	 0         	 74.8277   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 127)                                                                	 0.0595343 	 100       	 3.73314   	 0         	 0.204924  	 18.2172   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 77, m: 6350)                                                                  	 0.0593247 	 700       	 0         	 0         	 92.3096   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 127, r2: 127, leftOrthog: 1)      	 0.0586191 	 100       	 137.575   	 0         	 13.4394   	 10.2367   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6350, m: 77)                                                         	 0.0574533 	 700       	 0         	 0         	 95.3164   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3850, m: 50, k: 77) 	 0.0563814 	 700       	 368.056   	 0         	 48.9466   	 7.51953   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.0516956 	 101       	 59.4842   	 0         	 3.10144   	 19.1795   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 77, m: 50, k: 2500)   	 0.0501989 	 800       	 306.78    	 0         	 40.9698   	 7.48794   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3850, m: 77, k: 77) 	 0.0481534 	 700       	 663.656   	 0         	 69.6408   	 9.5297    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6350, r: 50, r2: 50, leftOrthog: 1)        	 0.0455286 	 100       	 69.7363   	 0         	 16.8246   	 4.14491   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 77, m: 2500, k: 50)	 0.045492  	 800       	 338.521   	 0         	 45.2088   	 7.48794   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 127, r1_: 50, n: 50, r2: 127)         	 0.043017  	 100       	 187.472   	 0         	 21.0205   	 8.91854   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0418715 	 100       	 2.08973   	 0         	 0.144251  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 127, r1_: 127, n: 50, r2: 50)         	 0.039035  	 100       	 206.597   	 0         	 13.3445   	 15.4818   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 77, n: 50, r2: 77)                                                                                         	 0.0332935 	 707       	 0         	 0         	 100.724   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.032971  	 100       	 98.8994   	 0         	 7.7644    	 12.7375   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 77, r: 77, streamingCols: 0)                   	 0.0142406 	 101       	 105.127   	 0         	 22.0128   	 4.77573   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 127, reductionFactor: 37, colBlockingSize: 12)                   	 0.0138886 	 100       	 11.927    	 0         	 1.29482   	 9.21133   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00934304	 109       	 1.9444    	 0         	 0.704653  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3850, m: 50, k: 50) 	 0.00831986	 100       	 231.374   	 0         	 37.2602   	 6.20968   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 77)                                                         	 0.00636549	 101       	 0         	 0         	 48.8698   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 77, m: 2500)                                                                  	 0.006283  	 101       	 0         	 0         	 49.5114   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, n: 50, r2left: 50, r2right: 0)                 	 0.00603182	 100       	 0         	 0         	 51.0625   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00505958	 8         	 19.7645   	 0         	 3.19394   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00418021	 101       	 6.20363   	 0         	 0.96646   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3850, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.00381611	 7         	 86.0064   	 0         	 4.4373    	 19.3826   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, n: 50, r: 77, r2: 77)             	 0.00346782	 7         	 92.1538   	 0         	 9.67016   	 9.5297    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 77, m: 77, fromLeft: 1)                	 0.00344072	 808       	 0         	 0         	 22.2773   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00281303	 8         	 36.5097   	 0         	 2.90079   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 127, leftOrthog: 1)         	 0.0024283 	 100       	 26.15     	 0         	 7.92325   	 3.30042   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00239067	 8         	 20.9146   	 0         	 6.72613   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 77, n: 50, r2: 50)                                                                                         	 0.00227344	 101       	 0         	 0         	 136.832   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 77, Qr2: 50)       	 0.00172723	 100       	 0         	 0         	 294.113   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 77, m: 3850)                                                                  	 0.00139182	 7         	 0         	 0         	 23.8554   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3850, Xcols: 77, r: 77, streamingCols: 0)                   	 0.00118671	 7         	 134.647   	 0         	 28.1184   	 4.78856   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00111378	 100       	 22.4462   	 0         	 5.38708   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 77, k: 77)   	 0.00101791	 100       	 58.2471   	 0         	 10.7114   	 5.43785   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 77)                                                                                          	 0.000939372	 201       	 0         	 0         	 13.1807   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 77)   	 0.000927139	 100       	 41.5256   	 0         	 8.80127   	 4.71814   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000905357	 100       	 0.552268  	 0         	 2.20907   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000837426	 201       	 0         	 0         	 9.60085   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00082401	 100       	 30.3394   	 0         	 7.28147   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000699239	 8         	 0         	 0         	 22.882    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000672936	 100       	 37.1506   	 0         	 8.91615   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000599315	 8         	 0         	 0         	 26.6971   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 77)                 	 0.000566948	 100       	 0         	 0         	 17.9205   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000512512	 100       	 0         	 0         	 7.8047    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000491911	 100       	 0         	 0         	 8.13155   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00046451	 100       	 0         	 0         	 8.61122   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000452991	 100       	 1.10377   	 0         	 13.2453   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000443811	 101       	 0         	 0         	 9.10297   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3850, m: 77)                                                         	 0.00041593	 7         	 0         	 0         	 79.8269   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, n: 50, r: 77, r2: 50)             	 0.000410221	 1         	 72.2659   	 0         	 9.61043   	 7.51953   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00039783	 101       	 0.634693  	 0         	 10.1551   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 77)                                                                                 	 0.000376821	 101       	 1.03192   	 0         	 16.5108   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00032756	 100       	 0.763219  	 0         	 12.2115   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 77, reductionFactor: 37, colBlockingSize: 12)                    	 7.2412e-05	 1         	 8.40916   	 0         	 1.08037   	 7.78357   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6511e-05	 1         	 3.42363   	 0         	 1.36945   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 77, r: 50, streamingCols: 16)                    	 2.8061e-05	 1         	 4.45458   	 0         	 1.78183   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 77, r2: 77)              	 1.822e-05 	 1         	 32.5412   	 0         	 5.98419   	 5.43785   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5201e-05	 9         	 0         	 0         	 23.6827   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.449e-05 	 1         	 17.2533   	 0         	 4.14079   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.1731e-05	 2         	 0         	 0         	 6.81954   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.054e-05 	 1         	 0.474383  	 0         	 1.89753   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 77)                                                                                   	 9.241e-06 	 1         	 0.833243  	 0         	 3.33297   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3850, m: 0, k: 50)  	 4.62e-06  	 100       	 0         	 0         	 33333.3   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 77)                                                           	 4.23e-06  	 1         	 0         	 0         	 14.5626   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 77, m: 50, fromLeft: 1)                	 2.47e-06  	 1         	 0         	 0         	 24.9393   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.19724   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.1972    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.86756   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.86622   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.09      	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.56953   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.42452   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.32957   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.07838   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.929509  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.915097  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.738618  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.492376  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.183845  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.132328  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.114804  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0851056 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0802753 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0676106 	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.065382  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0513127 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.046165  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0378563 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0332807 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0314224 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0313901 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00897033	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00747757	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00382474	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00345839	 818       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00343521	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110221	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000925138	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000452991	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23215715616640 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23215506188288 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23215304861824 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23215103535360 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23214902208896 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23214700882432 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23214499555968 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23214298229504 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23214096903040 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23213895576576 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23213694250112 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23213492923648 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23213291597184 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23213090270720 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23212888944256 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23212687617792 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23212486291328 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23212284964864 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23212083638400 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23211882311936 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23211680985472 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23211479659008 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23211278332544 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23211077006080 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23210875679616 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23210674353152 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23210473026688 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23210271700224 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23210070373760 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23209869047296 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23209667720832 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23209466394368 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23209265063808 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23209063737344 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23208862410880 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23208661084416 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23208459757952 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23208258431488 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23208057105024 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23207855778560 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23207654452096 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23207453125632 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23207251799168 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23207050472704 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23206849146240 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23206647819776 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23206446493312 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23206245166848 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23206043840384 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23205842513920 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23205641187456 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23205439860992 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23205238534528 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23205037208064 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23204835881600 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23204634555136 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23204433228672 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23204231902208 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23204030575744 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23203829249280 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23203627922816 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23203426596352 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23203225269888 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23215609956096 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23215603365632 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 128, m: 128)                                                               	 1.41716   	 700       	 7.25114   	 0         	 0.194733  	 37.2364   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6400, cols: 128, reductionFactor: 37, colBlockingSize: 12)                 	 0.927879  	 600       	 139.275   	 0         	 4.32255   	 32.2205   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6400, r: 128, r2: 128, leftOrthog: 1)      	 0.840127  	 600       	 149.774   	 0         	 14.2285   	 10.5263   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 128, r1_: 128, n: 50, r2: 128)        	 0.679996  	 600       	 185.044   	 0         	 11.6809   	 15.8416   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6400, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.43656   	 700       	 128.243   	 0         	 6.48156   	 19.7859   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6400, Xcols: 78, r: 78, streamingCols: 0)                   	 0.171021  	 700       	 159.374   	 0         	 32.7917   	 4.86019   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 78, Qr2: 128)      	 0.128108  	 700       	 0         	 0         	 63.0955   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 128, reductionFactor: 37, colBlockingSize: 12)                 	 0.122379  	 100       	 68.749    	 0         	 2.19897   	 31.2641   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 78, m: 78)                                                                  	 0.0766681 	 809       	 6.67662   	 0         	 1.54734   	 4.31489   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, n: 50, r2left: 50, r2right: 78)                	 0.0725861 	 700       	 0         	 0         	 77.0263   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6400, m: 78)                                                         	 0.0644408 	 700       	 0         	 0         	 86.7624   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 128)                                                                	 0.0634483 	 100       	 3.53044   	 0         	 0.193543  	 18.241    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 128, r2: 128, leftOrthog: 1)      	 0.0630261 	 100       	 129.978   	 0         	 12.6014   	 10.3146   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3900, m: 50, k: 78) 	 0.056862  	 700       	 374.486   	 0         	 49.5473   	 7.55814   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 78, m: 6400)                                                                  	 0.0550065 	 700       	 0         	 0         	 101.643   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.0539358 	 101       	 58.5039   	 0         	 3.01239   	 19.4211   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6400, r: 50, r2: 50, leftOrthog: 1)        	 0.051499  	 100       	 62.1371   	 0         	 14.9906   	 4.14508   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 78, m: 50, k: 2500)   	 0.0493298 	 800       	 316.239   	 0         	 42.0224   	 7.52547   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3900, m: 78, k: 78) 	 0.0470791 	 700       	 705.592   	 0         	 73.0921   	 9.65347   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 128, r1_: 50, n: 50, r2: 128)         	 0.0454187 	 100       	 180.366   	 0         	 20.1785   	 8.93855   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 78, m: 2500, k: 50)	 0.0446755 	 800       	 349.185   	 0         	 46.4004   	 7.52547   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0430902 	 100       	 2.03063   	 0         	 0.140171  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 128, r1_: 128, n: 50, r2: 50)         	 0.0408513 	 100       	 200.532   	 0         	 12.8541   	 15.6006   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 78, n: 50, r2: 78)                                                                                         	 0.0327776 	 707       	 0         	 0         	 104.984   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0320262 	 100       	 102.619   	 0         	 8.05589   	 12.7383   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 128, reductionFactor: 37, colBlockingSize: 12)                   	 0.0144864 	 100       	 11.6156   	 0         	 1.25823   	 9.2317    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 78, r: 78, streamingCols: 0)                   	 0.0143643 	 101       	 106.946   	 0         	 22.1088   	 4.83727   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00991445	 109       	 1.83233   	 0         	 0.664041  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3900, m: 50, k: 50) 	 0.00906549	 100       	 215.102   	 0         	 34.6369   	 6.21019   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 78)                                                         	 0.00659257	 101       	 0         	 0         	 47.7993   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 78, m: 2500)                                                                  	 0.00590377	 101       	 0         	 0         	 53.3761   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00547196	 101       	 4.73915   	 0         	 0.73831   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, n: 50, r2left: 50, r2right: 0)                 	 0.00519051	 100       	 0         	 0         	 60.1097   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00513093	 8         	 19.4896   	 0         	 3.14953   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3900, m: 78)                                                         	 0.00439499	 7         	 0         	 0         	 7.7521    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3900, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.00402472	 7         	 84.7673   	 0         	 4.3173    	 19.6343   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, n: 50, r: 78, r2: 78)             	 0.00348374	 7         	 95.3533   	 0         	 9.87762   	 9.65347   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 78, m: 78, fromLeft: 1)                	 0.00346751	 808       	 0         	 0         	 22.6831   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 128, leftOrthog: 1)         	 0.00279278	 100       	 22.9163   	 0         	 6.93217   	 3.30579   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00275199	 8         	 37.3194   	 0         	 2.96512   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 78, n: 50, r2: 50)                                                                                         	 0.00271112	 101       	 0         	 0         	 116.232   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00194324	 8         	 25.7302   	 0         	 8.27483   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 78, Qr2: 50)       	 0.00165216	 100       	 0         	 0         	 309.898   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3900, Xcols: 78, r: 78, streamingCols: 0)                   	 0.00122446	 7         	 135.646   	 0         	 27.9639   	 4.85075   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00111688	 100       	 0.447677  	 0         	 1.79071   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00103645	 100       	 24.1209   	 0         	 5.78901   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 78, k: 78)   	 0.000976912	 100       	 62.2779   	 0         	 11.3697   	 5.47753   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 78)   	 0.000928205	 100       	 42.0166   	 0         	 8.87735   	 4.73301   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 78)                                                                                          	 0.000896008	 201       	 0         	 0         	 13.9981   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000792432	 201       	 0         	 0         	 10.146    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000782786	 100       	 31.9372   	 0         	 7.66493   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 78, m: 3900)                                                                  	 0.00075403	 7         	 0         	 0         	 45.1844   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000701948	 8         	 0         	 0         	 22.7937   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000635019	 100       	 39.3689   	 0         	 9.44854   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000582545	 8         	 0         	 0         	 27.4657   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 78)                 	 0.000570703	 100       	 0         	 0         	 17.9428   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000502873	 100       	 0         	 0         	 7.95429   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000492962	 100       	 1.01428   	 0         	 12.1713   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000480447	 100       	 0         	 0         	 8.32558   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000475227	 100       	 0         	 0         	 8.41703   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000404156	 101       	 0         	 0         	 9.99614   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000392899	 101       	 0.642659  	 0         	 10.2825   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, n: 50, r: 78, r2: 50)             	 0.000392681	 1         	 77.4675   	 0         	 10.2495   	 7.55814   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 78)                                                                                 	 0.000371126	 101       	 1.06136   	 0         	 16.9818   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000331128	 100       	 0.754995  	 0         	 12.0799   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 78, reductionFactor: 37, colBlockingSize: 12)                    	 7.2172e-05	 1         	 8.6577    	 0         	 1.10669   	 7.82306   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6801e-05	 1         	 3.39665   	 0         	 1.35866   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 78, r: 50, streamingCols: 20)                    	 2.8271e-05	 1         	 4.42149   	 0         	 1.7686    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 78, r2: 78)              	 1.9891e-05	 1         	 30.5867   	 0         	 5.58403   	 5.47753   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.545e-05 	 9         	 0         	 0         	 23.301    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.5371e-05	 1         	 16.2644   	 0         	 3.90345   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.057e-05 	 2         	 0         	 0         	 7.56859   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.044e-05 	 1         	 0.478927  	 0         	 1.91571   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 78)                                                                                   	 8.95e-06  	 1         	 0.871508  	 0         	 3.48603   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3900, m: 0, k: 50)  	 4.78e-06  	 100       	 0         	 0         	 32636     	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 78)                                                           	 3.9e-06   	 1         	 0         	 0         	 16        	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 78, m: 50, fromLeft: 1)                	 2.65e-06  	 1         	 0         	 0         	 23.5472   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.396     	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.39595   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.05266   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.05111   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.25453   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.59959   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.5237    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.34323   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.09754   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.957444  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.939401  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.767049  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.503333  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.188618  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.130241  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.114916  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0865825 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0788225 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0765384 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0622574 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0503663 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0453105 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0376801 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0354472 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0354154 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0340219 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00904262	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00841985	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00371672	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00348561	 818       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00231533	 5273      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00113627	 102       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109515	 302       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000492962	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22516104906624 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22515896281088 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22515694954624 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22515493628160 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22515292301696 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22515090975232 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22514889648768 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22514688322304 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22514486995840 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22514285669376 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22514084342912 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22513883016448 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22513681689984 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22513480363520 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22513279037056 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22513077710592 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22512876384128 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22512675057664 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22512473731200 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22512272404736 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22512071078272 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22511869751808 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22511668425344 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22511467098880 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22511265772416 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22511064445952 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22510863119488 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22510661793024 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22510460466560 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22510259140096 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22510057813632 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22509856487168 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22509655156608 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22509453830144 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22509252503680 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22509051177216 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22508849850752 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22508648524288 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22508447197824 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22508245871360 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22508044544896 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22507843218432 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22507641891968 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22507440565504 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22507239239040 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22507037912576 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22506836586112 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22506635259648 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22506433933184 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22506232606720 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22506031280256 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22505829953792 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22505628627328 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22505427300864 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22505225974400 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22505024647936 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22504823321472 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22504621995008 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22504420668544 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22504219342080 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22504018015616 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22503816689152 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22503615362688 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22515999246080 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22515992655616 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 129, m: 129)                                                               	 1.40378   	 700       	 7.49319   	 0         	 0.199669  	 37.528    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6450, cols: 129, reductionFactor: 37, colBlockingSize: 12)                 	 0.939122  	 600       	 140.858   	 0         	 4.33779   	 32.4722   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6450, r: 129, r2: 129, leftOrthog: 1)      	 0.812181  	 600       	 158.587   	 0         	 14.949    	 10.6086   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 129, r1_: 129, n: 50, r2: 129)        	 0.714791  	 600       	 180.194   	 0         	 11.2866   	 15.9653   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6450, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.443924  	 700       	 130.381   	 0         	 6.50659   	 20.0384   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6450, Xcols: 79, r: 79, streamingCols: 0)                   	 0.170428  	 700       	 165.337   	 0         	 33.5885   	 4.92243   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 79, Qr2: 129)      	 0.139618  	 700       	 0         	 0         	 58.8245   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 129, reductionFactor: 37, colBlockingSize: 12)                 	 0.124452  	 100       	 68.6642   	 0         	 2.18006   	 31.4964   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 79, m: 79)                                                                  	 0.0801812 	 809       	 6.63278   	 0         	 1.51765   	 4.37044   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, n: 50, r2left: 50, r2right: 79)                	 0.0743728 	 700       	 0         	 0         	 76.7345   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 129)                                                                	 0.0657292 	 100       	 3.43455   	 0         	 0.188044  	 18.2646   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6450, m: 79)                                                         	 0.0651422 	 700       	 0         	 0         	 87.6078   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 79, m: 6450)                                                                  	 0.0620608 	 700       	 0         	 0         	 91.9576   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 129, r2: 129, leftOrthog: 1)      	 0.0611081 	 100       	 136.16    	 0         	 13.1018   	 10.3925   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3950, m: 50, k: 79) 	 0.0606261 	 700       	 360.298   	 0         	 47.4317   	 7.59615   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.0534837 	 101       	 60.5209   	 0         	 3.078     	 19.6625   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 129, r1_: 50, n: 50, r2: 129)         	 0.0501033 	 100       	 166.067   	 0         	 18.5377   	 8.95833   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 79, m: 50, k: 2500)   	 0.0494558 	 800       	 319.477   	 0         	 42.2454   	 7.56241   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3950, m: 79, k: 79) 	 0.0477573 	 700       	 722.67    	 0         	 73.9136   	 9.77723   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6450, r: 50, r2: 50, leftOrthog: 1)        	 0.0472186 	 100       	 68.2994   	 0         	 16.4766   	 4.14524   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 79, m: 2500, k: 50)	 0.0455525 	 800       	 346.852   	 0         	 45.8653   	 7.56241   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0424183 	 100       	 2.06279   	 0         	 0.142391  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 129, r1_: 129, n: 50, r2: 50)         	 0.0394748 	 100       	 210.78    	 0         	 13.4089   	 15.7194   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 79, n: 50, r2: 79)                                                                                         	 0.0333068 	 707       	 0         	 0         	 105.982   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0328183 	 100       	 100.924   	 0         	 7.9224    	 12.7391   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 79, r: 79, streamingCols: 0)                   	 0.0145571 	 101       	 108.253   	 0         	 22.0978   	 4.8988    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 129, reductionFactor: 37, colBlockingSize: 12)                   	 0.0143161 	 100       	 11.9382   	 0         	 1.29035   	 9.25185   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00975266	 109       	 1.86273   	 0         	 0.675057  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 79)                                                         	 0.00787214	 101       	 0         	 0         	 40.543    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3950, m: 50, k: 50) 	 0.00773806	 100       	 255.232   	 0         	 41.0956   	 6.21069   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, n: 50, r2left: 50, r2right: 0)                 	 0.00610509	 100       	 0         	 0         	 51.7601   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 79, m: 2500)                                                                  	 0.00608404	 101       	 0         	 0         	 52.4586   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00523623	 8         	 19.0977   	 0         	 3.08619   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00408871	 101       	 6.34245   	 0         	 0.988087  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3950, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.00405354	 7         	 87.4434   	 0         	 4.39722   	 19.8861   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3950, m: 79)                                                         	 0.00400359	 7         	 0         	 0         	 8.72957   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 79, m: 79, fromLeft: 1)                	 0.00364311	 808       	 0         	 0         	 22.1469   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, n: 50, r: 79, r2: 79)             	 0.00362053	 7         	 95.3252   	 0         	 9.74971   	 9.77723   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268714	 8         	 38.22     	 0         	 3.03668   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 79, n: 50, r2: 50)                                                                                         	 0.00232377	 101       	 0         	 0         	 137.346   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 129, leftOrthog: 1)         	 0.00221928	 100       	 29.0634   	 0         	 8.77761   	 3.31109   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00203492	 8         	 24.571    	 0         	 7.90204   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 79, Qr2: 50)       	 0.00200588	 100       	 0         	 0         	 257.244   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3950, Xcols: 79, r: 79, streamingCols: 0)                   	 0.00124654	 7         	 138.434   	 0         	 28.1774   	 4.91294   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00104974	 100       	 23.8154   	 0         	 5.7157    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 79, k: 79)   	 0.00099508	 100       	 62.7186   	 0         	 11.3687   	 5.51676   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 79, m: 3950)                                                                  	 0.000993788	 7         	 0         	 0         	 35.1681   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 79)   	 0.00096003	 100       	 41.1445   	 0         	 8.6664    	 4.7476    
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000931723	 100       	 0.53664   	 0         	 2.14656   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 79)                                                                                          	 0.000905602	 201       	 0         	 0         	 14.0274   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000860793	 100       	 29.043    	 0         	 6.97032   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000814272	 8         	 0         	 0         	 19.6495   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000765337	 201       	 0         	 0         	 10.5052   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000635547	 100       	 39.3362   	 0         	 9.44069   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 79)                 	 0.000557821	 100       	 0         	 0         	 18.5006   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000505151	 100       	 0         	 0         	 7.91842   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000496781	 100       	 0         	 0         	 8.05184   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000494702	 8         	 0         	 0         	 32.3427   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000451574	 100       	 0         	 0         	 8.85791   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000443434	 100       	 1.12756   	 0         	 13.5308   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, n: 50, r: 79, r2: 50)             	 0.000421871	 1         	 73.9681   	 0         	 9.73757   	 7.59615   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000410079	 101       	 0.615735  	 0         	 9.85176   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000405637	 101       	 0         	 0         	 9.95964   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 79)                                                                                 	 0.000366331	 101       	 1.08904   	 0         	 17.4247   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000323106	 100       	 0.77374   	 0         	 12.3798   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 79, reductionFactor: 37, colBlockingSize: 12)                    	 7.5272e-05	 1         	 8.51535   	 0         	 1.08311   	 7.86193   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4221e-05	 1         	 3.65273   	 0         	 1.46109   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 79, r: 50, streamingCols: 20)                    	 3.0911e-05	 1         	 4.04387   	 0         	 1.61755   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 79, r2: 79)              	 2.984e-05 	 1         	 20.9149   	 0         	 3.79115   	 5.51676   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.544e-05 	 1         	 16.1917   	 0         	 3.88601   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.539e-05 	 9         	 0         	 0         	 23.3918   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.233e-05 	 2         	 0         	 0         	 6.48824   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.041e-05 	 1         	 0.480307  	 0         	 1.92123   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 79)                                                                                   	 8.72e-06  	 1         	 0.905963  	 0         	 3.62385   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 79)                                                           	 5.01e-06  	 1         	 0         	 0         	 12.6148   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3950, m: 0, k: 50)  	 4.661e-06 	 100       	 0         	 0         	 33898.3   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 79, m: 50, fromLeft: 1)                	 2.68e-06  	 1         	 0         	 0         	 23.5821   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.41373   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.41369   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.02668   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.02533   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.17892   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.61902   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.51193   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.38694   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.11146   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.958385  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.922727  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.80523   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.508826  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.188332  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.142076  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.118081  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0899338 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0815325 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0782428 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0696457 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0505056 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0461881 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0378066 	 1310      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0365678 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0365364 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0347392 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00932391	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00735228	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00582828	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0037626 	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00366118	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109952	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000950853	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000443434	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23405139666816 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23404954511360 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23404753184896 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23404551858432 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23404350531968 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23404149205504 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23403947879040 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23403746552576 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23403545226112 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23403343899648 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23403142573184 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23402941246720 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23402739920256 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23402538593792 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23402337267328 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23402135940864 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23401934614400 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23401733287936 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23401531961472 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23401330635008 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23401129308544 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23400927982080 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23400726655616 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23400525329152 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23400324002688 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23400122676224 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23399921349760 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23399720023296 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23399518696832 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23399317370368 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23399116043904 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23398914717440 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23398713386880 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23398512060416 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23398310733952 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23398109407488 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23397908081024 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23397706754560 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23397505428096 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23397304101632 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23397102775168 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23396901448704 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23396700122240 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23396498795776 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23396297469312 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23396096142848 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23395894816384 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23395693489920 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23395492163456 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23395290836992 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23395089510528 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23394888184064 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23394686857600 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23394485531136 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23394284204672 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23394082878208 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23393881551744 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23393680225280 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23393478898816 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23393277572352 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23393076245888 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23392874919424 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23392673592960 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23405034006272 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23405027415808 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 130, m: 130)                                                               	 1.39451   	 700       	 7.71976   	 0         	 0.20412   	 37.8197   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6500, cols: 130, reductionFactor: 37, colBlockingSize: 12)                 	 0.953706  	 600       	 141.954   	 0         	 4.33794   	 32.7239   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6500, r: 130, r2: 130, leftOrthog: 1)      	 0.857842  	 600       	 153.665   	 0         	 14.3736   	 10.6908   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 130, r1_: 130, n: 50, r2: 130)        	 0.722528  	 600       	 182.443   	 0         	 11.3395   	 16.0891   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6500, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.454103  	 700       	 131.719   	 0         	 6.49156   	 20.2908   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6500, Xcols: 80, r: 80, streamingCols: 0)                   	 0.175115  	 700       	 166.29    	 0         	 33.3604   	 4.98466   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 80, Qr2: 130)      	 0.138975  	 700       	 0         	 0         	 60.0397   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 130, reductionFactor: 37, colBlockingSize: 12)                 	 0.126682  	 100       	 68.5053   	 0         	 2.15911   	 31.7285   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 80, m: 6500)                                                                  	 0.0792989 	 700       	 0         	 0         	 73.4437   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 80, m: 80)                                                                  	 0.078982  	 809       	 6.99244   	 0         	 1.57986   	 4.426     
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 50, r2left: 50, r2right: 80)                	 0.0739037 	 700       	 0         	 0         	 78.8052   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4000, m: 50, k: 80) 	 0.0638438 	 700       	 350.857   	 0         	 45.9622   	 7.63359   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 130)                                                                	 0.0635619 	 100       	 3.57919   	 0         	 0.195715  	 18.2878   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 130, r2: 130, leftOrthog: 1)      	 0.0617818 	 100       	 136.772   	 0         	 13.0628   	 10.4704   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4000, m: 80, k: 80) 	 0.0583212 	 700       	 614.527   	 0         	 62.0673   	 9.90099   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6500, m: 80)                                                         	 0.0569716 	 700       	 0         	 0         	 102.226   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.0549126 	 101       	 60.4479   	 0         	 3.03703   	 19.9036   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6500, r: 50, r2: 50, leftOrthog: 1)        	 0.0480557 	 100       	 67.6299   	 0         	 16.3144   	 4.14541   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 130, r1_: 50, n: 50, r2: 130)         	 0.0478375 	 100       	 176.64    	 0         	 19.6749   	 8.9779    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 80, m: 50, k: 2500)   	 0.04538   	 800       	 352.579   	 0         	 46.3993   	 7.59878   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.041706  	 100       	 2.09802   	 0         	 0.144823  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 130, r1_: 130, n: 50, r2: 50)         	 0.0408245 	 100       	 206.984   	 0         	 13.0686   	 15.8382   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 80, m: 2500, k: 50)	 0.0405584 	 800       	 394.493   	 0         	 51.9152   	 7.59878   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 80, n: 50, r2: 80)                                                                                         	 0.0341186 	 707       	 0         	 0         	 106.096   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0317347 	 100       	 105.179   	 0         	 8.25594   	 12.7398   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 80, r: 80, streamingCols: 0)                   	 0.0147985 	 101       	 109.2     	 0         	 22.0147   	 4.96032   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 130, reductionFactor: 37, colBlockingSize: 12)                   	 0.0144878 	 100       	 11.9803   	 0         	 1.29212   	 9.27177   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00942375	 109       	 1.92775   	 0         	 0.698618  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4000, m: 50, k: 50) 	 0.00884477	 100       	 226.122   	 0         	 36.4057   	 6.21118   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 80, m: 2500)                                                                  	 0.00758623	 101       	 0         	 0         	 42.6035   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 80)                                                         	 0.0070171 	 101       	 0         	 0         	 46.0589   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 50, r2left: 50, r2right: 0)                 	 0.00593147	 100       	 0         	 0         	 53.9495   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00503088	 8         	 19.8772   	 0         	 3.21216   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00420287	 101       	 6.17018   	 0         	 0.961248  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4000, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.00403712	 7         	 91.1756   	 0         	 4.52759   	 20.1378   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 50, r: 80, r2: 80)             	 0.0038322 	 7         	 93.5233   	 0         	 9.44585   	 9.90099   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 80, m: 80, fromLeft: 1)                	 0.0037061 	 808       	 0         	 0         	 22.3251   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 130, leftOrthog: 1)         	 0.00326823	 100       	 19.8885   	 0         	 5.99713   	 3.31633   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00269392	 8         	 38.1238   	 0         	 3.02904   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 80, n: 50, r2: 50)                                                                                         	 0.00255335	 101       	 0         	 0         	 126.579   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00201808	 8         	 24.776    	 0         	 7.96795   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 80, Qr2: 50)       	 0.00185998	 100       	 0         	 0         	 279.573   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 80, m: 4000)                                                                  	 0.00144591	 7         	 0         	 0         	 24.7872   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4000, Xcols: 80, r: 80, streamingCols: 0)                   	 0.00127792	 7         	 140.227   	 0         	 28.1857   	 4.97512   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00116918	 100       	 21.3825   	 0         	 5.13181   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4000, m: 80)                                                         	 0.00112337	 7         	 0         	 0         	 31.904    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 80, k: 80)   	 0.000961505	 100       	 66.5623   	 0         	 11.9812   	 5.55556   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 80)   	 0.000951697	 100       	 42.0302   	 0         	 8.82634   	 4.7619    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000943579	 201       	 0         	 0         	 8.52075   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000893239	 100       	 0.559761  	 0         	 2.23904   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 80)                                                                                          	 0.000875663	 201       	 0         	 0         	 14.6906   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000850662	 100       	 29.3889   	 0         	 7.05333   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000665597	 100       	 37.5603   	 0         	 9.01446   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000634026	 8         	 0         	 0         	 25.2356   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000584917	 8         	 0         	 0         	 27.3543   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 80)                 	 0.000576481	 100       	 0         	 0         	 18.0405   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000528566	 100       	 0         	 0         	 7.56765   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000501804	 100       	 0         	 0         	 7.97124   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000470597	 100       	 0         	 0         	 8.49984   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00046425	 100       	 1.07701   	 0         	 12.9241   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 50, r: 80, r2: 50)             	 0.000420701	 1         	 76.0635   	 0         	 9.96432   	 7.63359   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00041442	 101       	 0.609285  	 0         	 9.74856   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 80)                                                                                 	 0.000381999	 101       	 1.05759   	 0         	 16.9215   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000380076	 101       	 0         	 0         	 10.6295   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00032885	 100       	 0.760225  	 0         	 12.1636   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 80, reductionFactor: 37, colBlockingSize: 12)                    	 7.7702e-05	 1         	 8.45921   	 0         	 1.07076   	 7.90021   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.1991e-05	 1         	 3.90735   	 0         	 1.56294   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 80, r: 50, streamingCols: 20)                    	 3.0111e-05	 1         	 4.15131   	 0         	 1.66052   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 80, r2: 80)              	 1.917e-05 	 1         	 33.3855   	 0         	 6.00939   	 5.55556   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.524e-05 	 9         	 0         	 0         	 23.622    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.436e-05 	 1         	 17.4095   	 0         	 4.17827   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.0781e-05	 2         	 0         	 0         	 7.42046   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.4e-06   	 1         	 0.531915  	 0         	 2.12766   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 80)                                                                                   	 8.111e-06 	 1         	 0.986315  	 0         	 3.94526   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 80)                                                           	 5e-06     	 1         	 0         	 0         	 12.8      	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4000, m: 0, k: 50)  	 4.4e-06   	 100       	 0         	 0         	 36363.6   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 80, m: 50, fromLeft: 1)                	 2.75e-06  	 1         	 0         	 0         	 23.2727   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.48217   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.48213   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.06975   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.06843   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.22041   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.64664   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.49978   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.4123    	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.12735   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.979115  	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.970948  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.81204   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.520592  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.193272  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.141305  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.132927  	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0889267 	 818       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0884057 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0809135 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0661312 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0465491 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.041224  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0390198 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0351696 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.032624  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0325948 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00931732	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00538156	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00494113	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00423236	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00372409	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112527	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00091075	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00046425	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22444965402496 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22444760885248 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22444559558784 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22444358232320 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22444156905856 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22443955579392 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22443754252928 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22443552926464 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22443351600000 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22443150273536 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22442948947072 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22442747620608 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22442546294144 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22442344967680 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22442143641216 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22441942314752 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22441740988288 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22441539661824 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22441338335360 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22441137008896 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22440935682432 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22440734355968 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22440533029504 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22440331703040 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22440130376576 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22439929050112 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22439727723648 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22439526397184 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22439325070720 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22439123744256 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22438922417792 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22438721091328 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22438519760768 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22438318434304 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22438117107840 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22437915781376 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22437714454912 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22437513128448 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22437311801984 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22437110475520 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22436909149056 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22436707822592 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22436506496128 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22436305169664 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22436103843200 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22435902516736 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22435701190272 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22435499863808 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22435298537344 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22435097210880 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22434895884416 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22434694557952 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22434493231488 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22434291905024 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22434090578560 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22433889252096 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22433687925632 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22433486599168 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22433285272704 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22433083946240 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22432882619776 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22432681293312 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22432479966848 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22444859741952 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22444853151488 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 131, m: 131)                                                               	 1.45139   	 700       	 7.58975   	 0         	 0.199147  	 38.1114   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6550, cols: 131, reductionFactor: 37, colBlockingSize: 12)                 	 0.977272  	 600       	 141.753   	 0         	 4.29872   	 32.9756   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6550, r: 131, r2: 131, leftOrthog: 1)      	 0.930929  	 600       	 144.893   	 0         	 13.4496   	 10.773    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 131, r1_: 131, n: 50, r2: 131)        	 0.76244   	 600       	 176.913   	 0         	 10.9119   	 16.2129   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6550, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.466647  	 700       	 132.414   	 0         	 6.44561   	 20.5433   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6550, Xcols: 81, r: 81, streamingCols: 0)                   	 0.176994  	 700       	 169.962   	 0         	 33.6765   	 5.0469    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 81, Qr2: 131)      	 0.134377  	 700       	 0         	 0         	 63.0774   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 131, reductionFactor: 37, colBlockingSize: 12)                 	 0.12782   	 100       	 68.9439   	 0         	 2.15716   	 31.9604   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 81, m: 81)                                                                  	 0.0857251 	 809       	 6.68704   	 0         	 1.49213   	 4.48156   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, n: 50, r2left: 50, r2right: 81)                	 0.0748272 	 700       	 0         	 0         	 79.4117   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6550, m: 81)                                                         	 0.0666104 	 700       	 0         	 0         	 89.2077   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4050, m: 50, k: 81) 	 0.0645821 	 700       	 355.57    	 0         	 46.3559   	 7.67045   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 131)                                                                	 0.0633969 	 100       	 3.61611   	 0         	 0.197486  	 18.3107   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 131, r2: 131, leftOrthog: 1)      	 0.0609688 	 100       	 140.736   	 0         	 13.3422   	 10.5482   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 81, m: 6550)                                                                  	 0.0603615 	 700       	 0         	 0         	 98.4428   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 81, m: 50, k: 2500)   	 0.057106  	 800       	 283.683   	 0         	 37.1575   	 7.6346    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.0567065 	 101       	 60.0082   	 0         	 2.97887   	 20.1446   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6550, r: 50, r2: 50, leftOrthog: 1)        	 0.0517418 	 100       	 63.2951   	 0         	 15.2681   	 4.14557   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 131, r1_: 50, n: 50, r2: 131)         	 0.0517168 	 100       	 165.913   	 0         	 18.4404   	 8.99725   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4050, m: 81, k: 81) 	 0.0471669 	 700       	 788.707   	 0         	 78.6759   	 10.0248   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0422004 	 100       	 2.07344   	 0         	 0.143126  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 81, m: 2500, k: 50)	 0.0416322 	 800       	 389.122   	 0         	 50.9682   	 7.6346    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 131, r1_: 131, n: 50, r2: 50)         	 0.0396822 	 100       	 216.23    	 0         	 13.5509   	 15.9569   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 81, n: 50, r2: 81)                                                                                         	 0.0384171 	 707       	 0         	 0         	 96.595    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0333519 	 100       	 100.849   	 0         	 7.91558   	 12.7406   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0176346 	 8         	 5.67066   	 0         	 0.916378  	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 81, r: 81, streamingCols: 0)                   	 0.0157602 	 101       	 105.116   	 0         	 20.9319   	 5.02182   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 131, reductionFactor: 37, colBlockingSize: 12)                   	 0.015413  	 100       	 11.435    	 0         	 1.2307    	 9.29147   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4050, m: 50, k: 50) 	 0.00966769	 100       	 209.461   	 0         	 33.7206   	 6.21166   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00964067	 109       	 1.88437   	 0         	 0.682899  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 81)                                                         	 0.00722492	 101       	 0         	 0         	 45.2933   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 81, m: 2500)                                                                  	 0.00605577	 101       	 0         	 0         	 54.0377   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, n: 50, r2left: 50, r2right: 0)                 	 0.00582489	 100       	 0         	 0         	 55.6234   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00436328	 101       	 5.94333   	 0         	 0.925908  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4050, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.00426625	 7         	 89.5549   	 0         	 4.3922    	 20.3895   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 81, m: 81, fromLeft: 1)                	 0.00379098	 808       	 0         	 0         	 22.3743   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, n: 50, r: 81, r2: 81)             	 0.00370778	 7         	 100.332   	 0         	 10.0084   	 10.0248   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268609	 8         	 38.235    	 0         	 3.03787   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 81, n: 50, r2: 50)                                                                                         	 0.00255408	 101       	 0         	 0         	 128.124   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 131, leftOrthog: 1)         	 0.00208595	 100       	 31.4006   	 0         	 9.45375   	 3.3215    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00201093	 8         	 24.8641   	 0         	 7.99628   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 81, Qr2: 50)       	 0.0018754 	 100       	 0         	 0         	 279.406   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 81, m: 4050)                                                                  	 0.00134901	 7         	 0         	 0         	 27.2361   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4050, Xcols: 81, r: 81, streamingCols: 0)                   	 0.00128446	 7         	 144.812   	 0         	 28.7478   	 5.03731   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00108742	 100       	 22.9901   	 0         	 5.51763   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 81)                                                                                          	 0.0010832 	 201       	 0         	 0         	 12.0244   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4050, m: 81)                                                         	 0.00107746	 7         	 0         	 0         	 34.1002   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 81, k: 81)   	 0.00104756	 100       	 62.6315   	 0         	 11.1963   	 5.59392   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 81)   	 0.000986989	 100       	 41.0339   	 0         	 8.59179   	 4.77594   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000901659	 100       	 0.554533  	 0         	 2.21813   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000859987	 100       	 29.0702   	 0         	 6.97685   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000762425	 201       	 0         	 0         	 10.5453   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000691119	 8         	 0         	 0         	 23.1509   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000680061	 100       	 36.7614   	 0         	 8.82274   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000575955	 8         	 0         	 0         	 27.7799   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 81)                 	 0.000574239	 100       	 0         	 0         	 18.2502   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000504649	 100       	 0         	 0         	 7.9263    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000491024	 100       	 0         	 0         	 8.14624   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000468028	 100       	 1.06831   	 0         	 12.8197   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, n: 50, r: 81, r2: 50)             	 0.000464953	 1         	 70.5555   	 0         	 9.19835   	 7.67045   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000438972	 100       	 0         	 0         	 9.1122    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000425701	 101       	 0.593139  	 0         	 9.49023   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000408561	 101       	 0         	 0         	 9.88836   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 81)                                                                                 	 0.000364997	 101       	 1.12069   	 0         	 17.9311   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000324386	 100       	 0.770687  	 0         	 12.331    	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 81, reductionFactor: 37, colBlockingSize: 12)                    	 8.0262e-05	 1         	 8.39541   	 0         	 1.05764   	 7.9379    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6221e-05	 1         	 3.45104   	 0         	 1.38041   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 81, r: 50, streamingCols: 18)                    	 2.7601e-05	 1         	 4.52882   	 0         	 1.81153   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 81, r2: 81)              	 1.863e-05 	 1         	 35.2174   	 0         	 6.29565   	 5.59392   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5511e-05	 9         	 0         	 0         	 23.2093   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.398e-05 	 1         	 17.8827   	 0         	 4.29185   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.089e-05 	 2         	 0         	 0         	 7.34619   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.53e-06  	 1         	 0.524659  	 0         	 2.09864   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 81)                                                                                   	 9.4e-06   	 1         	 0.861702  	 0         	 3.44681   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4050, m: 0, k: 50)  	 7.1e-06   	 100       	 0         	 0         	 22816.9   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 81)                                                           	 5.4e-06   	 1         	 0         	 0         	 12        	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 81, m: 50, fromLeft: 1)                	 2.86e-06  	 1         	 0         	 0         	 22.6573   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.71746   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.71742   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.2908    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.28948   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.40178   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.68861   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.55698   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.42655   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.15454   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.04573   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.994094  	 918       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.854699  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.535295  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.196113  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.136692  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.123458  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0953658 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0817174 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0760178 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0683532 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0581935 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0454428 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0454118 	 2         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0433215 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0423123 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0358291 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.02184   	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00754599	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00433024	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00380935	 818       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00257533	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111508	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000920589	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000468028	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22899579291520 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22899356329984 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22899155003520 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22898953677056 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22898752350592 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22898551024128 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22898349697664 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22898148371200 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22897947044736 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22897745718272 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22897544391808 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22897343065344 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22897141738880 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22896940412416 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22896739085952 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22896537759488 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22896336433024 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22896135106560 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22895933780096 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22895732453632 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22895531127168 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22895329800704 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22895128474240 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22894927147776 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22894725821312 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22894524494848 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22894323168384 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22894121841920 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22893920515456 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22893719188992 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22893517862528 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22893316536064 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22893115205504 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22892913879040 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22892712552576 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22892511226112 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22892309899648 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22892108573184 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22891907246720 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22891705920256 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22891504593792 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22891303267328 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22891101940864 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22890900614400 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22890699287936 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22890497961472 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22890296635008 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22890095308544 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22889893982080 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22889692655616 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22889491329152 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22889290002688 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22889088676224 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22888887349760 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22888686023296 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22888484696832 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22888283370368 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22888082043904 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22887880717440 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22887679390976 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22887478064512 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22887276738048 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22887075411584 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22899473630976 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22899467040512 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 132, m: 132)                                                               	 1.4223    	 700       	 7.92368   	 0         	 0.20633   	 38.403    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6600, cols: 132, reductionFactor: 37, colBlockingSize: 12)                 	 0.999069  	 600       	 141.86    	 0         	 4.26937   	 33.2273   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6600, r: 132, r2: 132, leftOrthog: 1)      	 0.89815   	 600       	 153.647   	 0         	 14.1542   	 10.8553   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 132, r1_: 132, n: 50, r2: 132)        	 0.745089  	 600       	 185.21    	 0         	 11.3371   	 16.3366   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6600, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.481402  	 700       	 132.548   	 0         	 6.37382   	 20.7957   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6600, Xcols: 82, r: 82, streamingCols: 0)                   	 0.181285  	 700       	 171.359   	 0         	 33.5398   	 5.10913   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 82, Qr2: 132)      	 0.142284  	 700       	 0         	 0         	 60.5087   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 132, reductionFactor: 37, colBlockingSize: 12)                 	 0.129502  	 100       	 69.0913   	 0         	 2.14622   	 32.1921   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 82, m: 82)                                                                  	 0.0892184 	 809       	 6.66612   	 0         	 1.46925   	 4.5371    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6600, m: 82)                                                         	 0.0752707 	 700       	 0         	 0         	 80.5285   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, n: 50, r2left: 50, r2right: 82)                	 0.074362  	 700       	 0         	 0         	 81.5126   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 132)                                                                	 0.0646832 	 100       	 3.57125   	 0         	 0.194796  	 18.3333   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4100, m: 50, k: 82) 	 0.0639197 	 700       	 368.181   	 0         	 47.7737   	 7.70677   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 82, m: 6600)                                                                  	 0.0605703 	 700       	 0         	 0         	 100.073   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 132, r2: 132, leftOrthog: 1)      	 0.0601081 	 100       	 144.939   	 0         	 13.6401   	 10.626    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.0571268 	 101       	 61.0465   	 0         	 2.99462   	 20.3854   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 82, m: 50, k: 2500)   	 0.0537877 	 800       	 304.903   	 0         	 39.7534   	 7.66986   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 132, r1_: 50, n: 50, r2: 132)         	 0.0518184 	 100       	 168.126   	 0         	 18.6467   	 9.01639   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6600, r: 50, r2: 50, leftOrthog: 1)        	 0.0503628 	 100       	 65.5246   	 0         	 15.8053   	 4.14573   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4100, m: 82, k: 82) 	 0.0486744 	 700       	 792.938   	 0         	 78.1334   	 10.1485   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 82, m: 2500, k: 50)	 0.0403885 	 800       	 406.056   	 0         	 52.9418   	 7.66986   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0402369 	 100       	 2.17462   	 0         	 0.150111  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 132, r1_: 132, n: 50, r2: 50)         	 0.0401151 	 100       	 217.175   	 0         	 13.5096   	 16.0756   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 82, n: 50, r2: 82)                                                                                         	 0.0391224 	 707       	 0         	 0         	 97.2102   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0334753 	 100       	 101.245   	 0         	 7.94616   	 12.7413   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 82, r: 82, streamingCols: 0)                   	 0.015113  	 101       	 112.341   	 0         	 22.0999   	 5.08332   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 132, reductionFactor: 37, colBlockingSize: 12)                   	 0.013785  	 100       	 12.9815   	 0         	 1.39421   	 9.31096   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4100, m: 50, k: 50) 	 0.00981064	 100       	 208.957   	 0         	 33.6369   	 6.21212   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00968835	 109       	 1.8751    	 0         	 0.679538  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 82, m: 2500)                                                                  	 0.00633548	 101       	 0         	 0         	 52.2897   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 82)                                                         	 0.00563757	 101       	 0         	 0         	 58.763    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0052165 	 8         	 19.1699   	 0         	 3.09786   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00501879	 101       	 5.16707   	 0         	 0.804976  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, n: 50, r2left: 50, r2right: 0)                 	 0.00486767	 100       	 0         	 0         	 67.3833   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4100, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.00425731	 7         	 93.1079   	 0         	 4.51077   	 20.6412   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 82, m: 82, fromLeft: 1)                	 0.00405231	 808       	 0         	 0         	 21.4515   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, n: 50, r: 82, r2: 82)             	 0.00374228	 7         	 103.134   	 0         	 10.1625   	 10.1485   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 82, n: 50, r2: 50)                                                                                         	 0.00294028	 101       	 0         	 0         	 112.67    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 132, leftOrthog: 1)         	 0.00289242	 100       	 22.8183   	 0         	 6.85931   	 3.32661   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00262381	 8         	 39.1426   	 0         	 3.10998   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 82, Qr2: 50)       	 0.002264  	 100       	 0         	 0         	 233.215   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00195752	 8         	 25.5425   	 0         	 8.21447   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 82, m: 4100)                                                                  	 0.00147049	 7         	 0         	 0         	 25.6067   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4100, Xcols: 82, r: 82, streamingCols: 0)                   	 0.00133976	 7         	 144.04    	 0         	 28.2459   	 5.0995    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00107142	 100       	 23.3336   	 0         	 5.60006   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 82, k: 82)   	 0.00100572	 100       	 66.8578   	 0         	 11.8713   	 5.63187   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4100, m: 82)                                                         	 0.000998127	 7         	 0         	 0         	 37.7251   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000984018	 100       	 25.406    	 0         	 6.09745   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 82)   	 0.00097541	 100       	 42.0336   	 0         	 8.7758    	 4.78972   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000910945	 100       	 0.548881  	 0         	 2.19552   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 82)                                                                                          	 0.000886703	 201       	 0         	 0         	 14.8704   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00077847	 201       	 0         	 0         	 10.328    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000663574	 100       	 37.6748   	 0         	 9.04195   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000662447	 8         	 0         	 0         	 24.1529   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 82)                 	 0.000562906	 100       	 0         	 0         	 18.7598   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000536237	 8         	 0         	 0         	 29.8376   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000506775	 100       	 0         	 0         	 7.89305   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000503313	 100       	 0         	 0         	 7.94734   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000468674	 100       	 1.06684   	 0         	 12.8021   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000451255	 100       	 0         	 0         	 8.86417   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, n: 50, r: 82, r2: 50)             	 0.000431452	 1         	 77.9229   	 0         	 10.111    	 7.70677   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000393499	 101       	 0         	 0         	 10.2669   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000384079	 101       	 0.657417  	 0         	 10.5187   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 82)                                                                                 	 0.00038181	 101       	 1.08457   	 0         	 17.3531   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000327392	 100       	 0.763611  	 0         	 12.2178   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 82, reductionFactor: 37, colBlockingSize: 12)                    	 8.1652e-05	 1         	 8.45751   	 0         	 1.0605    	 7.97502   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.7471e-05	 1         	 2.63319   	 0         	 1.05327   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 82, r: 50, streamingCols: 18)                    	 2.9721e-05	 1         	 4.20578   	 0         	 1.68231   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 82, r2: 82)              	 1.727e-05 	 1         	 38.9346   	 0         	 6.91326   	 5.63187   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.684e-05 	 1         	 14.8456   	 0         	 3.56295   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.511e-05 	 9         	 0         	 0         	 23.8253   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.0331e-05	 2         	 0         	 0         	 7.74368   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 82)                                                                                   	 9.07e-06  	 1         	 0.904079  	 0         	 3.61632   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 7.77e-06  	 1         	 0.643501  	 0         	 2.574     	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4100, m: 0, k: 50)  	 4.801e-06 	 100       	 0         	 0         	 34159.6   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 82)                                                           	 3.97e-06  	 1         	 0         	 0         	 16.5239   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 82, m: 50, fromLeft: 1)                	 2.75e-06  	 1         	 0         	 0         	 23.8545   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.71452   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.71448   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.24712   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.24579   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.37424   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.72634   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.52722   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.46728   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.17654   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.03358   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.01151   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.838006  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.551137  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.199772  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.145     	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.124391  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0989068 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0829663 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0802959 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0689228 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0548591 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0442346 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0410521 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0363983 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0329758 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.032947  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00942435	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00907944	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00488678	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00416709	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00407017	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109328	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000927785	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000468674	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23091732072320 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23091556116480 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23091354790016 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23091153463552 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23090952137088 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23090750810624 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23090549484160 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23090348157696 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23090146831232 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23089945504768 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23089744178304 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23089542851840 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23089341525376 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23089140198912 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23088938872448 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23088737545984 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23088536219520 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23088334893056 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23088133566592 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23087932240128 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23087730913664 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23087529587200 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23087328260736 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23087126934272 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23086925607808 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23086724281344 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23086522954880 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23086321628416 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23086120301952 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23085918975488 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23085717649024 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23085516322560 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23085314992000 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23085113665536 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23084912339072 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23084711012608 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23084509686144 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23084308359680 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23084107033216 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23083905706752 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23083704380288 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23083503053824 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23083301727360 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23083100400896 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23082899074432 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23082697747968 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23082496421504 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23082295095040 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23082093768576 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23081892442112 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23081691115648 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23081489789184 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23081288462720 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23081087136256 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23080885809792 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23080684483328 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23080483156864 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23080281830400 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23080080503936 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23079879177472 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23079677851008 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23079476524544 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23079275198080 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23091626411776 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23091447809792 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 133, m: 133)                                                               	 1.48723   	 700       	 7.75125   	 0         	 0.200318  	 38.6947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6650, cols: 133, reductionFactor: 37, colBlockingSize: 12)                 	 1.00321   	 600       	 144.509   	 0         	 4.3164    	 33.4791   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6650, r: 133, r2: 133, leftOrthog: 1)      	 0.917538  	 600       	 153.845   	 0         	 14.0658   	 10.9375   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 133, r1_: 133, n: 50, r2: 133)        	 0.782932  	 600       	 180.294   	 0         	 10.9532   	 16.4604   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6650, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.485975  	 700       	 135.542   	 0         	 6.43963   	 21.0481   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6650, Xcols: 83, r: 83, streamingCols: 0)                   	 0.184808  	 700       	 173.523   	 0         	 33.5545   	 5.17136   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 83, Qr2: 133)      	 0.144138  	 700       	 0         	 0         	 60.663    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 133, reductionFactor: 37, colBlockingSize: 12)                 	 0.132819  	 100       	 68.3904   	 0         	 2.10927   	 32.4237   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 83, m: 83)                                                                  	 0.092575  	 809       	 6.66235   	 0         	 1.45065   	 4.59266   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, n: 50, r2left: 50, r2right: 83)                	 0.0792654 	 700       	 0         	 0         	 77.9891   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4150, m: 50, k: 83) 	 0.0704269 	 700       	 342.362   	 0         	 44.2183   	 7.74254   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6650, m: 83)                                                         	 0.0690976 	 700       	 0         	 0         	 89.4653   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 133)                                                                	 0.0648407 	 100       	 3.58957   	 0         	 0.195556  	 18.3557   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 83, m: 6650)                                                                  	 0.0618381 	 700       	 0         	 0         	 99.9682   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 133, r2: 133, leftOrthog: 1)      	 0.0615856 	 100       	 143.613   	 0         	 13.4171   	 10.7037   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.0589691 	 101       	 60.5905   	 0         	 2.93758   	 20.626    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 83, m: 50, k: 2500)   	 0.0551414 	 800       	 301.044   	 0         	 39.0734   	 7.70459   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4150, m: 83, k: 83) 	 0.0523912 	 700       	 763.967   	 0         	 74.3717   	 10.2723   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 133, r1_: 50, n: 50, r2: 133)         	 0.0520085 	 100       	 170.059   	 0         	 18.8215   	 9.03533   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6650, r: 50, r2: 50, leftOrthog: 1)        	 0.0517969 	 100       	 64.1931   	 0         	 15.4836   	 4.14589   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 83, n: 50, r2: 83)                                                                                         	 0.0422476 	 707       	 0         	 0         	 92.2283   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0421553 	 100       	 2.07566   	 0         	 0.14328   	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 83, m: 2500, k: 50)	 0.0417365 	 800       	 397.734   	 0         	 51.623    	 7.70459   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 133, r1_: 133, n: 50, r2: 50)         	 0.0409896 	 100       	 215.774   	 0         	 13.3241   	 16.1942   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0339323 	 100       	 100.637   	 0         	 7.89807   	 12.742    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 83, r: 83, streamingCols: 0)                   	 0.0159158 	 101       	 109.292   	 0         	 21.2433   	 5.1448    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 133, reductionFactor: 37, colBlockingSize: 12)                   	 0.0154322 	 100       	 11.7722   	 0         	 1.26173   	 9.33023   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00932529	 109       	 1.9481    	 0         	 0.705994  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4150, m: 50, k: 50) 	 0.00808936	 100       	 256.51    	 0         	 41.2888   	 6.21257   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 83)                                                         	 0.00680568	 101       	 0         	 0         	 49.2706   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 83, m: 2500)                                                                  	 0.00607814	 101       	 0         	 0         	 55.1682   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, n: 50, r2left: 50, r2right: 0)                 	 0.00576727	 100       	 0         	 0         	 57.5662   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00572343	 8         	 17.472    	 0         	 2.82348   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4150, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.00445367	 7         	 92.2988   	 0         	 4.4177    	 20.893    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00411559	 101       	 6.30102   	 0         	 0.981633  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 83, m: 83, fromLeft: 1)                	 0.00396   	 808       	 0         	 0         	 22.4902   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, n: 50, r: 83, r2: 83)             	 0.00395077	 7         	 101.31    	 0         	 9.86244   	 10.2723   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00279458	 8         	 36.7506   	 0         	 2.91993   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 83, n: 50, r2: 50)                                                                                         	 0.0027293 	 101       	 0         	 0         	 122.86    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 133, leftOrthog: 1)         	 0.00234262	 100       	 28.387    	 0         	 8.52037   	 3.33166   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00213923	 8         	 23.3729   	 0         	 7.51672   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 83, Qr2: 50)       	 0.0018871 	 100       	 0         	 0         	 281.914   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 83, m: 4150)                                                                  	 0.00143477	 7         	 0         	 0         	 26.8882   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4150, Xcols: 83, r: 83, streamingCols: 0)                   	 0.0013618 	 7         	 146.957   	 0         	 28.4707   	 5.16169   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00124257	 100       	 20.1195   	 0         	 4.82869   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 83)   	 0.00104289	 100       	 39.7932   	 0         	 8.28465   	 4.80324   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 83, k: 83)   	 0.00103314	 100       	 66.6801   	 0         	 11.7614   	 5.6694    
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000960576	 100       	 0.520521  	 0         	 2.08208   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4150, m: 83)                                                         	 0.000925255	 7         	 0         	 0         	 41.6949   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 83)                                                                                          	 0.000911157	 201       	 0         	 0         	 14.6478   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000897342	 100       	 27.8601   	 0         	 6.68641   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000793455	 201       	 0         	 0         	 10.1329   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000754862	 8         	 0         	 0         	 21.1959   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00066084	 100       	 37.8306   	 0         	 9.07935   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 83)                 	 0.00057244	 100       	 0         	 0         	 18.5871   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000552616	 8         	 0         	 0         	 28.9532   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000498429	 100       	 0         	 0         	 8.02522   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000483821	 100       	 1.03344   	 0         	 12.4013   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000483315	 100       	 0         	 0         	 8.27618   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, n: 50, r: 83, r2: 50)             	 0.000469092	 1         	 73.4291   	 0         	 9.48385   	 7.74254   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000459391	 100       	 0         	 0         	 8.70718   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000416341	 101       	 0.606474  	 0         	 9.70358   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000415397	 101       	 0         	 0         	 9.72564   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 83)                                                                                 	 0.000389482	 101       	 1.07617   	 0         	 17.2188   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000332461	 100       	 0.751968  	 0         	 12.0315   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 83, reductionFactor: 37, colBlockingSize: 12)                    	 8.3822e-05	 1         	 8.44073   	 0         	 1.05357   	 8.01158   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3471e-05	 1         	 3.73458   	 0         	 1.49383   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 83, r: 50, streamingCols: 15)                    	 2.623e-05 	 1         	 4.76554   	 0         	 1.90621   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 83, r2: 83)              	 2.2881e-05	 1         	 30.1079   	 0         	 5.31061   	 5.6694    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.556e-05 	 1         	 16.0668   	 0         	 3.85604   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.532e-05 	 9         	 0         	 0         	 23.4987   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.1061e-05	 2         	 0         	 0         	 7.23262   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.501e-06 	 1         	 0.52626   	 0         	 2.10504   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 83)                                                                                   	 9.29e-06  	 1         	 0.893434  	 0         	 3.57374   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4150, m: 0, k: 50)  	 4.761e-06 	 100       	 0         	 0         	 34866.6   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 83)                                                           	 4.04e-06  	 1         	 0         	 0         	 16.4356   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 83, m: 50, fromLeft: 1)                	 2.82e-06  	 1         	 0         	 0         	 23.5461   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.85078   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.85074   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.36121   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.35982   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.45311   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.74179   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.59423   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.48947   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.1861    	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.03561   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.03326   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.876828  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.556937  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.204284  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.146484  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.132988  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.1019    	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0860885 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0780028 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0699147 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.056384  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0471799 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0423973 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0368093 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0342994 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0342692 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0101817 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0058082 	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00541004	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00415949	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00397814	 818       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113828	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000979367	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000483821	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23391229663104 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23390995867648 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23390794541184 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23390593214720 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23390391888256 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23390190561792 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23389989235328 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23389787908864 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23389586582400 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23389385255936 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23389183929472 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23388982603008 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23388781276544 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23388579950080 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23388378623616 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23388177297152 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23387975970688 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23387774644224 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23387573317760 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23387371991296 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23387170664832 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23386969338368 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23386768011904 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23386566685440 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23386365358976 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23386164032512 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23385962706048 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23385761379584 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23385560053120 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23385358726656 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23385157400192 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23384956073728 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23384754743168 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23384553416704 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23384352090240 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23384150763776 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23383949437312 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23383748110848 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23383546784384 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23383345457920 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23383144131456 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23382942804992 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23382741478528 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23382540152064 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23382338825600 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23382137499136 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23381936172672 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23381734846208 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23381533519744 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23381332193280 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23381130866816 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23380929540352 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23380728213888 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23380526887424 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23380325560960 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23380124234496 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23379922908032 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23379721581568 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23379520255104 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23379318928640 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23379117602176 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23378916275712 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23378714949248 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23391124002560 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23391117412096 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 134, m: 134)                                                               	 1.45474   	 700       	 8.10449   	 0         	 0.20788   	 38.9864   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6700, cols: 134, reductionFactor: 37, colBlockingSize: 12)                 	 1.0178    	 600       	 145.675   	 0         	 4.31876   	 33.7308   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6700, r: 134, r2: 134, leftOrthog: 1)      	 0.931894  	 600       	 154.917   	 0         	 14.0581   	 11.0197   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 134, r1_: 134, n: 50, r2: 134)        	 0.797628  	 600       	 180.995   	 0         	 10.9137   	 16.5842   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6700, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.507457  	 700       	 133.95    	 0         	 6.2886    	 21.3005   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6700, Xcols: 84, r: 84, streamingCols: 0)                   	 0.187221  	 700       	 176.757   	 0         	 33.7735   	 5.2336    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 84, Qr2: 134)      	 0.144802  	 700       	 0         	 0         	 61.3209   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 134, reductionFactor: 37, colBlockingSize: 12)                 	 0.133742  	 100       	 68.9438   	 0         	 2.11127   	 32.6551   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 84, m: 84)                                                                  	 0.0895789 	 809       	 7.13706   	 0         	 1.53544   	 4.64822   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 84, m: 6700)                                                                  	 0.0876366 	 700       	 0         	 0         	 71.9261   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, n: 50, r2left: 50, r2right: 84)                	 0.0784007 	 700       	 0         	 0         	 80.3993   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4200, m: 50, k: 84) 	 0.0737556 	 700       	 334.836   	 0         	 43.0503   	 7.77778   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 134)                                                                	 0.065397  	 100       	 3.58579   	 0         	 0.195116  	 18.3777   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6700, m: 84)                                                         	 0.0635088 	 700       	 0         	 0         	 99.2518   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.0618857 	 101       	 59.1346   	 0         	 2.83396   	 20.8665   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 134, r2: 134, leftOrthog: 1)      	 0.0617023 	 100       	 145.505   	 0         	 13.4959   	 10.7814   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 84, m: 50, k: 2500)   	 0.0529691 	 800       	 317.166   	 0         	 40.9839   	 7.7388    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 134, r1_: 50, n: 50, r2: 134)         	 0.0529248 	 100       	 169.637   	 0         	 18.736    	 9.05405   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4200, m: 84, k: 84) 	 0.0521558 	 700       	 795.487   	 0         	 76.5183   	 10.396    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6700, r: 50, r2: 50, leftOrthog: 1)        	 0.0513951 	 100       	 65.1813   	 0         	 15.7213   	 4.14604   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 84, n: 50, r2: 84)                                                                                         	 0.0435808 	 707       	 0         	 0         	 91.5742   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0409557 	 100       	 2.13645   	 0         	 0.147476  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 134, r1_: 134, n: 50, r2: 50)         	 0.0398008 	 100       	 225.574   	 0         	 13.828    	 16.3128   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 84, m: 2500, k: 50)	 0.0384099 	 800       	 437.387   	 0         	 56.5188   	 7.7388    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0332126 	 100       	 103.592   	 0         	 8.12946   	 12.7427   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 84, r: 84, streamingCols: 0)                   	 0.0169939 	 101       	 104.84    	 0         	 20.1372   	 5.20627   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 134, reductionFactor: 37, colBlockingSize: 12)                   	 0.015075  	 100       	 12.2331   	 0         	 1.30845   	 9.34929   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00936292	 109       	 1.94027   	 0         	 0.703156  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4200, m: 50, k: 50) 	 0.008956  	 100       	 234.48    	 0         	 37.7401   	 6.21302   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 84, m: 2500)                                                                  	 0.00703005	 101       	 0         	 0         	 48.2728   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, n: 50, r2left: 50, r2right: 0)                 	 0.00570244	 100       	 0         	 0         	 58.9222   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 84)                                                         	 0.00565739	 101       	 0         	 0         	 59.9853   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00507094	 101       	 5.11393   	 0         	 0.796696  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00500462	 8         	 19.9816   	 0         	 3.22902   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4200, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.00454991	 7         	 93.6515   	 0         	 4.42908   	 21.1447   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 84, m: 84, fromLeft: 1)                	 0.00408737	 808       	 0         	 0         	 22.3175   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, n: 50, r: 84, r2: 84)             	 0.00399483	 7         	 103.858   	 0         	 9.9901    	 10.396    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 84, n: 50, r2: 50)                                                                                         	 0.00283357	 101       	 0         	 0         	 119.764   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00261237	 8         	 39.314    	 0         	 3.1236    	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 134, leftOrthog: 1)         	 0.00208287	 100       	 32.1672   	 0         	 9.64055   	 3.33665   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 84, Qr2: 50)       	 0.00195732	 100       	 0         	 0         	 273.844   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00186412	 8         	 26.8223   	 0         	 8.62606   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 84, m: 4200)                                                                  	 0.0014327 	 7         	 0         	 0         	 27.5799   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4200, Xcols: 84, r: 84, streamingCols: 0)                   	 0.00138749	 7         	 149.513   	 0         	 28.621    	 5.22388   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00110767	 100       	 22.5699   	 0         	 5.41679   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4200, m: 84)                                                         	 0.00109648	 7         	 0         	 0         	 36.0367   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 84)   	 0.00104562	 100       	 40.1677   	 0         	 8.33957   	 4.81651   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 84, k: 84)   	 0.000996647	 100       	 70.7974   	 0         	 12.4064   	 5.70652   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 84)                                                                                          	 0.000900984	 201       	 0         	 0         	 14.9916   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000869645	 100       	 28.7474   	 0         	 6.89937   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000827561	 100       	 0.604185  	 0         	 2.41674   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000775569	 201       	 0         	 0         	 10.3666   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000655515	 100       	 38.138    	 0         	 9.15311   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 84)                 	 0.000563495	 100       	 0         	 0         	 19.0241   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000562345	 8         	 0         	 0         	 28.4523   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000556615	 8         	 0         	 0         	 28.7452   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000517674	 100       	 0.965859  	 0         	 11.5903   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000513678	 100       	 0         	 0         	 7.78698   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000474254	 100       	 0         	 0         	 8.4343    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000464761	 100       	 0         	 0         	 8.60657   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, n: 50, r: 84, r2: 50)             	 0.000432141	 1         	 81.64     	 0         	 10.4966   	 7.77778   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000396508	 101       	 0         	 0         	 10.1889   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000375899	 101       	 0.671723  	 0         	 10.7476   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 84)                                                                                 	 0.000363063	 101       	 1.16839   	 0         	 18.6943   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000324492	 100       	 0.770435  	 0         	 12.327    	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 84, reductionFactor: 37, colBlockingSize: 12)                    	 8.3983e-05	 1         	 8.62877   	 0         	 1.07222   	 8.0476    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4251e-05	 1         	 3.64953   	 0         	 1.45981   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 84, r: 50, streamingCols: 19)                    	 2.8201e-05	 1         	 4.43247   	 0         	 1.77299   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 84, r2: 84)              	 2.026e-05 	 1         	 34.8272   	 0         	 6.10306   	 5.70652   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.5471e-05	 1         	 16.1593   	 0         	 3.87822   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.535e-05 	 9         	 0         	 0         	 23.4528   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.25e-05  	 2         	 0         	 0         	 6.4       	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.56e-06  	 1         	 0.584112  	 0         	 2.33645   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 84)                                                                                   	 7.95e-06  	 1         	 1.0566    	 0         	 4.22642   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4200, m: 0, k: 50)  	 4.91e-06  	 100       	 0         	 0         	 34215.9   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 84)                                                           	 4.85e-06  	 1         	 0         	 0         	 13.8557   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 84, m: 50, fromLeft: 1)                	 2.88e-06  	 1         	 0         	 0         	 23.3333   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.94368   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.9436    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.4139    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.41261   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.48827   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.78149   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.56109   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.52963   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.20049   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.08117   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.04707   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.891223  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.582151  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.207529  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.147224  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.136915  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0989418 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0966742 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0851409 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0712206 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0540768 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0486046 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0390654 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0379199 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0334661 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0334371 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00946731	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00853768	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00434687	 6472      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0041056 	 818       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00279745	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106345	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000844071	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000517674	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22480697132928 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22480462800896 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22480261474432 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22480060147968 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22479858821504 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22479657495040 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22479456168576 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22479254842112 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22479053515648 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22478852189184 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22478650862720 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22478449536256 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22478248209792 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22478046883328 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22477845556864 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22477644230400 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22477442903936 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22477241577472 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22477040251008 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22476838924544 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22476637598080 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22476436271616 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22476234945152 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22476033618688 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22475832292224 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22475630965760 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22475429639296 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22475228312832 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22475026986368 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22474825659904 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22474624333440 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22474423006976 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22474221676416 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22474020349952 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22473819023488 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22473617697024 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22473416370560 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22473215044096 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22473013717632 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22472812391168 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22472611064704 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22472409738240 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22472208411776 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22472007085312 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22471805758848 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22471604432384 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22471403105920 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22471201779456 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22471000452992 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22470799126528 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22470597800064 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22470396473600 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22470195147136 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22469993820672 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22469792494208 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22469591167744 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22469389841280 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22469188514816 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22468987188352 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22468785861888 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22468584535424 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22468383208960 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22468181882496 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22480591472384 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22480584881920 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 135, m: 135)                                                               	 1.51037   	 700       	 7.98204   	 0         	 0.203219  	 39.278    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6750, cols: 135, reductionFactor: 37, colBlockingSize: 12)                 	 1.01329   	 600       	 149.623   	 0         	 4.40294   	 33.9825   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6750, r: 135, r2: 135, leftOrthog: 1)      	 0.87592   	 600       	 168.534   	 0         	 15.1806   	 11.102    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 135, r1_: 135, n: 50, r2: 135)        	 0.795182  	 600       	 185.646   	 0         	 11.1113   	 16.7079   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6750, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.520019  	 700       	 134.844   	 0         	 6.25643   	 21.5529   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6750, Xcols: 85, r: 85, streamingCols: 0)                   	 0.192786  	 700       	 177.078   	 0         	 33.4372   	 5.29583   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 85, Qr2: 135)      	 0.15448   	 700       	 0         	 0         	 58.3636   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 135, reductionFactor: 37, colBlockingSize: 12)                 	 0.135857  	 100       	 68.8868   	 0         	 2.0947    	 32.8863   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 85, m: 85)                                                                  	 0.0946229 	 809       	 7.00079   	 0         	 1.48834   	 4.70377   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, n: 50, r2left: 50, r2right: 85)                	 0.0784064 	 700       	 0         	 0         	 81.9576   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4250, m: 50, k: 85) 	 0.0779347 	 700       	 324.47    	 0         	 41.5322   	 7.8125    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 135)                                                                	 0.0637748 	 100       	 3.70444   	 0         	 0.201333  	 18.3995   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 135, r2: 135, leftOrthog: 1)      	 0.0627329 	 100       	 145.259   	 0         	 13.3767   	 10.8591   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.0613737 	 101       	 61.0561   	 0         	 2.89274   	 21.1067   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 85, m: 6750)                                                                  	 0.0609829 	 700       	 0         	 0         	 105.374   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6750, m: 85)                                                         	 0.0602357 	 700       	 0         	 0         	 106.681   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6750, r: 50, r2: 50, leftOrthog: 1)        	 0.0577559 	 100       	 58.4356   	 0         	 14.0938   	 4.14619   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 85, m: 50, k: 2500)   	 0.0544335 	 800       	 312.307   	 0         	 40.1811   	 7.77249   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4250, m: 85, k: 85) 	 0.0543026 	 700       	 791.652   	 0         	 75.2535   	 10.5198   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 135, r1_: 50, n: 50, r2: 135)         	 0.0526285 	 100       	 173.148   	 0         	 19.0847   	 9.07258   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 85, n: 50, r2: 85)                                                                                         	 0.0427011 	 707       	 0         	 0         	 95.6992   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 85, m: 2500, k: 50)	 0.0425903 	 800       	 399.152   	 0         	 51.3544   	 7.77249   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0418296 	 100       	 2.09182   	 0         	 0.144395  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 135, r1_: 135, n: 50, r2: 50)         	 0.0406157 	 100       	 224.359   	 0         	 13.6543   	 16.4314   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0328082 	 100       	 105.651   	 0         	 8.29061   	 12.7434   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 85, r: 85, streamingCols: 0)                   	 0.0161553 	 101       	 112.924   	 0         	 21.4369   	 5.26772   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 135, reductionFactor: 37, colBlockingSize: 12)                   	 0.0143786 	 100       	 13.0177   	 0         	 1.38957   	 9.36815   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00947196	 109       	 1.91793   	 0         	 0.695062  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4250, m: 50, k: 50) 	 0.0083268 	 100       	 255.2     	 0         	 41.0722   	 6.21345   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 85)                                                         	 0.00620543	 101       	 0         	 0         	 55.3387   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 85, m: 2500)                                                                  	 0.00606213	 101       	 0         	 0         	 56.6468   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, n: 50, r2left: 50, r2right: 0)                 	 0.00562354	 100       	 0         	 0         	 60.4602   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00539774	 8         	 18.5263   	 0         	 2.99385   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4250, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.00471855	 7         	 93.5682   	 0         	 4.37308   	 21.3964   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 85, m: 85, fromLeft: 1)                	 0.00462319	 808       	 0         	 0         	 20.2035   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, n: 50, r: 85, r2: 85)             	 0.00396268	 7         	 108.484   	 0         	 10.3124   	 10.5198   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0037639 	 101       	 6.88978   	 0         	 1.07336   	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00265118	 8         	 38.7385   	 0         	 3.07787   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 85, n: 50, r2: 50)                                                                                         	 0.00263156	 101       	 0         	 0         	 130.493   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 135, leftOrthog: 1)         	 0.00200453	 100       	 33.6737   	 0         	 10.0772   	 3.34158   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00192886	 8         	 25.922    	 0         	 8.33653   	 3.10945   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 85, Qr2: 50)       	 0.00187848	 100       	 0         	 0         	 287.466   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4250, Xcols: 85, r: 85, streamingCols: 0)                   	 0.00140054	 7         	 153.472   	 0         	 29.0334   	 5.28607   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 85, m: 4250)                                                                  	 0.0013883 	 7         	 0         	 0         	 29.1436   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4250, m: 85)                                                         	 0.00111028	 7         	 0         	 0         	 36.4413   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00109546	 100       	 22.8215   	 0         	 5.47717   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 85, k: 85)   	 0.00105765	 100       	 68.3121   	 0         	 11.8944   	 5.74324   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 85)   	 0.00102643	 100       	 41.4055   	 0         	 8.57338   	 4.82955   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 85)                                                                                          	 0.000900482	 201       	 0         	 0         	 15.1785   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00087129	 100       	 0.573862  	 0         	 2.29545   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000850553	 8         	 0         	 0         	 18.8113   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000832531	 100       	 30.0289   	 0         	 7.20694   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000801223	 201       	 0         	 0         	 10.0347   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000649474	 100       	 38.4927   	 0         	 9.23825   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 85)                 	 0.000554025	 100       	 0         	 0         	 19.4937   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000528842	 100       	 0         	 0         	 7.5637    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000503604	 100       	 0         	 0         	 7.94275   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000499684	 8         	 0         	 0         	 32.0202   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000483398	 100       	 1.03434   	 0         	 12.4121   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00046396	 100       	 0         	 0         	 8.62143   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, n: 50, r: 85, r2: 50)             	 0.000454262	 1         	 79.5246   	 0         	 10.1791   	 7.8125    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000427326	 101       	 0         	 0         	 9.45414   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 85)                                                                                 	 0.000399385	 101       	 1.07478   	 0         	 17.1964   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000398297	 101       	 0.633949  	 0         	 10.1432   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000329098	 100       	 0.759652  	 0         	 12.1544   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 85, reductionFactor: 37, colBlockingSize: 12)                    	 8.6472e-05	 1         	 8.58112   	 0         	 1.06162   	 8.08308   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.1062e-05	 1         	 3.04418   	 0         	 1.21767   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 85, r: 50, streamingCols: 17)                    	 2.9601e-05	 1         	 4.22283   	 0         	 1.68913   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 85, r2: 85)              	 2.1391e-05	 1         	 33.7759   	 0         	 5.88098   	 5.74324   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.527e-05 	 9         	 0         	 0         	 23.5756   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.356e-05 	 1         	 18.4366   	 0         	 4.42478   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.1231e-05	 2         	 0         	 0         	 7.12314   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.59e-06  	 1         	 0.582072  	 0         	 2.32829   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 85)                                                                                   	 8.24e-06  	 1         	 1.03155   	 0         	 4.12621   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 85)                                                           	 4.89e-06  	 1         	 0         	 0         	 13.9059   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4250, m: 0, k: 50)  	 4.75e-06  	 100       	 0         	 0         	 35789.5   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 85, m: 50, fromLeft: 1)                	 3.03e-06  	 1         	 0         	 0         	 22.4422   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.96422   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.96418   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.4213    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.42001   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.49564   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.78895   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.61597   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.5428    	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.19705   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.07241   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.998413  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.889259  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.593176  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.212341  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.156822  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.142653  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.104095  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0851128 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0689442 	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0688342 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.055529  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.047538  	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0432398 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0383416 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0342864 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0342577 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.00984963	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00628919	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00523822	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00464149	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00385039	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112678	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00088812	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000483398	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22419643942784 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22419460843520 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22419259517056 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22419058190592 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22418856864128 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22418655537664 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22418454211200 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22418252884736 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22418051558272 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22417850231808 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22417648905344 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22417447578880 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22417246252416 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22417044925952 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22416843599488 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22416642273024 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22416440946560 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22416239620096 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22416038293632 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22415836967168 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22415635640704 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22415434314240 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22415232987776 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22415031661312 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22414830334848 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22414629008384 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22414427681920 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22414226355456 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22414025028992 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22413823702528 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22413622376064 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22413421049600 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22413219719040 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22413018392576 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22412817066112 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22412615739648 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22412414413184 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22412213086720 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22412011760256 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22411810433792 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22411609107328 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22411407780864 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22411206454400 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22411005127936 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22410803801472 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22410602475008 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22410401148544 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22410199822080 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22409998495616 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22409797169152 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22409595842688 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22409394516224 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22409193189760 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22408991863296 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22408790536832 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22408589210368 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22408387883904 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22408186557440 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22407985230976 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22407783904512 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22407582578048 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22407381251584 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22407179925120 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22419538282240 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22419531691776 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 136, m: 136)                                                               	 1.48856   	 700       	 8.28033   	 0         	 0.209259  	 39.5697   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6800, cols: 136, reductionFactor: 37, colBlockingSize: 12)                 	 1.0312    	 600       	 150.316   	 0         	 4.39081   	 34.2342   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6800, r: 136, r2: 136, leftOrthog: 1)      	 0.956767  	 600       	 157.747   	 0         	 14.1045   	 11.1842   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 136, r1_: 136, n: 50, r2: 136)        	 0.80137   	 600       	 188.337   	 0         	 11.1894   	 16.8317   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6800, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.523161  	 700       	 138.223   	 0         	 6.33896   	 21.8053   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6800, Xcols: 86, r: 86, streamingCols: 0)                   	 0.197241  	 700       	 178.487   	 0         	 33.3118   	 5.35806   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 86, Qr2: 136)      	 0.150498  	 700       	 0         	 0         	 60.823    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 136, reductionFactor: 37, colBlockingSize: 12)                 	 0.137267  	 100       	 69.1931   	 0         	 2.08933   	 33.1173   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 86, m: 86)                                                                  	 0.0956423 	 809       	 7.17352   	 0         	 1.50726   	 4.75933   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, n: 50, r2left: 50, r2right: 86)                	 0.0800132 	 700       	 0         	 0         	 81.8585   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6800, m: 86)                                                         	 0.0724703 	 700       	 0         	 0         	 90.3785   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4300, m: 50, k: 86) 	 0.0692159 	 700       	 373.989   	 0         	 47.6619   	 7.84672   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 136)                                                                	 0.0665438 	 100       	 3.57659   	 0         	 0.194158  	 18.4211   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 86, m: 6800)                                                                  	 0.0663562 	 700       	 0         	 0         	 98.706    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.064311  	 101       	 59.6465   	 0         	 2.79417   	 21.3468   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 136, r2: 136, leftOrthog: 1)      	 0.0620515 	 100       	 149.038   	 0         	 13.6273   	 10.9367   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4300, m: 86, k: 86) 	 0.0548219 	 700       	 812.156   	 0         	 76.3049   	 10.6436   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 86, m: 50, k: 2500)   	 0.0542889 	 800       	 316.823   	 0         	 40.5888   	 7.80569   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 136, r1_: 50, n: 50, r2: 136)         	 0.053559  	 100       	 172.669   	 0         	 18.9936   	 9.09091   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6800, r: 50, r2: 50, leftOrthog: 1)        	 0.0500234 	 100       	 67.9682   	 0         	 16.3923   	 4.14634   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 86, n: 50, r2: 86)                                                                                         	 0.0441659 	 707       	 0         	 0         	 94.7152   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0423895 	 100       	 2.06419   	 0         	 0.142488  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 136, r1_: 136, n: 50, r2: 50)         	 0.0414914 	 100       	 222.89    	 0         	 13.4678   	 16.5498   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 86, m: 2500, k: 50)	 0.0409422 	 800       	 420.104   	 0         	 53.8202   	 7.80569   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0343802 	 100       	 101.567   	 0         	 7.96969   	 12.7441   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 86, r: 86, streamingCols: 0)                   	 0.0164708 	 101       	 113.382   	 0         	 21.2757   	 5.32917   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 136, reductionFactor: 37, colBlockingSize: 12)                   	 0.0155815 	 100       	 12.1913   	 0         	 1.29877   	 9.38681   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4300, m: 50, k: 50) 	 0.00970091	 100       	 221.629   	 0         	 35.6668   	 6.21387   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00967064	 109       	 1.87853   	 0         	 0.680783  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 86)                                                         	 0.00784065	 101       	 0         	 0         	 44.3127   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 86, m: 2500)                                                                  	 0.00626825	 101       	 0         	 0         	 55.4286   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00518289	 8         	 19.2943   	 0         	 3.11795   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4300, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.00480361	 7         	 95.1936   	 0         	 4.39731   	 21.6481   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, n: 50, r2left: 50, r2right: 0)                 	 0.00462068	 100       	 0         	 0         	 74.4479   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 86, m: 86, fromLeft: 1)                	 0.00442623	 808       	 0         	 0         	 21.602    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, n: 50, r: 86, r2: 86)             	 0.00440892	 7         	 100.986   	 0         	 9.48799   	 10.6436   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4300, m: 86)                                                         	 0.00431052	 7         	 0         	 0         	 9.6085    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00391521	 101       	 6.62351   	 0         	 1.03187   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 86, n: 50, r2: 50)                                                                                         	 0.00274058	 101       	 0         	 0         	 126.776   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00268811	 8         	 38.2062   	 0         	 3.03559   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 86, Qr2: 50)       	 0.00258513	 100       	 0         	 0         	 210.435   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 136, leftOrthog: 1)         	 0.00252865	 100       	 26.8919   	 0         	 8.03592   	 3.34646   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00209609	 8         	 23.854    	 0         	 7.67144   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4300, Xcols: 86, r: 86, streamingCols: 0)                   	 0.00145901	 7         	 152.583   	 0         	 28.5294   	 5.34826   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00112929	 100       	 22.1379   	 0         	 5.31309   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 86)   	 0.00106956	 100       	 40.2036   	 0         	 8.30252   	 4.84234   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 86, k: 86)   	 0.0010209 	 100       	 72.4457   	 0         	 12.5348   	 5.77957   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000944604	 100       	 26.4661   	 0         	 6.35187   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 86, m: 4300)                                                                  	 0.000940974	 7         	 0         	 0         	 44.0157   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000923747	 100       	 0.541274  	 0         	 2.16509   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 86)                                                                                          	 0.000904771	 201       	 0         	 0         	 15.2843   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000799792	 8         	 0         	 0         	 20.0052   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000758524	 201       	 0         	 0         	 10.5995   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000644144	 100       	 38.8112   	 0         	 9.31469   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 86)                 	 0.000586315	 100       	 0         	 0         	 18.5566   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000542567	 8         	 0         	 0         	 29.4894   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000511428	 100       	 0         	 0         	 7.82124   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000476349	 100       	 1.04965   	 0         	 12.5958   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000471783	 100       	 0         	 0         	 8.47847   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, n: 50, r: 86, r2: 50)             	 0.000465173	 1         	 79.4973   	 0         	 10.1313   	 7.84672   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000439212	 100       	 0         	 0         	 9.10722   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000423479	 101       	 0         	 0         	 9.54002   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 86)                                                                                 	 0.000389905	 101       	 1.11386   	 0         	 17.8218   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000386335	 101       	 0.653578  	 0         	 10.4572   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000325137	 100       	 0.768907  	 0         	 12.3025   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 86, reductionFactor: 37, colBlockingSize: 12)                    	 8.5993e-05	 1         	 8.83315   	 0         	 1.08809   	 8.11804   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.9111e-05	 1         	 3.19603   	 0         	 1.27841   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 86, r: 50, streamingCols: 18)                    	 3.0851e-05	 1         	 4.05173   	 0         	 1.62069   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 86, r2: 86)              	 2.237e-05 	 1         	 33.0621   	 0         	 5.72052   	 5.77957   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.5931e-05	 1         	 15.6927   	 0         	 3.76624   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.516e-05 	 9         	 0         	 0         	 23.7467   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.064e-05 	 2         	 0         	 0         	 7.5188    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 86)                                                                                   	 9.301e-06 	 1         	 0.924632  	 0         	 3.69853   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.3e-06   	 1         	 0.537634  	 0         	 2.15054   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 86)                                                           	 5.37e-06  	 1         	 0         	 0         	 12.8119   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4300, m: 0, k: 50)  	 4.62e-06  	 100       	 0         	 0         	 37229.4   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 86, m: 50, fromLeft: 1)                	 2.97e-06  	 1         	 0         	 0         	 23.165    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.06988   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.06984   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.5062    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.50485   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.57348   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.8174    	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.59749   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.56357   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.21917   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.10779   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.07137   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.897365  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.599616  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.217337  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.153523  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.135834  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.105313  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0858501 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.085692  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0741187 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0554182 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0490812 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0415864 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0390608 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0390297 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0385062 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0100953 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00769284	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00474019	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00444436	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00432548	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110138	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000942348	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000476349	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22561113712512 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22560926328832 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22560725002368 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22560523675904 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22560322349440 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22560121022976 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22559919696512 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22559718370048 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22559517043584 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22559315717120 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22559114390656 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22558913064192 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22558711737728 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22558510411264 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22558309084800 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22558107758336 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22557906431872 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22557705105408 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22557503778944 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22557302452480 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22557101126016 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22556899799552 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22556698473088 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22556497146624 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22556295820160 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22556094493696 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22555893167232 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22555691840768 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22555490514304 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22555289187840 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22555087861376 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22554886534912 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22554685204352 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22554483877888 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22554282551424 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22554081224960 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22553879898496 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22553678572032 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22553477245568 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22553275919104 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22553074592640 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22552873266176 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22552671939712 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22552470613248 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22552269286784 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22552067960320 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22551866633856 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22551665307392 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22551463980928 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22551262654464 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22551061328000 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22550860001536 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22550658675072 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22550457348608 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22550256022144 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22550054695680 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22549853369216 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22549652042752 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22549450716288 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22549249389824 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22549048063360 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22548846736896 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22548645410432 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22561008051968 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22561001461504 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 137, m: 137)                                                               	 1.56986   	 700       	 8.02595   	 0         	 0.201347  	 39.8613   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6850, cols: 137, reductionFactor: 37, colBlockingSize: 12)                 	 1.04323   	 600       	 151.884   	 0         	 4.40424   	 34.486    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6850, r: 137, r2: 137, leftOrthog: 1)      	 0.966437  	 600       	 159.639   	 0         	 14.1694   	 11.2664   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 137, r1_: 137, n: 50, r2: 137)        	 0.81652   	 600       	 188.95    	 0         	 11.1439   	 16.9554   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6850, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.526407  	 700       	 141.618   	 0         	 6.42033   	 22.0577   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6850, Xcols: 87, r: 87, streamingCols: 0)                   	 0.202215  	 700       	 179.479   	 0         	 33.1124   	 5.42029   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 87, Qr2: 137)      	 0.153069  	 700       	 0         	 0         	 60.7089   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 137, reductionFactor: 37, colBlockingSize: 12)                 	 0.139866  	 100       	 68.9098   	 0         	 2.06637   	 33.3482   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 87, m: 87)                                                                  	 0.101784  	 809       	 6.97858   	 0         	 1.44938   	 4.81489   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, n: 50, r2left: 50, r2right: 87)                	 0.0832972 	 700       	 0         	 0         	 80.1304   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4350, m: 50, k: 87) 	 0.0726878 	 700       	 364.456   	 0         	 46.2482   	 7.88043   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6850, m: 87)                                                         	 0.0720102 	 700       	 0         	 0         	 92.6902   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 87, m: 6850)                                                                  	 0.0695182 	 700       	 0         	 0         	 96.0128   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 137, r2: 137, leftOrthog: 1)      	 0.0652048 	 100       	 143.924   	 0         	 13.067    	 11.0143   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 137)                                                                	 0.0639531 	 100       	 3.74884   	 0         	 0.203274  	 18.4423   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.0639354 	 101       	 61.4003   	 0         	 2.84437   	 21.5866   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4350, m: 87, k: 87) 	 0.0563681 	 700       	 817.754   	 0         	 75.9477   	 10.7673   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 87, m: 50, k: 2500)   	 0.0553672 	 800       	 314.265   	 0         	 40.093    	 7.8384    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 137, r1_: 50, n: 50, r2: 137)         	 0.0532234 	 100       	 176.323   	 0         	 19.3569   	 9.10904   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 87, n: 50, r2: 87)                                                                                         	 0.0464216 	 707       	 0         	 0         	 92.2205   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6850, r: 50, r2: 50, leftOrthog: 1)        	 0.0428223 	 100       	 79.9818   	 0         	 19.289    	 4.14649   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 137, r1_: 137, n: 50, r2: 50)         	 0.0422223 	 100       	 222.264   	 0         	 13.3345   	 16.6683   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0418635 	 100       	 2.09013   	 0         	 0.144279  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 87, m: 2500, k: 50)	 0.0418159 	 800       	 416.109   	 0         	 53.086    	 7.8384    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0327855 	 100       	 107.29    	 0         	 8.41836   	 12.7448   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 87, r: 87, streamingCols: 0)                   	 0.016537  	 101       	 115.57    	 0         	 21.4391   	 5.3906    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 137, reductionFactor: 37, colBlockingSize: 12)                   	 0.0152783 	 100       	 12.6168   	 0         	 1.34146   	 9.40526   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00968472	 109       	 1.8758    	 0         	 0.679792  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4350, m: 50, k: 50) 	 0.00913171	 100       	 238.181   	 0         	 38.328    	 6.21429   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 87, m: 2500)                                                                  	 0.0062475 	 101       	 0         	 0         	 56.2593   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 87)                                                         	 0.00600854	 101       	 0         	 0         	 58.4967   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00551452	 8         	 18.134    	 0         	 2.93045   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4350, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.00484441	 7         	 97.723    	 0         	 4.46227   	 21.8998   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 87, m: 87, fromLeft: 1)                	 0.00443821	 808       	 0         	 0         	 22.0476   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, n: 50, r: 87, r2: 87)             	 0.00422042	 7         	 109.219   	 0         	 10.1436   	 10.7673   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, n: 50, r2left: 50, r2right: 0)                 	 0.00412741	 100       	 0         	 0         	 84.3145   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00386467	 101       	 6.71012   	 0         	 1.04537   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 87, n: 50, r2: 50)                                                                                         	 0.0028984 	 101       	 0         	 0         	 121.267   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00270886	 8         	 37.9136   	 0         	 3.01234   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 137, leftOrthog: 1)         	 0.00231495	 100       	 29.5903   	 0         	 8.82956   	 3.35127   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 87, Qr2: 50)       	 0.00193869	 100       	 0         	 0         	 282.666   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00191874	 8         	 26.0588   	 0         	 8.3805    	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4350, Xcols: 87, r: 87, streamingCols: 0)                   	 0.00145684	 7         	 158.203   	 0         	 29.2402   	 5.41045   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 87, m: 4350)                                                                  	 0.00143715	 7         	 0         	 0         	 29.4934   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00112881	 100       	 22.1473   	 0         	 5.31534   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 87, k: 87)   	 0.00105618	 100       	 71.6637   	 0         	 12.3229   	 5.81551   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4350, m: 87)                                                         	 0.00102633	 7         	 0         	 0         	 41.299    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 87)   	 0.000952868	 100       	 45.6517   	 0         	 9.40319   	 4.85491   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000915515	 100       	 0.546141  	 0         	 2.18456   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 87)                                                                                          	 0.000896852	 201       	 0         	 0         	 15.5986   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000845962	 100       	 29.5522   	 0         	 7.09252   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000765273	 201       	 0         	 0         	 10.5061   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000669856	 100       	 37.3215   	 0         	 8.95715   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000592308	 8         	 0         	 0         	 27.013    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000591556	 8         	 0         	 0         	 27.0473   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 87)                 	 0.000560817	 100       	 0         	 0         	 19.5429   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000528626	 100       	 0         	 0         	 7.56679   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000512385	 100       	 0         	 0         	 7.80663   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, n: 50, r: 87, r2: 50)             	 0.000479773	 1         	 78.8811   	 0         	 10.0097   	 7.88043   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000457827	 100       	 1.09212   	 0         	 13.1054   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000441594	 100       	 0         	 0         	 9.05809   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000404754	 101       	 0         	 0         	 9.98137   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000404012	 101       	 0.624981  	 0         	 9.9997    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 87)                                                                                 	 0.000370473	 101       	 1.18592   	 0         	 18.9747   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000325798	 100       	 0.767347  	 0         	 12.2775   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 87, reductionFactor: 37, colBlockingSize: 12)                    	 9.3723e-05	 1         	 8.29419   	 0         	 1.01738   	 8.1525    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2721e-05	 1         	 3.82018   	 0         	 1.52807   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 87, r: 50, streamingCols: 17)                    	 2.757e-05 	 1         	 4.53391   	 0         	 1.81357   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 87, r2: 87)              	 2.2221e-05	 1         	 34.0624   	 0         	 5.85716   	 5.81551   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.547e-05 	 9         	 0         	 0         	 23.2708   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.4621e-05	 1         	 17.0987   	 0         	 4.10369   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.054e-05 	 2         	 0         	 0         	 7.59013   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 87)                                                                                   	 9.9e-06   	 1         	 0.878788  	 0         	 3.51515   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 7.96e-06  	 1         	 0.628141  	 0         	 2.51256   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4350, m: 0, k: 50)  	 4.86e-06  	 100       	 0         	 0         	 35802.5   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 87)                                                           	 4.1e-06   	 1         	 0         	 0         	 16.9756   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 87, m: 50, fromLeft: 1)                	 3.131e-06 	 1         	 0         	 0         	 22.2293   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.25862   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.25856   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.66772   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.66637   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.70813   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.83302   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.67568   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.59076   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.23189   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.11991   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.07678   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.912812  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.602527  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.222188  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.155449  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.140202  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.111468  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.088514  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0800455 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0778057 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.056496  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0514946 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0424858 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0402066 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0351078 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0350783 	 2         
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0103592 	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0102516 	 18        
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00445681	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00410223	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00309476	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110028	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000933375	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000457827	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23359888619392 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23359656028160 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23359454701696 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23359253375232 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23359052048768 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23358850722304 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23358649395840 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23358448069376 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23358246742912 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23358045416448 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23357844089984 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23357642763520 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23357441437056 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23357240110592 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23357038784128 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23356837457664 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23356636131200 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23356434804736 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23356233478272 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23356032151808 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23355830825344 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23355629498880 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23355428172416 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23355226845952 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23355025519488 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23354824193024 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23354622866560 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23354421540096 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23354220213632 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23354018887168 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23353817560704 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23353616234240 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23353414903680 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23353213577216 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23353012250752 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23352810924288 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23352609597824 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23352408271360 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23352206944896 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23352005618432 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23351804291968 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23351602965504 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23351401639040 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23351200312576 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23350998986112 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23350797659648 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23350596333184 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23350395006720 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23350193680256 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23349992353792 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23349791027328 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23349589700864 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23349388374400 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23349187047936 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23348985721472 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23348784395008 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23348583068544 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23348381742080 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23348180415616 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23347979089152 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23347777762688 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23347576436224 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23347375109760 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23359782958848 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23359776368384 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 138, m: 138)                                                               	 1.55172   	 700       	 8.2989    	 0         	 0.206682  	 40.153    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6900, cols: 138, reductionFactor: 37, colBlockingSize: 12)                 	 1.06466   	 600       	 152.111   	 0         	 4.37884   	 34.7377   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6900, r: 138, r2: 138, leftOrthog: 1)      	 1.03143   	 600       	 152.879   	 0         	 13.4711   	 11.3487   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 138, r1_: 138, n: 50, r2: 138)        	 0.848673  	 600       	 185.801   	 0         	 10.8788   	 17.0792   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6900, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.538281  	 700       	 142.73    	 0         	 6.39757   	 22.3101   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6900, Xcols: 88, r: 88, streamingCols: 0)                   	 0.210693  	 700       	 177.526   	 0         	 32.3804   	 5.48252   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 88, Qr2: 138)      	 0.147464  	 700       	 0         	 0         	 63.9659   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 138, reductionFactor: 37, colBlockingSize: 12)                 	 0.144323  	 100       	 67.7603   	 0         	 2.01795   	 33.5789   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 88, m: 88)                                                                  	 0.0977106 	 809       	 7.52304   	 0         	 1.54463   	 4.87043   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 88, m: 6900)                                                                  	 0.0928434 	 700       	 0         	 0         	 73.2485   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, n: 50, r2left: 50, r2right: 88)                	 0.0815002 	 700       	 0         	 0         	 83.4432   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4400, m: 50, k: 88) 	 0.0713056 	 700       	 380.11    	 0         	 48.0321   	 7.91367   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6900, m: 88)                                                         	 0.0695305 	 700       	 0         	 0         	 97.8081   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 138, r2: 138, leftOrthog: 1)      	 0.0660076 	 100       	 144.256   	 0         	 13.0056   	 11.0918   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.065575  	 101       	 61.2492   	 0         	 2.80621   	 21.8263   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 138)                                                                	 0.0650381 	 100       	 3.71321   	 0         	 0.201113  	 18.4633   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4400, m: 88, k: 88) 	 0.0591264 	 700       	 806.798   	 0         	 74.0787   	 10.8911   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 138, r1_: 50, n: 50, r2: 138)         	 0.0553464 	 100       	 172.044   	 0         	 18.85     	 9.12698   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 88, m: 50, k: 2500)   	 0.0498792 	 800       	 352.853   	 0         	 44.8315   	 7.87064   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 88, n: 50, r2: 88)                                                                                         	 0.0469577 	 707       	 0         	 0         	 93.2757   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6900, r: 50, r2: 50, leftOrthog: 1)        	 0.0461662 	 100       	 74.73     	 0         	 18.0218   	 4.14663   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0427483 	 100       	 2.04686   	 0         	 0.141292  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 138, r1_: 138, n: 50, r2: 50)         	 0.0424624 	 100       	 224.245   	 0         	 13.3585   	 16.7867   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 88, m: 2500, k: 50)	 0.039645  	 800       	 443.94    	 0         	 56.4046   	 7.87064   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0316899 	 100       	 111.81    	 0         	 8.7725    	 12.7455   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 138, reductionFactor: 37, colBlockingSize: 12)                   	 0.0179301 	 100       	 10.9083   	 0         	 1.15756   	 9.42352   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 88, r: 88, streamingCols: 0)                   	 0.0176192 	 101       	 110.979   	 0         	 20.3556   	 5.45202   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00957386	 109       	 1.89752   	 0         	 0.687664  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4400, m: 50, k: 50) 	 0.00908435	 100       	 242.175   	 0         	 38.9681   	 6.21469   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 88, m: 2500)                                                                  	 0.00784327	 101       	 0         	 0         	 45.328    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 88)                                                         	 0.00684978	 101       	 0         	 0         	 51.9024   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, n: 50, r2left: 50, r2right: 0)                 	 0.00610041	 100       	 0         	 0         	 57.701    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00590511	 101       	 4.39152   	 0         	 0.684153  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00524126	 8         	 19.0794   	 0         	 3.08323   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4400, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.00506364	 7         	 96.7532   	 0         	 4.36778   	 22.1516   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 88, m: 88, fromLeft: 1)                	 0.00469861	 808       	 0         	 0         	 21.3072   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, n: 50, r: 88, r2: 88)             	 0.00427567	 7         	 111.568   	 0         	 10.244    	 10.8911   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 88, n: 50, r2: 50)                                                                                         	 0.00297233	 101       	 0         	 0         	 119.61    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00273873	 8         	 37.5001   	 0         	 2.97948   	 12.5861   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00219969	 8         	 22.7305   	 0         	 7.31013   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 138, leftOrthog: 1)         	 0.00219453	 100       	 31.4418   	 0         	 9.36876   	 3.35603   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 88, Qr2: 50)       	 0.00198457	 100       	 0         	 0         	 278.146   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4400, Xcols: 88, r: 88, streamingCols: 0)                   	 0.00151913	 7         	 157.008   	 0         	 28.6896   	 5.47264   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 88, m: 4400)                                                                  	 0.00146863	 7         	 0         	 0         	 29.5285   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4400, m: 88)                                                         	 0.00113371	 7         	 0         	 0         	 38.2518   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00108806	 100       	 22.9767   	 0         	 5.5144    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 88, k: 88)   	 0.00106554	 100       	 72.6766   	 0         	 12.4211   	 5.85106   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 88)   	 0.000970144	 100       	 45.3541   	 0         	 9.3182    	 4.86726   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 88)                                                                                          	 0.000889945	 201       	 0         	 0         	 15.9003   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000848259	 100       	 29.4721   	 0         	 7.07331   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000775938	 201       	 0         	 0         	 10.3617   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000756472	 100       	 0.660963  	 0         	 2.64385   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00075626	 8         	 0         	 0         	 21.1567   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00066011	 100       	 37.8725   	 0         	 9.08939   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000599268	 8         	 0         	 0         	 26.6992   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 88)                 	 0.00055534	 100       	 0         	 0         	 19.8797   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000506207	 100       	 0         	 0         	 7.90191   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000504601	 100       	 0         	 0         	 7.92706   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, n: 50, r: 88, r2: 50)             	 0.000497114	 1         	 77.8896   	 0         	 9.84241   	 7.91367   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000467469	 100       	 0         	 0         	 8.55672   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000458308	 100       	 1.09097   	 0         	 13.0916   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000380221	 101       	 0         	 0         	 10.6254   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 88)                                                                                 	 0.000372619	 101       	 1.19264   	 0         	 19.0822   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000371368	 101       	 0.679919  	 0         	 10.8787   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000346478	 100       	 0.721547  	 0         	 11.5447   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 88, reductionFactor: 37, colBlockingSize: 12)                    	 9.4082e-05	 1         	 8.45358   	 0         	 1.03263   	 8.18645   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2401e-05	 1         	 3.85791   	 0         	 1.54316   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 88, r: 50, streamingCols: 22)                    	 2.6591e-05	 1         	 4.70084   	 0         	 1.88034   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 88, r2: 88)              	 2.1441e-05	 1         	 36.1177   	 0         	 6.17285   	 5.85106   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.556e-05 	 9         	 0         	 0         	 23.1362   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.413e-05 	 1         	 17.6929   	 0         	 4.24628   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.089e-05 	 2         	 0         	 0         	 7.34619   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.771e-06 	 1         	 0.57006   	 0         	 2.28024   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 88)                                                                                   	 6.28e-06  	 1         	 1.40127   	 0         	 5.6051    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4400, m: 0, k: 50)  	 4.82e-06  	 100       	 0         	 0         	 36514.5   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 88)                                                           	 4.04e-06  	 1         	 0         	 0         	 17.4257   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 88, m: 50, fromLeft: 1)                	 3.59e-06  	 1         	 0         	 0         	 19.61     	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.39361   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.39356   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.76984   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.76861   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.7933    	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.87626   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.6595    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.62365   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.25928   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.16588   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.1458    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.94733   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.618218  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.23209   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.149916  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.141557  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.107284  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.102765  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0886606 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0786545 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0521021 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0509673 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0403887 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0403051 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0358621 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0358349 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0100496 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0080768 	 1818      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00471776	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00391721	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00299527	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109047	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000771523	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000458308	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23082229475200 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23082026657792 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23081825331328 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23081624004864 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23081422678400 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23081221351936 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23081020025472 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23080818699008 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23080617372544 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23080416046080 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23080214719616 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23080013393152 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23079812066688 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23079610740224 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23079409413760 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23079208087296 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23079006760832 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23078805434368 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23078604107904 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23078402781440 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23078201454976 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23078000128512 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23077798802048 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23077597475584 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23077396149120 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23077194822656 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23076993496192 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23076792169728 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23076590843264 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23076389516800 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23076188190336 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23075986863872 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23075785533312 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23075584206848 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23075382880384 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23075181553920 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23074980227456 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23074778900992 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23074577574528 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23074376248064 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23074174921600 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23073973595136 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23073772268672 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23073570942208 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23073369615744 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23073168289280 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23072966962816 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23072765636352 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23072564309888 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23072362983424 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23072161656960 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23071960330496 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23071759004032 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23071557677568 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23071356351104 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23071155024640 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23070953698176 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23070752371712 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23070551045248 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23070349718784 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23070148392320 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23069947065856 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23069745739392 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23082123814656 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23082117224192 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 139, m: 139)                                                               	 1.58596   	 700       	 8.29752   	 0         	 0.205157  	 40.4447   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6950, cols: 139, reductionFactor: 37, colBlockingSize: 12)                 	 1.06832   	 600       	 154.908   	 0         	 4.42729   	 34.9894   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6950, r: 139, r2: 139, leftOrthog: 1)      	 1.00202   	 600       	 160.812   	 0         	 14.0681   	 11.4309   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 139, r1_: 139, n: 50, r2: 139)        	 0.867374  	 600       	 185.776   	 0         	 10.7991   	 17.203    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6950, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.549445  	 700       	 144.062   	 0         	 6.38505   	 22.5624   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6950, Xcols: 89, r: 89, streamingCols: 0)                   	 0.211352  	 700       	 182.329   	 0         	 32.8832   	 5.54475   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 89, Qr2: 139)      	 0.154662  	 700       	 0         	 0         	 61.9013   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 139, reductionFactor: 37, colBlockingSize: 12)                 	 0.145008  	 100       	 68.4208   	 0         	 2.02372   	 33.8094   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 89, m: 89)                                                                  	 0.105724  	 809       	 7.19256   	 0         	 1.46012   	 4.92599   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 89, m: 6950)                                                                  	 0.0899827 	 700       	 0         	 0         	 76.9899   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, n: 50, r2left: 50, r2right: 89)                	 0.0859767 	 700       	 0         	 0         	 80.5772   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6950, m: 89)                                                         	 0.0805074 	 700       	 0         	 0         	 86.0512   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4450, m: 50, k: 89) 	 0.0772565 	 700       	 358.85    	 0         	 45.1586   	 7.94643   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.0672638 	 101       	 61.0761   	 0         	 2.76791   	 22.0658   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 139, r2: 139, leftOrthog: 1)      	 0.0668644 	 100       	 144.479   	 0         	 12.9353   	 11.1693   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 139)                                                                	 0.0649173 	 100       	 3.74708   	 0         	 0.20272   	 18.484    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4450, m: 89, k: 89) 	 0.0612539 	 700       	 805.628   	 0         	 73.1402   	 11.0149   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 89, m: 50, k: 2500)   	 0.0564363 	 800       	 315.4     	 0         	 39.9119   	 7.9024    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 139, r1_: 50, n: 50, r2: 139)         	 0.0561076 	 100       	 172.178   	 0         	 18.8281   	 9.14474   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6950, r: 50, r2: 50, leftOrthog: 1)        	 0.0552121 	 100       	 62.9392   	 0         	 15.1778   	 4.14678   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 89, n: 50, r2: 89)                                                                                         	 0.0486746 	 707       	 0         	 0         	 92.0423   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 89, m: 2500, k: 50)	 0.0437162 	 800       	 407.172   	 0         	 51.5251   	 7.9024    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0424503 	 100       	 2.06124   	 0         	 0.142284  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 139, r1_: 139, n: 50, r2: 50)         	 0.0418632 	 100       	 230.763   	 0         	 13.6506   	 16.905    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0330364 	 100       	 108.03    	 0         	 8.47549   	 12.7461   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 89, r: 89, streamingCols: 0)                   	 0.0173997 	 101       	 114.948   	 0         	 20.8486   	 5.51343   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 139, reductionFactor: 37, colBlockingSize: 12)                   	 0.015911  	 100       	 12.4714   	 0         	 1.3209    	 9.44158   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4450, m: 50, k: 50) 	 0.0100303 	 100       	 221.828   	 0         	 35.6919   	 6.21508   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00964986	 109       	 1.88258   	 0         	 0.682248  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 89, m: 2500)                                                                  	 0.00711963	 101       	 0         	 0         	 50.5026   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 89)                                                         	 0.0066992 	 101       	 0         	 0         	 53.6721   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00588214	 101       	 4.40867   	 0         	 0.686825  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, n: 50, r2left: 50, r2right: 0)                 	 0.00569547	 100       	 0         	 0         	 62.5058   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.0054235 	 8         	 18.4383   	 0         	 2.97963   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4450, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.00522032	 7         	 97.0851   	 0         	 4.33352   	 22.4033   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 89, m: 89, fromLeft: 1)                	 0.00498689	 808       	 0         	 0         	 20.5344   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, n: 50, r: 89, r2: 89)             	 0.00450342	 7         	 109.579   	 0         	 9.94826   	 11.0149   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 89, n: 50, r2: 50)                                                                                         	 0.00353153	 101       	 0         	 0         	 101.814   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00266018	 8         	 38.6074   	 0         	 3.06746   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 139, leftOrthog: 1)         	 0.00225562	 100       	 30.812    	 0         	 9.16823   	 3.36074   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 89, Qr2: 50)       	 0.00214142	 100       	 0         	 0         	 259.641   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00199602	 8         	 25.0498   	 0         	 8.05602   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4450, Xcols: 89, r: 89, streamingCols: 0)                   	 0.00154493	 7         	 159.709   	 0         	 28.8553   	 5.53483   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 89, m: 4450)                                                                  	 0.00153428	 7         	 0         	 0         	 28.911    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 89)   	 0.00124123	 100       	 35.8516   	 0         	 7.34756   	 4.87939   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00115584	 100       	 21.6293   	 0         	 5.19104   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 89, k: 89)   	 0.00109538	 100       	 72.3129   	 0         	 12.2851   	 5.88624   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4450, m: 89)                                                         	 0.000983687	 7         	 0         	 0         	 45.0932   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000935524	 100       	 0.53446   	 0         	 2.13784   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 89)                                                                                          	 0.000928386	 201       	 0         	 0         	 15.4151   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000911191	 100       	 27.4366   	 0         	 6.58479   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000792722	 201       	 0         	 0         	 10.1423   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000744248	 8         	 0         	 0         	 21.4982   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000675378	 100       	 37.0163   	 0         	 8.88391   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000581066	 8         	 0         	 0         	 27.5356   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 89)                 	 0.000577356	 100       	 0         	 0         	 19.2602   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000508431	 100       	 0         	 0         	 7.86734   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, n: 50, r: 89, r2: 50)             	 0.000483993	 1         	 81.8297   	 0         	 10.2977   	 7.94643   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000477606	 100       	 0         	 0         	 8.3751    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000475982	 100       	 1.05046   	 0         	 12.6055   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000467022	 100       	 0         	 0         	 8.56491   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000415863	 101       	 0         	 0         	 9.71474   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000412795	 101       	 0.611684  	 0         	 9.78694   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 89)                                                                                 	 0.000373235	 101       	 1.2042    	 0         	 19.2672   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000341846	 100       	 0.731323  	 0         	 11.7012   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 89, reductionFactor: 37, colBlockingSize: 12)                    	 9.3452e-05	 1         	 8.70509   	 0         	 1.05902   	 8.21991   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.4461e-05	 1         	 3.62729   	 0         	 1.45092   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 89, r: 50, streamingCols: 23)                    	 2.9231e-05	 1         	 4.27628   	 0         	 1.71051   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 89, r2: 89)              	 1.811e-05 	 1         	 43.7383   	 0         	 7.43059   	 5.88624   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.517e-05 	 1         	 16.4799   	 0         	 3.95517   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.502e-05 	 9         	 0         	 0         	 23.968    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.13e-05  	 2         	 0         	 0         	 7.07965   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.123e-05 	 1         	 0.445236  	 0         	 1.78094   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 89)                                                                                   	 9.131e-06 	 1         	 0.974702  	 0         	 3.89881   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 89)                                                           	 5.47e-06  	 1         	 0         	 0         	 13.0165   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4450, m: 0, k: 50)  	 4.62e-06  	 100       	 0         	 0         	 38528.1   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 89, m: 50, fromLeft: 1)                	 3.25e-06  	 1         	 0         	 0         	 21.9077   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.47128   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.47123   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.78816   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.78678   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.78318   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.89284   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.69333   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.68301   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.26299   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.19424   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.12636   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.966256  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.631189  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.232357  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.15727   	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.150882  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.115374  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.099229  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0927271 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0893559 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0575922 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0544356 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0443915 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0406178 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0358284 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.035796  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0104442 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00628819	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00622797	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00500516	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00454157	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112788	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000955885	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000475982	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22506190780288 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22505964169216 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22505762842752 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22505561516288 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22505360189824 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22505158863360 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22504957536896 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22504756210432 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22504554883968 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22504353557504 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22504152231040 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22503950904576 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22503749578112 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22503548251648 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22503346925184 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22503145598720 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22502944272256 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22502742945792 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22502541619328 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22502340292864 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22502138966400 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22501937639936 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22501736313472 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22501534987008 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22501333660544 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22501132334080 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22500931007616 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22500729681152 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22500528354688 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22500327028224 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22500125701760 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22499924375296 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22499723044736 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22499521718272 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22499320391808 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22499119065344 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22498917738880 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22498716412416 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22498515085952 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22498313759488 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22498112433024 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22497911106560 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22497709780096 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22497508453632 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22497307127168 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22497105800704 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22496904474240 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22496703147776 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22496501821312 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22496300494848 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22496099168384 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22495897841920 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22495696515456 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22495495188992 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22495293862528 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22495092536064 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22494891209600 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22494689883136 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22494488556672 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22494287230208 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22494085903744 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22493884577280 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22493683250816 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22506085119744 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22506078529280 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 140, m: 140)                                                               	 1.60039   	 700       	 8.40144   	 0         	 0.20624   	 40.7363   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7000, cols: 140, reductionFactor: 37, colBlockingSize: 12)                 	 1.0824    	 600       	 156.218   	 0         	 4.43282   	 35.2411   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7000, r: 140, r2: 140, leftOrthog: 1)      	 1.00923   	 600       	 163.135   	 0         	 14.1694   	 11.5132   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 140, r1_: 140, n: 50, r2: 140)        	 0.847055  	 600       	 194.367   	 0         	 11.2178   	 17.3267   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7000, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.559998  	 700       	 145.582   	 0         	 6.38103   	 22.8148   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7000, Xcols: 90, r: 90, streamingCols: 0)                   	 0.224228  	 700       	 177.007   	 0         	 31.5691   	 5.60698   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 90, Qr2: 140)      	 0.1613    	 700       	 0         	 0         	 60.2355   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 140, reductionFactor: 37, colBlockingSize: 12)                 	 0.146363  	 100       	 68.7664   	 0         	 2.02018   	 34.0397   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 90, m: 90)                                                                  	 0.106242  	 809       	 7.40148   	 0         	 1.48578   	 4.98155   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, n: 50, r2left: 50, r2right: 90)                	 0.0861548 	 700       	 0         	 0         	 81.8991   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4500, m: 50, k: 90) 	 0.0830238 	 700       	 341.468   	 0         	 42.7974   	 7.97872   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7000, m: 90)                                                         	 0.0777459 	 700       	 0         	 0         	 90.7572   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 90, m: 7000)                                                                  	 0.0763233 	 700       	 0         	 0         	 92.4488   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.0708469 	 101       	 59.2976   	 0         	 2.65848   	 22.3051   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 140)                                                                	 0.065025  	 100       	 3.76778   	 0         	 0.203614  	 18.5045   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4500, m: 90, k: 90) 	 0.0647903 	 700       	 787.618   	 0         	 70.7106   	 11.1386   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 140, r2: 140, leftOrthog: 1)      	 0.064576  	 100       	 151.759   	 0         	 13.4936   	 11.2468   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 140, r1_: 50, n: 50, r2: 140)         	 0.0550809 	 100       	 177.92    	 0         	 19.4187   	 9.1623    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 90, m: 50, k: 2500)   	 0.0550512 	 800       	 326.969   	 0         	 41.2126   	 7.93371   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 90, n: 50, r2: 90)                                                                                         	 0.0489907 	 707       	 0         	 0         	 93.5148   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7000, r: 50, r2: 50, leftOrthog: 1)        	 0.0467649 	 100       	 74.8425   	 0         	 18.0477   	 4.14692   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0431738 	 100       	 2.02669   	 0         	 0.1399    	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 90, m: 2500, k: 50)	 0.043126  	 800       	 417.381   	 0         	 52.6086   	 7.93371   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 140, r1_: 140, n: 50, r2: 50)         	 0.0416396 	 100       	 235.353   	 0         	 13.8253   	 17.0233   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0332232 	 100       	 108.195   	 0         	 8.48805   	 12.7468   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 90, r: 90, streamingCols: 0)                   	 0.0176949 	 101       	 115.584   	 0         	 20.7332   	 5.57483   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 140, reductionFactor: 37, colBlockingSize: 12)                   	 0.015862  	 100       	 12.6905   	 0         	 1.34157   	 9.45946   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00990401	 109       	 1.83427   	 0         	 0.664741  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4500, m: 50, k: 50) 	 0.00953128	 100       	 236.065   	 0         	 37.9802   	 6.21547   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 90)                                                         	 0.00624497	 101       	 0         	 0         	 58.2229   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 90, m: 2500)                                                                  	 0.00623764	 101       	 0         	 0         	 58.2912   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00567548	 101       	 4.5692    	 0         	 0.711834  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4500, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.00532677	 7         	 98.3882   	 0         	 4.34289   	 22.655    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, n: 50, r2left: 50, r2right: 0)                 	 0.00515867	 100       	 0         	 0         	 69.7855   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00510249	 8         	 19.5983   	 0         	 3.16708   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 90, m: 90, fromLeft: 1)                	 0.0047953 	 808       	 0         	 0         	 21.8374   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, n: 50, r: 90, r2: 90)             	 0.00470418	 7         	 108.478   	 0         	 9.73892   	 11.1386   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 90, n: 50, r2: 50)                                                                                         	 0.00337543	 101       	 0         	 0         	 107.72    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 90, Qr2: 50)       	 0.00270568	 100       	 0         	 0         	 206.972   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00257418	 8         	 39.8972   	 0         	 3.16994   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 140, leftOrthog: 1)         	 0.00232451	 100       	 30.1138   	 0         	 8.94811   	 3.36538   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00219337	 8         	 22.796    	 0         	 7.33119   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4500, Xcols: 90, r: 90, streamingCols: 0)                   	 0.00158422	 7         	 161.057   	 0         	 28.7755   	 5.59701   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 90, m: 4500)                                                                  	 0.0015253 	 7         	 0         	 0         	 29.7384   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4500, m: 90)                                                         	 0.00115483	 7         	 0         	 0         	 39.2785   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00112469	 100       	 22.2284   	 0         	 5.33481   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00111495	 100       	 22.4226   	 0         	 5.38141   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 90)   	 0.00108263	 100       	 41.5656   	 0         	 8.49785   	 4.8913    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 90, k: 90)   	 0.0010643 	 100       	 76.1066   	 0         	 12.8536   	 5.92105   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 90)                                                                                          	 0.000897727	 201       	 0         	 0         	 16.1207   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000870222	 8         	 0         	 0         	 18.3861   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000833435	 100       	 0.599927  	 0         	 2.39971   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000763318	 201       	 0         	 0         	 10.533    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000665813	 100       	 37.5481   	 0         	 9.01154   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 90)                 	 0.000561725	 100       	 0         	 0         	 19.9386   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000512264	 8         	 0         	 0         	 31.2339   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, n: 50, r: 90, r2: 50)             	 0.000507183	 1         	 79.8528   	 0         	 10.0082   	 7.97872   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000504596	 100       	 0         	 0         	 7.92713   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000490637	 100       	 0         	 0         	 8.15267   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000448626	 100       	 0         	 0         	 8.91611   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000431377	 100       	 1.15908   	 0         	 13.9089   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000422677	 101       	 0         	 0         	 9.55813   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000381446	 101       	 0.661955  	 0         	 10.5913   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 90)                                                                                 	 0.000373422	 101       	 1.21712   	 0         	 19.4739   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000340764	 100       	 0.733646  	 0         	 11.7383   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 90, reductionFactor: 37, colBlockingSize: 12)                    	 0.000102743	 1         	 8.09682   	 0         	 0.981089  	 8.2529    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 3.9821e-05	 1         	 6.27809   	 0         	 1.50674   	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3551e-05	 1         	 3.72567   	 0         	 1.49027   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 90, r: 50, streamingCols: 22)                    	 2.822e-05 	 1         	 4.42948   	 0         	 1.77179   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 90, r2: 90)              	 2.026e-05 	 1         	 39.9803   	 0         	 6.75222   	 5.92105   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.6221e-05	 9         	 0         	 0         	 22.1935   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.0681e-05	 2         	 0         	 0         	 7.48994   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.75e-06  	 1         	 0.512821  	 0         	 2.05128   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 90)                                                                                   	 8.451e-06 	 1         	 1.06496   	 0         	 4.25985   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 90)                                                           	 5.6e-06   	 1         	 0         	 0         	 12.8571   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4500, m: 0, k: 50)  	 4.96e-06  	 100       	 0         	 0         	 36290.3   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 90, m: 50, fromLeft: 1)                	 2.98e-06  	 1         	 0         	 0         	 24.1611   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.54754   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.54749   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.83732   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.83605   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.84246   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.92237   	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.7101    	 100       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.70859   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.27853   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.20925   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.12289   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.9449    	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.645053  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.245763  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.164455  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.159497  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.116146  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0923798 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0864442 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0846092 	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0561661 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0545179 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0437918 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0410724 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.036671  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0366393 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0103739 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00850017	 1818      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0048145 	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00438654	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00303168	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109563	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000851636	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000431377	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22831438907264 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22831240833024 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22831039506560 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22830838180096 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22830636853632 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22830435527168 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22830234200704 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22830032874240 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22829831547776 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22829630221312 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22829428894848 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22829227568384 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22829026241920 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22828824915456 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22828623588992 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22828422262528 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22828220936064 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22828019609600 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22827818283136 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22827616956672 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22827415630208 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22827214303744 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22827012977280 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22826811650816 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22826610324352 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22826408997888 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22826207671424 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22826006344960 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22825805018496 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22825603692032 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22825402365568 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22825201039104 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22824999708544 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22824798382080 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22824597055616 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22824395729152 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22824194402688 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22823993076224 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22823791749760 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22823590423296 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22823389096832 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22823187770368 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22822986443904 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22822785117440 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22822583790976 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22822382464512 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22822181138048 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22821979811584 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22821778485120 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22821577158656 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22821375832192 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22821174505728 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22820973179264 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22820771852800 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22820570526336 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22820369199872 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22820167873408 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22819966546944 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22819765220480 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22819563894016 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22819362567552 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22819161241088 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22818959914624 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22831333246720 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22831326656256 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 141, m: 141)                                                               	 1.68151   	 700       	 8.16872   	 0         	 0.199101  	 41.028    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7050, cols: 141, reductionFactor: 37, colBlockingSize: 12)                 	 1.08971   	 600       	 158.518   	 0         	 4.46619   	 35.4928   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7050, r: 141, r2: 141, leftOrthog: 1)      	 0.99731   	 600       	 168.647   	 0         	 14.5443   	 11.5954   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 141, r1_: 141, n: 50, r2: 141)        	 0.879869  	 600       	 191.157   	 0         	 10.9543   	 17.4505   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7050, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.566062  	 700       	 148.292   	 0         	 6.42872   	 23.0671   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7050, Xcols: 91, r: 91, streamingCols: 0)                   	 0.221196  	 700       	 184.754   	 0         	 32.589    	 5.66921   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 91, Qr2: 141)      	 0.162381  	 700       	 0         	 0         	 60.7176   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 141, reductionFactor: 37, colBlockingSize: 12)                 	 0.147062  	 100       	 69.4206   	 0         	 2.0257    	 34.2699   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 91, m: 91)                                                                  	 0.108746  	 809       	 7.47479   	 0         	 1.48395   	 5.0371    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4550, m: 50, k: 91) 	 0.0908472 	 700       	 319.036   	 0         	 39.8269   	 8.01056   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, n: 50, r2left: 50, r2right: 91)                	 0.0861984 	 700       	 0         	 0         	 83.3583   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 91, m: 7050)                                                                  	 0.0757368 	 700       	 0         	 0         	 94.8727   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7050, m: 91)                                                         	 0.0746603 	 700       	 0         	 0         	 96.2406   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.0691861 	 101       	 62.078    	 0         	 2.7536    	 22.5443   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 141)                                                                	 0.0656171 	 100       	 3.76045   	 0         	 0.202996  	 18.5248   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 141, r2: 141, leftOrthog: 1)      	 0.0644549 	 100       	 154.224   	 0         	 13.619    	 11.3242   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4550, m: 91, k: 91) 	 0.0630278 	 700       	 836.932   	 0         	 74.3122   	 11.2624   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 91, m: 50, k: 2500)   	 0.0574522 	 800       	 316.785   	 0         	 39.7743   	 7.96457   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 141, r1_: 50, n: 50, r2: 141)         	 0.0548141 	 100       	 181.349   	 0         	 19.7555   	 9.17969   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7050, r: 50, r2: 50, leftOrthog: 1)        	 0.0526084 	 100       	 67.0045   	 0         	 16.1571   	 4.14706   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 91, n: 50, r2: 91)                                                                                         	 0.0476961 	 707       	 0         	 0         	 98.1996   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 91, m: 2500, k: 50)	 0.0440604 	 800       	 413.07    	 0         	 51.8634   	 7.96457   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0423015 	 100       	 2.06848   	 0         	 0.142784  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 141, r1_: 141, n: 50, r2: 50)         	 0.0422781 	 100       	 235.122   	 0         	 13.7164   	 17.1416   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0332255 	 100       	 108.961   	 0         	 8.54765   	 12.7474   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 91, r: 91, streamingCols: 0)                   	 0.0177005 	 101       	 118.13    	 0         	 20.9591   	 5.63621   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 141, reductionFactor: 37, colBlockingSize: 12)                   	 0.0172801 	 100       	 11.8161   	 0         	 1.2468    	 9.47715   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4550, m: 50, k: 50) 	 0.010152  	 100       	 224.094   	 0         	 36.0521   	 6.21585   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00969105	 109       	 1.87457   	 0         	 0.679348  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 91, m: 2500)                                                                  	 0.0093722 	 101       	 0         	 0         	 39.2266   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 91)                                                         	 0.00645595	 101       	 0         	 0         	 56.946    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4550, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.00539219	 7         	 100.47    	 0         	 4.38607   	 22.9067   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00538647	 8         	 18.565    	 0         	 3.00011   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, n: 50, r2left: 50, r2right: 0)                 	 0.00536917	 100       	 0         	 0         	 67.7944   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00523225	 101       	 4.95627   	 0         	 0.772135  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 91, m: 91, fromLeft: 1)                	 0.00484334	 808       	 0         	 0         	 22.1039   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, n: 50, r: 91, r2: 91)             	 0.00476896	 7         	 110.611   	 0         	 9.82129   	 11.2624   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 91, n: 50, r2: 50)                                                                                         	 0.0031455 	 101       	 0         	 0         	 116.878   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0027003 	 8         	 38.0338   	 0         	 3.02188   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 91, Qr2: 50)       	 0.00266158	 100       	 0         	 0         	 211.904   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 141, leftOrthog: 1)         	 0.00243818	 100       	 28.915    	 0         	 8.58017   	 3.36998   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4550, Xcols: 91, r: 91, streamingCols: 0)                   	 0.00162172	 7         	 162.636   	 0         	 28.7382   	 5.6592    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00160949	 8         	 31.0657   	 0         	 9.99073   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 91, m: 4550)                                                                  	 0.00153223	 7         	 0         	 0         	 30.2654   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4550, m: 91)                                                         	 0.00130359	 7         	 0         	 0         	 35.5739   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00116464	 100       	 21.4658   	 0         	 5.1518    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 91)   	 0.00106841	 100       	 42.5866   	 0         	 8.6858    	 4.90302   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 91, k: 91)   	 0.00105197	 100       	 78.7192   	 0         	 13.2179   	 5.9555    
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00102835	 100       	 0.486217  	 0         	 1.94487   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 91)                                                                                          	 0.000937899	 201       	 0         	 0         	 15.6017   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000900399	 100       	 27.7655   	 0         	 6.66371   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000771318	 201       	 0         	 0         	 10.4237   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000767931	 8         	 0         	 0         	 20.8352   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000659756	 100       	 37.8928   	 0         	 9.09427   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 91)                 	 0.000591456	 100       	 0         	 0         	 19.0716   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000544356	 8         	 0         	 0         	 29.3925   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, n: 50, r: 91, r2: 50)             	 0.000503843	 1         	 82.1784   	 0         	 10.2588   	 8.01056   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000494997	 100       	 0         	 0         	 8.08086   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000477186	 100       	 0         	 0         	 8.38248   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000469683	 100       	 0         	 0         	 8.51638   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000437627	 100       	 1.14253   	 0         	 13.7103   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.00039649	 101       	 0         	 0         	 10.1894   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000374638	 101       	 0.673984  	 0         	 10.7837   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 91)                                                                                 	 0.000365784	 101       	 1.25634   	 0         	 20.1015   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00032848	 100       	 0.761081  	 0         	 12.1773   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 91, reductionFactor: 37, colBlockingSize: 12)                    	 9.9053e-05	 1         	 8.58612   	 0         	 1.03629   	 8.28541   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3871e-05	 1         	 3.69047   	 0         	 1.47619   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 91, r: 50, streamingCols: 24)                    	 2.828e-05 	 1         	 4.42008   	 0         	 1.76803   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 91, r2: 91)              	 1.831e-05 	 1         	 45.2267   	 0         	 7.5941    	 5.9555    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.522e-05 	 9         	 0         	 0         	 23.6531   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.35e-05  	 1         	 18.5185   	 0         	 4.44444   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.093e-05 	 2         	 0         	 0         	 7.3193    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.751e-06 	 1         	 0.571363  	 0         	 2.28545   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 91)                                                                                   	 8.021e-06 	 1         	 1.13452   	 0         	 4.53809   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4550, m: 0, k: 50)  	 5.12e-06  	 100       	 0         	 0         	 35546.9   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 91)                                                           	 4.44e-06  	 1         	 0         	 0         	 16.3964   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 91, m: 50, fromLeft: 1)                	 3.08e-06  	 1         	 0         	 0         	 23.6364   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.64602   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.64596   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.92204   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.92059   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.90647   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.93595   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.78943   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.72385   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.288     	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.20967   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.11681   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.977861  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.649269  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.24219   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.166152  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.165512  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.118437  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0926363 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0871966 	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0835887 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0586169 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0530458 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0447201 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0428067 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0365912 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0365625 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0106911 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00657851	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00535657	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00486164	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00446213	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010689 	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00104512	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000437627	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23355052513152 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23354824189952 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23354622863488 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23354421537024 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23354220210560 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23354018884096 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23353817557632 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23353616231168 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23353414904704 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23353213578240 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23353012251776 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23352810925312 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23352609598848 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23352408272384 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23352206945920 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23352005619456 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23351804292992 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23351602966528 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23351401640064 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23351200313600 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23350998987136 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23350797660672 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23350596334208 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23350395007744 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23350193681280 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23349992354816 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23349791028352 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23349589701888 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23349388375424 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23349187048960 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23348985722496 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23348784396032 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23348583065472 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23348381739008 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23348180412544 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23347979086080 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23347777759616 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23347576433152 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23347375106688 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23347173780224 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23346972453760 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23346771127296 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23346569800832 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23346368474368 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23346167147904 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23345965821440 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23345764494976 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23345563168512 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23345361842048 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23345160515584 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23344959189120 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23344757862656 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23344556536192 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23344355209728 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23344153883264 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23343952556800 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23343751230336 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23343549903872 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23343348577408 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23343147250944 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23342945924480 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23342744598016 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23342543271552 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23354946852608 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23354940262144 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 142, m: 142)                                                               	 1.66584   	 700       	 8.42224   	 0         	 0.203831  	 41.3197   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7100, cols: 142, reductionFactor: 37, colBlockingSize: 12)                 	 1.11135   	 600       	 158.763   	 0         	 4.44159   	 35.7446   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7100, r: 142, r2: 142, leftOrthog: 1)      	 1.04539   	 600       	 164.337   	 0         	 14.0728   	 11.6776   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 142, r1_: 142, n: 50, r2: 142)        	 0.881351  	 600       	 194.925   	 0         	 11.0915   	 17.5743   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7100, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.576352  	 700       	 149.919   	 0         	 6.42892   	 23.3195   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7100, Xcols: 92, r: 92, streamingCols: 0)                   	 0.224738  	 700       	 187.178   	 0         	 32.6582   	 5.73143   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 92, Qr2: 142)      	 0.163564  	 700       	 0         	 0         	 61.1617   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 142, reductionFactor: 37, colBlockingSize: 12)                 	 0.14969   	 100       	 69.1727   	 0         	 2.00501   	 34.4999   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 92, m: 92)                                                                  	 0.110375  	 809       	 7.60992   	 0         	 1.49429   	 5.09266   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 92, m: 7100)                                                                  	 0.102738  	 700       	 0         	 0         	 71.209    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, n: 50, r2left: 50, r2right: 92)                	 0.0879434 	 700       	 0         	 0         	 83.1881   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4600, m: 50, k: 92) 	 0.0792365 	 700       	 373.868   	 0         	 46.4897   	 8.04196   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7100, m: 92)                                                         	 0.0779874 	 700       	 0         	 0         	 93.808    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.0707787 	 101       	 62.0221   	 0         	 2.72227   	 22.7832   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 142, r2: 142, leftOrthog: 1)      	 0.0681555 	 100       	 147.926   	 0         	 12.9742   	 11.4016   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 142)                                                                	 0.0671137 	 100       	 3.70267   	 0         	 0.199661  	 18.5448   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4600, m: 92, k: 92) 	 0.0615105 	 700       	 886.161   	 0         	 77.828    	 11.3861   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 142, r1_: 50, n: 50, r2: 142)         	 0.0561415 	 100       	 179.582   	 0         	 19.5264   	 9.19689   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 92, m: 50, k: 2500)   	 0.0540415 	 800       	 340.479   	 0         	 42.5865   	 7.99499   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 92, n: 50, r2: 92)                                                                                         	 0.052147  	 707       	 0         	 0         	 91.8027   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7100, r: 50, r2: 50, leftOrthog: 1)        	 0.0515881 	 100       	 68.8144   	 0         	 16.593    	 4.1472    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 142, r1_: 142, n: 50, r2: 50)         	 0.0453247 	 100       	 222.439   	 0         	 12.8877   	 17.2598   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.042487  	 100       	 2.05945   	 0         	 0.142161  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 92, m: 2500, k: 50)	 0.0404139 	 800       	 455.288   	 0         	 56.9467   	 7.99499   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0336751 	 100       	 108.268   	 0         	 8.49293   	 12.7481   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 92, r: 92, streamingCols: 0)                   	 0.017931  	 101       	 119.188   	 0         	 20.9191   	 5.69758   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 142, reductionFactor: 37, colBlockingSize: 12)                   	 0.016383  	 100       	 12.6406   	 0         	 1.33133   	 9.49465   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4600, m: 50, k: 50) 	 0.0103037 	 100       	 223.221   	 0         	 35.9094   	 6.21622   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00951116	 109       	 1.91003   	 0         	 0.692197  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 92, m: 2500)                                                                  	 0.00724656	 101       	 0         	 0         	 51.2906   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 92)                                                         	 0.00653948	 101       	 0         	 0         	 56.8363   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00596159	 101       	 4.34992   	 0         	 0.677671  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4600, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.0055363 	 7         	 101.117   	 0         	 4.36631   	 23.1585   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, n: 50, r2left: 50, r2right: 0)                 	 0.00539351	 100       	 0         	 0         	 68.2301   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 92, m: 92, fromLeft: 1)                	 0.00506236	 808       	 0         	 0         	 21.6149   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00500875	 8         	 19.9651   	 0         	 3.22636   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, n: 50, r: 92, r2: 92)             	 0.00465816	 7         	 117.017   	 0         	 10.2771   	 11.3861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 92, n: 50, r2: 50)                                                                                         	 0.00302641	 101       	 0         	 0         	 122.812   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 142, leftOrthog: 1)         	 0.00274672	 100       	 25.849    	 0         	 7.66005   	 3.37452   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00271867	 8         	 37.7768   	 0         	 3.00146   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 92, Qr2: 50)       	 0.00234398	 100       	 0         	 0         	 242.322   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00220246	 8         	 22.7019   	 0         	 7.30093   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4600, Xcols: 92, r: 92, streamingCols: 0)                   	 0.0016485 	 7         	 165.326   	 0         	 28.8961   	 5.72139   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 92, m: 4600)                                                                  	 0.00158151	 7         	 0         	 0         	 29.9703   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4600, m: 92)                                                         	 0.00141997	 7         	 0         	 0         	 33.38     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00115695	 100       	 21.6084   	 0         	 5.18603   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 92, k: 92)   	 0.0010929 	 100       	 77.4454   	 0         	 12.93     	 5.98958   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 92)   	 0.00104441	 100       	 44.0441   	 0         	 8.96201   	 4.91453   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000947516	 100       	 26.3848   	 0         	 6.33235   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 92)                                                                                          	 0.000944682	 201       	 0         	 0         	 15.6599   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000853715	 100       	 0.585676  	 0         	 2.3427    	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00079247	 8         	 0         	 0         	 20.19     	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000761532	 201       	 0         	 0         	 10.5577   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000664892	 100       	 37.6001   	 0         	 9.02402   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 92)                 	 0.000575097	 100       	 0         	 0         	 19.7532   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000528513	 8         	 0         	 0         	 30.2736   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, n: 50, r: 92, r2: 50)             	 0.000520304	 1         	 81.3371   	 0         	 10.1141   	 8.04196   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000518339	 100       	 0         	 0         	 7.71696   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000481733	 100       	 1.03792   	 0         	 12.455    	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000478956	 100       	 0         	 0         	 8.3515    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000441664	 100       	 0         	 0         	 9.05666   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000413272	 101       	 0         	 0         	 9.77564   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000408588	 101       	 0.617982  	 0         	 9.88771   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 92)                                                                                 	 0.00037423	 101       	 1.24148   	 0         	 19.8637   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000350597	 100       	 0.713069  	 0         	 11.4091   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 92, reductionFactor: 37, colBlockingSize: 12)                    	 9.9423e-05	 1         	 8.74321   	 0         	 1.05119   	 8.31747   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3441e-05	 1         	 3.73793   	 0         	 1.49517   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 92, r: 50, streamingCols: 24)                    	 2.7601e-05	 1         	 4.52882   	 0         	 1.81153   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 92, r2: 92)              	 1.78e-05  	 1         	 47.5506   	 0         	 7.93888   	 5.98958   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5151e-05	 9         	 0         	 0         	 23.7608   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.427e-05 	 1         	 17.5193   	 0         	 4.20463   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.329e-05 	 2         	 0         	 0         	 6.01956   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.971e-06 	 1         	 0.501454  	 0         	 2.00582   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 92)                                                                                   	 7.16e-06  	 1         	 1.28492   	 0         	 5.13966   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4600, m: 0, k: 50)  	 4.89e-06  	 100       	 0         	 0         	 37627.8   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 92)                                                           	 4.14e-06  	 1         	 0         	 0         	 17.7778   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 92, m: 50, fromLeft: 1)                	 3.15e-06  	 1         	 0         	 0         	 23.3651   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.81843   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.81838   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 6.06427   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 6.06297   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.04102   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.97254   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.77544   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.75403   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.3118    	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.2584    	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.16788   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.983765  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.662005  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.246581  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.166349  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.153193  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.119886  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.112107  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.094391  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0871567 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.057398  	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0551984 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0424255 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0410788 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0370234 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0369946 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0102193 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0090851 	 1818      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00508067	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00422863	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00399344	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113342	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000870846	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000481733	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22600527923072 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22600319232000 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22600117905536 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22599916579072 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22599715252608 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22599513926144 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22599312599680 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22599111273216 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22598909946752 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22598708620288 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22598507293824 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22598305967360 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22598104640896 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22597903314432 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22597701987968 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22597500661504 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22597299335040 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22597098008576 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22596896682112 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22596695355648 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22596494029184 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22596292702720 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22596091376256 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22595890049792 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22595688723328 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22595487396864 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22595286070400 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22595084743936 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22594883417472 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22594682091008 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22594480764544 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22594279438080 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22594078107520 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22593876781056 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22593675454592 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22593474128128 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22593272801664 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22593071475200 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22592870148736 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22592668822272 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22592467495808 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22592266169344 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22592064842880 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22591863516416 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22591662189952 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22591460863488 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22591259537024 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22591058210560 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22590856884096 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22590655557632 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22590454231168 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22590252904704 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22590051578240 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22589850251776 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22589648925312 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22589447598848 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22589246272384 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22589044945920 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22588843619456 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22588642292992 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22588440966528 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22588239640064 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22588038313600 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22600422262528 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22600415672064 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 143, m: 143)                                                               	 1.73121   	 700       	 8.27666   	 0         	 0.198904  	 41.6113   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7150, cols: 143, reductionFactor: 37, colBlockingSize: 12)                 	 1.12768   	 600       	 159.791   	 0         	 4.43911   	 35.9963   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7150, r: 143, r2: 143, leftOrthog: 1)      	 1.05523   	 600       	 166.269   	 0         	 14.1386   	 11.7599   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 143, r1_: 143, n: 50, r2: 143)        	 0.911997  	 600       	 192.383   	 0         	 10.8703   	 17.698    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7150, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.583909  	 700       	 152.278   	 0         	 6.46017   	 23.5718   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7150, Xcols: 93, r: 93, streamingCols: 0)                   	 0.227063  	 700       	 190.644   	 0         	 32.9056   	 5.79366   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 93, Qr2: 143)      	 0.176382  	 700       	 0         	 0         	 57.5425   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 143, reductionFactor: 37, colBlockingSize: 12)                 	 0.150261  	 100       	 69.8838   	 0         	 2.01222   	 34.7297   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 93, m: 93)                                                                  	 0.115952  	 809       	 7.48268   	 0         	 1.45345   	 5.14821   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, n: 50, r2left: 50, r2right: 93)                	 0.0932542 	 700       	 0         	 0         	 79.8617   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4650, m: 50, k: 93) 	 0.0814993 	 700       	 371.433   	 0         	 46.0097   	 8.07292   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 93, m: 7150)                                                                  	 0.0802035 	 700       	 0         	 0         	 92.8568   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4650, m: 93, k: 93) 	 0.0716424 	 700       	 785.917   	 0         	 68.2819   	 11.5099   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7150, m: 93)                                                         	 0.0715853 	 700       	 0         	 0         	 104.036   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.0710362 	 101       	 63.148    	 0         	 2.74294   	 23.022    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 143, r2: 143, leftOrthog: 1)      	 0.067921  	 100       	 150.535   	 0         	 13.114    	 11.4789   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 143)                                                                	 0.065831  	 100       	 3.8014    	 0         	 0.204767  	 18.5645   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 93, m: 50, k: 2500)   	 0.0573092 	 800       	 324.555   	 0         	 40.4431   	 8.02499   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 143, r1_: 50, n: 50, r2: 143)         	 0.0568777 	 100       	 179.763   	 0         	 19.5099   	 9.21392   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7150, r: 50, r2: 50, leftOrthog: 1)        	 0.0558437 	 100       	 64.0179   	 0         	 15.4359   	 4.14733   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 93, n: 50, r2: 93)                                                                                         	 0.053545  	 707       	 0         	 0         	 91.3601   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 93, m: 2500, k: 50)	 0.0469882 	 800       	 395.844   	 0         	 49.3264   	 8.02499   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 143, r1_: 143, n: 50, r2: 50)         	 0.0445442 	 100       	 229.536   	 0         	 13.2084   	 17.378    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0441461 	 100       	 1.98206   	 0         	 0.136819  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0341983 	 100       	 107.363   	 0         	 8.42146   	 12.7487   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 93, r: 93, streamingCols: 0)                   	 0.0183718 	 101       	 118.871   	 0         	 20.6411   	 5.75894   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 143, reductionFactor: 37, colBlockingSize: 12)                   	 0.0162912 	 100       	 12.8914   	 0         	 1.35528   	 9.51197   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00979356	 109       	 1.85495   	 0         	 0.672238  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4650, m: 50, k: 50) 	 0.00902833	 100       	 257.523   	 0         	 41.4251   	 6.21658   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 93)                                                         	 0.00789445	 101       	 0         	 0         	 47.593    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, n: 50, r2left: 50, r2right: 0)                 	 0.00708959	 100       	 0         	 0         	 52.4713   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 93, m: 2500)                                                                  	 0.00687541	 101       	 0         	 0         	 54.6469   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 93, m: 93, fromLeft: 1)                	 0.00617908	 808       	 0         	 0         	 18.0956   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00578475	 8         	 17.2868   	 0         	 2.79355   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4650, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.00554911	 7         	 104.209   	 0         	 4.45144   	 23.4102   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, n: 50, r: 93, r2: 93)             	 0.00470909	 7         	 119.567   	 0         	 10.3882   	 11.5099   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00416714	 101       	 6.22307   	 0         	 0.969489  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00296152	 8         	 34.6791   	 0         	 2.75534   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 93, n: 50, r2: 50)                                                                                         	 0.00288947	 101       	 0         	 0         	 130.031   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00254304	 8         	 19.6615   	 0         	 6.32315   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 143, leftOrthog: 1)         	 0.00213017	 100       	 33.5654   	 0         	 9.93349   	 3.37902   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 93, Qr2: 50)       	 0.00188303	 100       	 0         	 0         	 303.766   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4650, Xcols: 93, r: 93, streamingCols: 0)                   	 0.00187512	 7         	 150.137   	 0         	 25.9592   	 5.78358   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 93, m: 4650)                                                                  	 0.00158393	 7         	 0         	 0         	 30.5786   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00124014	 100       	 20.159    	 0         	 4.83816   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4650, m: 93)                                                         	 0.00121219	 7         	 0         	 0         	 39.956    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 93, k: 93)   	 0.00110512	 100       	 78.2633   	 0         	 12.9934   	 6.02332   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 93)   	 0.00104575	 100       	 44.4655   	 0         	 9.02698   	 4.92585   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000985508	 8         	 0         	 0         	 16.2353   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 93)                                                                                          	 0.000897737	 201       	 0         	 0         	 16.6579   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000895173	 100       	 0.558551  	 0         	 2.23421   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000856092	 100       	 29.2025   	 0         	 7.00859   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000770396	 201       	 0         	 0         	 10.4362   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000669867	 8         	 0         	 0         	 23.8853   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000660492	 100       	 37.8506   	 0         	 9.08414   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, n: 50, r: 93, r2: 50)             	 0.000638617	 1         	 67.7166   	 0         	 8.38813   	 8.07292   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 93)                 	 0.000591528	 100       	 0         	 0         	 19.3397   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000523835	 100       	 0         	 0         	 7.63599   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000513463	 100       	 0         	 0         	 7.79024   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00046059	 100       	 1.08556   	 0         	 13.0268   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000458938	 100       	 0         	 0         	 8.71577   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000424115	 101       	 0         	 0         	 9.52572   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000416662	 101       	 0.606007  	 0         	 9.69611   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 93)                                                                                 	 0.000387592	 101       	 1.21171   	 0         	 19.3874   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000330562	 100       	 0.756288  	 0         	 12.1006   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 93, reductionFactor: 37, colBlockingSize: 12)                    	 0.000119513	 1         	 7.43246   	 0         	 0.890213  	 8.34908   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2461e-05	 1         	 3.85077   	 0         	 1.54031   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 93, r: 50, streamingCols: 25)                    	 2.9451e-05	 1         	 4.24434   	 0         	 1.69774   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 93, r2: 93)              	 2.5481e-05	 1         	 33.9429   	 0         	 5.63526   	 6.02332   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 2.3081e-05	 9         	 0         	 0         	 15.5972   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.9271e-05	 1         	 12.9729   	 0         	 3.11349   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.3761e-05	 2         	 0         	 0         	 5.81353   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.32e-06  	 1         	 0.536481  	 0         	 2.14592   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 93)                                                                                   	 8.6e-06   	 1         	 1.0814    	 0         	 4.32558   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 93)                                                           	 5.03e-06  	 1         	 0         	 0         	 14.7913   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4650, m: 0, k: 50)  	 4.76e-06  	 100       	 0         	 0         	 39075.6   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 93, m: 50, fromLeft: 1)                	 3.4e-06   	 1         	 0         	 0         	 21.8824   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.94872   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.94865   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 6.1656    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 6.16428   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.09826   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.99618   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.84118   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.78297   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.32927   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.24712   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.18113   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.01427   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.668315  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.249915  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.178724  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.164326  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.125746  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.101449  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0893464 	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0821066 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0586264 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0585493 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0476487 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0435962 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0392725 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0392419 	 2         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0125037 	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0111772 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00635382	 1818      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00620556	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00444913	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113482	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000913093	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00046059	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22643718272896 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22643537340416 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22643336013952 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22643134687488 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22642933361024 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22642732034560 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22642530708096 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22642329381632 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22642128055168 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22641926728704 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22641725402240 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22641524075776 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22641322749312 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22641121422848 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22640920096384 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22640718769920 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22640517443456 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22640316116992 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22640114790528 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22639913464064 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22639712137600 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22639510811136 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22639309484672 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22639108158208 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22638906831744 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22638705505280 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22638504178816 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22638302852352 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22638101525888 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22637900199424 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22637698872960 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22637497546496 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22637296215936 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22637094889472 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22636893563008 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22636692236544 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22636490910080 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22636289583616 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22636088257152 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22635886930688 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22635685604224 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22635484277760 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22635282951296 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22635081624832 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22634880298368 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22634678971904 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22634477645440 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22634276318976 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22634074992512 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22633873666048 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22633672339584 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22633471013120 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22633269686656 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22633068360192 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22632867033728 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22632665707264 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22632464380800 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22632263054336 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22632061727872 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22631860401408 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22631659074944 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22631457748480 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22631256422016 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22643612612352 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22643432478464 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 144, m: 144)                                                               	 1.69663   	 700       	 8.62375   	 0         	 0.205803  	 41.903    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7200, cols: 144, reductionFactor: 37, colBlockingSize: 12)                 	 1.15382   	 600       	 159.471   	 0         	 4.39943   	 36.248    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7200, r: 144, r2: 144, leftOrthog: 1)      	 1.09931   	 600       	 162.974   	 0         	 13.7622   	 11.8421   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 144, r1_: 144, n: 50, r2: 144)        	 0.90376   	 600       	 198.237   	 0         	 11.1233   	 17.8218   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7200, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.597431  	 700       	 153.112   	 0         	 6.42678   	 23.8241   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7200, Xcols: 94, r: 94, streamingCols: 0)                   	 0.235803  	 700       	 188.858   	 0         	 32.251    	 5.85589   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 94, Qr2: 144)      	 0.171423  	 700       	 0         	 0         	 60.063    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 144, reductionFactor: 37, colBlockingSize: 12)                 	 0.154189  	 100       	 69.0593   	 0         	 1.97542   	 34.9593   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 94, m: 94)                                                                  	 0.117903  	 809       	 7.59882   	 0         	 1.46025   	 5.20376   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, n: 50, r2left: 50, r2right: 94)                	 0.0898654 	 700       	 0         	 0         	 84.3501   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4700, m: 50, k: 94) 	 0.0823692 	 700       	 375.456   	 0         	 46.3329   	 8.10345   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7200, m: 94)                                                         	 0.0772063 	 700       	 0         	 0         	 98.1806   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.0740381 	 101       	 61.8976   	 0         	 2.66106   	 23.2605   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 94, m: 7200)                                                                  	 0.0705264 	 700       	 0         	 0         	 107.48    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 144, r2: 144, leftOrthog: 1)      	 0.0679233 	 100       	 152.643   	 0         	 13.2087   	 11.5562   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4700, m: 94, k: 94) 	 0.0670313 	 700       	 867.369   	 0         	 74.5568   	 11.6337   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 144)                                                                	 0.0663743 	 100       	 3.79665   	 0         	 0.204296  	 18.5841   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 144, r1_: 50, n: 50, r2: 144)         	 0.0591435 	 100       	 175.302   	 0         	 18.9911   	 9.23077   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 94, m: 50, k: 2500)   	 0.0560307 	 800       	 335.53    	 0         	 41.6572   	 8.05457   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 94, n: 50, r2: 94)                                                                                         	 0.0555989 	 707       	 0         	 0         	 89.8875   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7200, r: 50, r2: 50, leftOrthog: 1)        	 0.0503049 	 100       	 71.5636   	 0         	 17.2548   	 4.14747   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 94, m: 2500, k: 50)	 0.0456257 	 800       	 412.049   	 0         	 51.1572   	 8.05457   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 144, r1_: 144, n: 50, r2: 50)         	 0.0453865 	 100       	 228.438   	 0         	 13.0565   	 17.4961   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.04128   	 100       	 2.11967   	 0         	 0.146318  	 14.4868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0340151 	 100       	 108.696   	 0         	 8.52562   	 12.7493   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 94, r: 94, streamingCols: 0)                   	 0.0185676 	 101       	 120.16    	 0         	 20.6451   	 5.82029   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 144, reductionFactor: 37, colBlockingSize: 12)                   	 0.0177806 	 100       	 11.9773   	 0         	 1.25692   	 9.52912   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4700, m: 50, k: 50) 	 0.0106368 	 100       	 220.932   	 0         	 35.5372   	 6.21693   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00967565	 109       	 1.87756   	 0         	 0.68043   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00695154	 101       	 3.73046   	 0         	 0.581166  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 94, m: 2500)                                                                  	 0.0067233 	 101       	 0         	 0         	 56.4842   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, n: 50, r2left: 50, r2right: 0)                 	 0.00635914	 100       	 0         	 0         	 59.1275   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 94)                                                         	 0.00604376	 101       	 0         	 0         	 62.8351   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4700, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.00566102	 7         	 105.48    	 0         	 4.45779   	 23.6619   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 94, m: 94, fromLeft: 1)                	 0.00525892	 808       	 0         	 0         	 21.7215   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00519494	 8         	 19.2495   	 0         	 3.11072   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, n: 50, r: 94, r2: 94)             	 0.0049445 	 7         	 117.587   	 0         	 10.1075   	 11.6337   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 94, n: 50, r2: 50)                                                                                         	 0.003096  	 101       	 0         	 0         	 122.661   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 94, Qr2: 50)       	 0.00292461	 100       	 0         	 0         	 196.949   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00266998	 8         	 38.4657   	 0         	 3.0562    	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 144, leftOrthog: 1)         	 0.0022731 	 100       	 31.6748   	 0         	 9.36165   	 3.38346   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4700, Xcols: 94, r: 94, streamingCols: 0)                   	 0.00170536	 7         	 170.466   	 0         	 29.1605   	 5.84577   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00165351	 8         	 30.2387   	 0         	 9.72478   	 3.10945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 94, m: 4700)                                                                  	 0.00157821	 7         	 0         	 0         	 31.3529   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00112036	 100       	 22.3143   	 0         	 5.35544   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 94, k: 94)   	 0.00110319	 100       	 80.0949   	 0         	 13.2242   	 6.0567    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4700, m: 94)                                                         	 0.00109389	 7         	 0         	 0         	 45.2345   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 94)   	 0.00104194	 100       	 45.108    	 0         	 9.13678   	 4.93697   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000967738	 100       	 25.8334   	 0         	 6.20003   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 94)                                                                                          	 0.000959032	 201       	 0         	 0         	 15.7609   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000897125	 100       	 0.557336  	 0         	 2.22934   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000783403	 201       	 0         	 0         	 10.2629   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00068991	 100       	 36.2366   	 0         	 8.69679   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 94)                 	 0.000622468	 100       	 0         	 0         	 18.507    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000607776	 8         	 0         	 0         	 26.3255   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000529633	 8         	 0         	 0         	 30.2096   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, n: 50, r: 94, r2: 50)             	 0.000525074	 1         	 84.1405   	 0         	 10.3833   	 8.10345   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000501418	 100       	 0         	 0         	 7.97738   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000496301	 100       	 0         	 0         	 8.05963   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000459635	 100       	 1.08782   	 0         	 13.0538   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000446084	 100       	 0         	 0         	 8.96692   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000392132	 101       	 0         	 0         	 10.3027   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000391992	 101       	 0.644146  	 0         	 10.3063   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 94)                                                                                 	 0.000387031	 101       	 1.22652   	 0         	 19.6243   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000346547	 100       	 0.721403  	 0         	 11.5424   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 94, reductionFactor: 37, colBlockingSize: 12)                    	 0.000105403	 1         	 8.60963   	 0         	 1.02737   	 8.38026   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2281e-05	 1         	 3.87225   	 0         	 1.5489    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 94, r: 50, streamingCols: 27)                    	 3.082e-05 	 1         	 4.05581   	 0         	 1.62232   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 94, r2: 94)              	 2.246e-05 	 1         	 39.3411   	 0         	 6.49546   	 6.0567    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.5931e-05	 1         	 15.6927   	 0         	 3.76624   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.523e-05 	 9         	 0         	 0         	 23.6376   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.115e-05 	 2         	 0         	 0         	 7.17489   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 94)                                                                                   	 9.33e-06  	 1         	 1.0075    	 0         	 4.03001   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.91e-06  	 1         	 0.561167  	 0         	 2.24467   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 94)                                                           	 5.7e-06   	 1         	 0         	 0         	 13.193    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4700, m: 0, k: 50)  	 4.791e-06 	 100       	 0         	 0         	 39240.2   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 94, m: 50, fromLeft: 1)                	 3.241e-06 	 1         	 0         	 0         	 23.2027   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.96616   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.96611   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 6.17491   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 6.17355   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.13201   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.04667   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.80428   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.79113   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.36075   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.26669   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.21981   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.00926   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.68746   	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.257793  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.174794  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.162187  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.127578  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0973433 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0853495 	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0793687 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0609387 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.057151  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0463156 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0450067 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0368519 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0368218 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0107029 	 18        
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00527739	 818       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00516559	 1818      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00429798	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00340974	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112557	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000915365	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000459635	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23390923261824 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23390727432192 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23390526105728 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23390324779264 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23390123452800 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23389922126336 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23389720799872 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23389519473408 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23389318146944 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23389116820480 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23388915494016 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23388714167552 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23388512841088 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23388311514624 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23388110188160 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23387908861696 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23387707535232 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23387506208768 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23387304882304 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23387103555840 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23386902229376 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23386700902912 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23386499576448 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23386298249984 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23386096923520 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23385895597056 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23385694270592 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23385492944128 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23385291617664 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23385090291200 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23384888964736 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23384687638272 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23384486307712 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23384284981248 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23384083654784 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23383882328320 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23383681001856 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23383479675392 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23383278348928 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23383077022464 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23382875696000 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23382674369536 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23382473043072 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23382271716608 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23382070390144 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23381869063680 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23381667737216 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23381466410752 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23381265084288 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23381063757824 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23380862431360 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23380661104896 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23380459778432 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23380258451968 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23380057125504 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23379855799040 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23379654472576 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23379453146112 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23379251819648 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23379050493184 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23378849166720 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23378647840256 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23378446513792 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23390817601280 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23390811010816 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 145, m: 145)                                                               	 1.78506   	 700       	 8.36848   	 0         	 0.19833   	 42.1947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7250, cols: 145, reductionFactor: 37, colBlockingSize: 12)                 	 1.17917   	 600       	 159.317   	 0         	 4.36488   	 36.4997   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7250, r: 145, r2: 145, leftOrthog: 1)      	 0.972596  	 600       	 188.071   	 0         	 15.772    	 11.9243   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 145, r1_: 145, n: 50, r2: 145)        	 0.904128  	 600       	 202.314   	 0         	 11.2738   	 17.9455   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7250, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.608374  	 700       	 154.641   	 0         	 6.42292   	 24.0764   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7250, Xcols: 95, r: 95, streamingCols: 0)                   	 0.236126  	 700       	 193.972   	 0         	 32.776    	 5.91811   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 95, Qr2: 145)      	 0.177675  	 700       	 0         	 0         	 58.7814   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 145, reductionFactor: 37, colBlockingSize: 12)                 	 0.159087  	 100       	 67.866    	 0         	 1.92863   	 35.1888   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 95, m: 95)                                                                  	 0.119938  	 809       	 7.71082   	 0         	 1.46612   	 5.25932   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, n: 50, r2left: 50, r2right: 95)                	 0.0916108 	 700       	 0         	 0         	 84.204    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4750, m: 50, k: 95) 	 0.0894234 	 700       	 353.235   	 0         	 43.4293   	 8.13356   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7250, m: 95)                                                         	 0.0859225 	 700       	 0         	 0         	 89.7786   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 95, m: 7250)                                                                  	 0.0820202 	 700       	 0         	 0         	 94.0501   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.0759035 	 101       	 61.6678   	 0         	 2.62428   	 23.4989   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 145)                                                                	 0.0758736 	 100       	 3.34438   	 0         	 0.179773  	 18.6034   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4750, m: 95, k: 95) 	 0.0733198 	 700       	 818.555   	 0         	 69.6203   	 11.7574   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 145, r2: 145, leftOrthog: 1)      	 0.0661909 	 100       	 158.821   	 0         	 13.652    	 11.6335   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 95, m: 50, k: 2500)   	 0.0597924 	 800       	 317.766   	 0         	 39.3093   	 8.08373   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 145, r1_: 50, n: 50, r2: 145)         	 0.0588798 	 100       	 178.542   	 0         	 19.3071   	 9.24745   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 95, n: 50, r2: 95)                                                                                         	 0.0560739 	 707       	 0         	 0         	 91.0324   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7250, r: 50, r2: 50, leftOrthog: 1)        	 0.0522773 	 100       	 69.3418   	 0         	 16.7185   	 4.1476    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 95, m: 2500, k: 50)	 0.0466858 	 800       	 406.976   	 0         	 50.3451   	 8.08373   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0441969 	 100       	 1.97978   	 0         	 0.136661  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 145, r1_: 145, n: 50, r2: 50)         	 0.0441493 	 100       	 238.112   	 0         	 13.5182   	 17.6142   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0342587 	 100       	 108.672   	 0         	 8.52339   	 12.7499   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 95, r: 95, streamingCols: 0)                   	 0.0196201 	 101       	 116.147   	 0         	 19.7474   	 5.88162   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 145, reductionFactor: 37, colBlockingSize: 12)                   	 0.01765   	 100       	 12.2341   	 0         	 1.28158   	 9.54608   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4750, m: 50, k: 50) 	 0.0106058 	 100       	 223.934   	 0         	 36.0179   	 6.21728   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00950502	 109       	 1.91126   	 0         	 0.692645  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 95)                                                         	 0.0072826 	 101       	 0         	 0         	 52.7009   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 95, m: 2500)                                                                  	 0.00716643	 101       	 0         	 0         	 53.5553   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4750, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.00632082	 7         	 97.5163   	 0         	 4.07786   	 23.9136   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, n: 50, r2left: 50, r2right: 0)                 	 0.00625983	 100       	 0         	 0         	 60.7045   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4750, m: 95)                                                         	 0.00551516	 7         	 0         	 0         	 9.16384   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 95, m: 95, fromLeft: 1)                	 0.00544074	 808       	 0         	 0         	 21.4447   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, n: 50, r: 95, r2: 95)             	 0.00510874	 7         	 117.478   	 0         	 9.99178   	 11.7574   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00504659	 8         	 19.8154   	 0         	 3.20216   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00459307	 101       	 5.64599   	 0         	 0.879587  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0028711 	 8         	 35.7713   	 0         	 2.84212   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 95, n: 50, r2: 50)                                                                                         	 0.00274957	 101       	 0         	 0         	 139.585   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 95, Qr2: 50)       	 0.00265389	 100       	 0         	 0         	 218.547   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 145, leftOrthog: 1)         	 0.0024882 	 100       	 29.1376   	 0         	 8.60061   	 3.38785   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00208904	 8         	 23.9345   	 0         	 7.69733   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4750, Xcols: 95, r: 95, streamingCols: 0)                   	 0.00175694	 7         	 170.798   	 0         	 28.9098   	 5.90796   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00120349	 100       	 20.7728   	 0         	 4.98548   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 95, k: 95)   	 0.00116724	 100       	 77.3193   	 0         	 12.6967   	 6.08974   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 95)   	 0.00110485	 100       	 42.9923   	 0         	 8.68897   	 4.94792   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 95, m: 4750)                                                                  	 0.00106395	 7         	 0         	 0         	 47.5023   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000977586	 100       	 25.5732   	 0         	 6.13757   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000940631	 100       	 0.531558  	 0         	 2.12623   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 95)                                                                                          	 0.000931541	 201       	 0         	 0         	 16.3986   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000862263	 8         	 0         	 0         	 18.5558   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000802984	 201       	 0         	 0         	 10.0127   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000699732	 100       	 35.728    	 0         	 8.57471   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 95)                 	 0.000588825	 100       	 0         	 0         	 19.7003   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000533376	 100       	 0         	 0         	 7.4994    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, n: 50, r: 95, r2: 50)             	 0.000525014	 1         	 85.9501   	 0         	 10.5673   	 8.13356   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000513115	 100       	 0         	 0         	 7.79552   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000480184	 8         	 0         	 0         	 33.3206   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000455238	 100       	 1.09833   	 0         	 13.1799   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000444652	 101       	 0         	 0         	 9.08576   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00043399	 100       	 0         	 0         	 9.2168    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 95)                                                                                 	 0.00043302	 101       	 1.10792   	 0         	 17.7267   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000414254	 101       	 0.609529  	 0         	 9.75247   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00032345	 100       	 0.772917  	 0         	 12.3667   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 95, reductionFactor: 37, colBlockingSize: 12)                    	 0.000112223	 1         	 8.25938   	 0         	 0.981973  	 8.411     
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.3311e-05	 1         	 3.75251   	 0         	 1.50101   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 95, r: 50, streamingCols: 23)                    	 2.7951e-05	 1         	 4.47211   	 0         	 1.78884   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 95, r2: 95)              	 1.9811e-05	 1         	 45.5555   	 0         	 7.48069   	 6.08974   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.59e-05  	 1         	 15.7233   	 0         	 3.77358   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.506e-05 	 9         	 0         	 0         	 23.9044   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.1341e-05	 2         	 0         	 0         	 7.05405   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.0121e-05	 1         	 0.494022  	 0         	 1.97609   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 95)                                                                                   	 9.23e-06  	 1         	 1.02925   	 0         	 4.11701   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4750, m: 0, k: 50)  	 5.511e-06 	 100       	 0         	 0         	 34476.5   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 95)                                                           	 5.24e-06  	 1         	 0         	 0         	 14.5038   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 95, m: 50, fromLeft: 1)                	 3.36e-06  	 1         	 0         	 0         	 22.619    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.13325   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.13321   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 6.27148   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 6.27012   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.21322   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.08834   	 1818      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.90513   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.86166   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.39088   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.31276   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.09355   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.00813   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.698715  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.259653  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.180763  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.175627  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.129443  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.100032  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0989726 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0907421 	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0610914 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0609959 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0473855 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0456994 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.043614  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0435658 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.010716  	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00996054	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00767161	 1818      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00545916	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00407866	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00117072	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000959982	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000455238	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23295051249536 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 23294828865536 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 23294627539072 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 23294426212608 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 23294224886144 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 23294023559680 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 23293822233216 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 23293620906752 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 23293419580288 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 23293218253824 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 23293016927360 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 23292815600896 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 23292614274432 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 23292412947968 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 23292211621504 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 23292010295040 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 23291808968576 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 23291607642112 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 23291406315648 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 23291204989184 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 23291003662720 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 23290802336256 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 23290601009792 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 23290399683328 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 23290198356864 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 23289997030400 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 23289795703936 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 23289594377472 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 23289393051008 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 23289191724544 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 23288990398080 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 23288789071616 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 23288587741056 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 23288386414592 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 23288185088128 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 23287983761664 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 23287782435200 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 23287581108736 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 23287379782272 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 23287178455808 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 23286977129344 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 23286775802880 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 23286574476416 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 23286373149952 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 23286171823488 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 23285970497024 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 23285769170560 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 23285567844096 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 23285366517632 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 23285165191168 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 23284963864704 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 23284762538240 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 23284561211776 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 23284359885312 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 23284158558848 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 23283957232384 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 23283755905920 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 23283554579456 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 23283353252992 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 23283151926528 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 23282950600064 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 23282749273600 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 23282547947136 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23294945588992 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 23294938998528 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 146, m: 146)                                                               	 1.78077   	 700       	 8.56343   	 0         	 0.201557  	 42.4863   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7300, cols: 146, reductionFactor: 37, colBlockingSize: 12)                 	 1.18221   	 600       	 162.218   	 0         	 4.41391   	 36.7515   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7300, r: 146, r2: 146, leftOrthog: 1)      	 1.0247    	 600       	 182.228   	 0         	 15.1773   	 12.0066   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 146, r1_: 146, n: 50, r2: 146)        	 0.927475  	 600       	 201.33    	 0         	 11.1421   	 18.0693   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7300, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.630501  	 700       	 153.423   	 0         	 6.30624   	 24.3287   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7300, Xcols: 96, r: 96, streamingCols: 0)                   	 0.243707  	 700       	 193.239   	 0         	 32.3124   	 5.98034   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 96, Qr2: 146)      	 0.174338  	 700       	 0         	 0         	 60.761    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 146, reductionFactor: 37, colBlockingSize: 12)                 	 0.16173   	 100       	 67.6809   	 0         	 1.91091   	 35.4181   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 96, m: 96)                                                                  	 0.124258  	 809       	 7.68024   	 0         	 1.44505   	 5.31488   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 96, m: 7300)                                                                  	 0.114673  	 700       	 0         	 0         	 68.4466   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4800, m: 50, k: 96) 	 0.102848  	 700       	 313.627   	 0         	 38.4192   	 8.16327   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, n: 50, r2left: 50, r2right: 96)                	 0.0965284 	 700       	 0         	 0         	 81.3125   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7300, m: 96)                                                         	 0.0810747 	 700       	 0         	 0         	 96.8115   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.0784986 	 101       	 60.8911   	 0         	 2.56522   	 23.7371   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4800, m: 96, k: 96) 	 0.0782067 	 700       	 791.895   	 0         	 66.6512   	 11.8812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 146)                                                                	 0.0759446 	 100       	 3.3643    	 0         	 0.180658  	 18.6224   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 146, r2: 146, leftOrthog: 1)      	 0.0687834 	 100       	 154.95    	 0         	 13.2315   	 11.7107   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 96, n: 50, r2: 96)                                                                                         	 0.060686  	 707       	 0         	 0         	 85.8942   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 146, r1_: 50, n: 50, r2: 146)         	 0.060595  	 100       	 175.889   	 0         	 18.9864   	 9.26396   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 96, m: 50, k: 2500)   	 0.0533998 	 800       	 359.552   	 0         	 44.3208   	 8.11249   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7300, r: 50, r2: 50, leftOrthog: 1)        	 0.0507642 	 100       	 71.9011   	 0         	 17.3351   	 4.14773   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0442761 	 100       	 1.97624   	 0         	 0.136417  	 14.4868   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 146, r1_: 146, n: 50, r2: 50)         	 0.0440345 	 100       	 242.038   	 0         	 13.6496   	 17.7322   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 96, m: 2500, k: 50)	 0.0416903 	 800       	 460.538   	 0         	 56.769    	 8.11249   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0332952 	 100       	 112.588   	 0         	 8.83011   	 12.7505   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 96, r: 96, streamingCols: 0)                   	 0.0196536 	 101       	 118.403   	 0         	 19.9232   	 5.94295   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 146, reductionFactor: 37, colBlockingSize: 12)                   	 0.0174914 	 100       	 12.5159   	 0         	 1.3088    	 9.56288   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4800, m: 50, k: 50) 	 0.0109634 	 100       	 218.91    	 0         	 35.2079   	 6.21762   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00958715	 109       	 1.89489   	 0         	 0.686711  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 96, m: 2500)                                                                  	 0.00809072	 101       	 0         	 0         	 47.9364   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 96)                                                         	 0.00733824	 101       	 0         	 0         	 52.8519   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 96, m: 96, fromLeft: 1)                	 0.00687631	 808       	 0         	 0         	 17.3268   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4800, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.00670134	 7         	 94.9144   	 0         	 3.92771   	 24.1653   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, n: 50, r2left: 50, r2right: 0)                 	 0.00611368	 100       	 0         	 0         	 62.81     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, n: 50, r: 96, r2: 96)             	 0.00548778	 7         	 112.854   	 0         	 9.49851   	 11.8812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00518985	 8         	 19.2684   	 0         	 3.11377   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4800, m: 96)                                                         	 0.00495485	 7         	 0         	 0         	 10.416    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0040746 	 101       	 6.36441   	 0         	 0.991509  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 96, n: 50, r2: 50)                                                                                         	 0.00294583	 101       	 0         	 0         	 131.658   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00267803	 8         	 38.3501   	 0         	 3.04701   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 96, Qr2: 50)       	 0.00251906	 100       	 0         	 0         	 231.832   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00228928	 8         	 21.8409   	 0         	 7.02404   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 146, leftOrthog: 1)         	 0.00219495	 100       	 33.2582   	 0         	 9.80432   	 3.39219   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4800, Xcols: 96, r: 96, streamingCols: 0)                   	 0.00177773	 7         	 174.187   	 0         	 29.1764   	 5.97015   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 96, m: 4800)                                                                  	 0.00114355	 7         	 0         	 0         	 45.131    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 96)   	 0.001118  	 100       	 42.9337   	 0         	 8.6583    	 4.95868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00111283	 100       	 22.4653   	 0         	 5.39166   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 96, k: 96)   	 0.00110027	 100       	 83.7611   	 0         	 13.681    	 6.12245   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000939404	 100       	 0.532252  	 0         	 2.12901   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 96)                                                                                          	 0.000922733	 201       	 0         	 0         	 16.7294   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000878877	 100       	 28.4454   	 0         	 6.82689   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000784941	 201       	 0         	 0         	 10.2428   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000726549	 8         	 0         	 0         	 22.0219   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000700756	 100       	 35.6758   	 0         	 8.56218   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 96)                 	 0.000599186	 100       	 0         	 0         	 19.4931   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, n: 50, r: 96, r2: 50)             	 0.000576836	 1         	 79.8841   	 0         	 9.7858    	 8.16327   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000516783	 100       	 0         	 0         	 7.74019   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000509774	 100       	 0         	 0         	 7.84661   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000481812	 8         	 0         	 0         	 33.208    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000480945	 100       	 1.03962   	 0         	 12.4754   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000431285	 100       	 0         	 0         	 9.27461   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000405467	 101       	 0         	 0         	 9.96382   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000394149	 101       	 0.640621  	 0         	 10.2499   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 96)                                                                                 	 0.000390351	 101       	 1.24196   	 0         	 19.8713   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000333447	 100       	 0.749744  	 0         	 11.9959   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 96, reductionFactor: 37, colBlockingSize: 12)                    	 0.000113033	 1         	 8.37373   	 0         	 0.991993  	 8.44132   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.6881e-05	 1         	 3.38928   	 0         	 1.35571   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 96, r: 50, streamingCols: 21)                    	 2.8101e-05	 1         	 4.44824   	 0         	 1.7793    	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 2.1301e-05	 1         	 11.7365   	 0         	 2.81677   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 96, r2: 96)              	 2.0641e-05	 1         	 44.649    	 0         	 7.29267   	 6.12245   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5141e-05	 9         	 0         	 0         	 23.7765   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.155e-05 	 1         	 0.4329    	 0         	 1.7316    	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.0101e-05	 2         	 0         	 0         	 7.92001   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 96)                                                                                   	 8.38e-06  	 1         	 1.14558   	 0         	 4.58234   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 96)                                                           	 5.63e-06  	 1         	 0         	 0         	 13.6412   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4800, m: 0, k: 50)  	 4.74e-06  	 100       	 0         	 0         	 40506.3   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 96, m: 50, fromLeft: 1)                	 3.45e-06  	 1         	 0         	 0         	 22.2609   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.25622   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.25618   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 6.32371   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 6.32233   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.24554   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.11729   	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.9324    	 100       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.90099   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.39543   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.37829   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.14644   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.03298   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.723057  	 918       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.267493  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.194242  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.177289  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.133846  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.124399  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.103751  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0945054 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0658562 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0545126 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0453697 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0441681 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0441371 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0423911 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0112964 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00723902	 1818      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0068949 	 818       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00585551	 5273      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00461503	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111795	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000959334	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000480945	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22644011153280 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22643805775872 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22643604449408 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22643403122944 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22643201796480 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22643000470016 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22642799143552 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22642597817088 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22642396490624 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22642195164160 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22641993837696 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22641792511232 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22641591184768 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22641389858304 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22641188531840 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22640987205376 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22640785878912 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22640584552448 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22640383225984 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22640181899520 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22639980573056 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22639779246592 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22639577920128 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22639376593664 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22639175267200 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22638973940736 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22638772614272 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22638571287808 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22638369961344 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22638168634880 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22637967308416 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22637765981952 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22637564651392 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22637363324928 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22637161998464 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22636960672000 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22636759345536 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22636558019072 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22636356692608 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22636155366144 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22635954039680 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22635752713216 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22635551386752 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22635350060288 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22635148733824 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22634947407360 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22634746080896 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22634544754432 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22634343427968 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22634142101504 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22633940775040 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22633739448576 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22633538122112 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22633336795648 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22633135469184 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22632934142720 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22632732816256 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22632531489792 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22632330163328 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22632128836864 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22631927510400 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22631726183936 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22631524857472 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22643905492736 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22643898902272 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 147, m: 147)                                                               	 1.83172   	 700       	 8.49748   	 0         	 0.198641  	 42.778    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7350, cols: 147, reductionFactor: 37, colBlockingSize: 12)                 	 1.19114   	 600       	 164.332   	 0         	 4.44103   	 37.0032   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7350, r: 147, r2: 147, leftOrthog: 1)      	 0.95991   	 600       	 198.551   	 0         	 16.4244   	 12.0888   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 147, r1_: 147, n: 50, r2: 147)        	 0.942754  	 600       	 202.164   	 0         	 11.1122   	 18.1931   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7350, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.642755  	 700       	 154.702   	 0         	 6.29355   	 24.581    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7350, Xcols: 97, r: 97, streamingCols: 0)                   	 0.24965   	 700       	 193.909   	 0         	 32.0905   	 6.04256   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 97, Qr2: 147)      	 0.189544  	 700       	 0         	 0         	 56.6782   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4850, m: 97, k: 97) 	 0.188911  	 700       	 338.187   	 0         	 28.1706   	 12.005    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 147, reductionFactor: 37, colBlockingSize: 12)                 	 0.161351  	 100       	 68.7724   	 0         	 1.92925   	 35.6472   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 97, m: 97)                                                                  	 0.129525  	 809       	 7.60059   	 0         	 1.41527   	 5.37043   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, n: 50, r2left: 50, r2right: 97)                	 0.0965865 	 700       	 0         	 0         	 82.6724   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4850, m: 50, k: 97) 	 0.096123  	 700       	 342.598   	 0         	 41.8181   	 8.19257   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 97, m: 7350)                                                                  	 0.0956758 	 700       	 0         	 0         	 83.4593   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7350, m: 97)                                                         	 0.0842922 	 700       	 0         	 0         	 94.7305   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.0776106 	 101       	 62.8776   	 0         	 2.62261   	 23.9752   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 147)                                                                	 0.0764755 	 100       	 3.36382   	 0         	 0.18045   	 18.6413   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 147, r2: 147, leftOrthog: 1)      	 0.066165  	 100       	 163.296   	 0         	 13.8529   	 11.7879   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 97, n: 50, r2: 97)                                                                                         	 0.0648485 	 707       	 0         	 0         	 82.0641   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 147, r1_: 50, n: 50, r2: 147)         	 0.0548567 	 100       	 196.959   	 0         	 21.2233   	 9.2803    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 97, m: 50, k: 2500)   	 0.0534484 	 800       	 362.967   	 0         	 44.5858   	 8.14086   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7350, r: 50, r2: 50, leftOrthog: 1)        	 0.0533848 	 100       	 68.8398   	 0         	 16.5965   	 4.14786   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 147, r1_: 147, n: 50, r2: 50)         	 0.0457164 	 100       	 236.337   	 0         	 13.24     	 17.8502   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0434165 	 100       	 2.01536   	 0         	 0.139117  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 97, m: 2500, k: 50)	 0.0390789 	 800       	 496.432   	 0         	 60.9802   	 8.14086   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0338313 	 100       	 111.563   	 0         	 8.74929   	 12.7511   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 97, r: 97, streamingCols: 0)                   	 0.0193928 	 101       	 122.508   	 0         	 20.4035   	 6.00426   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 147, reductionFactor: 37, colBlockingSize: 12)                   	 0.0184012 	 100       	 12.0607   	 0         	 1.25901   	 9.5795    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.01012   	 109       	 1.79512   	 0         	 0.650556  	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4850, m: 50, k: 50) 	 0.00980972	 100       	 247.204   	 0         	 39.7565   	 6.21795   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 97, m: 2500)                                                                  	 0.007307  	 101       	 0         	 0         	 53.6308   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 97)                                                         	 0.00680028	 101       	 0         	 0         	 57.6271   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4850, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.00675668	 7         	 97.1095   	 0         	 3.97711   	 24.4171   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, n: 50, r: 97, r2: 97)             	 0.00578289	 7         	 110.476   	 0         	 9.20254   	 12.005    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, n: 50, r2left: 50, r2right: 0)                 	 0.00556869	 100       	 0         	 0         	 69.6753   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 97, m: 97, fromLeft: 1)                	 0.00555009	 808       	 0         	 0         	 21.9167   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00507959	 8         	 19.6866   	 0         	 3.18136   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00391985	 101       	 6.61566   	 0         	 1.03065   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 97, n: 50, r2: 50)                                                                                         	 0.00298587	 101       	 0         	 0         	 131.245   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00274411	 8         	 37.4265   	 0         	 2.97364   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 147, leftOrthog: 1)         	 0.00243412	 100       	 30.1957   	 0         	 8.89026   	 3.39649   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 97, Qr2: 50)       	 0.00234664	 100       	 0         	 0         	 250.571   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0020205 	 8         	 24.7464   	 0         	 7.95844   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4850, Xcols: 97, r: 97, streamingCols: 0)                   	 0.0018181 	 7         	 175.698   	 0         	 29.126    	 6.03234   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 97, m: 4850)                                                                  	 0.00168092	 7         	 0         	 0         	 31.3461   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4850, m: 97)                                                         	 0.00159137	 7         	 0         	 0         	 33.11     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00116823	 100       	 21.3998   	 0         	 5.13596   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 97)   	 0.00113731	 100       	 42.6444   	 0         	 8.58163   	 4.96926   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 97, k: 97)   	 0.00110487	 100       	 85.1591   	 0         	 13.8362   	 6.15482   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 97)                                                                                          	 0.000938183	 201       	 0         	 0         	 16.6253   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000903365	 100       	 27.6743   	 0         	 6.64183   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000808974	 100       	 0.618067  	 0         	 2.47227   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000783235	 201       	 0         	 0         	 10.2651   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000709802	 100       	 35.2211   	 0         	 8.45306   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.000705239	 8         	 0         	 0         	 22.6873   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 97)                 	 0.000591787	 100       	 0         	 0         	 19.872    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000569596	 8         	 0         	 0         	 28.0901   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, n: 50, r: 97, r2: 50)             	 0.000553115	 1         	 85.0546   	 0         	 10.3819   	 8.19257   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000527133	 100       	 0         	 0         	 7.58822   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000480474	 100       	 0         	 0         	 8.32511   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000460637	 100       	 0         	 0         	 8.68363   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00046019	 100       	 1.08651   	 0         	 13.0381   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.00040536	 101       	 0         	 0         	 9.96645   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 97)                                                                                 	 0.00038006	 101       	 1.28888   	 0         	 20.622    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000376301	 101       	 0.671005  	 0         	 10.7361   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000327899	 100       	 0.76243   	 0         	 12.1989   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 97, reductionFactor: 37, colBlockingSize: 12)                    	 0.000120924	 1         	 7.99122   	 0         	 0.943336  	 8.47123   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.2841e-05	 1         	 3.80622   	 0         	 1.52249   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 97, r: 50, streamingCols: 25)                    	 2.7131e-05	 1         	 4.60728   	 0         	 1.84291   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 97, r2: 97)              	 1.7361e-05	 1         	 54.1962   	 0         	 8.80548   	 6.15482   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.6241e-05	 1         	 15.3931   	 0         	 3.69435   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.526e-05 	 9         	 0         	 0         	 23.5911   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.121e-05 	 2         	 0         	 0         	 7.13649   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 1.06e-05  	 1         	 0.471698  	 0         	 1.88679   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 97)                                                                                   	 8.05e-06  	 1         	 1.20497   	 0         	 4.81988   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4850, m: 0, k: 50)  	 5.04e-06  	 100       	 0         	 0         	 38492.1   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 97)                                                           	 4.28e-06  	 1         	 0         	 0         	 18.1308   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 97, m: 50, fromLeft: 1)                	 3.39e-06  	 1         	 0         	 0         	 22.8909   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.44567   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.4456    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 6.37022   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 6.36899   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.27395   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.13863   	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 2.0753    	 100       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.95161   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.4054    	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.37836   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.08189   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.04423   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.734564  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.297091  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.272941  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.192352  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.139645  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.105245  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.103227  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0937987 	 918       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0700829 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0546166 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0464341 	 20        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0456204 	 5273      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0405379 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0405072 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0397887 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0114492 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00675832	 1818      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00556874	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00448266	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108426	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000827624	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00046019	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22677869692800 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22677695752192 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22677494425728 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22677293099264 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22677091772800 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22676890446336 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22676689119872 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22676487793408 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22676286466944 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22676085140480 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22675883814016 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22675682487552 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22675481161088 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22675279834624 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22675078508160 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22674877181696 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22674675855232 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22674474528768 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22674273202304 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22674071875840 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22673870549376 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22673669222912 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22673467896448 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22673266569984 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22673065243520 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22672863917056 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22672662590592 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22672461264128 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22672259937664 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22672058611200 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22671857284736 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22671655958272 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22671454627712 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22671253301248 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22671051974784 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22670850648320 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22670649321856 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22670447995392 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22670246668928 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22670045342464 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22669844016000 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22669642689536 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22669441363072 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22669240036608 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22669038710144 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22668837383680 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22668636057216 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22668434730752 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22668233404288 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22668032077824 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22667830751360 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22667629424896 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22667428098432 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22667226771968 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22667025445504 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22666824119040 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22666622792576 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22666421466112 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22666220139648 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22666018813184 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22665817486720 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22665616160256 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22665414833792 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22677590890240 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22677585442560 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 148, m: 148)                                                               	 1.80359   	 700       	 8.8073    	 0         	 0.20449   	 43.0697   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7400, cols: 148, reductionFactor: 37, colBlockingSize: 12)                 	 1.20786   	 600       	 165.387   	 0         	 4.43935   	 37.2549   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7400, r: 148, r2: 148, leftOrthog: 1)      	 1.05793   	 600       	 183.857   	 0         	 15.1061   	 12.1711   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 148, r1_: 148, n: 50, r2: 148)        	 0.956446  	 600       	 203.365   	 0         	 11.1026   	 18.3168   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7400, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.653911  	 700       	 156.27    	 0         	 6.29275   	 24.8333   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7400, Xcols: 98, r: 98, streamingCols: 0)                   	 0.24673   	 700       	 201.633   	 0         	 33.0286   	 6.10479   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4900, m: 98, k: 98) 	 0.202659  	 700       	 325.095   	 0         	 26.8037   	 12.1287   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 98, Qr2: 148)      	 0.18195   	 700       	 0         	 0         	 59.8748   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 148, reductionFactor: 37, colBlockingSize: 12)                 	 0.161594  	 100       	 69.6064   	 0         	 1.94019   	 35.8761   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 98, m: 98)                                                                  	 0.128552  	 809       	 7.89746   	 0         	 1.45549   	 5.42599   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7400, m: 98)                                                         	 0.0986823 	 700       	 0         	 0         	 82.307    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 98, m: 7400)                                                                  	 0.0980465 	 700       	 0         	 0         	 82.8407   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4900, m: 50, k: 98) 	 0.0924467 	 700       	 363.604   	 0         	 44.2261   	 8.22148   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, n: 50, r2left: 50, r2right: 98)                	 0.0877244 	 700       	 0         	 0         	 92.5881   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.0793687 	 101       	 62.7591   	 0         	 2.59196   	 24.213    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 148)                                                                	 0.0760557 	 100       	 3.4054    	 0         	 0.182498  	 18.6599   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 148, r2: 148, leftOrthog: 1)      	 0.0679353 	 100       	 161.212   	 0         	 13.5871   	 11.8651   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 98, n: 50, r2: 98)                                                                                         	 0.0646918 	 707       	 0         	 0         	 83.9677   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 148, r1_: 50, n: 50, r2: 148)         	 0.058102  	 100       	 188.496   	 0         	 20.2761   	 9.29648   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 98, m: 50, k: 2500)   	 0.0556547 	 800       	 352.172   	 0         	 43.1116   	 8.16885   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7400, r: 50, r2: 50, leftOrthog: 1)        	 0.0524132 	 100       	 70.5929   	 0         	 17.0186   	 4.14798   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 148, r1_: 148, n: 50, r2: 50)         	 0.0485313 	 100       	 225.669   	 0         	 12.5594   	 17.9681   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0441068 	 100       	 1.98382   	 0         	 0.13694   	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 98, m: 2500, k: 50)	 0.0384223 	 800       	 510.12    	 0         	 62.447    	 8.16885   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0347132 	 100       	 109.468   	 0         	 8.58462   	 12.7517   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 98, r: 98, streamingCols: 0)                   	 0.0203014 	 101       	 119.451   	 0         	 19.6932   	 6.06556   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 148, reductionFactor: 37, colBlockingSize: 12)                   	 0.0189505 	 100       	 11.8709   	 0         	 1.23708   	 9.59596   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4900, m: 50, k: 50) 	 0.0114676 	 100       	 213.645   	 0         	 34.3575   	 6.21827   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 98)                                                         	 0.00997267	 101       	 0         	 0         	 39.7005   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00956853	 109       	 1.89858   	 0         	 0.688047  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 98, m: 2500)                                                                  	 0.00761023	 101       	 0         	 0         	 52.0247   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4900, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.00694593	 7         	 97.4155   	 0         	 3.94894   	 24.6688   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, n: 50, r2left: 50, r2right: 0)                 	 0.00623257	 100       	 0         	 0         	 62.8954   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, n: 50, r: 98, r2: 98)             	 0.0060164 	 7         	 109.506   	 0         	 9.02869   	 12.1287   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 98, m: 98, fromLeft: 1)                	 0.00568931	 808       	 0         	 0         	 21.8235   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00522571	 101       	 4.96247   	 0         	 0.773101  	 6.41892   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00509893	 8         	 19.612    	 0         	 3.16929   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 98, Qr2: 50)       	 0.00322002	 100       	 0         	 0         	 183.85    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 98, n: 50, r2: 50)                                                                                         	 0.00297379	 101       	 0         	 0         	 133.136   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00276205	 8         	 37.1835   	 0         	 2.95433   	 12.5861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 148, leftOrthog: 1)         	 0.0025098 	 100       	 29.4844   	 0         	 8.67001   	 3.40074   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4900, m: 98)                                                         	 0.00217137	 7         	 0         	 0         	 24.7689   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00206707	 8         	 24.1888   	 0         	 7.77911   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4900, Xcols: 98, r: 98, streamingCols: 0)                   	 0.00188563	 7         	 174.699   	 0         	 28.6649   	 6.09453   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 98, m: 4900)                                                                  	 0.00163004	 7         	 0         	 0         	 32.9944   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 98, k: 98)   	 0.00117163	 100       	 81.9714   	 0         	 13.2493   	 6.18687   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00113144	 100       	 22.0957   	 0         	 5.30297   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 98)   	 0.00109754	 100       	 44.6453   	 0         	 8.96551   	 4.97967   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00100226	 100       	 24.9437   	 0         	 5.98648   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 98)                                                                                          	 0.000936314	 201       	 0         	 0         	 16.8303   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000885339	 100       	 0.564755  	 0         	 2.25902   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000774209	 201       	 0         	 0         	 10.3848   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00076756	 8         	 0         	 0         	 20.8453   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000681771	 100       	 36.6692   	 0         	 8.80061   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 98)                 	 0.000600151	 100       	 0         	 0         	 19.7284   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, n: 50, r: 98, r2: 50)             	 0.000585146	 1         	 82.065    	 0         	 9.98178   	 8.22148   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000534005	 100       	 0         	 0         	 7.49057   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000513488	 100       	 0         	 0         	 7.78986   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000492095	 8         	 0         	 0         	 32.514    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00044773	 100       	 1.11674   	 0         	 13.4009   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000435472	 100       	 0         	 0         	 9.18544   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000416446	 101       	 0         	 0         	 9.70114   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000393376	 101       	 0.64188   	 0         	 10.2701   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 98)                                                                                 	 0.000381616	 101       	 1.29685   	 0         	 20.7497   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000327038	 100       	 0.764437  	 0         	 12.231    	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 98, reductionFactor: 37, colBlockingSize: 12)                    	 0.000114423	 1         	 8.62027   	 0         	 1.01406   	 8.50073   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 3.8821e-05	 1         	 3.21991   	 0         	 1.28796   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 98, r: 50, streamingCols: 26)                    	 3.002e-05 	 1         	 4.16389   	 0         	 1.66556   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 98, r2: 98)              	 1.8941e-05	 1         	 50.7048   	 0         	 8.19555   	 6.18687   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.516e-05 	 9         	 0         	 0         	 23.7467   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.382e-05 	 1         	 18.0897   	 0         	 4.34153   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.079e-05 	 2         	 0         	 0         	 7.41427   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 9.461e-06 	 1         	 0.528485  	 0         	 2.11394   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 98)                                                                                   	 9.08e-06  	 1         	 1.0793    	 0         	 4.31718   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 98)                                                           	 5.54e-06  	 1         	 0         	 0         	 14.1516   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4900, m: 0, k: 50)  	 4.61e-06  	 100       	 0         	 0         	 42516.3   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 98, m: 50, fromLeft: 1)                	 3.45e-06  	 1         	 0         	 0         	 22.7246   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.56379   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.5637    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 6.48048   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 6.47918   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.37741   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.17144   	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 2.08314   	 100       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.92376   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.42384   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.41543   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.18079   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.06408   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.748862  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.308847  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.271053  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.185606  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.13812   	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.112016  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.10779   	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0950706 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0699101 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0567861 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0470951 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.042731  	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0426997 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0391041 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0117332 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00885245	 1818      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00752719	 5273      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00570792	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00458584	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110203	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00090388	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00044773	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22530384512896 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22530190469120 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22529989142656 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22529787816192 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22529586489728 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22529385163264 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22529183836800 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22528982510336 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22528781183872 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22528579857408 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22528378530944 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22528177204480 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22527975878016 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22527774551552 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22527573225088 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22527371898624 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22527170572160 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22526969245696 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22526767919232 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22526566592768 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22526365266304 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22526163939840 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22525962613376 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22525761286912 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22525559960448 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22525358633984 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22525157307520 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22524955981056 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22524754654592 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22524553328128 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22524352001664 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22524150675200 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22523949344640 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22523748018176 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22523546691712 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22523345365248 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22523144038784 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22522942712320 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22522741385856 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22522540059392 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22522338732928 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22522137406464 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22521936080000 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22521734753536 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22521533427072 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22521332100608 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22521130774144 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22520929447680 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22520728121216 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22520526794752 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22520325468288 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22520124141824 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22519922815360 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22519721488896 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22519520162432 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22519318835968 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22519117509504 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22518916183040 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22518714856576 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22518513530112 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22518312203648 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22518110877184 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22517909550720 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22530278852352 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22530272261888 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 149, m: 149)                                                               	 1.87351   	 700       	 8.65166   	 0         	 0.199525  	 43.3613   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7450, cols: 149, reductionFactor: 37, colBlockingSize: 12)                 	 1.21956   	 600       	 167.143   	 0         	 4.45635   	 37.5066   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7450, r: 149, r2: 149, leftOrthog: 1)      	 1.14079   	 600       	 173.983   	 0         	 14.1988   	 12.2533   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 149, r1_: 149, n: 50, r2: 149)        	 1.01443   	 600       	 195.654   	 0         	 10.6099   	 18.4406   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7450, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.66395   	 700       	 158.125   	 0         	 6.30343   	 25.0856   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7450, Xcols: 99, r: 99, streamingCols: 0)                   	 0.260951  	 700       	 195.869   	 0         	 31.7608   	 6.16701   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4950, m: 99, k: 99) 	 0.220162  	 700       	 308.505   	 0         	 25.179    	 12.2525   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 99, Qr2: 149)      	 0.179724  	 700       	 0         	 0         	 61.464    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 149, reductionFactor: 37, colBlockingSize: 12)                 	 0.163465  	 100       	 69.7429   	 0         	 1.93167   	 36.1049   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 99, m: 99)                                                                  	 0.132837  	 809       	 7.87906   	 0         	 1.43738   	 5.48154   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4950, m: 50, k: 99) 	 0.0978238 	 700       	 350.666   	 0         	 42.505    	 8.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, n: 50, r2left: 50, r2right: 99)                	 0.0884969 	 700       	 0         	 0         	 93.3429   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.082066  	 101       	 61.9413   	 0         	 2.53332   	 24.4507   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7450, m: 99)                                                         	 0.0815855 	 700       	 0         	 0         	 101.25    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 99, m: 7450)                                                                  	 0.0797109 	 700       	 0         	 0         	 103.632   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 149)                                                                	 0.0768003 	 100       	 3.39517   	 0         	 0.18177   	 18.6784   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 149, r2: 149, leftOrthog: 1)      	 0.0723994 	 100       	 153.323   	 0         	 12.8388   	 11.9422   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 99, n: 50, r2: 99)                                                                                         	 0.0629834 	 707       	 0         	 0         	 88.0143   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7450, r: 50, r2: 50, leftOrthog: 1)        	 0.0617062 	 100       	 60.3667   	 0         	 14.5528   	 4.14811   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 149, r1_: 50, n: 50, r2: 149)         	 0.0573312 	 100       	 193.621   	 0         	 20.7915   	 9.3125    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 99, m: 50, k: 2500)   	 0.0565957 	 800       	 349.85    	 0         	 42.6831   	 8.19645   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 149, r1_: 149, n: 50, r2: 50)         	 0.0443768 	 100       	 250.142   	 0         	 13.8307   	 18.086    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0437862 	 100       	 1.99835   	 0         	 0.137943  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 99, m: 2500, k: 50)	 0.0389873 	 800       	 507.858   	 0         	 61.9607   	 8.19645   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0334753 	 100       	 114.284   	 0         	 8.96183   	 12.7523   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 99, r: 99, streamingCols: 0)                   	 0.0203977 	 101       	 121.325   	 0         	 19.8022   	 6.12684   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 149, reductionFactor: 37, colBlockingSize: 12)                   	 0.0172246 	 100       	 13.2375   	 0         	 1.37714   	 9.61225   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4950, m: 50, k: 50) 	 0.00999334	 100       	 247.665   	 0         	 39.8265   	 6.21859   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00970918	 109       	 1.87107   	 0         	 0.67808   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 99)                                                         	 0.00877032	 101       	 0         	 0         	 45.6038   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4950, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.00742108	 7         	 93.9979   	 0         	 3.77191   	 24.9205   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 99, m: 2500)                                                                  	 0.00730889	 101       	 0         	 0         	 54.7224   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, n: 50, r: 99, r2: 99)             	 0.0064951 	 7         	 104.573   	 0         	 8.53481   	 12.2525   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 99, m: 99, fromLeft: 1)                	 0.00605278	 808       	 0         	 0         	 20.9337   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)             	 0.00584813	 8         	 17.0995   	 0         	 2.76328   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4950, m: 99)                                                         	 0.00509084	 7         	 0         	 0         	 10.7813   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, n: 50, r2left: 50, r2right: 0)                 	 0.00494693	 100       	 0         	 0         	 80.0497   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00426768	 101       	 6.07647   	 0         	 0.946651  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.00302269	 8         	 33.9772   	 0         	 2.69958   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 99, n: 50, r2: 50)                                                                                         	 0.00284168	 101       	 0         	 0         	 140.748   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00248048	 8         	 20.1574   	 0         	 6.48263   	 3.10945   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 149, leftOrthog: 1)         	 0.00225165	 100       	 33.0869   	 0         	 9.71734   	 3.40494   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 99, Qr2: 50)       	 0.00215462	 100       	 0         	 0         	 276.615   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4950, Xcols: 99, r: 99, streamingCols: 0)                   	 0.00213579	 7         	 159.007   	 0         	 25.8265   	 6.15672   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 99, k: 99)   	 0.00111695	 100       	 87.7481   	 0         	 14.1106   	 6.21859   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 99)   	 0.0011148 	 100       	 44.4025   	 0         	 8.89843   	 4.98992   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00109303	 100       	 22.8721   	 0         	 5.48931   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 99, m: 4950)                                                                  	 0.00108991	 7         	 0         	 0         	 50.358    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 99)                                                                                          	 0.000924696	 201       	 0         	 0         	 17.2156   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000862342	 100       	 0.579816  	 0         	 2.31927   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000832063	 100       	 30.0458   	 0         	 7.21099   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00079615	 8         	 0         	 0         	 20.0967   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000791601	 201       	 0         	 0         	 10.1566   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000700845	 100       	 35.6712   	 0         	 8.56109   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, n: 50, r: 99, r2: 50)             	 0.000687258	 1         	 71.3051   	 0         	 8.64304   	 8.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.000595026	 8         	 0         	 0         	 26.8896   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 99)                 	 0.000591165	 100       	 0         	 0         	 20.1636   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000560984	 100       	 0         	 0         	 7.13033   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000534542	 100       	 0         	 0         	 7.48304   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000471272	 100       	 1.06096   	 0         	 12.7315   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000453869	 100       	 0         	 0         	 8.81312   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000450077	 101       	 0         	 0         	 8.97624   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000383573	 101       	 0.658284  	 0         	 10.5325   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 99)                                                                                 	 0.000372466	 101       	 1.34227   	 0         	 21.4763   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000326506	 100       	 0.765683  	 0         	 12.2509   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 99, reductionFactor: 37, colBlockingSize: 12)                    	 0.000136853	 1         	 7.35526   	 0         	 0.862298  	 8.52984   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                     	 4.0561e-05	 1         	 3.08178   	 0         	 1.23271   	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 99, r: 50, streamingCols: 24)                    	 2.8531e-05	 1         	 4.3812    	 0         	 1.75248   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 99, r2: 99)              	 1.8991e-05	 1         	 51.6087   	 0         	 8.29909   	 6.21859   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)              	 1.775e-05 	 1         	 14.0845   	 0         	 3.38028   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 1.5271e-05	 9         	 0         	 0         	 23.5741   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                    	 1.234e-05 	 2         	 0         	 0         	 6.48298   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 99)                                                                                   	 9.83e-06  	 1         	 1.00712   	 0         	 4.02848   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                   	 8.65e-06  	 1         	 0.578035  	 0         	 2.31214   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 99)                                                           	 7.51e-06  	 1         	 0         	 0         	 10.5459   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4950, m: 0, k: 50)  	 4.83e-06  	 100       	 0         	 0         	 40993.8   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 99, m: 50, fromLeft: 1)                	 3.59e-06  	 1         	 0         	 0         	 22.0613   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.82408   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.82403   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 6.73652   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 6.73524   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.57801   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.19459   	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 2.08743   	 100       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.99409   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.43446   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.40693   	 918       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.27714   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.11697   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.761411  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.330215  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.286034  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.182333  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.142546  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0967004 	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0945695 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.088717  	 818       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0681024 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0576887 	 900       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0491023 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0490706 	 2         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0479826 	 20        
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0396881 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0130672 	 18        
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0124839 	 1818      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00607164	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00460529	 6472      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.003121  	 5273      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108255	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000880822	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000471272	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 64
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->65  [0m[1;34m1->66  [0m[1;34m2->67  [0m[1;34m3->68  [0m[1;34m4->69  [0m[1;34m5->70  [0m[1;34m6->71  [0m[1;34m7->72  [0m[1;34m8->73  [0m[1;34m9->74  [0m[1;34m10->75  [0m[1;34m11->76  [0m[1;34m12->77  [0m[1;34m13->78  [0m[1;34m14->79  [0m[1;34m15->80  [0m[1;34m16->81  [0m[1;34m17->82  [0m[1;34m18->83  [0m[1;34m19->84  [0m[1;34m20->85  [0m[1;34m21->86  [0m[1;34m22->87  [0m[1;34m23->88  [0m[1;34m24->89  [0m[1;34m25->90  [0m[1;34m26->91  [0m[1;34m27->92  [0m[1;34m28->93  [0m[1;34m29->94  [0m[1;34m30->95  [0m[1;34m31->96  [0m[1;34m32->97  [0m[1;34m33->98  [0m[1;34m34->99  [0m[1;34m35->100  [0m[1;34m36->101  [0m[1;34m37->102  [0m[1;34m38->103  [0m[1;34m39->104  [0m[1;34m40->105  [0m[1;34m41->106  [0m[1;34m42->107  [0m[1;34m43->108  [0m[1;34m44->109  [0m[1;34m45->110  [0m[1;34m46->111  [0m[1;34m47->112  [0m[1;34m48->113  [0m[1;34m49->114  [0m[1;34m50->115  [0m[1;34m51->116  [0m[1;34m52->117  [0m[1;34m53->118  [0m[1;34m54->119  [0m[1;34m55->120  [0m[1;34m56->121  [0m[1;34m57->122  [0m[1;34m58->123  [0m[1;34m59->124  [0m[1;34m60->125  [0m[1;34m61->126  [0m[1;34m62->127  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22477370562432 -> hwthread 65 - OK[0m[1;34m
[0m[1;34m	threadid 22477174466560 -> hwthread 66 - OK[0m[1;34m
[0m[1;34m	threadid 22476973140096 -> hwthread 67 - OK[0m[1;34m
[0m[1;34m	threadid 22476771813632 -> hwthread 68 - OK[0m[1;34m
[0m[1;34m	threadid 22476570487168 -> hwthread 69 - OK[0m[1;34m
[0m[1;34m	threadid 22476369160704 -> hwthread 70 - OK[0m[1;34m
[0m[1;34m	threadid 22476167834240 -> hwthread 71 - OK[0m[1;34m
[0m[1;34m	threadid 22475966507776 -> hwthread 72 - OK[0m[1;34m
[0m[1;34m	threadid 22475765181312 -> hwthread 73 - OK[0m[1;34m
[0m[1;34m	threadid 22475563854848 -> hwthread 74 - OK[0m[1;34m
[0m[1;34m	threadid 22475362528384 -> hwthread 75 - OK[0m[1;34m
[0m[1;34m	threadid 22475161201920 -> hwthread 76 - OK[0m[1;34m
[0m[1;34m	threadid 22474959875456 -> hwthread 77 - OK[0m[1;34m
[0m[1;34m	threadid 22474758548992 -> hwthread 78 - OK[0m[1;34m
[0m[1;34m	threadid 22474557222528 -> hwthread 79 - OK[0m[1;34m
[0m[1;34m	threadid 22474355896064 -> hwthread 80 - OK[0m[1;34m
[0m[1;34m	threadid 22474154569600 -> hwthread 81 - OK[0m[1;34m
[0m[1;34m	threadid 22473953243136 -> hwthread 82 - OK[0m[1;34m
[0m[1;34m	threadid 22473751916672 -> hwthread 83 - OK[0m[1;34m
[0m[1;34m	threadid 22473550590208 -> hwthread 84 - OK[0m[1;34m
[0m[1;34m	threadid 22473349263744 -> hwthread 85 - OK[0m[1;34m
[0m[1;34m	threadid 22473147937280 -> hwthread 86 - OK[0m[1;34m
[0m[1;34m	threadid 22472946610816 -> hwthread 87 - OK[0m[1;34m
[0m[1;34m	threadid 22472745284352 -> hwthread 88 - OK[0m[1;34m
[0m[1;34m	threadid 22472543957888 -> hwthread 89 - OK[0m[1;34m
[0m[1;34m	threadid 22472342631424 -> hwthread 90 - OK[0m[1;34m
[0m[1;34m	threadid 22472141304960 -> hwthread 91 - OK[0m[1;34m
[0m[1;34m	threadid 22471939978496 -> hwthread 92 - OK[0m[1;34m
[0m[1;34m	threadid 22471738652032 -> hwthread 93 - OK[0m[1;34m
[0m[1;34m	threadid 22471537325568 -> hwthread 94 - OK[0m[1;34m
[0m[1;34m	threadid 22471335999104 -> hwthread 95 - OK[0m[1;34m
[0m[1;34m	threadid 22471134672640 -> hwthread 96 - OK[0m[1;34m
[0m[1;34m	threadid 22470933342080 -> hwthread 97 - OK[0m[1;34m
[0m[1;34m	threadid 22470732015616 -> hwthread 98 - OK[0m[1;34m
[0m[1;34m	threadid 22470530689152 -> hwthread 99 - OK[0m[1;34m
[0m[1;34m	threadid 22470329362688 -> hwthread 100 - OK[0m[1;34m
[0m[1;34m	threadid 22470128036224 -> hwthread 101 - OK[0m[1;34m
[0m[1;34m	threadid 22469926709760 -> hwthread 102 - OK[0m[1;34m
[0m[1;34m	threadid 22469725383296 -> hwthread 103 - OK[0m[1;34m
[0m[1;34m	threadid 22469524056832 -> hwthread 104 - OK[0m[1;34m
[0m[1;34m	threadid 22469322730368 -> hwthread 105 - OK[0m[1;34m
[0m[1;34m	threadid 22469121403904 -> hwthread 106 - OK[0m[1;34m
[0m[1;34m	threadid 22468920077440 -> hwthread 107 - OK[0m[1;34m
[0m[1;34m	threadid 22468718750976 -> hwthread 108 - OK[0m[1;34m
[0m[1;34m	threadid 22468517424512 -> hwthread 109 - OK[0m[1;34m
[0m[1;34m	threadid 22468316098048 -> hwthread 110 - OK[0m[1;34m
[0m[1;34m	threadid 22468114771584 -> hwthread 111 - OK[0m[1;34m
[0m[1;34m	threadid 22467913445120 -> hwthread 112 - OK[0m[1;34m
[0m[1;34m	threadid 22467712118656 -> hwthread 113 - OK[0m[1;34m
[0m[1;34m	threadid 22467510792192 -> hwthread 114 - OK[0m[1;34m
[0m[1;34m	threadid 22467309465728 -> hwthread 115 - OK[0m[1;34m
[0m[1;34m	threadid 22467108139264 -> hwthread 116 - OK[0m[1;34m
[0m[1;34m	threadid 22466906812800 -> hwthread 117 - OK[0m[1;34m
[0m[1;34m	threadid 22466705486336 -> hwthread 118 - OK[0m[1;34m
[0m[1;34m	threadid 22466504159872 -> hwthread 119 - OK[0m[1;34m
[0m[1;34m	threadid 22466302833408 -> hwthread 120 - OK[0m[1;34m
[0m[1;34m	threadid 22466101506944 -> hwthread 121 - OK[0m[1;34m
[0m[1;34m	threadid 22465900180480 -> hwthread 122 - OK[0m[1;34m
[0m[1;34m	threadid 22465698854016 -> hwthread 123 - OK[0m[1;34m
[0m[1;34m	threadid 22465497527552 -> hwthread 124 - OK[0m[1;34m
[0m[1;34m	threadid 22465296201088 -> hwthread 125 - OK[0m[1;34m
[0m[1;34m	threadid 22465094874624 -> hwthread 126 - OK[0m[1;34m
[0m[1;34m	threadid 22464893548160 -> hwthread 127 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22477264901888 -> hwthread 64 - OK[0m[1;34m
[0m[1;34m	threadid 22477258311424 -> hwthread 65 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
Performance statistics:
function                                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 150, m: 150)                                                                	 1.89639   	 700       	 8.72051   	 0         	 0.199769  	 43.653    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7500, cols: 150, reductionFactor: 37, colBlockingSize: 12)                  	 1.23428   	 600       	 168.498   	 0         	 4.46254   	 37.7583   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7500, r: 150, r2: 150, leftOrthog: 1)       	 1.11612   	 600       	 181.432   	 0         	 14.7081   	 12.3355   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, r1_: 150, n: 50, r2: 150)         	 0.977892  	 600       	 207.078   	 0         	 11.1546   	 18.5644   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7500, cols: 100, reductionFactor: 37, colBlockingSize: 12)                  	 0.671877  	 700       	 160.502   	 0         	 6.33449   	 25.3378   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7500, Xcols: 100, r: 100, streamingCols: 0)                  	 0.256917  	 700       	 204.346   	 0         	 32.8044   	 6.22924   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 5000, m: 100, k: 100)	 0.206967  	 700       	 338.219   	 0         	 27.3281   	 12.3762   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 100, Qr2: 150)      	 0.188607  	 700       	 0         	 0         	 59.3827   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 150, reductionFactor: 37, colBlockingSize: 12)                  	 0.165584  	 100       	 69.7778   	 0         	 1.92048   	 36.3335   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 100, m: 100)                                                                 	 0.132591  	 809       	 8.13526   	 0         	 1.46923   	 5.53709   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 100, m: 7500)                                                                  	 0.120079  	 700       	 0         	 0         	 69.954    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7500, m: 100)                                                         	 0.0924438 	 700       	 0         	 0         	 90.866    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 5000, m: 50, k: 100) 	 0.0919981 	 700       	 380.443   	 0         	 45.9575   	 8.27815   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2left: 50, r2right: 100)               	 0.0877189 	 700       	 0         	 0         	 95.7604   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 100, reductionFactor: 37, colBlockingSize: 12)                  	 0.0823011 	 101       	 63.0185   	 0         	 2.55258   	 24.6881   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 150)                                                                 	 0.0758074 	 100       	 3.46272   	 0         	 0.185206  	 18.6966   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 150, r2: 150, leftOrthog: 1)       	 0.0727142 	 100       	 154.715   	 0         	 12.8723   	 12.0192   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 100)                                                                                        	 0.061229  	 707       	 0         	 0         	 92.3745   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, r1_: 50, n: 50, r2: 150)          	 0.0608221 	 100       	 184.966   	 0         	 19.8283   	 9.32836   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7500, r: 50, r2: 50, leftOrthog: 1)         	 0.0585351 	 100       	 64.0641   	 0         	 15.4437   	 4.14823   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 100, m: 50, k: 2500)   	 0.0529531 	 800       	 377.693   	 0         	 45.9274   	 8.22368   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, r1_: 150, n: 50, r2: 50)          	 0.0471489 	 100       	 238.606   	 0         	 13.1074   	 18.2039   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0431825 	 100       	 2.02628   	 0         	 0.139871  	 14.4868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 100, m: 2500, k: 50)	 0.036846  	 800       	 542.8     	 0         	 66.0045   	 8.22368   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.0338789 	 100       	 113.68    	 0         	 8.9141    	 12.7528   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 100, r: 100, streamingCols: 0)                  	 0.0201259 	 101       	 125.46    	 0         	 20.2744   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 150, reductionFactor: 37, colBlockingSize: 12)                    	 0.0177029 	 100       	 13.0533   	 0         	 1.35571   	 9.62838   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 5000, m: 50, k: 50)  	 0.0116887 	 100       	 213.882   	 0         	 34.3922   	 6.21891   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                   	 0.00995799	 109       	 1.82432   	 0         	 0.661137  	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 100)                                                         	 0.00921564	 101       	 0         	 0         	 43.8385   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 100, m: 2500)                                                                  	 0.00832242	 101       	 0         	 0         	 48.5436   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 100, reductionFactor: 37, colBlockingSize: 12)                  	 0.00729059	 7         	 98.6092   	 0         	 3.91738   	 25.1722   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2left: 50, r2right: 0)                 	 0.00712604	 100       	 0         	 0         	 56.1322   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r: 100, r2: 100)           	 0.00652135	 7         	 107.34    	 0         	 8.67304   	 12.3762   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 100, m: 100, fromLeft: 1)               	 0.00615476	 808       	 0         	 0         	 21.0049   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r: 50, r2: 50)              	 0.00588307	 8         	 16.9979   	 0         	 2.74687   	 6.18812   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5000, m: 100)                                                         	 0.00470772	 7         	 0         	 0         	 11.8954   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                     	 0.00443274	 101       	 5.85021   	 0         	 0.911401  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 50)                                                                                         	 0.00300982	 101       	 0         	 0         	 134.227   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.00281401	 8         	 36.4969   	 0         	 2.89977   	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 100, Qr2: 50)       	 0.00268228	 100       	 0         	 0         	 223.69    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 150, leftOrthog: 1)          	 0.00238665	 100       	 31.4248   	 0         	 9.21795   	 3.40909   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                    	 0.00220757	 8         	 22.6493   	 0         	 7.28403   	 3.10945   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5000, Xcols: 100, r: 100, streamingCols: 0)                  	 0.00198249	 7         	 176.545   	 0         	 28.3885   	 6.21891   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)      	 0.00138686	 100       	 18.0264   	 0         	 4.32634   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 100, m: 5000)                                                                  	 0.00138258	 7         	 0         	 0         	 40.504    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 100)   	 0.00107891	 100       	 46.3429   	 0         	 9.26859   	 5         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 100, k: 100)  	 0.00107487	 100       	 93.0349   	 0         	 14.8856   	 6.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                                                          	 0.000927911	 201       	 0         	 0         	 17.3292   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                    	 0.000904892	 100       	 0.552552  	 0         	 2.21021   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)             	 0.00090142	 100       	 27.734    	 0         	 6.65616   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                          	 0.000814422	 8         	 0         	 0         	 19.6458   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                           	 0.000806231	 201       	 0         	 0         	 9.97233   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r: 100, r2: 50)            	 0.000717449	 1         	 69.6914   	 0         	 8.41872   	 8.27815   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)   	 0.000682442	 100       	 36.6331   	 0         	 8.79196   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                   	 0.000677498	 8         	 0         	 0         	 23.6163   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 100)                 	 0.000605358	 100       	 0         	 0         	 19.823    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                                                 	 0.000595452	 101       	 0.848095  	 0         	 13.5695   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                           	 0.000501681	 100       	 0         	 0         	 7.97319   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                   	 0.000488582	 100       	 0         	 0         	 8.18696   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)           	 0.000448283	 100       	 0         	 0         	 8.92293   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                             	 0.000421832	 100       	 1.18531   	 0         	 14.2237   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.000396352	 101       	 0.63706   	 0         	 10.193    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                            	 0.000392596	 101       	 0         	 0         	 10.2905   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000348724	 100       	 0.716899  	 0         	 11.4704   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 100, reductionFactor: 37, colBlockingSize: 12)                    	 0.000125363	 1         	 8.19243   	 0         	 0.95722   	 8.55856   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 50, r: 50, streamingCols: 0)                      	 3.3661e-05	 1         	 3.7135    	 0         	 1.4854    	 2.5       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 100, r: 50, streamingCols: 23)                    	 2.9111e-05	 1         	 4.29391   	 0         	 1.71756   	 2.5       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 100, r2: 100)             	 1.825e-05 	 1         	 54.7945   	 0         	 8.76712   	 6.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r: 50, r2: 50)               	 1.719e-05 	 1         	 14.5433   	 0         	 3.4904    	 4.16667   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                 	 1.5561e-05	 9         	 0         	 0         	 23.1348   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                     	 1.14e-05  	 2         	 0         	 0         	 7.01754   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                                                   	 1.028e-05 	 1         	 0.972763  	 0         	 3.89105   	 0.25      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                    	 9.901e-06 	 1         	 0.504999  	 0         	 2.02      	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 100)                                                           	 6.49e-06  	 1         	 0         	 0         	 12.3267   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 5000, m: 0, k: 50)   	 4.87e-06  	 100       	 0         	 0         	 41067.8   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 100, m: 50, fromLeft: 1)                	 3.75e-06  	 1         	 0         	 0         	 21.3333   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 8.88345   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 8.8834    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 6.74954   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 6.74818   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 5.59161   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.22028   	 1818      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 2.13378   	 100       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 2.01538   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.46232   	 918       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.45217   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 1.24976   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 1.08676   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.769364  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.312812  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.281296  	 818       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.191738  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.142549  	 918       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.130473  	 818       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.107581  	 918       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0959389 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0664747 	 1310      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0543399 	 900       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                              	 0.0483905 	 20        
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                            	 0.0481688 	 2         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                        	 0.0481355 	 2         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0375284 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0131573 	 18        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0116222 	 5273      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00946995	 1818      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00617407	 818       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00424887	 6472      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00134053	 302       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000925073	 102       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000421832	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
