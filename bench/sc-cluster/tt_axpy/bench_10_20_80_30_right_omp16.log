[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140620235569024 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140620227172352 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140620218775680 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140620210379008 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140620201982336 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140620193585664 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140619846511232 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140619838114560 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140619829717888 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140619821321216 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140619812924544 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140619804527872 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140619796131200 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140619242532352 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140619234135680 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 1
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34mRoundrobin placement triggered
	threadid 140088277448448 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140088269055744 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140088260523776 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 140619225741056 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140619217348352 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140619204630272 -> hwthread 2 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2200, cols: 30, reductionFactor: 18, colBlockingSize: 12)            	 0.0830672 	 1050      	 52.8368   	 0         	 6.76513   	 7.81016   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 80, Xr2: 80, Qr1: 30, Qr2: 110)	 0.0376781 	 1050      	 0         	 0         	 97.2024   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 30, m: 30)                                                                     	 0.0301177 	 1350      	 1.61367   	 0         	 0.978958  	 1.64835   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 20, r2left: 80, r2right: 30)          	 0.0270173 	 1050      	 0         	 0         	 41.0404   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2200, Xcols: 30, r: 30, streamingCols: 0)             	 0.0241315 	 1050      	 86.1529   	 0         	 46.1049   	 1.86863   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2200, m: 30)                                                   	 0.014721  	 1050      	 0         	 0         	 75.3209   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 2200)                                                            	 0.0117749 	 1050      	 0         	 0         	 94.1667   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 30, reductionFactor: 18, colBlockingSize: 12)             	 0.00745328	 150       	 15.2953   	 0         	 2.07694   	 7.36434   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 20, r2: 30)                                                                                   	 0.00677217	 1200      	 0         	 0         	 51.0324   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 80, m: 80)                                                                     	 0.00551799	 9         	 1.11345   	 0         	 0.25157   	 4.426     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1600, cols: 80, reductionFactor: 18, colBlockingSize: 12)            	 0.0039897 	 7         	 37.9288   	 0         	 1.88646   	 20.1058   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 30, r: 30, streamingCols: 0)              	 0.00278804	 150       	 19.3685   	 0         	 10.5235   	 1.84049   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 30, reductionFactor: 18, colBlockingSize: 12)              	 0.00255382	 150       	 2.23195   	 0         	 0.704826  	 3.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1600, Xcols: 80, r: 80, streamingCols: 0)             	 0.00187138	 7         	 38.3033   	 0         	 7.75642   	 4.93827   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, nChunks: 2, r: 80, r2: 20)  	 0.00172391	 1         	 4.75198   	 0         	 1.30679   	 3.63636   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 80, m: 1600)                                                            	 0.00162753	 7         	 0         	 0         	 8.80846   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 400)                                                             	 0.00160651	 150       	 0         	 0         	 17.927    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 20, r2left: 20, r2right: 0)           	 0.00151963	 150       	 0         	 0         	 18.952    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1600, m: 80)                                                   	 0.00144862	 7         	 0         	 0         	 9.89629   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 80, Xr2: 20, Qr1: 30, Qr2: 20) 	 0.00132037	 150       	 0         	 0         	 79.9773   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 30, m: 30, fromLeft: 1)          	 0.00129566	 1200      	 0         	 0         	 13.3368   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, nChunks: 2, r: 80, r2: 80)  	 0.00104402	 7         	 219.705   	 0         	 27.4631   	 8         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 30)                                                                                    	 0.000930452	 300       	 0         	 0         	 3.09527   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 30)                                                    	 0.000805996	 150       	 0         	 0         	 35.7322   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 20, r2: 1)                                                                                    	 0.000719057	 300       	 0         	 0         	 4.00525   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2left: 80, r2right: 30)           	 0.000582485	 150       	 0         	 0         	 9.06461   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 20, r2left: 1, r2right: 0)            	 0.000518525	 150       	 0         	 0         	 2.77711   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 80)                                                      	 0.000512582	 150       	 0.936436  	 0         	 11.2372   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 80)                                                                                    	 0.000481218	 150       	 0         	 0         	 7.97975   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 30)                                                     	 0.000444889	 150       	 0         	 0         	 3.23676   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 20, Xr2: 1, Qr1: 0, Qr2: 1)    	 0.00044447	 150       	 0         	 0         	 2.15988   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 80)                                                                           	 0.000370004	 151       	 0.652966  	 0         	 10.4475   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 80, reductionFactor: 18, colBlockingSize: 12)             	 0.000367232	 1         	 14.7167   	 0         	 0.836528  	 17.5926   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 30)                                                                           	 0.000347611	 150       	 0.25891   	 0         	 4.14256   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 80)                                             	 0.000292689	 7         	 0         	 0         	 48.9803   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 80, reductionFactor: 18, colBlockingSize: 12)              	 0.000256302	 1         	 1.05431   	 0         	 0.249705  	 4.22222   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 1)                                              	 0.000225561	 1         	 0         	 0         	 0.113495  	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 80, r: 80, streamingCols: 0)              	 0.000212747	 1         	 12.0331   	 0         	 2.52695   	 4.7619    
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 80)                                          	 0.000185856	 7         	 0         	 0         	 77.135    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 80, m: 400)                                                             	 0.000100124	 1         	 0         	 0         	 5.11366   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 80, m: 80, fromLeft: 1)          	 6.8528e-05	 8         	 0         	 0         	 11.9542   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 20)                                             	 6.6827e-05	 1         	 0         	 0         	 7.66157   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 2, r: 80, r2: 80)   	 2.6573e-05	 1         	 15.4141   	 0         	 32.3697   	 0.47619   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 80, r: 20, streamingCols: 15)              	 2.1345e-05	 1         	 0.374795  	 0         	 0.374795  	 1         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 20)                                          	 1.4855e-05	 1         	 0         	 0         	 34.4665   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 80)                                                    	 1.1952e-05	 1         	 0         	 0         	 42.838    	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 1)                                           	 9.63e-06  	 1         	 0         	 0         	 0.66459   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 80)                                                     	 7.972e-06 	 1         	 0         	 0         	 3.21124   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 80)                                                                             	 4.603e-06 	 1         	 0.695199  	 0         	 2.7808    	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 20)                                                              	 3.202e-06 	 1         	 0         	 0         	 1.99875   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 80, m: 20, fromLeft: 1)          	 2.143e-06 	 1         	 0         	 0         	 11.9459   	 0         
Timing statistics:
function                                                                                                                                                                           	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                       	 0.551272  	 150       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]	 0.209913  	 1359      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                  	 0.0987078 	 1359      
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                       	 0.0976875 	 1359      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                            	 0.0394429 	 1350      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                              	 0.0356357 	 1359      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                             	 0.0296379 	 1500      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                         	 0.029025  	 1209      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                 	 0.0209318 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                             	 0.0209213 	 1         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                              	 0.0174405 	 1359      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                       	 0.0151122 	 1209      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                     	 0.0089029 	 1950      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                   	 0.0073714 	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                	 0.00279451	 9         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                              	 0.00276651	 6175      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                   	 0.00199435	 5589      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                     	 0.00184815	 1359      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>]                	 0.00136633	 1209      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                            	 0.000717615	 301       
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                               	 0.000585077	 9         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                       	 0.000512582	 150       
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                            	 0.000210341	 9         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                              	 4.603e-06 	 1         
