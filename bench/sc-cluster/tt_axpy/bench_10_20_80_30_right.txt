PITTS: OpenMP #threads: 1
PITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                              	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 80, r1low: 30, n: 20, r2: 110)          	 0.632652  	 1050      	 0         	 0         	 6.42628   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 80)                                           	 0.502336  	 1057      	 0         	 0         	 4.30934   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 20, r2left: 80, r2right: 30)                          	 0.245594  	 1050      	 0         	 0         	 10.3976   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, nChunks: 2, r: 30, r2: 80)	 0.184985  	 1050      	 26.1557   	 0         	 6.53892   	 4         
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 30, y.r1: 80, r2: 1600)                       	 0.183959  	 1050      	 43.8358   	 0         	 8.14615   	 5.38117   
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 30, n: 20, r2: 110)                                       	 0.155559  	 1050      	 0         	 0         	 7.12783   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 30, c: 80, r2: 1600)                        	 0.15222   	 1050      	 52.976    	 0         	 12.4935   	 4.24028   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 30, n: 20, r2: 80)                                           	 0.150457  	 1050      	 0         	 0         	 5.35969   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2200, cols: 30, reductionFactor: 37, colBlockingSize: 12)          	 0.136129  	 1050      	 31.3701   	 0         	 4.12814   	 7.59908   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2200, Xcols: 30, r: 30, streamingCols: 0)           	 0.0903695 	 1050      	 23.0056   	 0         	 12.3115   	 1.86863   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 30, n: 20, r2left: 80, r2right: 30)      	 0.0687282 	 1050      	 0         	 0         	 16.1331   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, nChunks: 2, r: 30, r2: 30)	 0.0645702 	 1050      	 28.0997   	 0         	 9.36655   	 3         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 30, n: 20, r2: 30)                                           	 0.0528689 	 1050      	 0         	 0         	 5.7198    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 20, r2: 30)                                                                                 	 0.0362916 	 1200      	 0         	 0         	 9.52286   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 30, m: 30)                                                                   	 0.0242487 	 1350      	 2.00423   	 0         	 1.2159    	 1.64835   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 20)                                           	 0.018532  	 151       	 0         	 0         	 4.17181   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 80, r1low: 30, n: 20, r2: 21)           	 0.00989909	 150       	 0         	 0         	 11.201    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, nChunks: 2, r: 30, r2: 20)	 0.00983445	 150       	 17.5709   	 0         	 7.02835   	 2.5       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 20, r2left: 20, r2right: 1)                           	 0.00934453	 150       	 0         	 0         	 8.42418   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 30, n: 20, r2: 21)                                        	 0.00607497	 150       	 0         	 0         	 4.9778    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, nChunks: 2, r: 80, r2: 80)	 0.00603777	 7         	 37.9902   	 0         	 4.74878   	 8         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 30, n: 20, r2: 20)                                           	 0.005716  	 150       	 0         	 0         	 5.03849   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 420, cols: 30, reductionFactor: 18, colBlockingSize: 12)           	 0.00543516	 150       	 22.0233   	 0         	 2.9806    	 7.38889   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 30, c: 80, r2: 400)                         	 0.00531413	 150       	 54.1951   	 0         	 13.1875   	 4.10959   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 80, m: 80)                                                                   	 0.00516922	 9         	 1.18857   	 0         	 0.268543  	 4.426     
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 30, y.r1: 80, r2: 400)                        	 0.00456711	 150       	 63.0596   	 0         	 12.1915   	 5.17241   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1600, cols: 80, reductionFactor: 37, colBlockingSize: 12)          	 0.0035856 	 7         	 41.0628   	 0         	 2.09907   	 19.5624   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 30, reductionFactor: 18, colBlockingSize: 12)            	 0.00339341	 150       	 1.67972   	 0         	 0.530439  	 3.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 420, Xcols: 30, r: 30, streamingCols: 0)            	 0.00330238	 150       	 17.1694   	 0         	 9.32054   	 1.84211   
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 80)                                        	 0.00270444	 7         	 0         	 0         	 5.30091   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1600, Xcols: 80, r: 80, streamingCols: 0)           	 0.00222498	 7         	 32.2161   	 0         	 6.52375   	 4.93827   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 2, r: 30, r2: 80) 	 0.00203794	 150       	 11.3056   	 0         	 24.6838   	 0.458015  
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 30, n: 20, r2left: 20, r2right: 1)       	 0.00198904	 150       	 0         	 0         	 15.2033   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, nChunks: 2, r: 80, r2: 20)	 0.00167639	 1         	 4.88669   	 0         	 1.34384   	 3.63636   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, nChunks: 2, r: 30, r2: 1) 	 0.00094034	 150       	 9.18817   	 0         	 38.5903   	 0.238095  
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 30, y.r1: 20, r2: 20)                         	 0.000908223	 150       	 3.96378   	 0         	 2.11402   	 1.875     
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 2, r: 30, r2: 30) 	 0.000846325	 150       	 10.2088   	 0         	 23.14     	 0.441176  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 80)                                                                                  	 0.000784716	 150       	 0         	 0         	 4.89349   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 30, n: 20, r2: 1)                                            	 0.000742384	 300       	 0         	 0         	 3.87939   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 80)                                                    	 0.000601595	 150       	 0.797879  	 0         	 9.57455   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2left: 80, r2right: 30)         	 0.000554493	 150       	 0         	 0         	 9.52221   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 30)                                                                                  	 0.000550332	 300       	 0         	 0         	 5.2332    	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 1)                                            	 0.00045128	 150       	 0         	 0         	 2.12728   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 30, c: 20, r2: 20)                          	 0.000346575	 150       	 10.3874   	 0         	 7.6174    	 1.36364   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 20, r2: 1)                                                                                  	 0.00033037	 300       	 0         	 0         	 8.7175    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 20, r1low: 1, n: 20, r2: 1)             	 0.00028239	 150       	 0         	 0         	 3.56953   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 20)                                        	 0.000255306	 1         	 0         	 0         	 2.00544   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 80, reductionFactor: 18, colBlockingSize: 12)           	 0.000247081	 1         	 21.8732   	 0         	 1.24332   	 17.5926   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 20, r2left: 1, r2right: 0)                            	 0.000233793	 150       	 0         	 0         	 4.1062    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 30, r: 1, streamingCols: 1)              	 0.000220964	 150       	 0.0135769 	 0         	 0.219945  	 0.0617284 
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 30, n: 20, r2left: 1, r2right: 0)        	 0.000204159	 150       	 0         	 0         	 7.05333   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 1)                                          	 0.000192135	 150       	 0         	 0         	 0.249824  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 80, reductionFactor: 18, colBlockingSize: 12)            	 0.000189236	 1         	 1.42796   	 0         	 0.338202  	 4.22222   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 80)                                                                         	 0.000183  	 151       	 1.32022   	 0         	 21.1235   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 80, r: 80, streamingCols: 0)            	 9.9125e-05	 1         	 25.826    	 0         	 5.42346   	 4.7619    
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 30, n: 20, r2: 0)                                            	 7.9274e-05	 150       	 0         	 0         	 0         	 -nan      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 30)                                                                         	 7.2092e-05	 150       	 1.2484    	 0         	 19.9745   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 1)                                            	 1.791e-05 	 1         	 0         	 0         	 1.42937   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 80, r: 20, streamingCols: 13)            	 1.7345e-05	 1         	 0.461228  	 0         	 0.461228  	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 2, r: 80, r2: 80) 	 1.6097e-05	 1         	 25.4457   	 0         	 53.436    	 0.47619   
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 1)                                         	 3.015e-06 	 1         	 0         	 0         	 2.12272   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 80)                                                                           	 1.459e-06 	 1         	 2.19328   	 0         	 8.77313   	 0.25      
Timing statistics:
function                                                                                                                                                                  	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]              	 2.92646   	 150       
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                      	 0.731201  	 4059      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                    	 0.642833  	 1350      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool) [with T = double]                                           	 0.420581  	 6775      
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::Tensor2<T>&, bool, T, int, bool) [with T = double]	 0.377778  	 1359      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]       	 0.270944  	 2709      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double]                                      	 0.255172  	 1350      
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                         	 0.189435  	 1350      
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                   	 0.164789  	 1359      
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                     	 0.157881  	 1350      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                         	 0.15009   	 1359      
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                              	 0.14898   	 1359      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                	 0.0962343 	 1359      
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double]                  	 0.0709214 	 1350      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                            	 0.037957  	 1950      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                     	 0.0294179 	 1359      
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                        	 0.0279503 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                    	 0.0279448 	 1         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                          	 0.00535988	 20        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int) [with T = double]                                                                	 0.00271113	 7539      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int) [with T = double]                                                        	 0.00135338	 1359      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                              	 0.000601595	 150       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                    	 0.000554493	 150       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                   	 0.000255092	 301       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                     	 1.459e-06 	 1         
[1;34m[likwid-pin] Main PID -> hwthread 0 - OK[0m
