[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140467158513536 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140467150116864 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140467141720192 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140467133323520 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140467124926848 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140467116530176 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140466771192448 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140466762795776 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140466754399104 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140466746002432 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140466737605760 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140466729209088 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140466720812416 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140466167213568 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140466158816896 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 1
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34mRoundrobin placement triggered
	threadid 140138336069376 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140138327676672 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140138319144704 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 140466150422272 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140466142029568 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140466127562496 -> hwthread 2 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                 	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 100)                                            	 0.0946852 	 605       	 0         	 0         	 51.1167   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 10, y.r1: 100, r2: 5000)                         	 0.0873576 	 600       	 68.6832   	 0         	 30.2756   	 2.2686    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 100, r1low: 10, n: 50, r2: 110)            	 0.0856574 	 600       	 0         	 0         	 67.805    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, nChunks: 4, r: 10, r2: 100)  	 0.083426  	 600       	 9.20576   	 0         	 4.97111   	 1.85185   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 10, c: 100, r2: 5000)                          	 0.0687544 	 600       	 87.2672   	 0         	 41.9581   	 2.07987   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2left: 100, r2right: 10)                           	 0.0419633 	 600       	 0         	 0         	 120.105   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 10, reductionFactor: 18, colBlockingSize: 12)             	 0.0262138 	 600       	 26.5763   	 0         	 10.0893   	 2.6341    
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 10, n: 50, r2left: 100, r2right: 10)        	 0.0175008 	 600       	 0         	 0         	 30.1701   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 10, n: 50, r2: 110)                                          	 0.0166638 	 600       	 0         	 0         	 31.6854   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, nChunks: 4, r: 100, r2: 100)	 0.0126478 	 5         	 50.6016   	 0         	 4.55414   	 11.1111   
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 10, y.r1: 100, r2: 2500)                         	 0.0116579 	 120       	 51.4672   	 0         	 22.7279   	 2.26449   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 50)                                             	 0.010683  	 121       	 0         	 0         	 45.3057   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 10, n: 50, r2: 100)                                             	 0.0104353 	 600       	 0         	 0         	 45.9975   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5500, Xcols: 10, r: 10, streamingCols: 0)              	 0.0098109 	 600       	 33.636    	 0         	 53.8421   	 0.624716  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, nChunks: 4, r: 10, r2: 50)   	 0.00966162	 120       	 7.94898   	 0         	 4.61041   	 1.72414   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, nChunks: 4, r: 10, r2: 10)   	 0.00954842	 600       	 8.04322   	 0         	 7.23889   	 1.11111   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 10, c: 100, r2: 2500)                          	 0.00806952	 120       	 74.3539   	 0         	 35.8088   	 2.07641   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 10, m: 10)                                                                      	 0.00657449	 840       	 0.170185  	 0         	 0.316861  	 0.537097  
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2left: 50, r2right: 1)                             	 0.00630696	 120       	 0         	 0         	 76.8674   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 100, m: 100)                                                                    	 0.00623756	 7         	 1.49631   	 0         	 0.270234  	 5.53709   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 100, r1low: 10, n: 50, r2: 51)             	 0.00558982	 120       	 0         	 0         	 96.3465   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 100, reductionFactor: 18, colBlockingSize: 12)            	 0.00547475	 5         	 96.4022   	 0         	 3.7262    	 25.8715   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, nChunks: 4, r: 100, r2: 50) 	 0.00430894	 1         	 14.8528   	 0         	 1.93087   	 7.69231   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 10, reductionFactor: 18, colBlockingSize: 12)             	 0.00374126	 120       	 17.2669   	 0         	 6.56891   	 2.62858   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 10, n: 50, r2: 10)                                              	 0.00313012	 600       	 0         	 0         	 15.3349   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 10, n: 50, r2: 51)                                           	 0.00244335	 120       	 0         	 0         	 20.0381   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 10, n: 50, r2: 50)                                              	 0.00228824	 120       	 0         	 0         	 20.9768   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 10, n: 50, r2left: 50, r2right: 1)          	 0.00205644	 120       	 0         	 0         	 23.8081   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 10)                                                                                    	 0.00203844	 720       	 0         	 0         	 28.2569   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 4, r: 10, r2: 100)   	 0.00202845	 120       	 7.57228   	 0         	 10.9041   	 0.694444  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5000, Xcols: 100, r: 100, streamingCols: 0)            	 0.00165332	 5         	 151.211   	 0         	 24.3147   	 6.21891   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2550, Xcols: 10, r: 10, streamingCols: 0)              	 0.00144681	 120       	 21.15     	 0         	 33.8731   	 0.624388  
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 10, n: 50, r2: 1)                                               	 0.00114942	 240       	 0         	 0         	 1.6704    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 10, reductionFactor: 18, colBlockingSize: 12)               	 0.00111272	 120       	 1.13836   	 0         	 0.517653  	 2.19907   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 100, r2right: 10)           	 0.00104929	 120       	 0         	 0         	 10.0639   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 10, y.r1: 50, r2: 50)                            	 0.000988902	 120       	 6.06734   	 0         	 3.39771   	 1.78571   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, nChunks: 4, r: 10, r2: 1)    	 0.000950024	 120       	 1.6168    	 0         	 7.27561   	 0.222222  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 100, reductionFactor: 18, colBlockingSize: 12)            	 0.000929299	 1         	 56.7931   	 0         	 2.23825   	 25.3739   
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 100)                                         	 0.000849828	 5         	 0         	 0         	 47.0683   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 1, n: 50, r2: 1)                	 0.000783419	 120       	 0         	 0         	 6.24953   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                               	 0.000732258	 120       	 0         	 0         	 6.55507   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                      	 0.000648427	 120       	 1.85063   	 0         	 22.2076   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 4, r: 10, r2: 10)    	 0.00064142	 120       	 2.39469   	 0         	 4.31044   	 0.555556  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 10, r: 1, streamingCols: 1)                 	 0.000618366	 120       	 0.00970299	 0         	 0.156024  	 0.0621891 
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 1)                                               	 0.00060059	 120       	 0         	 0         	 7.99214   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                                     	 0.00058471	 240       	 0         	 0         	 3.28368   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 10, c: 50, r2: 50)                             	 0.000583365	 120       	 10.2852   	 0         	 6.5825    	 1.5625    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                                     	 0.000575405	 240       	 0         	 0         	 3.33678   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                                                    	 0.000447107	 120       	 0         	 0         	 21.4714   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 1)                                             	 0.000419998	 120       	 0         	 0         	 0.228573  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 100, reductionFactor: 18, colBlockingSize: 12)              	 0.000340143	 1         	 3.10327   	 0         	 0.352793  	 8.7963    
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 10, n: 50, r2left: 1, r2right: 0)           	 0.000333832	 120       	 0         	 0         	 2.8757    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 100, r: 100, streamingCols: 0)            	 0.000308004	 1         	 81.1678   	 0         	 13.1167   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                                           	 0.000288543	 121       	 2.09674   	 0         	 33.5479   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                            	 0.000253014	 120       	 0.237141  	 0         	 3.79426   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 50)                                          	 0.000200613	 1         	 0         	 0         	 19.9389   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 4, r: 100, r2: 100)  	 0.000187875	 1         	 6.81304   	 0         	 7.35808   	 0.925926  
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 10, n: 50, r2: 0)                                               	 0.000142841	 120       	 0         	 0         	 0         	 -nan      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 100, r: 50, streamingCols: 26)              	 3.6024e-05	 1         	 3.46991   	 0         	 1.38796   	 2.5       
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 1)                                              	 3.036e-05 	 1         	 0         	 0         	 2.63505   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 1)                                            	 1.4284e-05	 1         	 0         	 0         	 2.80034   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                                             	 7.455e-06 	 1         	 1.34138   	 0         	 5.36553   	 0.25      
Timing statistics:
function                                                                                                                                                                  	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]              	 0.778613  	 120       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::Tensor2<T>&, bool, T, int, bool) [with T = double]	 0.179867  	 847       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]       	 0.123401  	 1687      
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                      	 0.123145  	 2527      
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                         	 0.100004  	 840       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                    	 0.0920307 	 840       
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                     	 0.0774073 	 840       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool) [with T = double]                                           	 0.050032  	 4701      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double]                                      	 0.0490026 	 840       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                        	 0.0477699 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                    	 0.0477549 	 1         
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                         	 0.0389425 	 847       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                              	 0.037812  	 847       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                          	 0.0223744 	 16        
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                   	 0.0205919 	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double]                  	 0.019891  	 840       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                	 0.0138734 	 847       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                     	 0.0128121 	 847       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                            	 0.00364566	 1320      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int) [with T = double]                                                                	 0.00248727	 5071      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                    	 0.00104929	 120       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int) [with T = double]                                                        	 0.000858713	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                              	 0.000648427	 120       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                   	 0.000541557	 241       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                     	 7.455e-06 	 1         
