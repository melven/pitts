[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140131912509312 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140131830851584 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140131822454912 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140131814058240 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140131805661568 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140131797264896 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140131788868224 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140131780471552 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140131293981568 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140131285584896 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140131277188224 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140131268791552 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140131260394880 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140131251998208 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140131243601536 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 1
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34mRoundrobin placement triggered
	threadid 140129418086144 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140129409693440 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140129401161472 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 140130757113600 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140130748720896 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140130740328192 -> hwthread 2 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                  	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 100, Xr2: 100, Qr1: 10, Qr2: 110)	 0.0489821 	 600       	 0         	 0         	 113.674   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 10, reductionFactor: 18, colBlockingSize: 12)              	 0.0177605 	 600       	 39.2256   	 0         	 14.8914   	 2.6341    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2left: 100, r2right: 10)           	 0.0151319 	 600       	 0         	 0         	 34.8931   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5500, Xcols: 10, r: 10, streamingCols: 0)               	 0.00722137	 600       	 45.6977   	 0         	 73.1495   	 0.624716  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5500, m: 10)                                                     	 0.0055581 	 600       	 0         	 0         	 94.9966   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 5500)                                                              	 0.00549531	 600       	 0         	 0         	 96.082    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 100, reductionFactor: 18, colBlockingSize: 12)             	 0.00544351	 5         	 96.9553   	 0         	 3.74758   	 25.8715   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 100, m: 100)                                                                     	 0.00533082	 7         	 1.75082   	 0         	 0.316199  	 5.53709   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 10, m: 10)                                                                       	 0.00474485	 840       	 0.235809  	 0         	 0.439044  	 0.537097  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 100, Xr2: 50, Qr1: 10, Qr2: 50)  	 0.00409929	 120       	 0         	 0         	 128.803   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 10, reductionFactor: 18, colBlockingSize: 12)              	 0.00301307	 120       	 21.0196   	 0         	 7.99717   	 2.62838   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, nChunks: 4, r: 100, r2: 100) 	 0.00291749	 5         	 219.367   	 0         	 19.743    	 11.1111   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, nChunks: 4, r: 100, r2: 50)  	 0.00277047	 1         	 23.1008   	 0         	 3.00311   	 7.69231   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5000, m: 100)                                                    	 0.00249667	 5         	 0         	 0         	 16.0214   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 10)                                                                                     	 0.00231046	 720       	 0         	 0         	 24.9301   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2left: 50, r2right: 0)             	 0.00176898	 120       	 0         	 0         	 27.1343   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5000, Xcols: 100, r: 100, streamingCols: 0)             	 0.00169584	 5         	 147.419   	 0         	 23.7051   	 6.21891   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 100, reductionFactor: 18, colBlockingSize: 12)             	 0.00150798	 1         	 34.999    	 0         	 1.37933   	 25.3739   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 100, m: 5000)                                                             	 0.00147923	 5         	 0         	 0         	 27.0411   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 10, r: 10, streamingCols: 0)               	 0.00111124	 120       	 26.9969   	 0         	 43.2382   	 0.624376  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 10, reductionFactor: 18, colBlockingSize: 12)                	 0.000923922	 120       	 1.37097   	 0         	 0.623429  	 2.19907   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 10)                                                     	 0.000778813	 120       	 0         	 0         	 61.6323   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 100)                                             	 0.000729939	 5         	 0         	 0         	 54.7991   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 2500)                                                              	 0.00070316	 120       	 0         	 0         	 68.2633   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 100)                                          	 0.000701324	 5         	 0         	 0         	 57.035    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                       	 0.000654656	 120       	 1.83302   	 0         	 21.9963   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 100, r2right: 10)            	 0.000614579	 120       	 0         	 0         	 17.1825   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                                      	 0.000603236	 240       	 0         	 0         	 3.18283   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)      	 0.00058288	 120       	 0         	 0         	 8.23497   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                                      	 0.000566343	 240       	 0         	 0         	 3.39017   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 10)                                                       	 0.000548466	 120       	 0         	 0         	 1.75034   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 100)                                                    	 0.000536127	 1         	 0         	 0         	 7.46092   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                                                     	 0.00049857	 120       	 0         	 0         	 19.2551   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2left: 1, r2right: 0)              	 0.000360128	 120       	 0         	 0         	 2.66572   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 100, r: 100, streamingCols: 0)             	 0.000356887	 1         	 70.0502   	 0         	 11.3201   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 100, reductionFactor: 18, colBlockingSize: 12)               	 0.000348587	 1         	 3.0281    	 0         	 0.344247  	 8.7963    
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 50)                                              	 0.000327457	 1         	 0         	 0         	 12.2153   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                                            	 0.000309136	 121       	 1.95707   	 0         	 31.3131   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 1)                                               	 0.000276824	 1         	 0         	 0         	 0.288992  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                             	 0.000247573	 120       	 0.242353  	 0         	 3.87764   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 10, m: 10, fromLeft: 1)            	 0.000201075	 720       	 0         	 0         	 5.72921   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 100, m: 2500)                                                             	 0.000187755	 1         	 0         	 0         	 21.3044   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 50)                                           	 0.000158451	 1         	 0         	 0         	 25.2444   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 100, m: 100, fromLeft: 1)          	 7.4514e-05	 6         	 0         	 0         	 12.8835   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 4, r: 100, r2: 100)   	 6.5852e-05	 1         	 19.4375   	 0         	 20.9925   	 0.925926  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 100, r: 50, streamingCols: 24)               	 3.8702e-05	 1         	 3.22981   	 0         	 1.29192   	 2.5       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 100)                                                      	 1.2662e-05	 1         	 0         	 0         	 6.31812   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                	 5.667e-06 	 1         	 0         	 0         	 7.05841   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 100, m: 50, fromLeft: 1)           	 5.186e-06 	 1         	 0         	 0         	 15.4261   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                                              	 5.013e-06 	 1         	 1.99481   	 0         	 7.97925   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 1)                                             	 4.49e-06  	 1         	 0         	 0         	 8.90869   	 0         
Timing statistics:
function                                                                                                                                                                           	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                       	 0.335183  	 120       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]	 0.0762085 	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                            	 0.0536643 	 840       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                 	 0.0325261 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                             	 0.032514  	 1         
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                  	 0.0296032 	 847       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                       	 0.0289976 	 847       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                   	 0.0229316 	 16        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                             	 0.0178756 	 960       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                         	 0.010424  	 727       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                              	 0.0100757 	 847       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                              	 0.00993083	 847       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                       	 0.00787112	 727       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                	 0.00575381	 7         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                     	 0.00397861	 1320      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                              	 0.00300427	 4221      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                   	 0.00160867	 3511      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                     	 0.00138996	 847       
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                               	 0.00133422	 7         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                            	 0.000864265	 7         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                       	 0.000654656	 120       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                            	 0.000556709	 241       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>]                	 0.000280775	 727       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                              	 5.013e-06 	 1         
