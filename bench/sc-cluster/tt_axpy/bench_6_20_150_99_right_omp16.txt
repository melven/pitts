[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140042863556480 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140042855159808 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140042777389184 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140042768992512 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140042760595840 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140042752199168 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140042743802496 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140042735405824 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140042727009152 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140042173410304 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140042165013632 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140042156616960 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140042148220288 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140042139823616 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140042131426944 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 1
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34mRoundrobin placement triggered
	threadid 140528390407936 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140528382015232 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140528373483264 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 140042123032320 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140041636542208 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140041628149504 -> hwthread 2 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                 	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, nChunks: 2, r: 99, r2: 150)  	 0.102209  	 75        	 69.0421   	 0         	 6.02549   	 11.4583   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4980, cols: 99, reductionFactor: 18, colBlockingSize: 12)             	 0.0656414 	 75        	 117.732   	 0         	 4.59607   	 25.6158   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 99, c: 150, r2: 3000)                          	 0.0618577 	 75        	 108.03    	 0         	 10.2705   	 10.5185   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, nChunks: 2, r: 99, r2: 99)   	 0.0521676 	 75        	 89.2783   	 0         	 9.01801   	 9.9       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 150, r1low: 99, n: 20, r2: 249)            	 0.0429047 	 75        	 0         	 0         	 34.6821   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 99, y.r1: 150, r2: 3000)                         	 0.0296338 	 75        	 225.502   	 0         	 15.4253   	 14.619    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 99, m: 99)                                                                      	 0.0273132 	 125       	 5.92082   	 0         	 1.08014   	 5.48154   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4980, Xcols: 99, r: 99, streamingCols: 0)              	 0.0195744 	 75        	 187.013   	 0         	 30.3746   	 6.1569    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 150, n: 20, r2left: 150, r2right: 99)                           	 0.0187822 	 75        	 0         	 0         	 38.2383   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 150, n: 20, r2: 150)                                            	 0.0127782 	 78        	 0         	 0         	 43.9498   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 99, n: 20, r2: 249)                                          	 0.0108887 	 75        	 0         	 0         	 54.334    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 150, m: 150)                                                                    	 0.00990921	 5         	 2.27062   	 0         	 0.273079  	 8.31486   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, nChunks: 2, r: 150, r2: 150)	 0.00959338	 3         	 67.5466   	 0         	 4.5031    	 15        
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 420, cols: 99, reductionFactor: 18, colBlockingSize: 12)              	 0.00885622	 25        	 24.5314   	 0         	 1.16034   	 21.1416   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 99, n: 20, r2: 150)                                             	 0.00744591	 75        	 0         	 0         	 47.8652   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 99, n: 20, r2left: 150, r2right: 99)        	 0.00631848	 75        	 0         	 0         	 93.634    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, nChunks: 2, r: 99, r2: 20)   	 0.00610068	 25        	 51.4094   	 0         	 13.3976   	 3.83721   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 150, reductionFactor: 18, colBlockingSize: 12)            	 0.00609958	 3         	 70.0868   	 0         	 1.85914   	 37.6984   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 99, n: 20, r2: 99)                                                                                    	 0.00508064	 100       	 0         	 0         	 61.7308   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 99, n: 20, r2: 99)                                              	 0.00467795	 75        	 0         	 0         	 50.2836   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 420, Xcols: 99, r: 99, streamingCols: 0)               	 0.00362647	 25        	 28.3776   	 0         	 4.85654   	 5.84317   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 99, c: 150, r2: 400)                           	 0.00299282	 25        	 99.2375   	 0         	 10.2946   	 9.63973   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 99, reductionFactor: 18, colBlockingSize: 12)               	 0.0025367 	 25        	 4.07833   	 0         	 0.928845  	 4.39076   
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 99, y.r1: 150, r2: 400)                          	 0.00208176	 25        	 142.668   	 0         	 10.9955   	 12.9751   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3000, Xcols: 150, r: 150, streamingCols: 0)            	 0.00111108	 3         	 182.255   	 0         	 19.6836   	 9.25926   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 150, reductionFactor: 18, colBlockingSize: 12)             	 0.000967275	 1         	 19.6428   	 0         	 0.682329  	 28.7879   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 150, r1low: 99, n: 20, r2: 21)             	 0.000950468	 25        	 0         	 0         	 44.012    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, nChunks: 2, r: 150, r2: 20) 	 0.000906515	 1         	 31.77     	 0         	 7.6248    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 99, n: 20, r2: 21)                                           	 0.00079701	 25        	 0         	 0         	 20.868    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 2, r: 99, r2: 150)   	 0.000778328	 25        	 30.527    	 0         	 63.1014   	 0.483776  
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 150, n: 20, r2left: 20, r2right: 1)                             	 0.000748819	 25        	 0         	 0         	 32.8517   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 150, n: 20, r2: 20)                                             	 0.000748303	 26        	 0         	 0         	 33.3555   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, nChunks: 2, r: 99, r2: 1)    	 0.000672134	 25        	 23.3311   	 0         	 94.7383   	 0.246269  
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 99, n: 20, r2: 20)                                              	 0.000670332	 25        	 0         	 0         	 23.6301   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 99, n: 20, r2left: 20, r2right: 1)          	 0.000637407	 25        	 0         	 0         	 26.0932   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 2, r: 99, r2: 99)    	 0.000575615	 25        	 27.2432   	 0         	 56.6879   	 0.480583  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 150, reductionFactor: 18, colBlockingSize: 12)              	 0.000549165	 1         	 1.7299    	 0         	 0.371473  	 4.65686   
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 150, n: 20, r2: 150)                                         	 0.000531434	 3         	 0         	 0         	 40.6447   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 99, y.r1: 20, r2: 20)                            	 0.000492209	 25        	 4.02268   	 0         	 1.77161   	 2.27064   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2left: 150, r2right: 99)           	 0.00032967	 25        	 0         	 0         	 6.04241   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 150, r: 150, streamingCols: 0)             	 0.000313969	 1         	 28.6653   	 0         	 3.34428   	 8.57143   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 99, n: 20, r2: 1)                                               	 0.000261827	 50        	 0         	 0         	 6.0498    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 99, r: 1, streamingCols: 1)                 	 0.0002193 	 25        	 0.00227998	 0         	 0.0369357 	 0.0617284 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 150)                                                      	 0.000201275	 25        	 0.745249  	 0         	 8.94299   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 99, c: 20, r2: 20)                             	 0.000190819	 25        	 10.3763   	 0         	 6.64504   	 1.56151   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 1)                                               	 0.000187154	 25        	 0         	 0         	 0.854911  	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 99, n: 20, r2: 1)                                                                                     	 0.00014323	 50        	 0         	 0         	 11.0591   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 99, n: 20, r2left: 1, r2right: 0)           	 0.000142911	 25        	 0         	 0         	 5.54191   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 99)                                                                                     	 0.000139986	 50        	 0         	 0         	 11.3154   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 20, r2left: 1, r2right: 0)                               	 0.000136367	 25        	 0         	 0         	 1.1733    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 20, r1low: 1, n: 20, r2: 1)                	 0.000121343	 25        	 0         	 0         	 1.38451   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 1)                                             	 0.000118608	 25        	 0         	 0         	 0.0674491 	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 150)                                                                                    	 0.000100279	 25        	 0         	 0         	 11.9666   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 150, n: 20, r2: 20)                                          	 9.4395e-05	 1         	 0         	 0         	 10.17     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 150)                                                                           	 5.5429e-05	 26        	 1.40721   	 0         	 22.5153   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 99)                                                                            	 4.9551e-05	 25        	 0.998971  	 0         	 15.9835   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 99, n: 20, r2: 0)                                               	 3.8619e-05	 25        	 0         	 0         	 0         	 -nan      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 2, r: 150, r2: 150)  	 2.6348e-05	 1         	 54.6531   	 0         	 112.221   	 0.487013  
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 150, n: 20, r2: 1)                                              	 2.3382e-05	 1         	 0         	 0         	 2.05286   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 150, r: 20, streamingCols: 15)              	 1.2549e-05	 1         	 0.637501  	 0         	 0.637501  	 1         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 1)                                            	 9.78e-06  	 1         	 0         	 0         	 0.654397  	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 150)                                                                             	 5.906e-06 	 1         	 1.01592   	 0         	 4.06366   	 0.25      
Timing statistics:
function                                                                                                                                                                  	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]              	 0.686029  	 25        
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::Tensor2<T>&, bool, T, int, bool) [with T = double]	 0.307951  	 130       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]       	 0.17303   	 255       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                         	 0.0848708 	 130       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                              	 0.0846503 	 130       
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                     	 0.0650413 	 125       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                    	 0.0439765 	 125       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool) [with T = double]                                           	 0.0427392 	 842       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                        	 0.0385669 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                    	 0.0385548 	 1         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                     	 0.0372224 	 130       
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                         	 0.0322078 	 125       
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                      	 0.0268317 	 380       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                	 0.0248578 	 130       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double]                                      	 0.0196674 	 125       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                          	 0.0178818 	 12        
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                   	 0.0124399 	 130       
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double]                  	 0.0070988 	 125       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                            	 0.00546413	 225       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int) [with T = double]                                                        	 0.00184721	 130       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int) [with T = double]                                                                	 0.000801055	 873       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                    	 0.00032967	 25        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                              	 0.000201275	 25        
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                   	 0.00010498	 51        
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                     	 5.906e-06 	 1         
