[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140385627428736 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140385619032064 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140385610635392 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140385602238720 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140385593842048 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140385585445376 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140385233922688 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140385225526016 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140385217129344 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140385208732672 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140385200336000 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140385191939328 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140385183542656 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140384629943808 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140384621547136 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 1
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34mRoundrobin placement triggered
	threadid 140595918198528 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140595909805824 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140595901273856 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 140384613152512 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140384604759808 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140384596367104 -> hwthread 2 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2400, cols: 50, reductionFactor: 18, colBlockingSize: 12)            	 0.119104  	 600       	 63.8098   	 0         	 4.93686   	 12.9252   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 50, m: 50)                                                                     	 0.0418651 	 840       	 3.34406   	 0         	 1.21189   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2400, Xcols: 50, r: 50, streamingCols: 0)             	 0.0285209 	 600       	 126.223   	 0         	 40.6018   	 3.10881   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 70, Xr2: 70, Qr1: 50, Qr2: 120)	 0.0282311 	 600       	 0         	 0         	 86.0328   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 20, r2left: 70, r2right: 50)          	 0.0213588 	 600       	 0         	 0         	 53.9356   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 50, reductionFactor: 18, colBlockingSize: 12)             	 0.0134002 	 120       	 18.9053   	 0         	 1.61192   	 11.7284   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2400, m: 50)                                                   	 0.0114622 	 600       	 0         	 0         	 100.504   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2400)                                                            	 0.0105181 	 600       	 0         	 0         	 109.525   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 50)                                                                                   	 0.00833718	 720       	 0         	 0         	 69.0881   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 70, m: 70)                                                                     	 0.00464666	 7         	 0.688952  	 0         	 0.178003  	 3.87045   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 50, r: 50, streamingCols: 0)              	 0.00460516	 120       	 26.0577   	 0         	 8.59905   	 3.0303    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 50, reductionFactor: 18, colBlockingSize: 12)              	 0.00348355	 120       	 3.63614   	 0         	 0.964533  	 3.76984   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1400, cols: 70, reductionFactor: 18, colBlockingSize: 12)            	 0.00303434	 5         	 23.8639   	 0         	 1.35647   	 17.5926   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 20, r2left: 20, r2right: 0)           	 0.00181274	 120       	 0         	 0         	 21.1834   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)          	 0.00180149	 720       	 0         	 0         	 15.9868   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, nChunks: 2, r: 70, r2: 20)  	 0.00153314	 1         	 4.09094   	 0         	 1.16884   	 3.5       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 70, Xr2: 20, Qr1: 50, Qr2: 20) 	 0.00136424	 120       	 0         	 0         	 67.5542   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1400, Xcols: 70, r: 70, streamingCols: 0)             	 0.00126489	 5         	 27.1169   	 0         	 6.27563   	 4.32099   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 400)                                                             	 0.00106615	 120       	 0         	 0         	 36.0174   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 50)                                                    	 0.000777234	 120       	 0         	 0         	 49.406    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 50)                                                                                    	 0.000756558	 240       	 0         	 0         	 5.07562   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 1)                                                                                    	 0.00060644	 240       	 0         	 0         	 6.33204   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2left: 70, r2right: 50)           	 0.000587007	 120       	 0         	 0         	 7.84999   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, nChunks: 2, r: 70, r2: 70)  	 0.000586974	 5         	 186.993   	 0         	 26.7133   	 7         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 20, r2left: 1, r2right: 0)            	 0.000475712	 120       	 0         	 0         	 4.03606   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 50)                                                     	 0.000443192	 120       	 0         	 0         	 4.33221   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 70)                                                                                    	 0.000415828	 120       	 0         	 0         	 6.46421   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1400, m: 70)                                                   	 0.000401996	 5         	 0         	 0         	 19.5027   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 70)                                                      	 0.000396915	 120       	 0.846529  	 0         	 10.1583   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 20, Xr2: 1, Qr1: 0, Qr2: 1)    	 0.000381463	 120       	 0         	 0         	 2.0133    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 70, reductionFactor: 18, colBlockingSize: 12)             	 0.000303658	 1         	 13.6264   	 0         	 0.866765  	 15.721    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 70)                                                                           	 0.000296461	 121       	 0.571407  	 0         	 9.14252   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 70, m: 1400)                                                            	 0.000286355	 5         	 0         	 0         	 27.3786   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 50)                                                                           	 0.000271003	 120       	 0.4428    	 0         	 7.08479   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 70, reductionFactor: 18, colBlockingSize: 12)              	 0.000260593	 1         	 0.793916  	 0         	 0.193405  	 4.10494   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 1)                                              	 0.000240565	 1         	 0         	 0         	 0.0931141 	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 70)                                             	 0.000212076	 5         	 0         	 0         	 36.9679   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 70, r: 70, streamingCols: 0)              	 0.000181902	 1         	 10.775    	 0         	 2.57061   	 4.19162   
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 70)                                          	 0.000164235	 5         	 0         	 0         	 47.7365   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 70, m: 400)                                                             	 8.1733e-05	 1         	 0         	 0         	 5.48126   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 20)                                             	 5.0495e-05	 1         	 0         	 0         	 8.87217   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 70, m: 70, fromLeft: 1)          	 2.952e-05 	 6         	 0         	 0         	 15.935    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 2, r: 70, r2: 70)   	 2.3895e-05	 1         	 13.1241   	 0         	 27.7481   	 0.472973  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 70, r: 20, streamingCols: 13)              	 2.0622e-05	 1         	 0.387935  	 0         	 0.387935  	 1         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 20)                                          	 1.3437e-05	 1         	 0         	 0         	 33.3408   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 70)                                                    	 1.0991e-05	 1         	 0         	 0         	 40.7606   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 1)                                           	 9.435e-06 	 1         	 0         	 0         	 0.678325  	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 70)                                                     	 8.208e-06 	 1         	 0         	 0         	 2.72904   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 70)                                                                             	 3.969e-06 	 1         	 0.705467  	 0         	 2.82187   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 20)                                                              	 3.641e-06 	 1         	 0         	 0         	 1.75776   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 70, m: 20, fromLeft: 1)          	 2.11e-06  	 1         	 0         	 0         	 10.6161   	 0         
Timing statistics:
function                                                                                                                                                                           	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                       	 0.567647  	 120       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]	 0.258912  	 847       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                  	 0.140244  	 847       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                       	 0.139586  	 847       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                              	 0.0465117 	 847       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                         	 0.0345935 	 727       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                            	 0.0299768 	 840       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                             	 0.0242343 	 960       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                 	 0.0138478 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                             	 0.0138377 	 1         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                              	 0.0131038 	 847       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                       	 0.011956  	 727       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                     	 0.010116  	 1320      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                   	 0.00836361	 16        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                              	 0.00246102	 4221      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                	 0.00214401	 7         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>]                	 0.00183312	 727       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                   	 0.00160599	 3511      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                     	 0.00160088	 847       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                            	 0.000567464	 241       
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                               	 0.000503136	 7         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                       	 0.000396915	 120       
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                            	 0.000187107	 7         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                              	 3.969e-06 	 1         
