PITTS: OpenMP #threads: 1
PITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2400, cols: 50, reductionFactor: 37, colBlockingSize: 12)            	 0.190141  	 600       	 38.89     	 0         	 3.09244   	 12.5758   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 70, Xr2: 70, Qr1: 120, Qr2: 50)	 0.190112  	 600       	 0         	 0         	 12.7756   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2400, Xcols: 50, r: 50, streamingCols: 0)             	 0.154587  	 600       	 23.2878   	 0         	 7.49092   	 3.10881   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 50)                                                                                   	 0.0647848 	 720       	 0         	 0         	 8.89097   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2400, m: 50)                                                                 	 0.0556382 	 600       	 0         	 0         	 20.7052   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2400, m: 50)                                                        	 0.052996  	 600       	 0         	 0         	 21.7375   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 70, r1low: 50, n: 20, r2: 50)             	 0.0489134 	 600       	 0         	 0         	 23.5518   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 50, m: 50)                                                                     	 0.0297335 	 840       	 4.70847   	 0         	 1.70636   	 2.75937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 20, nChunks: 2, r2: 70)	 0.0213482 	 1         	 0.293795  	 0         	 0.0839415 	 3.5       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 50, reductionFactor: 18, colBlockingSize: 12)             	 0.0091068 	 120       	 27.818    	 0         	 2.37185   	 11.7284   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 50, r: 50, streamingCols: 0)              	 0.00628287	 120       	 19.0996   	 0         	 6.30285   	 3.0303    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 70, m: 70)                                                                     	 0.00432514	 7         	 0.740167  	 0         	 0.191236  	 3.87045   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 20, Xr2: 70, Qr1: 20, Qr2: 50) 	 0.00423415	 120       	 0         	 0         	 21.7659   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 50)                                                         	 0.00237808	 120       	 0         	 0         	 16.1475   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 50, reductionFactor: 18, colBlockingSize: 12)              	 0.00229302	 120       	 5.52402   	 0         	 1.46532   	 3.76984   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1400, cols: 70, reductionFactor: 37, colBlockingSize: 12)            	 0.0018977 	 5         	 37.126    	 0         	 2.16894   	 17.1171   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 400, m: 50)                                                                  	 0.00167494	 120       	 0         	 0         	 22.9262   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1400, Xcols: 70, r: 70, streamingCols: 0)             	 0.00124132	 5         	 27.632    	 0         	 6.39483   	 4.32099   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 20, r1low: 0, n: 20, r2: 50)              	 0.000989203	 120       	 0         	 0         	 38.8191   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, nChunks: 2, r2: 70)	 0.000964252	 5         	 113.829   	 0         	 16.2613   	 7         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)          	 0.000881287	 720       	 0         	 0         	 32.6795   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1400, m: 70)                                                                 	 0.000856479	 5         	 0         	 0         	 9.15376   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 70)                                           	 0.000817672	 5         	 0         	 0         	 9.5882    	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 70)                                              	 0.000803301	 5         	 0         	 0         	 9.75973   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 50)                                                                                    	 0.000684048	 240       	 0         	 0         	 5.61364   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 20, r2: 50)               	 0.000542648	 120       	 0         	 0         	 3.53821   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 1)                                                                                    	 0.000534563	 240       	 0         	 0         	 7.18344   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1400, m: 70)                                                        	 0.00052566	 5         	 0         	 0         	 14.9146   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                      	 0.000456539	 120       	 0.735972  	 0         	 8.83167   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                                                    	 0.000453238	 120       	 0         	 0         	 5.93066   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 70, r1low: 50, n: 20, r2: 1)              	 0.000257506	 120       	 0         	 0         	 17.8947   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                                           	 0.000240388	 121       	 0.704694  	 0         	 11.2751   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 1, Xr2: 20, Qr1: 1, Qr2: 0)    	 0.000239197	 120       	 0         	 0         	 3.21074   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 70, reductionFactor: 18, colBlockingSize: 12)             	 0.000220156	 1         	 18.7948   	 0         	 1.19552   	 15.721    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 50)                                                          	 0.000183537	 120       	 0         	 0         	 10.4611   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 70, reductionFactor: 18, colBlockingSize: 12)              	 0.000163664	 1         	 1.26411   	 0         	 0.307948  	 4.10494   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 1)                                                                           	 0.000161392	 120       	 0.743531  	 0         	 11.8965   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 70)                                              	 0.000142963	 1         	 0         	 0         	 3.13368   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 400, m: 70)                                                                  	 0.000103995	 1         	 0         	 0         	 4.3079    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 70, r: 70, streamingCols: 0)              	 7.9495e-05	 1         	 24.6556   	 0         	 5.88213   	 4.19162   
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 70)                                           	 4.7921e-05	 1         	 0         	 0         	 9.34872   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 70)                                               	 2.2886e-05	 1         	 0         	 0         	 0.978764  	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 70)                                                         	 1.6193e-05	 1         	 0         	 0         	 27.6663   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 70, m: 70, fromLeft: 0)          	 1.1284e-05	 6         	 0         	 0         	 41.6873   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 70, r: 20, streamingCols: 14)              	 1.0672e-05	 1         	 0.749625  	 0         	 0.749625  	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, nChunks: 2, r2: 1) 	 7.16e-06  	 1         	 43.7989   	 0         	 92.6034   	 0.472973  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 70)                                                          	 4.846e-06 	 1         	 0         	 0         	 4.62237   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 20)                                                                   	 3.252e-06 	 1         	 0         	 0         	 1.96802   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                                             	 2.918e-06 	 1         	 0.959561  	 0         	 3.83825   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 20)                                            	 2e-06     	 1         	 0         	 0         	 3.2       	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 20, m: 70, fromLeft: 0)          	 1.317e-06 	 1         	 0         	 0         	 17.0084   	 0         
Timing statistics:
function                                                                                                                                                                           	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                        	 1.14655   	 120       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]	 0.524932  	 847       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                  	 0.204472  	 847       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                       	 0.203823  	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                            	 0.194585  	 840       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                         	 0.162202  	 727       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                     	 0.0664567 	 1320      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                            	 0.0582769 	 727       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                   	 0.0561043 	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                             	 0.0507027 	 960       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                              	 0.0340587 	 847       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                  	 0.0340133 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                              	 0.0340058 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                	 0.0223196 	 7         
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                   	 0.00523058	 16        
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                              	 0.00193326	 4221      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                     	 0.00162931	 847       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                   	 0.00124213	 3511      
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                                	 0.00096915	 7         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>]                	 0.000893888	 727       
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                             	 0.000867593	 7         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                       	 0.000456539	 120       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                            	 0.00040178	 241       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                              	 2.918e-06 	 1         
[1;34m[likwid-pin] Main PID -> hwthread 0 - OK[0m
