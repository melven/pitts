orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22963171669888 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22962975533056 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22962774206592 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22962572880128 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22962371553664 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22962170227200 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22961968900736 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22961767574272 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22961566247808 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22961364921344 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22961163594880 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22960962268416 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22960760941952 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22960559615488 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22960358289024 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22960156962560 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22959955636096 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22959754309632 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22959552983168 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22959351656704 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22959150330240 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22958949003776 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22958747677312 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22958546350848 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22958345024384 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22958143697920 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22957942371456 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22957741044992 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22957539718528 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22957338392064 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22957137065600 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22956935739136 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22956734408576 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22956533082112 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22956331755648 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22956130429184 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22955929102720 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22955727776256 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22955526449792 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22955325123328 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22955123796864 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22954922470400 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22954721143936 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22954519817472 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22954318491008 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22954117164544 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22953915838080 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22953714511616 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22953513185152 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22953311858688 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22953110532224 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22952909205760 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22952707879296 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22952506552832 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22952305226368 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22952103899904 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22951902573440 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22951701246976 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22951499920512 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22951298594048 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22951097267584 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22950895941120 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22950694614656 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22963066009344 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22963059418880 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 51, m: 51)                                                                	 0.288618  	 700       	 3.00277   	 0         	 0.152389  	 19.7045   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2550, r: 51, r2: 51, leftOrthog: 1)       	 0.176131  	 600       	 45.1882   	 0         	 10.7743   	 4.19408   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 51, reductionFactor: 37, colBlockingSize: 12)                 	 0.146499  	 600       	 55.7968   	 0         	 4.34628   	 12.8378   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 51)                                                                	 0.039536  	 100       	 3.00148   	 0         	 0.154796  	 19.39     
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0365282 	 100       	 3.19388   	 0         	 0.165352  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 1)                 	 0.0275087 	 800       	 0         	 0         	 1.18653   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 51, reductionFactor: 37, colBlockingSize: 12)                 	 0.0253277 	 100       	 52.7347   	 0         	 4.10937   	 12.8328   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0236563 	 100       	 55.3536   	 0         	 4.3963    	 12.591    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 1, m: 2500, k: 50)	 0.0185533 	 800       	 10.7798   	 0         	 43.9987   	 0.245002  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 1, Qr2: 51)       	 0.0168778 	 700       	 0         	 0         	 85.4707   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1, m: 50, k: 2500)   	 0.0157068 	 800       	 12.7333   	 0         	 51.9723   	 0.245002  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 51, r2: 51, leftOrthog: 1)       	 0.0155924 	 100       	 83.406    	 0         	 19.8918   	 4.19298   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, r1_: 51, n: 50, r2: 51)          	 0.0135141 	 600       	 588.946   	 0         	 93.3075   	 6.31188   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2550, r: 50, r2: 50, leftOrthog: 1)       	 0.0117549 	 100       	 108.465   	 0         	 26.3719   	 4.1129    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 1, reductionFactor: 37, colBlockingSize: 12)                  	 0.00762821	 700       	 0.480648  	 0         	 1.87273   	 0.256656  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2550, Xcols: 1, r: 1, streamingCols: 0)                    	 0.00598756	 700       	 0.298118  	 0         	 4.77036   	 0.0624939 
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 1)   	 0.004523  	 900       	 0.994915  	 0         	 4.13885   	 0.240385  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 1)                                                                                          	 0.00430798	 1200      	 0         	 0         	 0.222842  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 0)                 	 0.00410138	 100       	 0         	 0         	 0.975282  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, r1_: 50, n: 50, r2: 51)          	 0.00366424	 100       	 354.917   	 0         	 56.7867   	 6.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1, m: 2550)                                                                  	 0.003282  	 700       	 0         	 0         	 8.70202   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 51, reductionFactor: 37, colBlockingSize: 12)                   	 0.00302159	 100       	 8.84069   	 0         	 1.36378   	 6.48247   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2550, m: 1)                                                         	 0.00299406	 700       	 0         	 0         	 9.53888   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, r1_: 51, n: 50, r2: 50)          	 0.00232991	 100       	 558.175   	 0         	 88.45     	 6.31063   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 51, leftOrthog: 1)         	 0.00149142	 100       	 17.0978   	 0         	 6.78548   	 2.51976   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 1, reductionFactor: 37, colBlockingSize: 12)                  	 0.00120142	 100       	 0.427424  	 0         	 1.66537   	 0.256654  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000993798	 100       	 0.50312   	 0         	 2.01248   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 1, Qr2: 50)       	 0.000871854	 100       	 0         	 0         	 233.984   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 1, r: 1, streamingCols: 0)                    	 0.000842706	 100       	 0.296663  	 0         	 4.74709   	 0.0624938 
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 1, m: 1)                                                                   	 0.000811292	 900       	 0         	 0         	 0.0354989 	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000729371	 100       	 34.2761   	 0         	 8.22627   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000534751	 100       	 0         	 0         	 7.48012   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 1, reductionFactor: 37, colBlockingSize: 12)                    	 0.000515635	 100       	 0.0199177 	 0         	 0.0791257 	 0.251722  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000482961	 100       	 0         	 0         	 8.28224   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 1)                                                         	 0.000451316	 100       	 0         	 0         	 8.86297   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 1, r2right: 0)                  	 0.000443077	 100       	 0         	 0         	 0.180556  	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1, m: 2500)                                                                  	 0.000436704	 100       	 0         	 0         	 9.15952   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.00041665	 100       	 1.20005   	 0         	 14.4006   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000409188	 100       	 0.610966  	 0         	 9.77546   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 1)                                                                                 	 0.000390302	 100       	 0.0128106 	 0         	 0.204969  	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000357596	 100       	 0.699113  	 0         	 11.1858   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 1, k: 1)    	 0.000335142	 800       	 0.238705  	 0         	 1.92873   	 0.123762  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 1)                                                           	 0.000186578	 100       	 0         	 0         	 0.428775  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1, m: 50, k: 50)     	 0.000154943	 100       	 3.22699   	 0         	 13.4243   	 0.240385  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 1, m: 1, fromLeft: 1)                 	 4.4822e-05	 800       	 0         	 0         	 0.285574  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 1, m: 50, k: 50)  	 4.2072e-05	 100       	 11.8844   	 0         	 49.4391   	 0.240385  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 0, k: 1)    	 4.47e-06  	 100       	 0         	 0         	 8.94855   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.07175   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.07171   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.945042  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.943601  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.910123  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.364683  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.20785   	 1800      
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.20497   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.199151  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.12659   	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0320532 	 1000      
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0290955 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0202376 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0185953 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0182326 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0158618 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.00990129	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.00683027	 800       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00649645	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.00486261	 1800      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00484273	 1300      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0037187 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00363196	 900       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0028872 	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00144487	 5000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00115709	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000993798	 100       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.000811292	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00041665	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 4.4822e-05	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22574368855936 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22574146775040 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22573945448576 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22573744122112 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22573542795648 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22573341469184 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22573140142720 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22572938816256 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22572737489792 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22572536163328 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22572334836864 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22572133510400 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22571932183936 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22571730857472 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22571529531008 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22571328204544 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22571126878080 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22570925551616 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22570724225152 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22570522898688 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22570321572224 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22570120245760 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22569918919296 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22569717592832 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22569516266368 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22569314939904 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22569113613440 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22568912286976 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22568710960512 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22568509634048 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22568308307584 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22568106981120 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22567905650560 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22567704324096 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22567502997632 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22567301671168 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22567100344704 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22566899018240 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22566697691776 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22566496365312 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22566295038848 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22566093712384 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22565892385920 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22565691059456 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22565489732992 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22565288406528 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22565087080064 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22564885753600 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22564684427136 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22564483100672 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22564281774208 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22564080447744 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22563879121280 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22563677794816 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22563476468352 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22563275141888 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22563073815424 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22562872488960 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22562671162496 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22562469836032 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22562268509568 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22562067183104 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22561865856640 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22574263195392 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22574256604928 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 52, m: 52)                                                                	 0.258223  	 700       	 3.55755   	 0         	 0.17705   	 20.0934   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2600, r: 52, r2: 52, leftOrthog: 1)       	 0.19529   	 600       	 43.1997   	 0         	 10.1021   	 4.27632   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2600, cols: 52, reductionFactor: 37, colBlockingSize: 12)                 	 0.149605  	 600       	 57.9158   	 0         	 4.42458   	 13.0896   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 52)                                                                	 0.0399924 	 100       	 3.01724   	 0         	 0.155029  	 19.4624   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0379837 	 100       	 3.07149   	 0         	 0.159015  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 52, reductionFactor: 37, colBlockingSize: 12)                 	 0.0259841 	 100       	 53.438    	 0         	 4.08569   	 13.0793   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0242605 	 100       	 55.0333   	 0         	 4.36924   	 12.5956   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2, m: 50, k: 2500)   	 0.0168032 	 800       	 23.805    	 0         	 49.5526   	 0.4804    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 2, Qr2: 52)       	 0.0163758 	 700       	 0         	 0         	 90.7585   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, r1_: 52, n: 50, r2: 52)          	 0.0144    	 600       	 585.867   	 0         	 91.0347   	 6.43564   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 52, r2: 52, leftOrthog: 1)       	 0.0124669 	 100       	 108.447   	 0         	 25.3732   	 4.27407   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2600, r: 50, r2: 50, leftOrthog: 1)       	 0.0109503 	 100       	 118.718   	 0         	 28.8577   	 4.11392   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 100, m: 50, k: 2)  	 0.0095709 	 800       	 1.67173   	 0         	 3.54408   	 0.471698  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2600, cols: 2, reductionFactor: 37, colBlockingSize: 12)                  	 0.00747709	 700       	 1.99991   	 0         	 3.89756   	 0.513119  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2, m: 2500, k: 50)	 0.00684121	 800       	 58.4692   	 0         	 121.709   	 0.4804    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2600, Xcols: 2, r: 2, streamingCols: 0)                    	 0.00611774	 700       	 1.18998   	 0         	 9.52169   	 0.124976  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, r1_: 50, n: 50, r2: 52)          	 0.00410038	 100       	 329.726   	 0         	 52.2488   	 6.31068   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 52, reductionFactor: 37, colBlockingSize: 12)                   	 0.00374384	 100       	 7.41772   	 0         	 1.13338   	 6.54478   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 2, n: 50, r2left: 50, r2right: 2)                 	 0.00337446	 700       	 0         	 0         	 17.2591   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2, m: 2600)                                                                  	 0.00330745	 700       	 0         	 0         	 17.6087   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2600, m: 2)                                                         	 0.00307304	 700       	 0         	 0         	 18.9519   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 2, n: 50, r2: 2)                                                                                          	 0.00274658	 800       	 0         	 0         	 0.93207   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, r1_: 52, n: 50, r2: 50)          	 0.00241099	 100       	 560.764   	 0         	 87.1687   	 6.4331    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 52, leftOrthog: 1)         	 0.00148121	 100       	 17.5532   	 0         	 6.91325   	 2.53906   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 2, reductionFactor: 37, colBlockingSize: 12)                  	 0.0011839 	 100       	 1.735     	 0         	 3.38138   	 0.513103  
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 2, m: 2)                                                                   	 0.00114646	 900       	 0.00785026	 0         	 0.0879229 	 0.0892857 
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 2, r: 2, streamingCols: 0)                    	 0.000950814	 100       	 1.05173   	 0         	 8.41553   	 0.124975  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000907858	 100       	 0.550747  	 0         	 2.20299   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 100, m: 2, k: 2)   	 0.0009044 	 700       	 0.619195  	 0         	 2.50155   	 0.247525  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 2, Qr2: 50)       	 0.000884583	 100       	 0         	 0         	 235.139   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 2)   	 0.000853086	 100       	 1.17221   	 0         	 2.53198   	 0.462963  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 2)                                                                                          	 0.000841462	 200       	 0         	 0         	 0.38029   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 2, n: 50, r2: 1)                                                                                          	 0.00076529	 200       	 0         	 0         	 0.418142  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.00072547	 100       	 34.4604   	 0         	 8.2705    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 2, n: 50, r2left: 50, r2right: 0)                 	 0.000611655	 100       	 0         	 0         	 13.0793   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000542254	 100       	 0         	 0         	 7.37662   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 2)                 	 0.000527867	 100       	 0         	 0         	 7.88077   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000510406	 100       	 0         	 0         	 7.8369    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 2)                                                         	 0.000483162	 100       	 0         	 0         	 16.5576   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2, m: 2500)                                                                  	 0.000469027	 100       	 0         	 0         	 17.0566   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 2, reductionFactor: 37, colBlockingSize: 12)                    	 0.000466643	 100       	 0.0880354 	 0         	 0.178295  	 0.493763  
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000463839	 100       	 1.07796   	 0         	 12.9355   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000430107	 100       	 0.581251  	 0         	 9.30001   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 2, n: 50, r2left: 1, r2right: 0)                  	 0.000402988	 100       	 0         	 0         	 0.397034  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 2)                                                                                 	 0.000384646	 100       	 0.0259979 	 0         	 0.415967  	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.00035514	 100       	 0.703948  	 0         	 11.2632   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2, m: 50, k: 50)     	 0.000311971	 100       	 3.20543   	 0         	 6.92372   	 0.462963  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 2)                                                           	 0.000175426	 100       	 0         	 0         	 0.912065  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 2, m: 50, k: 50)  	 0.000137434	 100       	 7.27622   	 0         	 15.7166   	 0.462963  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 2, k: 2)    	 6.6943e-05	 100       	 0.597523  	 0         	 2.43789   	 0.245098  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 2, m: 2, fromLeft: 1)                 	 5.6991e-05	 800       	 0         	 0         	 0.898387  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 100, m: 0, k: 2)   	 4.98e-06  	 100       	 0         	 0         	 32.1285   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.03152   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.03147   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.934924  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.933566  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.900492  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.336199  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.220189  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.212721  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.204242  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.0964719 	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.029665  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0216368 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0177707 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0171151 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0114003 	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.00963126	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.00706855	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00697864	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00491697	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00489558	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0044742 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00377648	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00373162	 900       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00308859	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00117038	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00116989	 300       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00114646	 900       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000907858	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000463839	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 5.6991e-05	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23055715739520 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23055518656512 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23055317330048 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23055116003584 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23054914677120 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23054713350656 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23054512024192 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23054310697728 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23054109371264 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23053908044800 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23053706718336 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23053505391872 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23053304065408 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23053102738944 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23052901412480 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23052700086016 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23052498759552 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23052297433088 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23052096106624 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23051894780160 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23051693453696 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23051492127232 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23051290800768 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23051089474304 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23050888147840 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23050686821376 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23050485494912 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23050284168448 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23050082841984 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23049881515520 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23049680189056 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23049478862592 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23049277532032 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23049076205568 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23048874879104 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23048673552640 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23048472226176 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23048270899712 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23048069573248 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23047868246784 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23047666920320 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23047465593856 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23047264267392 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23047062940928 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23046861614464 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23046660288000 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23046458961536 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23046257635072 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23046056308608 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23045854982144 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23045653655680 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23045452329216 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23045251002752 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23045049676288 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23044848349824 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23044647023360 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23044445696896 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23044244370432 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23044043043968 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23043841717504 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23043640391040 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23043439064576 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23043237738112 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23055610078976 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23055603488512 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 53, m: 53)                                                                	 0.271016  	 700       	 3.58895   	 0         	 0.175222  	 20.4823   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2650, r: 53, r2: 53, leftOrthog: 1)       	 0.17128   	 600       	 52.1521   	 0         	 11.9655   	 4.35855   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2650, cols: 53, reductionFactor: 37, colBlockingSize: 12)                 	 0.153396  	 600       	 59.8063   	 0         	 4.4828    	 13.3413   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 53)                                                                	 0.0407852 	 100       	 3.00763   	 0         	 0.153977  	 19.5329   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0369318 	 100       	 3.15898   	 0         	 0.163545  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 53, reductionFactor: 37, colBlockingSize: 12)                 	 0.0264896 	 100       	 54.4538   	 0         	 4.08641   	 13.3256   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.023867  	 100       	 57.0164   	 0         	 4.52508   	 12.6001   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 3, Qr2: 53)       	 0.0169107 	 700       	 0         	 0         	 90.537    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3, m: 50, k: 2500)   	 0.0167475 	 800       	 35.8263   	 0         	 50.6918   	 0.706747  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 150, m: 50, k: 3)  	 0.0161539 	 800       	 2.22856   	 0         	 3.20913   	 0.694444  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, r1_: 53, n: 50, r2: 53)          	 0.0156006 	 600       	 572.58    	 0         	 87.2915   	 6.55941   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 53, r2: 53, leftOrthog: 1)       	 0.0118104 	 100       	 118.921   	 0         	 27.306    	 4.35511   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2650, r: 50, r2: 50, leftOrthog: 1)       	 0.00983652	 100       	 134.702   	 0         	 32.7352   	 4.11491   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2650, cols: 3, reductionFactor: 37, colBlockingSize: 12)                  	 0.0084622 	 700       	 4.05243   	 0         	 5.267     	 0.769399  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2650, Xcols: 3, r: 3, streamingCols: 0)                    	 0.00666989	 700       	 2.50304   	 0         	 13.3533   	 0.187447  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 3, m: 2500, k: 50)	 0.00641263	 800       	 93.5653   	 0         	 132.389   	 0.706747  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 53, reductionFactor: 37, colBlockingSize: 12)                   	 0.00444265	 100       	 6.49369   	 0         	 0.983017  	 6.60588   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, r1_: 50, n: 50, r2: 53)          	 0.00371199	 100       	 378.369   	 0         	 59.3968   	 6.37019   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3, m: 2650)                                                                  	 0.00332837	 700       	 0         	 0         	 26.7518   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2650, m: 3)                                                         	 0.00324345	 700       	 0         	 0         	 27.4522   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 3, n: 50, r2left: 50, r2right: 3)                 	 0.0031597 	 700       	 0         	 0         	 28.1799   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 3, n: 50, r2: 3)                                                                                          	 0.00260987	 800       	 0         	 0         	 2.207     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, r1_: 53, n: 50, r2: 50)          	 0.00256707	 100       	 547.122   	 0         	 83.4598   	 6.55551   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 53, leftOrthog: 1)         	 0.00157303	 100       	 16.8464   	 0         	 6.58599   	 2.55792   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 3, m: 3)                                                                   	 0.00139382	 900       	 0.0232455 	 0         	 0.15497   	 0.15      
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 3, reductionFactor: 37, colBlockingSize: 12)                  	 0.00128359	 100       	 3.60056   	 0         	 4.68002   	 0.769347  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 150, m: 3, k: 3)   	 0.00114482	 700       	 1.65091   	 0         	 4.44645   	 0.371287  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 3, r: 3, streamingCols: 0)                    	 0.0010507 	 100       	 2.14143   	 0         	 11.4244   	 0.187444  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000933946	 100       	 0.535363  	 0         	 2.14145   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 3, Qr2: 50)       	 0.000869778	 100       	 0         	 0         	 243.74    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 3)                                                                                          	 0.000845222	 200       	 0         	 0         	 0.567898  	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 3, n: 50, r2: 1)                                                                                          	 0.000742304	 200       	 0         	 0         	 0.646635  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000727727	 100       	 34.3535   	 0         	 8.24485   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 3)   	 0.00070245	 100       	 2.13538   	 0         	 3.18884   	 0.669643  
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 3, n: 50, r2left: 50, r2right: 0)                 	 0.000679074	 100       	 0         	 0         	 17.6711   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3, m: 2500)                                                                  	 0.00055439	 100       	 0         	 0         	 21.6454   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000537196	 100       	 0         	 0         	 7.44607   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 3)                                                         	 0.000518132	 100       	 0         	 0         	 23.1601   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 3, reductionFactor: 37, colBlockingSize: 12)                    	 0.000490943	 100       	 0.188275  	 0         	 0.259093  	 0.72667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 3)                 	 0.000488584	 100       	 0         	 0         	 8.67814   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.00047724	 100       	 0         	 0         	 8.38153   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000427206	 100       	 1.1704    	 0         	 14.0447   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 3, n: 50, r2left: 1, r2right: 0)                  	 0.000415814	 100       	 0         	 0         	 0.577181  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000398381	 100       	 0.62754   	 0         	 10.0406   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000359869	 100       	 0.694697  	 0         	 11.1152   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 3)                                                                                 	 0.000354861	 100       	 0.0422701 	 0         	 0.676321  	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 3, m: 50, k: 50)     	 0.000285734	 100       	 5.24964   	 0         	 7.83946   	 0.669643  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 3)                                                           	 0.000192302	 100       	 0         	 0         	 1.24804   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 3, m: 50, k: 50)  	 0.000142525	 100       	 10.5245   	 0         	 15.7165   	 0.669643  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 3, k: 3)    	 8.6551e-05	 100       	 1.03985   	 0         	 2.85612   	 0.364078  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 3, m: 3, fromLeft: 1)                 	 7.724e-05 	 800       	 0         	 0         	 1.49146   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 150, m: 0, k: 3)   	 6.45e-06  	 100       	 0         	 0         	 55.814    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.03351   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.03348   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.929575  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.928191  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.893647  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.348733  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.218432  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.208829  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.1945    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.10383   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0321347 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0226074 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0182577 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0180942 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0170332 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0107078 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.00772059	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00655516	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00533589	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00474317	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0047346 	 1300      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00395389	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00388276	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00282054	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00161567	 5200      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00139382	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111311	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000933946	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000427206	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 7.724e-05 	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22518701987712 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22518513526784 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22518312200320 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22518110873856 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22517909547392 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22517708220928 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22517506894464 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22517305568000 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22517104241536 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22516902915072 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22516701588608 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22516500262144 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22516298935680 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22516097609216 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22515896282752 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22515694956288 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22515493629824 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22515292303360 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22515090976896 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22514889650432 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22514688323968 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22514486997504 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22514285671040 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22514084344576 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22513883018112 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22513681691648 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22513480365184 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22513279038720 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22513077712256 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22512876385792 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22512675059328 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22512473732864 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22512272402304 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22512071075840 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22511869749376 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22511668422912 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22511467096448 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22511265769984 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22511064443520 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22510863117056 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22510661790592 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22510460464128 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22510259137664 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22510057811200 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22509856484736 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22509655158272 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22509453831808 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22509252505344 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22509051178880 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22508849852416 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22508648525952 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22508447199488 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22508245873024 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22508044546560 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22507843220096 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22507641893632 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22507440567168 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22507239240704 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22507037914240 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22506836587776 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22506635261312 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22506433934848 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22506232608384 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22518596327168 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22518589736704 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 54, m: 54)                                                                	 0.273602  	 700       	 3.76008   	 0         	 0.180157  	 20.8712   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2700, r: 54, r2: 54, leftOrthog: 1)       	 0.167445  	 600       	 56.4235   	 0         	 12.7057   	 4.44079   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2700, cols: 54, reductionFactor: 37, colBlockingSize: 12)                 	 0.158021  	 600       	 61.4046   	 0         	 4.51736   	 13.593    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 54)                                                                	 0.0406041 	 100       	 3.0703    	 0         	 0.156634  	 19.6017   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0357507 	 100       	 3.26334   	 0         	 0.168948  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 54, reductionFactor: 37, colBlockingSize: 12)                 	 0.0275055 	 100       	 54.4403   	 0         	 4.0113    	 13.5717   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0248454 	 100       	 55.8046   	 0         	 4.42738   	 12.6044   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 200, m: 50, k: 4)  	 0.0192022 	 800       	 3.33296   	 0         	 3.66625   	 0.909091  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 4, Qr2: 54)       	 0.0171729 	 700       	 0         	 0         	 91.8282   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4, m: 50, k: 2500)   	 0.0165991 	 800       	 48.1953   	 0         	 52.128    	 0.924556  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, r1_: 54, n: 50, r2: 54)          	 0.0144894 	 600       	 652.052   	 0         	 97.5663   	 6.68317   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2700, r: 50, r2: 50, leftOrthog: 1)       	 0.0129332 	 100       	 104.383   	 0         	 25.3611   	 4.11585   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 54, r2: 54, leftOrthog: 1)       	 0.00912825	 100       	 159.724   	 0         	 36.0053   	 4.43612   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2700, cols: 4, reductionFactor: 37, colBlockingSize: 12)                  	 0.00885609	 700       	 7.01377   	 0         	 6.83932   	 1.02551   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2700, Xcols: 4, r: 4, streamingCols: 0)                    	 0.007397  	 700       	 4.08814   	 0         	 16.3586   	 0.249907  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 4, m: 2500, k: 50)	 0.00651084	 800       	 122.872   	 0         	 132.898   	 0.924556  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 54, reductionFactor: 37, colBlockingSize: 12)                   	 0.00412815	 100       	 7.2546    	 0         	 1.08833   	 6.6658    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, r1_: 50, n: 50, r2: 54)          	 0.00375615	 100       	 388.164   	 0         	 60.381    	 6.42857   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4, m: 2700)                                                                  	 0.00363973	 700       	 0         	 0         	 33.2332   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 4, n: 50, r2left: 50, r2right: 4)                 	 0.00342232	 700       	 0         	 0         	 35.3444   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2700, m: 4)                                                         	 0.00342119	 700       	 0         	 0         	 35.3561   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 200, m: 4, k: 4)   	 0.00311866	 700       	 1.43651   	 0         	 2.90176   	 0.49505   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 4, n: 50, r2: 4)                                                                                          	 0.00268197	 800       	 0         	 0         	 3.81809   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, r1_: 54, n: 50, r2: 50)          	 0.00233498	 100       	 624.418   	 0         	 93.5054   	 6.67788   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 4, m: 4)                                                                   	 0.00172647	 900       	 0.0437888 	 0         	 0.216859  	 0.201923  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 54, leftOrthog: 1)         	 0.00150956	 100       	 17.886    	 0         	 6.94243   	 2.57634   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 4, reductionFactor: 37, colBlockingSize: 12)                  	 0.00135906	 100       	 6.0455    	 0         	 5.89582   	 1.02539   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 4, r: 4, streamingCols: 0)                    	 0.00110591	 100       	 3.61693   	 0         	 14.4735   	 0.2499    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 4, n: 50, r2: 1)                                                                                          	 0.000936805	 200       	 0         	 0         	 0.683173  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 4, Qr2: 50)       	 0.000906763	 100       	 0         	 0         	 238.21    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000854092	 100       	 0.585417  	 0         	 2.34167   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 4)                                                                                          	 0.000797149	 200       	 0         	 0         	 0.802861  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000728654	 100       	 34.3098   	 0         	 8.23436   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 4, n: 50, r2left: 50, r2right: 0)                 	 0.000692937	 100       	 0         	 0         	 23.0901   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 4)                                                         	 0.000657678	 100       	 0         	 0         	 24.328    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 4)   	 0.000632034	 100       	 3.16439   	 0         	 3.67069   	 0.862069  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 4, reductionFactor: 37, colBlockingSize: 12)                    	 0.000566394	 100       	 0.290124  	 0         	 0.305088  	 0.950951  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4, m: 2500)                                                                  	 0.000556134	 100       	 0         	 0         	 28.77     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000520682	 100       	 0         	 0         	 7.68223   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000501176	 100       	 0         	 0         	 7.98123   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 4)                 	 0.000467951	 100       	 0         	 0         	 9.23174   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000424523	 100       	 1.17779   	 0         	 14.1335   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 4, n: 50, r2left: 1, r2right: 0)                  	 0.000410212	 100       	 0         	 0         	 0.780084  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000396801	 100       	 0.630039  	 0         	 10.0806   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 4)                                                                                 	 0.000347898	 100       	 0.0574881 	 0         	 0.91981   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000333159	 100       	 0.750392  	 0         	 12.0063   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 4, m: 50, k: 50)     	 0.000286367	 100       	 6.98404   	 0         	 8.10149   	 0.862069  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 4)                                                           	 0.000230209	 100       	 0         	 0         	 1.39004   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 4, m: 50, k: 50)  	 0.000160123	 100       	 12.4904   	 0         	 14.4889   	 0.862069  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 4, k: 4)    	 0.000115612	 100       	 1.38394   	 0         	 2.87859   	 0.480769  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 4, m: 4, fromLeft: 1)                 	 7.8915e-05	 800       	 0         	 0         	 2.5952    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 200, m: 0, k: 4)   	 5.55e-06  	 100       	 0         	 0         	 115.315   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.03753   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.03749   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.926139  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.924865  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.892028  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.349957  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.225281  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.215108  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.191016  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.111284  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0340461 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.023074  	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0213092 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0186004 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0168855 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.011246  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.00850291	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00667097	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00502872	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00499342	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0049171 	 1300      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00430908	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00419586	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00262426	 6300      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00172647	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107786	 300       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0010506 	 5200      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000854092	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000424523	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 7.8915e-05	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22715766990720 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22715545151488 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22715343825024 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22715142498560 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22714941172096 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22714739845632 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22714538519168 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22714337192704 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22714135866240 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22713934539776 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22713733213312 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22713531886848 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22713330560384 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22713129233920 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22712927907456 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22712726580992 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22712525254528 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22712323928064 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22712122601600 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22711921275136 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22711719948672 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22711518622208 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22711317295744 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22711115969280 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22710914642816 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22710713316352 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22710511989888 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22710310663424 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22710109336960 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22709908010496 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22709706684032 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22709505357568 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22709304027008 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22709102700544 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22708901374080 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22708700047616 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22708498721152 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22708297394688 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22708096068224 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22707894741760 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22707693415296 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22707492088832 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22707290762368 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22707089435904 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22706888109440 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22706686782976 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22706485456512 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22706284130048 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22706082803584 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22705881477120 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22705680150656 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22705478824192 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22705277497728 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22705076171264 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22704874844800 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22704673518336 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22704472191872 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22704270865408 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22704069538944 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22703868212480 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22703666886016 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22703465559552 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22703264233088 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22715661330176 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22715654739712 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 55, m: 55)                                                                	 0.287032  	 700       	 3.78697   	 0         	 0.178126  	 21.26     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2750, cols: 55, reductionFactor: 37, colBlockingSize: 12)                 	 0.168616  	 600       	 60.8025   	 0         	 4.39174   	 13.8447   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2750, r: 55, r2: 55, leftOrthog: 1)       	 0.155456  	 600       	 64.2143   	 0         	 14.1972   	 4.52303   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 55)                                                                	 0.041986  	 100       	 3.01688   	 0         	 0.153385  	 19.6687   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0366519 	 100       	 3.1831    	 0         	 0.164794  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 55, reductionFactor: 37, colBlockingSize: 12)                 	 0.0291164 	 100       	 53.3506   	 0         	 3.86105   	 13.8176   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 250, m: 50, k: 5)  	 0.0269692 	 800       	 3.70793   	 0         	 3.32231   	 1.11607   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0251198 	 100       	 56.2171   	 0         	 4.45864   	 12.6086   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 5, Qr2: 55)       	 0.0201479 	 700       	 0         	 0         	 80.6041   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5, m: 50, k: 2500)   	 0.0185952 	 800       	 53.7773   	 0         	 47.4101   	 1.1343    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, r1_: 55, n: 50, r2: 55)          	 0.0160993 	 600       	 620.059   	 0         	 91.0923   	 6.80693   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2750, r: 50, r2: 50, leftOrthog: 1)       	 0.0140745 	 100       	 97.6942   	 0         	 23.7308   	 4.11677   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2750, cols: 5, reductionFactor: 37, colBlockingSize: 12)                  	 0.0101426 	 700       	 9.74615   	 0         	 7.60554   	 1.28145   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 55, r2: 55, leftOrthog: 1)       	 0.00897664	 100       	 168.493   	 0         	 37.3012   	 4.51708   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2750, Xcols: 5, r: 5, streamingCols: 0)                    	 0.00893141	 700       	 5.38829   	 0         	 17.2504   	 0.312358  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 5, m: 2500, k: 50)	 0.00711915	 800       	 140.466   	 0         	 123.835   	 1.1343    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 250, m: 5, k: 5)   	 0.00497442	 700       	 1.759     	 0         	 2.84254   	 0.618812  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 55, reductionFactor: 37, colBlockingSize: 12)                   	 0.00474178	 100       	 6.55188   	 0         	 0.974318  	 6.72458   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5, m: 2750)                                                                  	 0.0041859 	 700       	 0         	 0         	 36.7902   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 5, n: 50, r2left: 50, r2right: 5)                 	 0.00392207	 700       	 0         	 0         	 39.265    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2750, m: 5)                                                         	 0.0038482 	 700       	 0         	 0         	 40.0187   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, r1_: 50, n: 50, r2: 55)          	 0.00379612	 100       	 398.433   	 0         	 61.4311   	 6.48585   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 5, n: 50, r2: 5)                                                                                          	 0.00280658	 800       	 0         	 0         	 5.7009    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, r1_: 55, n: 50, r2: 50)          	 0.0024781 	 100       	 610.347   	 0         	 89.7542   	 6.8002    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 5, m: 5)                                                                   	 0.00210478	 900       	 0.0709812 	 0         	 0.273662  	 0.259375  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 5, reductionFactor: 37, colBlockingSize: 12)                  	 0.00159924	 100       	 8.02748   	 0         	 6.26549   	 1.28122   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 55, leftOrthog: 1)         	 0.00153082	 100       	 17.9642   	 0         	 6.92439   	 2.59434   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 5, r: 5, streamingCols: 0)                    	 0.00136917	 100       	 4.56481   	 0         	 14.6147   	 0.312344  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 5, Qr2: 50)       	 0.000954046	 100       	 0         	 0         	 230.597   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000891127	 100       	 0.561087  	 0         	 2.24435   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 5)                                                         	 0.000887028	 100       	 0         	 0         	 22.5472   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 5)                                                                                          	 0.000826074	 200       	 0         	 0         	 0.968436  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 5, n: 50, r2left: 50, r2right: 0)                 	 0.000819856	 100       	 0         	 0         	 24.3945   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 5, n: 50, r2: 1)                                                                                          	 0.000779631	 200       	 0         	 0         	 1.02613   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000741634	 100       	 33.7093   	 0         	 8.09024   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5, m: 2500)                                                                  	 0.000674943	 100       	 0         	 0         	 29.6321   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 5)   	 0.000597159	 100       	 4.18649   	 0         	 4.01903   	 1.04167   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000540339	 100       	 0         	 0         	 7.40276   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 5, reductionFactor: 37, colBlockingSize: 12)                    	 0.000524938	 100       	 0.489118  	 0         	 0.419097  	 1.16708   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000504389	 100       	 0         	 0         	 7.93039   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 5)                 	 0.000488933	 100       	 0         	 0         	 8.99919   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000449715	 100       	 1.11182   	 0         	 13.3418   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 5, n: 50, r2left: 1, r2right: 0)                  	 0.000444727	 100       	 0         	 0         	 0.899428  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000400281	 100       	 0.624561  	 0         	 9.99298   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 5)                                                                                 	 0.000369523	 100       	 0.0676548 	 0         	 1.08248   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.0003596 	 100       	 0.695217  	 0         	 11.1235   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5, m: 50, k: 50)     	 0.000335386	 100       	 7.4541    	 0         	 7.15593   	 1.04167   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 5)                                                           	 0.000203287	 100       	 0         	 0         	 1.96766   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 5, m: 50, k: 50)  	 0.000158756	 100       	 15.7474   	 0         	 15.1175   	 1.04167   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 5, k: 5)    	 0.000132898	 100       	 1.88114   	 0         	 3.16032   	 0.595238  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 5, m: 5, fromLeft: 1)                 	 0.000104573	 800       	 0         	 0         	 3.06006   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 250, m: 0, k: 5)   	 6.26e-06  	 100       	 0         	 0         	 159.744   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.09615   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.09611   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.961693  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.960344  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.927617  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.36567   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.239861  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.22823   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.180038  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.134347  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0396489 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.03268   	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0231151 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0216063 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0189306 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0127632 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0103006 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0072779 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00567559	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00507406	 1800      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00495262	 1300      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00493852	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00486084	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00281904	 6300      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00210478	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0011294 	 300       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00107425	 5200      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000891127	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000449715	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000104573	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22491843520384 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22491669981184 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22491468654720 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22491267328256 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22491066001792 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22490864675328 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22490663348864 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22490462022400 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22490260695936 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22490059369472 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22489858043008 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22489656716544 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22489455390080 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22489254063616 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22489052737152 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22488851410688 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22488650084224 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22488448757760 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22488247431296 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22488046104832 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22487844778368 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22487643451904 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22487442125440 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22487240798976 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22487039472512 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22486838146048 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22486636819584 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22486435493120 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22486234166656 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22486032840192 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22485831513728 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22485630187264 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22485428856704 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22485227530240 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22485026203776 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22484824877312 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22484623550848 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22484422224384 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22484220897920 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22484019571456 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22483818244992 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22483616918528 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22483415592064 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22483214265600 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22483012939136 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22482811612672 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22482610286208 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22482408959744 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22482207633280 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22482006306816 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22481804980352 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22481603653888 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22481402327424 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22481201000960 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22480999674496 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22480798348032 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22480597021568 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22480395695104 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22480194368640 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22479993042176 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22479791715712 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22479590389248 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22479389062784 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22491565119232 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22491559290624 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 56, m: 56)                                                                	 0.283393  	 700       	 4.04864   	 0         	 0.187014  	 21.6489   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2800, r: 56, r2: 56, leftOrthog: 1)       	 0.170876  	 600       	 61.6645   	 0         	 13.39     	 4.60526   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2800, cols: 56, reductionFactor: 37, colBlockingSize: 12)                 	 0.167973  	 600       	 64.4255   	 0         	 4.57033   	 14.0964   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 56)                                                                	 0.0415539 	 100       	 3.09638   	 0         	 0.156905  	 19.7342   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0354249 	 100       	 3.29335   	 0         	 0.170501  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 56, reductionFactor: 37, colBlockingSize: 12)                 	 0.0295924 	 100       	 54.4186   	 0         	 3.86953   	 14.0634   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0235591 	 100       	 61.031    	 0         	 4.83889   	 12.6126   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 6, Qr2: 56)       	 0.0186021 	 700       	 0         	 0         	 89.8911   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6, m: 50, k: 2500)   	 0.0178898 	 800       	 67.0775   	 0         	 50.1918   	 1.33642   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, r1_: 56, n: 50, r2: 56)          	 0.0151224 	 600       	 696.776   	 0         	 100.535   	 6.93069   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2800, cols: 6, reductionFactor: 37, colBlockingSize: 12)                  	 0.011308  	 700       	 12.817    	 0         	 8.33761   	 1.53725   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 56, r2: 56, leftOrthog: 1)       	 0.0103257 	 100       	 151.854   	 0         	 33.0261   	 4.598     
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2800, r: 50, r2: 50, leftOrthog: 1)       	 0.00948402	 100       	 147.617   	 0         	 35.8498   	 4.11765   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2800, Xcols: 6, r: 6, streamingCols: 0)                    	 0.00939848	 700       	 7.50759   	 0         	 20.031    	 0.374799  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 300, m: 50, k: 6)  	 0.00775036	 800       	 18.5798   	 0         	 14.1206   	 1.31579   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 6, m: 2500, k: 50)	 0.00698111	 800       	 171.892   	 0         	 128.621   	 1.33642   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 300, m: 6, k: 6)   	 0.00577442	 700       	 2.61844   	 0         	 3.52617   	 0.742574  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 56, reductionFactor: 37, colBlockingSize: 12)                   	 0.00471424	 100       	 6.83198   	 0         	 1.00733   	 6.78225   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6, m: 2800)                                                                  	 0.0044582 	 700       	 0         	 0         	 42.2054   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 6, n: 50, r2left: 50, r2right: 6)                 	 0.00422655	 700       	 0         	 0         	 44.5186   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2800, m: 6)                                                         	 0.0040782 	 700       	 0         	 0         	 46.138    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, r1_: 50, n: 50, r2: 56)          	 0.00400565	 100       	 391.447   	 0         	 59.8355   	 6.54206   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 6, n: 50, r2: 6)                                                                                          	 0.00264395	 800       	 0         	 0         	 8.71424   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, r1_: 56, n: 50, r2: 50)          	 0.00256645	 100       	 610.96    	 0         	 88.2575   	 6.92247   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 6, m: 6)                                                                   	 0.0024468 	 900       	 0.105934  	 0         	 0.335458  	 0.315789  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.00206327	 100       	 0         	 0         	 1.93867   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 6, reductionFactor: 37, colBlockingSize: 12)                  	 0.00174147	 100       	 10.6154   	 0         	 6.90726   	 1.53685   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 56, leftOrthog: 1)         	 0.00166449	 100       	 16.822    	 0         	 6.44043   	 2.61194   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 6, r: 6, streamingCols: 0)                    	 0.00135581	 100       	 6.63807   	 0         	 17.7122   	 0.374775  
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 6, Qr2: 50)       	 0.00096601	 100       	 0         	 0         	 231.882   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 6)                                                         	 0.000868334	 100       	 0         	 0         	 27.6391   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 6, n: 50, r2left: 50, r2right: 0)                 	 0.000835161	 100       	 0         	 0         	 28.737    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000825894	 100       	 0.605405  	 0         	 2.42162   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 6)                                                                                          	 0.000784399	 200       	 0         	 0         	 1.22387   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6, m: 2500)                                                                  	 0.000750003	 100       	 0         	 0         	 31.9999   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 6, n: 50, r2: 1)                                                                                          	 0.000730825	 200       	 0         	 0         	 1.31358   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000722291	 100       	 34.6121   	 0         	 8.3069    	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 6, reductionFactor: 37, colBlockingSize: 12)                    	 0.000577787	 100       	 0.639907  	 0         	 0.465223  	 1.37548   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000563245	 100       	 0         	 0         	 7.10171   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 6)                 	 0.000504581	 100       	 0         	 0         	 8.87865   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 6)   	 0.000484611	 100       	 6.19053   	 0         	 5.11751   	 1.20968   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000443073	 100       	 1.12848   	 0         	 13.5418   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 6, n: 50, r2left: 1, r2right: 0)                  	 0.000398803	 100       	 0         	 0         	 1.2036    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000390374	 100       	 0.640412  	 0         	 10.2466   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 6)                                                                                 	 0.000344887	 100       	 0.086985  	 0         	 1.39176   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000329644	 100       	 0.758394  	 0         	 12.1343   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 6, m: 50, k: 50)     	 0.000310777	 100       	 9.65322   	 0         	 7.98      	 1.20968   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 6)                                                           	 0.000235464	 100       	 0         	 0         	 2.03853   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 6, m: 50, k: 50)  	 0.000161129	 100       	 18.6186   	 0         	 15.3914   	 1.20968   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 6, m: 6, fromLeft: 1)                 	 0.000127689	 800       	 0         	 0         	 3.60877   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 6, k: 6)    	 0.000103866	 100       	 3.466     	 0         	 4.89862   	 0.707547  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 300, m: 0, k: 6)   	 5.19e-06  	 100       	 0         	 0         	 277.457   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.08679   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.08675   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.968117  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.966873  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.932826  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.360372  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.239466  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.22634   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.19235   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.118557  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0426006 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0224168 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0216313 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0182005 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0141185 	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0140931 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0107543 	 800       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00756354	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00714224	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0059651 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0052082 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.005182  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00472242	 1300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00295127	 5200      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00286527	 6300      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0024468 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010649 	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000825894	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000443073	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000127689	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22544836757376 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22544618874880 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22544417548416 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22544216221952 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22544014895488 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22543813569024 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22543612242560 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22543410916096 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22543209589632 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22543008263168 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22542806936704 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22542605610240 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22542404283776 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22542202957312 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22542001630848 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22541800304384 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22541598977920 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22541397651456 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22541196324992 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22540994998528 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22540793672064 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22540592345600 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22540391019136 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22540189692672 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22539988366208 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22539787039744 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22539585713280 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22539384386816 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22539183060352 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22538981733888 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22538780407424 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22538579080960 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22538377750400 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22538176423936 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22537975097472 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22537773771008 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22537572444544 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22537371118080 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22537169791616 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22536968465152 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22536767138688 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22536565812224 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22536364485760 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22536163159296 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22535961832832 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22535760506368 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22535559179904 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22535357853440 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22535156526976 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22534955200512 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22534753874048 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22534552547584 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22534351221120 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22534149894656 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22533948568192 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22533747241728 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22533545915264 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22533344588800 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22533143262336 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22532941935872 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22532740609408 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22532539282944 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22532337956480 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22544731096832 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22544724506368 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 57, m: 57)                                                                	 0.294568  	 700       	 4.10746   	 0         	 0.186383  	 22.0378   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2850, r: 57, r2: 57, leftOrthog: 1)       	 0.182402  	 600       	 60.918    	 0         	 12.9958   	 4.6875    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2850, cols: 57, reductionFactor: 37, colBlockingSize: 12)                 	 0.174682  	 600       	 65.3295   	 0         	 4.55316   	 14.3482   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 57)                                                                	 0.0399244 	 100       	 3.27285   	 0         	 0.165312  	 19.798    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0352622 	 100       	 3.30855   	 0         	 0.171288  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 57, reductionFactor: 37, colBlockingSize: 12)                 	 0.0309945 	 100       	 53.829    	 0         	 3.76193   	 14.3089   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0234642 	 100       	 62.3723   	 0         	 4.94371   	 12.6165   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, r1_: 57, n: 50, r2: 57)          	 0.0181172 	 600       	 613.316   	 0         	 86.9402   	 7.05446   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7, m: 50, k: 2500)   	 0.0174336 	 800       	 80.3047   	 0         	 52.4413   	 1.53133   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 7, Qr2: 57)       	 0.0170014 	 700       	 0         	 0         	 101.253   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2850, cols: 7, reductionFactor: 37, colBlockingSize: 12)                  	 0.0114385 	 700       	 17.5542   	 0         	 9.79098   	 1.79289   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 57, r2: 57, leftOrthog: 1)       	 0.0104921 	 100       	 154.831   	 0         	 33.0915   	 4.67888   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2850, Xcols: 7, r: 7, streamingCols: 0)                    	 0.0101287 	 700       	 9.65124   	 0         	 22.0735   	 0.437232  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2850, r: 50, r2: 50, leftOrthog: 1)       	 0.0100082 	 100       	 142.383   	 0         	 34.5715   	 4.1185    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 350, m: 50, k: 7)  	 0.00805721	 800       	 24.326    	 0         	 16.1247   	 1.50862   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 7, m: 2500, k: 50)	 0.0072776 	 800       	 192.371   	 0         	 125.624   	 1.53133   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 350, m: 7, k: 7)   	 0.00685256	 700       	 3.5038    	 0         	 4.04439   	 0.866337  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7, m: 2850)                                                                  	 0.00501605	 700       	 0         	 0         	 44.545    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 57, reductionFactor: 37, colBlockingSize: 12)                   	 0.00479447	 100       	 6.9597    	 0         	 1.01767   	 6.83885   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, r1_: 50, n: 50, r2: 57)          	 0.00455789	 100       	 356.415   	 0         	 54.025    	 6.59722   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 7, n: 50, r2left: 50, r2right: 7)                 	 0.00443701	 700       	 0         	 0         	 50.3583   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2850, m: 7)                                                         	 0.00430329	 700       	 0         	 0         	 51.9231   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, r1_: 57, n: 50, r2: 50)          	 0.00278542	 100       	 583.215   	 0         	 82.7879   	 7.04469   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 7, n: 50, r2: 7)                                                                                          	 0.00278437	 800       	 0         	 0         	 11.2629   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 7, m: 7)                                                                   	 0.00271789	 900       	 0.150999  	 0         	 0.407963  	 0.37013   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 7, reductionFactor: 37, colBlockingSize: 12)                  	 0.00175445	 100       	 14.3419   	 0         	 8.00206   	 1.79228   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 57, leftOrthog: 1)         	 0.00148511	 100       	 19.1905   	 0         	 7.29912   	 2.62915   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 7, r: 7, streamingCols: 0)                    	 0.00146054	 100       	 8.38729   	 0         	 19.1844   	 0.437194  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000914183	 100       	 0.546936  	 0         	 2.18775   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 7, Qr2: 50)       	 0.000876593	 100       	 0         	 0         	 260.098   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 7)                                                                                          	 0.000808133	 200       	 0         	 0         	 1.38591   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 7, n: 50, r2left: 50, r2right: 0)                 	 0.000799266	 100       	 0         	 0         	 35.0321   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000770195	 100       	 32.4593   	 0         	 7.79023   	 4.16667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 7)                                                         	 0.000762008	 100       	 0         	 0         	 36.745    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 7, n: 50, r2: 1)                                                                                          	 0.00075173	 200       	 0         	 0         	 1.4899    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7, m: 2500)                                                                  	 0.000714058	 100       	 0         	 0         	 39.2125   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 7, reductionFactor: 37, colBlockingSize: 12)                    	 0.000577643	 100       	 0.871201  	 0         	 0.55259   	 1.57658   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000506423	 100       	 0         	 0         	 7.89854   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 7)                 	 0.000462033	 100       	 0         	 0         	 9.86942   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000450145	 100       	 0         	 0         	 8.88603   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000434634	 100       	 1.15039   	 0         	 13.8047   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 7, n: 50, r2left: 1, r2right: 0)                  	 0.000406957	 100       	 0         	 0         	 1.37607   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 7)   	 0.000394863	 100       	 8.86383   	 0         	 6.48326   	 1.36719   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.00038965	 100       	 0.641601  	 0         	 10.2656   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 7, m: 50, k: 50)     	 0.00036761	 100       	 9.52096   	 0         	 6.9639    	 1.36719   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 7)                                                                                 	 0.000363875	 100       	 0.0961869 	 0         	 1.53899   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000338243	 100       	 0.739114  	 0         	 11.8258   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 7)                                                           	 0.000217634	 100       	 0         	 0         	 2.57313   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 7, m: 50, k: 50)  	 0.000157824	 100       	 22.1766   	 0         	 16.2206   	 1.36719   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 7, m: 7, fromLeft: 1)                 	 0.000131113	 800       	 0         	 0         	 4.78366   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 7, k: 7)    	 6.7423e-05	 100       	 7.26755   	 0         	 8.88717   	 0.817757  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 350, m: 0, k: 7)   	 5.82e-06  	 100       	 0         	 0         	 336.77    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.10968   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.10963   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 0.993096  	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 0.991749  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.953035  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.369755  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.247706  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.234527  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.204388  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.116462  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0444985 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0262307 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0183281 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0178012 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0153779 	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0142469 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0115893 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00743543	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00610526	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00573011	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00528293	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00485066	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00470029	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00319873	 6300      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00271789	 900       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00112665	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109177	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000914183	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000434634	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000131113	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23082507667328 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23082295093248 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23082093766784 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23081892440320 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23081691113856 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23081489787392 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23081288460928 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23081087134464 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23080885808000 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23080684481536 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23080483155072 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23080281828608 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23080080502144 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23079879175680 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23079677849216 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23079476522752 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23079275196288 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23079073869824 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23078872543360 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23078671216896 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23078469890432 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23078268563968 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23078067237504 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23077865911040 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23077664584576 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23077463258112 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23077261931648 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23077060605184 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23076859278720 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23076657952256 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23076456625792 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23076255299328 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23076053968768 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23075852642304 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23075651315840 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23075449989376 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23075248662912 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23075047336448 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23074846009984 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23074644683520 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23074443357056 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23074242030592 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23074040704128 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23073839377664 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23073638051200 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23073436724736 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23073235398272 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23073034071808 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23072832745344 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23072631418880 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23072430092416 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23072228765952 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23072027439488 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23071826113024 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23071624786560 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23071423460096 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23071222133632 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23071020807168 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23070819480704 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23070618154240 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23070416827776 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23070215501312 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23070014174848 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23082402006784 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23082395416320 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 58, m: 58)                                                                	 0.314519  	 700       	 4.05295   	 0         	 0.18072   	 22.4267   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2900, r: 58, r2: 58, leftOrthog: 1)       	 0.207201  	 600       	 56.4993   	 0         	 11.8454   	 4.76974   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2900, cols: 58, reductionFactor: 37, colBlockingSize: 12)                 	 0.186709  	 600       	 64.3948   	 0         	 4.41064   	 14.5999   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 58)                                                                	 0.042883  	 100       	 3.09369   	 0         	 0.155773  	 19.8603   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0358775 	 100       	 3.2518    	 0         	 0.16835   	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 58, reductionFactor: 37, colBlockingSize: 12)                 	 0.0339111 	 100       	 50.9408   	 0         	 3.50007   	 14.5542   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0246827 	 100       	 60.3334   	 0         	 4.78068   	 12.6202   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 8, Qr2: 58)       	 0.0193826 	 700       	 0         	 0         	 91.4141   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, r1_: 58, n: 50, r2: 58)          	 0.017695  	 600       	 661.582   	 0         	 92.1652   	 7.17822   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 8, m: 50, k: 2500)   	 0.0174369 	 800       	 91.7593   	 0         	 53.3672   	 1.71939   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2900, cols: 8, reductionFactor: 37, colBlockingSize: 12)                  	 0.0131158 	 700       	 20.3466   	 0         	 9.93291   	 2.0484    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2900, Xcols: 8, r: 8, streamingCols: 0)                    	 0.0121763 	 700       	 10.6699   	 0         	 21.3545   	 0.499655  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2900, r: 50, r2: 50, leftOrthog: 1)       	 0.011646  	 100       	 124.507   	 0         	 30.2251   	 4.11932   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 58, r2: 58, leftOrthog: 1)       	 0.0095144 	 100       	 176.785   	 0         	 37.1419   	 4.75972   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 400, m: 50, k: 8)  	 0.00864696	 800       	 29.6058   	 0         	 17.4674   	 1.69492   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 400, m: 8, k: 8)   	 0.00795225	 700       	 4.5069    	 0         	 4.55197   	 0.990099  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 8, m: 2500, k: 50)	 0.00773247	 800       	 206.92    	 0         	 120.344   	 1.71939   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 8, m: 2900)                                                                  	 0.00601339	 700       	 0         	 0         	 43.2103   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 8, n: 50, r2left: 50, r2right: 8)                 	 0.00502358	 700       	 0         	 0         	 51.7241   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2900, m: 8)                                                         	 0.00484028	 700       	 0         	 0         	 53.6829   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 58, reductionFactor: 37, colBlockingSize: 12)                   	 0.00477051	 100       	 7.24224   	 0         	 1.05045   	 6.89439   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, r1_: 50, n: 50, r2: 58)          	 0.00413286	 100       	 406.982   	 0         	 61.1877   	 6.65138   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 8, m: 8)                                                                   	 0.00340594	 900       	 0.180215  	 0         	 0.422791  	 0.42625   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 8, n: 50, r2: 8)                                                                                          	 0.00302368	 800       	 0         	 0         	 13.5464   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, r1_: 58, n: 50, r2: 50)          	 0.00294863	 100       	 570.435   	 0         	 79.5934   	 7.16686   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 8, reductionFactor: 37, colBlockingSize: 12)                  	 0.00200743	 100       	 16.3716   	 0         	 7.9959    	 2.0475    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 8, r: 8, streamingCols: 0)                    	 0.00170968	 100       	 9.35849   	 0         	 18.732    	 0.4996    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 58, leftOrthog: 1)         	 0.00150168	 100       	 19.3117   	 0         	 7.29848   	 2.64599   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 8, n: 50, r2left: 50, r2right: 0)                 	 0.000986275	 100       	 0         	 0         	 32.4453   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 8)                                                         	 0.000963128	 100       	 0         	 0         	 33.2251   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000912838	 100       	 0.547742  	 0         	 2.19097   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 8, m: 2500)                                                                  	 0.000905683	 100       	 0         	 0         	 35.3325   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 8, Qr2: 50)       	 0.000870175	 100       	 0         	 0         	 266.613   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 8)                                                                                          	 0.000857387	 200       	 0         	 0         	 1.49291   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000752555	 100       	 33.2202   	 0         	 7.97284   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 8, n: 50, r2: 1)                                                                                          	 0.000720367	 200       	 0         	 0         	 1.77687   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 8, reductionFactor: 37, colBlockingSize: 12)                    	 0.000719879	 100       	 0.913066  	 0         	 0.515642  	 1.77074   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000563185	 100       	 0         	 0         	 7.10246   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 8)                 	 0.000521409	 100       	 0         	 0         	 8.89896   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000460583	 100       	 0         	 0         	 8.68465   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.00044341	 100       	 1.12762   	 0         	 13.5315   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 8, n: 50, r2left: 1, r2right: 0)                  	 0.000427945	 100       	 0         	 0         	 1.49552   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.000400072	 100       	 0.624888  	 0         	 9.9982    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 8)                                                                                 	 0.000356067	 100       	 0.112338  	 0         	 1.79741   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000353542	 100       	 0.70713   	 0         	 11.3141   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 8)   	 0.000319313	 100       	 12.5269   	 0         	 8.26775   	 1.51515   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 8)                                                           	 0.000304789	 100       	 0         	 0         	 2.09981   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 8, m: 50, k: 50)     	 0.000277706	 100       	 14.4037   	 0         	 9.50646   	 1.51515   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 8, m: 8, fromLeft: 1)                 	 0.000145694	 800       	 0         	 0         	 5.62274   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 8, m: 50, k: 50)  	 0.000143245	 100       	 27.9242   	 0         	 18.43     	 1.51515   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 8, k: 8)    	 8.5333e-05	 100       	 7.50003   	 0         	 8.10003   	 0.925926  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 400, m: 0, k: 8)   	 5.6e-06   	 100       	 0         	 0         	 457.143   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.20467   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.20463   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.07364   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.07227   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.03352   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.39328   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.265917  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.250708  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.229863  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.130919  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0519377 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0255291 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0207133 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0177146 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0170095 	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0163095 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.013886  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00787572	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00695921	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00691907	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00610819	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00516462	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00513195	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00340594	 900       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00336026	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0011653 	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110968	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000912838	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00044341	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000145694	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23038715148160 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23038540113920 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23038338787456 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23038137460992 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23037936134528 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23037734808064 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23037533481600 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23037332155136 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23037130828672 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23036929502208 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23036728175744 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23036526849280 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23036325522816 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23036124196352 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23035922869888 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23035721543424 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23035520216960 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23035318890496 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23035117564032 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23034916237568 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23034714911104 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23034513584640 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23034312258176 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23034110931712 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23033909605248 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23033708278784 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23033506952320 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23033305625856 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23033104299392 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23032902972928 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23032701646464 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23032500320000 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23032298989440 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23032097662976 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23031896336512 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23031695010048 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23031493683584 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23031292357120 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23031091030656 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23030889704192 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23030688377728 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23030487051264 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23030285724800 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23030084398336 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23029883071872 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23029681745408 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23029480418944 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23029279092480 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23029077766016 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23028876439552 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23028675113088 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23028473786624 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23028272460160 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23028071133696 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23027869807232 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23027668480768 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23027467154304 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23027265827840 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23027064501376 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23026863174912 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23026661848448 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23026460521984 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23026259195520 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23038609487616 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23038430942976 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                     	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 59, m: 59)                                                                	 0.307139  	 700       	 4.36874   	 0         	 0.191481  	 22.8155   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2950, cols: 59, reductionFactor: 37, colBlockingSize: 12)                 	 0.186806  	 600       	 67.7482   	 0         	 4.56167   	 14.8516   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2950, r: 59, r2: 59, leftOrthog: 1)       	 0.147083  	 600       	 83.7807   	 0         	 17.2673   	 4.85197   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 59)                                                                	 0.0391564 	 100       	 3.4392    	 0         	 0.172641  	 19.9211   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                	 0.0336961 	 100       	 3.46232   	 0         	 0.179249  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 59, reductionFactor: 37, colBlockingSize: 12)                 	 0.0328003 	 100       	 54.4976   	 0         	 3.68243   	 14.7994   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                 	 0.0228032 	 100       	 66.432    	 0         	 5.26241   	 12.6239   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 9, Qr2: 59)       	 0.0201239 	 700       	 0         	 0         	 90.6066   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, r1_: 59, n: 50, r2: 59)          	 0.0186757 	 600       	 659.828   	 0         	 90.3629   	 7.30198   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 9, m: 50, k: 2500)   	 0.0176899 	 800       	 101.753   	 0         	 53.5264   	 1.90098   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2950, cols: 9, reductionFactor: 37, colBlockingSize: 12)                  	 0.0145034 	 700       	 23.6891   	 0         	 10.2827   	 2.30378   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 59, r2: 59, leftOrthog: 1)       	 0.0137749 	 100       	 126.353   	 0         	 26.1033   	 4.84051   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2950, Xcols: 9, r: 9, streamingCols: 0)                    	 0.0126173 	 700       	 13.2568   	 0         	 23.5855   	 0.562071  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2950, r: 50, r2: 50, leftOrthog: 1)       	 0.0111722 	 100       	 132.024   	 0         	 32.0437   	 4.12011   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 450, m: 9, k: 9)   	 0.00949781	 700       	 5.37281   	 0         	 4.82359   	 1.11386   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 450, m: 50, k: 9)  	 0.00911318	 800       	 35.5529   	 0         	 18.9615   	 1.875     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 9, m: 2500, k: 50)	 0.00868182	 800       	 207.33    	 0         	 109.065   	 1.90098   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 9, n: 50, r2left: 50, r2right: 9)                 	 0.00672294	 700       	 0         	 0         	 44.2307   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 9, m: 2950)                                                                  	 0.00653745	 700       	 0         	 0         	 45.4857   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 59, reductionFactor: 37, colBlockingSize: 12)                   	 0.00557024	 100       	 6.41819   	 0         	 0.923624  	 6.94892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2950, m: 9)                                                         	 0.00473576	 700       	 0         	 0         	 62.7903   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, r1_: 50, n: 50, r2: 59)          	 0.00402424	 100       	 432.504   	 0         	 64.509    	 6.70455   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 9, m: 9)                                                                   	 0.00342173	 900       	 0.25566   	 0         	 0.530258  	 0.482143  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 9, n: 50, r2: 9)                                                                                          	 0.00296333	 800       	 0         	 0         	 17.4939   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, r1_: 59, n: 50, r2: 50)          	 0.00294677	 100       	 590.646   	 0         	 81.0326   	 7.28899   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 9, reductionFactor: 37, colBlockingSize: 12)                  	 0.00242888	 100       	 17.125    	 0         	 7.43751   	 2.30252   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 9, r: 9, streamingCols: 0)                    	 0.00177688	 100       	 11.3964   	 0         	 20.2784   	 0.561994  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 59, leftOrthog: 1)         	 0.00153655	 100       	 19.1989   	 0         	 7.21097   	 2.66245   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000899681	 100       	 0.555753  	 0         	 2.22301   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 9, Qr2: 50)       	 0.000865038	 100       	 0         	 0         	 272.82    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 9)                                                                                          	 0.000848529	 200       	 0         	 0         	 1.69705   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 9, n: 50, r2left: 50, r2right: 0)                 	 0.000814218	 100       	 0         	 0         	 44.2142   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 9, m: 2500)                                                                  	 0.000787506	 100       	 0         	 0         	 45.7139   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)           	 0.000748044	 100       	 33.4205   	 0         	 8.02092   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 9, n: 50, r2: 1)                                                                                          	 0.000710406	 200       	 0         	 0         	 2.02701   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 9)                                                         	 0.000696353	 100       	 0         	 0         	 51.6979   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 9, reductionFactor: 37, colBlockingSize: 12)                    	 0.000663955	 100       	 1.25293   	 0         	 0.639802  	 1.95831   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                         	 0.000525877	 100       	 0         	 0         	 7.60634   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 9)                 	 0.000497909	 100       	 0         	 0         	 9.47964   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                           	 0.000446245	 100       	 1.12046   	 0         	 13.4455   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)         	 0.000441515	 100       	 0         	 0         	 9.05971   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 9, m: 50, k: 50)     	 0.000435893	 100       	 10.3236   	 0         	 6.24006   	 1.65441   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 9, n: 50, r2left: 1, r2right: 0)                  	 0.000408946	 100       	 0         	 0         	 1.76062   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                	 0.00039884	 100       	 0.626818  	 0         	 10.0291   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                	 0.000379207	 100       	 0.659271  	 0         	 10.5483   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 9)                                                                                 	 0.000361785	 100       	 0.124383  	 0         	 1.99013   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 9)                                                           	 0.000346494	 100       	 0         	 0         	 2.07796   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 9)   	 0.000300975	 100       	 14.9514   	 0         	 9.0373    	 1.65441   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 9, m: 50, k: 50)  	 0.00024358	 100       	 18.4744   	 0         	 11.1668   	 1.65441   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 9, m: 9, fromLeft: 1)                 	 0.000136638	 800       	 0         	 0         	 7.58793   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 9, k: 9)    	 7.8913e-05	 100       	 10.2645   	 0         	 9.94513   	 1.03211   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 450, m: 0, k: 9)   	 5.58e-06  	 100       	 0         	 0         	 580.645   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.14286   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.14282   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.00466   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.00329   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 0.966747  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.379991  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.265576  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.248541  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.173567  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.1381    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0538256 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0263947 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0214305 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0189965 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0181258 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0180512 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0143942 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0089254 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00844401	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00732495	 800       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00650274	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00577861	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00504814	 1300      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00342173	 900       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00264891	 6300      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113983	 300       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00108591	 5200      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000899681	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000446245	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000136638	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23041900869504 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23041694230528 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23041492904064 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23041291577600 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23041090251136 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23040888924672 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23040687598208 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23040486271744 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23040284945280 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23040083618816 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23039882292352 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23039680965888 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23039479639424 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23039278312960 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23039076986496 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23038875660032 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23038674333568 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23038473007104 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23038271680640 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23038070354176 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23037869027712 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23037667701248 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23037466374784 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23037265048320 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23037063721856 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23036862395392 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23036661068928 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23036459742464 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23036258416000 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23036057089536 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23035855763072 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23035654436608 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23035453106048 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23035251779584 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23035050453120 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23034849126656 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23034647800192 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23034446473728 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23034245147264 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23034043820800 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23033842494336 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23033641167872 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23033439841408 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23033238514944 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23033037188480 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23032835862016 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23032634535552 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23032433209088 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23032231882624 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23032030556160 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23031829229696 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23031627903232 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23031426576768 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23031225250304 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23031023923840 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23030822597376 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23030621270912 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23030419944448 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23030218617984 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23030017291520 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23029815965056 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23029614638592 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23029413312128 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23041795208960 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23041788618496 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 60, m: 60)                                                                 	 0.317308  	 700       	 4.44742   	 0         	 0.191662  	 23.2044   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.198113  	 600       	 67.1853   	 0         	 4.44837   	 15.1033   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3000, r: 60, r2: 60, leftOrthog: 1)        	 0.169477  	 600       	 76.4705   	 0         	 15.498    	 4.93421   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.0392959 	 100       	 47.0443   	 0         	 3.12704   	 15.0443   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 60)                                                                 	 0.0387746 	 100       	 3.52465   	 0         	 0.176404  	 19.9805   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0367286 	 100       	 3.17645   	 0         	 0.16445   	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0234879 	 100       	 65.5887   	 0         	 5.19417   	 12.6274   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 10, Qr2: 60)       	 0.0208764 	 700       	 0         	 0         	 89.8622   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, r1_: 60, n: 50, r2: 60)           	 0.0186717 	 600       	 694.098   	 0         	 93.4718   	 7.42574   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 50, k: 2500)   	 0.018412  	 800       	 108.625   	 0         	 52.3137   	 2.07641   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3000, cols: 10, reductionFactor: 37, colBlockingSize: 12)                  	 0.0163295 	 700       	 26.4155   	 0         	 10.3224   	 2.55904   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3000, Xcols: 10, r: 10, streamingCols: 0)                   	 0.0142457 	 700       	 14.7412   	 0         	 23.6056   	 0.62448   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3000, r: 50, r2: 50, leftOrthog: 1)        	 0.0124683 	 100       	 120.305   	 0         	 29.194    	 4.12088   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 500, m: 10, k: 10)  	 0.0111515 	 700       	 6.2772    	 0         	 5.07197   	 1.23762   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 60, r2: 60, leftOrthog: 1)        	 0.00942681	 100       	 190.945   	 0         	 38.8      	 4.92126   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 10, m: 2500, k: 50)	 0.00918174	 800       	 217.824   	 0         	 104.904   	 2.07641   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 500, m: 50, k: 10)  	 0.00789749	 800       	 50.649    	 0         	 24.7167   	 2.04918   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 3000)                                                                  	 0.00645658	 700       	 0         	 0         	 52.04     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2left: 50, r2right: 10)                	 0.00549292	 700       	 0         	 0         	 61.1696   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 60, reductionFactor: 37, colBlockingSize: 12)                    	 0.0052428 	 100       	 7.05215   	 0         	 1.0071    	 7.00246   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3000, m: 10)                                                         	 0.00469647	 700       	 0         	 0         	 71.5432   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, r1_: 50, n: 50, r2: 60)           	 0.00442304	 100       	 406.96    	 0         	 60.23     	 6.75676   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 10, m: 10)                                                                  	 0.00375622	 900       	 0.319151  	 0         	 0.594214  	 0.537097  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 10)                                                                                         	 0.00304726	 800       	 0         	 0         	 21.0024   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, r1_: 60, n: 50, r2: 50)           	 0.0028055 	 100       	 641.597   	 0         	 86.5728   	 7.41107   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 10, reductionFactor: 37, colBlockingSize: 12)                  	 0.0026345 	 100       	 19.4918   	 0         	 7.62193   	 2.55734   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 10, r: 10, streamingCols: 0)                   	 0.001897  	 100       	 13.1787   	 0         	 21.107    	 0.624376  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 60, leftOrthog: 1)          	 0.00157124	 100       	 19.0933   	 0         	 7.12815   	 2.67857   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 10, Qr2: 50)       	 0.00101606	 100       	 0         	 0         	 236.206   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 2500)                                                                  	 0.000889386	 100       	 0         	 0         	 44.9748   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2left: 50, r2right: 0)                 	 0.000872397	 100       	 0         	 0         	 45.8507   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 10, reductionFactor: 37, colBlockingSize: 12)                    	 0.00087109	 100       	 1.17901   	 0         	 0.551034  	 2.13964   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                                          	 0.000819464	 200       	 0         	 0         	 1.9525    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 10)                                                         	 0.00081692	 100       	 0         	 0         	 48.9644   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000804778	 100       	 0.621289  	 0         	 2.48516   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000799071	 100       	 31.2863   	 0         	 7.50872   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                                          	 0.000700007	 200       	 0         	 0         	 2.28569   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000562365	 100       	 0         	 0         	 7.11282   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 10)                 	 0.000467573	 100       	 0         	 0         	 10.2658   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000449244	 100       	 0         	 0         	 8.90385   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 10, m: 50, k: 50)     	 0.000432297	 100       	 11.5661   	 0         	 6.47703   	 1.78571   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2left: 1, r2right: 0)                  	 0.000407311	 100       	 0         	 0         	 1.9641    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000406667	 100       	 1.22951   	 0         	 14.7541   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000390243	 100       	 0.640626  	 0         	 10.25     	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                                 	 0.000346431	 100       	 0.144329  	 0         	 2.30926   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000338909	 100       	 0.737661  	 0         	 11.8026   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 10)                                                           	 0.000323683	 100       	 0         	 0         	 2.47155   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 10)   	 0.000313287	 100       	 15.9598   	 0         	 8.93749   	 1.78571   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 10, m: 50, k: 50)  	 0.000232307	 100       	 21.5232   	 0         	 12.053    	 1.78571   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 10, m: 10, fromLeft: 1)                	 0.000138052	 800       	 0         	 0         	 9.27187   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 10, k: 10)   	 9.5856e-05	 100       	 10.4323   	 0         	 9.18044   	 1.13636   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 500, m: 0, k: 10)   	 5.551e-06 	 100       	 0         	 0         	 720.591   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.20379   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.20375   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.06035   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.0591    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.02003   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.392811  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.285975  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.266761  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.192943  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.143315  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.058374  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0266993 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0223417 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0202811 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0194637 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0188443 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0161428 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00941405	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00734596	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0072402 	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00671865	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00583707	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0051291 	 1300      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00375622	 900       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0027964 	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00111477	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107558	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000804778	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000406667	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000138052	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23053147703168 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23052968519680 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23052767193216 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23052565866752 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23052364540288 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23052163213824 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23051961887360 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23051760560896 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23051559234432 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23051357907968 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23051156581504 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23050955255040 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23050753928576 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23050552602112 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23050351275648 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23050149949184 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23049948622720 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23049747296256 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23049545969792 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23049344643328 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23049143316864 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23048941990400 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23048740663936 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23048539337472 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23048338011008 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23048136684544 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23047935358080 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23047734031616 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23047532705152 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23047331378688 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23047130052224 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23046928725760 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23046727395200 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23046526068736 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23046324742272 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23046123415808 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23045922089344 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23045720762880 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23045519436416 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23045318109952 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23045116783488 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23044915457024 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23044714130560 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23044512804096 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23044311477632 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23044110151168 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23043908824704 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23043707498240 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23043506171776 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23043304845312 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23043103518848 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23042902192384 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23042700865920 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23042499539456 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23042298212992 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23042096886528 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23041895560064 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23041694233600 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23041492907136 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23041291580672 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23041090254208 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23040888927744 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23040687601280 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23053042042624 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23052863457024 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 61, m: 61)                                                                 	 0.334283  	 700       	 4.43619   	 0         	 0.188028  	 23.5933   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3050, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.205786  	 600       	 67.9682   	 0         	 4.42644   	 15.3551   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3050, r: 61, r2: 61, leftOrthog: 1)        	 0.163962  	 600       	 83.061    	 0         	 16.5577   	 5.01645   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 61)                                                                 	 0.0403621 	 100       	 3.43557   	 0         	 0.171448  	 20.0385   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.0367581 	 100       	 51.9826   	 0         	 3.39998   	 15.2891   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0360031 	 100       	 3.24046   	 0         	 0.167763  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0238432 	 100       	 65.6881   	 0         	 5.20064   	 12.6308   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 11, Qr2: 61)       	 0.0234081 	 700       	 0         	 0         	 82.4399   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, r1_: 61, n: 50, r2: 61)           	 0.0210275 	 600       	 647.671   	 0         	 85.7898   	 7.5495    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 11, m: 50, k: 2500)   	 0.0188857 	 800       	 116.49    	 0         	 51.8656   	 2.246     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3050, cols: 11, reductionFactor: 37, colBlockingSize: 12)                  	 0.018106  	 700       	 29.3071   	 0         	 10.4141   	 2.81417   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3050, Xcols: 11, r: 11, streamingCols: 0)                   	 0.0153768 	 700       	 16.8003   	 0         	 24.4588   	 0.686881  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 61, r2: 61, leftOrthog: 1)        	 0.0123117 	 100       	 151.116   	 0         	 30.2114   	 5.00197   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3050, r: 50, r2: 50, leftOrthog: 1)        	 0.0105067 	 100       	 145.145   	 0         	 35.2155   	 4.12162   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 550, m: 50, k: 11)  	 0.0100263 	 800       	 48.2732   	 0         	 21.7668   	 2.21774   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 11, m: 2500, k: 50)	 0.00925473	 800       	 237.716   	 0         	 105.84    	 2.246     
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 11, m: 3050)                                                                  	 0.00738401	 700       	 0         	 0         	 50.8883   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 11, n: 50, r2left: 50, r2right: 11)                	 0.00607062	 700       	 0         	 0         	 61.8981   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 550, m: 11, k: 11)  	 0.00578382	 700       	 16.1087   	 0         	 11.8326   	 1.36139   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 61, reductionFactor: 37, colBlockingSize: 12)                    	 0.00559928	 100       	 6.82511   	 0         	 0.96741   	 7.05503   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3050, m: 11)                                                         	 0.00519966	 700       	 0         	 0         	 72.2662   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, r1_: 50, n: 50, r2: 61)           	 0.00473996	 100       	 392.514   	 0         	 57.6544   	 6.80804   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 11, m: 11)                                                                  	 0.00449392	 900       	 0.35528   	 0         	 0.59921   	 0.592914  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 11, n: 50, r2: 11)                                                                                         	 0.00326712	 800       	 0         	 0         	 23.7028   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, r1_: 61, n: 50, r2: 50)           	 0.00309739	 100       	 600.667   	 0         	 79.737    	 7.5331    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 11, reductionFactor: 37, colBlockingSize: 12)                  	 0.00294353	 100       	 21.1091   	 0         	 7.50692   	 2.81195   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 11, r: 11, streamingCols: 0)                   	 0.00210586	 100       	 14.3647   	 0         	 20.9171   	 0.686745  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 61, leftOrthog: 1)          	 0.0016095 	 100       	 18.9499   	 0         	 7.03322   	 2.69435   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 11, m: 2500)                                                                  	 0.000924048	 100       	 0         	 0         	 47.6166   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 11)                                                         	 0.000903744	 100       	 0         	 0         	 48.6864   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 11, Qr2: 50)       	 0.000895626	 100       	 0         	 0         	 272.435   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000872431	 100       	 0.573111  	 0         	 2.29244   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 11)                                                                                          	 0.000833654	 200       	 0         	 0         	 2.11119   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 11, n: 50, r2left: 50, r2right: 0)                 	 0.000826689	 100       	 0         	 0         	 53.2244   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 11, n: 50, r2: 1)                                                                                          	 0.000739856	 200       	 0         	 0         	 2.37884   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000726533	 100       	 34.41     	 0         	 8.2584    	 4.16667   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 11, reductionFactor: 37, colBlockingSize: 12)                    	 0.000684502	 100       	 1.81548   	 0         	 0.78422   	 2.31502   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000537328	 100       	 0         	 0         	 7.44424   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 11)                 	 0.000515623	 100       	 0         	 0         	 9.46428   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 11, m: 50, k: 50)     	 0.000469688	 100       	 11.7099   	 0         	 6.13173   	 1.90972   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000454281	 100       	 1.10064   	 0         	 13.2077   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000449084	 100       	 0         	 0         	 8.90702   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000414995	 100       	 0.602417  	 0         	 9.63867   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 11, n: 50, r2left: 1, r2right: 0)                  	 0.000405439	 100       	 0         	 0         	 2.17049   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 11)                                                                                 	 0.000373436	 100       	 0.147281  	 0         	 2.35649   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 11)   	 0.000355793	 100       	 15.4584   	 0         	 8.09459   	 1.90972   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000336009	 100       	 0.744028  	 0         	 11.9044   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 11)                                                           	 0.000305458	 100       	 0         	 0         	 2.88092   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 11, m: 50, k: 50)  	 0.000279895	 100       	 19.6502   	 0         	 10.2896   	 1.90972   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 11, m: 11, fromLeft: 1)                	 0.000182665	 800       	 0         	 0         	 8.47891   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 11, k: 11)   	 0.000103022	 100       	 11.7451   	 0         	 9.48147   	 1.23874   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 550, m: 0, k: 11)   	 5.8e-06   	 100       	 0         	 0         	 834.483   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.24634   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.2463    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.09699   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.09569   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.05274   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.410648  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.293721  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.272607  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.18839   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.14924   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0641746 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0295913 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0247528 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0221876 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0193554 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0174827 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0162747 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00953462	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00830806	 800       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00802099	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00781837	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00640886	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00537796	 1300      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00449392	 900       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00288299	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00143803	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112444	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000872431	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000454281	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000182665	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22509127198592 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22508916959232 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22508715632768 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22508514306304 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22508312979840 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22508111653376 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22507910326912 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22507709000448 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22507507673984 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22507306347520 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22507105021056 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22506903694592 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22506702368128 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22506501041664 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22506299715200 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22506098388736 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22505897062272 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22505695735808 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22505494409344 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22505293082880 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22505091756416 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22504890429952 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22504689103488 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22504487777024 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22504286450560 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22504085124096 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22503883797632 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22503682471168 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22503481144704 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22503279818240 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22503078491776 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22502877165312 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22502675834752 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22502474508288 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22502273181824 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22502071855360 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22501870528896 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22501669202432 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22501467875968 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22501266549504 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22501065223040 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22500863896576 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22500662570112 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22500461243648 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22500259917184 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22500058590720 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22499857264256 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22499655937792 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22499454611328 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22499253284864 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22499051958400 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22498850631936 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22498649305472 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22498447979008 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22498246652544 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22498045326080 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22497843999616 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22497642673152 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22497441346688 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22497240020224 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22497038693760 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22496837367296 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22496636040832 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22509021538048 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22509014947584 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 62, m: 62)                                                                 	 0.347134  	 700       	 4.48553   	 0         	 0.187036  	 23.9822   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3100, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.207909  	 600       	 70.6373   	 0         	 4.52606   	 15.6068   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3100, r: 62, r2: 62, leftOrthog: 1)        	 0.174826  	 600       	 81.7937   	 0         	 16.0421   	 5.09868   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 62)                                                                 	 0.0384226 	 100       	 3.66104   	 0         	 0.182184  	 20.0952   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.0364108 	 100       	 54.2133   	 0         	 3.49005   	 15.5337   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0340829 	 100       	 3.42303   	 0         	 0.177215  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 12, Qr2: 62)       	 0.0242412 	 700       	 0         	 0         	 81.8705   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0235771 	 100       	 67.5186   	 0         	 5.34417   	 12.6341   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, r1_: 62, n: 50, r2: 62)           	 0.0204983 	 600       	 697.604   	 0         	 90.9136   	 7.67327   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3100, cols: 12, reductionFactor: 37, colBlockingSize: 12)                  	 0.019313  	 700       	 33.2341   	 0         	 10.8282   	 3.0692    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 12, m: 50, k: 2500)   	 0.0191515 	 800       	 125.317   	 0         	 51.9981   	 2.41003   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3100, Xcols: 12, r: 12, streamingCols: 0)                   	 0.0163865 	 700       	 19.0694   	 0         	 25.4504   	 0.749275  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 600, m: 50, k: 12)  	 0.0108811 	 800       	 52.9359   	 0         	 22.2331   	 2.38095   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 62, r2: 62, leftOrthog: 1)        	 0.0101432 	 100       	 189.486   	 0         	 37.2811   	 5.08263   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3100, r: 50, r2: 50, leftOrthog: 1)        	 0.00932524	 100       	 166.216   	 0         	 40.3207   	 4.12234   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 12, m: 2500, k: 50)	 0.00916365	 800       	 261.904   	 0         	 108.673   	 2.41003   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 12, m: 3100)                                                                  	 0.00778689	 700       	 0         	 0         	 53.5053   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 12, n: 50, r2left: 50, r2right: 12)                	 0.00653924	 700       	 0         	 0         	 63.7139   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 600, m: 12, k: 12)  	 0.00624821	 700       	 19.3592   	 0         	 13.0352   	 1.48515   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 62, reductionFactor: 37, colBlockingSize: 12)                    	 0.00601466	 100       	 6.56378   	 0         	 0.923609  	 7.10666   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3100, m: 12)                                                         	 0.00553566	 700       	 0         	 0         	 75.2647   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 12, m: 12)                                                                  	 0.00495479	 900       	 0.418504  	 0         	 0.645193  	 0.648649  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, r1_: 50, n: 50, r2: 62)           	 0.0047836 	 100       	 401.789   	 0         	 58.5834   	 6.85841   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, r1_: 62, n: 50, r2: 50)           	 0.0032264 	 100       	 595.711   	 0         	 77.8191   	 7.65508   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 12, n: 50, r2: 12)                                                                                         	 0.0031544 	 800       	 0         	 0         	 29.2163   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 12, reductionFactor: 37, colBlockingSize: 12)                  	 0.00285154	 100       	 25.9319   	 0         	 8.4569    	 3.06636   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 12, r: 12, streamingCols: 0)                   	 0.00222414	 100       	 16.186    	 0         	 21.6072   	 0.749101  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 62, leftOrthog: 1)          	 0.00149392	 100       	 20.7507   	 0         	 7.65769   	 2.70979   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 12, m: 2500)                                                                  	 0.00104348	 100       	 0         	 0         	 45.9999   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 12)                                                         	 0.000949505	 100       	 0         	 0         	 50.5527   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 12, Qr2: 50)       	 0.000927291	 100       	 0         	 0         	 267.446   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 12, reductionFactor: 37, colBlockingSize: 12)                    	 0.000919977	 100       	 1.60756   	 0         	 0.646973  	 2.48474   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 12, n: 50, r2left: 50, r2right: 0)                 	 0.00090113	 100       	 0         	 0         	 53.2665   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000890327	 100       	 0.561591  	 0         	 2.24637   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 12)                                                                                          	 0.000807476	 200       	 0         	 0         	 2.37778   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000741293	 100       	 33.7249   	 0         	 8.09397   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 12, n: 50, r2: 1)                                                                                          	 0.000698784	 200       	 0         	 0         	 2.74763   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000540938	 100       	 0         	 0         	 7.39456   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 12)                 	 0.00045896	 100       	 0         	 0         	 10.807    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000429047	 100       	 0         	 0         	 9.32299   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00042501	 100       	 1.17644   	 0         	 14.1173   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 12, m: 50, k: 50)     	 0.000403372	 100       	 14.8746   	 0         	 7.33814   	 2.02703   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 12, n: 50, r2left: 1, r2right: 0)                  	 0.000401487	 100       	 0         	 0         	 2.39111   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000398792	 100       	 0.626893  	 0         	 10.0303   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 12)   	 0.000343108	 100       	 17.4872   	 0         	 8.62702   	 2.02703   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 12)                                                                                 	 0.000335962	 100       	 0.178592  	 0         	 2.85747   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000331267	 100       	 0.754678  	 0         	 12.0749   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 12)                                                           	 0.00031123	 100       	 0         	 0         	 3.08454   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 12, m: 12, fromLeft: 1)                	 0.000304494	 800       	 0         	 0         	 6.05332   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 12, m: 50, k: 50)  	 0.000219689	 100       	 27.3113   	 0         	 13.4736   	 2.02703   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 12, k: 12)   	 0.000104982	 100       	 13.7166   	 0         	 10.2418   	 1.33929   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 600, m: 0, k: 12)   	 5.431e-06 	 100       	 0         	 0         	 1060.58   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.25374   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.2537    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.0987    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.09739   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.05444   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.419639  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.296997  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.274532  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.195789  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.154928  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0678113 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0292496 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0255976 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0235746 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0195548 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0186106 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0175828 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.00938334	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00883037	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00830081	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0067964 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00557418	 1800      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0052016 	 1300      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00495479	 900       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.002869  	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00109436	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106602	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000890327	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00042501	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000304494	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22699926177664 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22699707459584 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22699506133120 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22699304806656 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22699103480192 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22698902153728 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22698700827264 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22698499500800 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22698298174336 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22698096847872 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22697895521408 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22697694194944 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22697492868480 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22697291542016 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22697090215552 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22696888889088 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22696687562624 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22696486236160 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22696284909696 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22696083583232 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22695882256768 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22695680930304 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22695479603840 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22695278277376 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22695076950912 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22694875624448 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22694674297984 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22694472971520 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22694271645056 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22694070318592 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22693868992128 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22693667665664 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22693466335104 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22693265008640 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22693063682176 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22692862355712 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22692661029248 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22692459702784 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22692258376320 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22692057049856 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22691855723392 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22691654396928 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22691453070464 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22691251744000 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22691050417536 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22690849091072 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22690647764608 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22690446438144 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22690245111680 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22690043785216 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22689842458752 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22689641132288 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22689439805824 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22689238479360 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22689037152896 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22688835826432 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22688634499968 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22688433173504 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22688231847040 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22688030520576 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22687829194112 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22687627867648 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22687426541184 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22699820517120 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22699813926656 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 63, m: 63)                                                                 	 0.357255  	 700       	 4.57276   	 0         	 0.187631  	 24.3711   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3150, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.210986  	 600       	 73.0301   	 0         	 4.60511   	 15.8585   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3150, r: 63, r2: 63, leftOrthog: 1)        	 0.170104  	 600       	 88.198    	 0         	 17.0236   	 5.18092   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 63)                                                                 	 0.0416414 	 100       	 3.42608   	 0         	 0.170023  	 20.1507   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.0363139 	 100       	 56.1256   	 0         	 3.55719   	 15.7781   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0338552 	 100       	 3.44605   	 0         	 0.178407  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 13, Qr2: 63)       	 0.0258861 	 700       	 0         	 0         	 78.8315   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0232269 	 100       	 69.642    	 0         	 5.51085   	 12.6372   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, r1_: 63, n: 50, r2: 63)           	 0.0219525 	 600       	 683.422   	 0         	 87.6516   	 7.79703   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3150, cols: 13, reductionFactor: 37, colBlockingSize: 12)                  	 0.0210959 	 700       	 36.2834   	 0         	 10.9152   	 3.32412   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 13, m: 50, k: 2500)   	 0.0204631 	 800       	 127.058   	 0         	 49.4626   	 2.56876   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3150, Xcols: 13, r: 13, streamingCols: 0)                   	 0.0173431 	 700       	 21.4867   	 0         	 26.4724   	 0.811663  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3150, r: 50, r2: 50, leftOrthog: 1)        	 0.0118176 	 100       	 133.276   	 0         	 32.3246   	 4.12304   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 650, m: 50, k: 13)  	 0.011605  	 800       	 58.2507   	 0         	 22.9418   	 2.53906   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 63, r2: 63, leftOrthog: 1)        	 0.0115365 	 100       	 172.019   	 0         	 33.316    	 5.16326   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 13, m: 2500, k: 50)	 0.0102469 	 800       	 253.735   	 0         	 98.7772   	 2.56876   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 13, m: 3150)                                                                  	 0.00868533	 700       	 0         	 0         	 52.8063   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 13, n: 50, r2left: 50, r2right: 13)                	 0.00676331	 700       	 0         	 0         	 67.8129   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3150, m: 13)                                                         	 0.00572126	 700       	 0         	 0         	 80.1641   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 13, m: 13)                                                                  	 0.00546078	 900       	 0.482568  	 0         	 0.685616  	 0.703846  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 650, m: 13, k: 13)  	 0.00510323	 700       	 30.1358   	 0         	 18.7306   	 1.60891   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, r1_: 50, n: 50, r2: 63)           	 0.004716  	 100       	 420.801   	 0         	 60.916    	 6.90789   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 63, reductionFactor: 37, colBlockingSize: 12)                    	 0.00419204	 100       	 9.72384   	 0         	 1.35858   	 7.15738   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, r1_: 63, n: 50, r2: 50)           	 0.00324486	 100       	 611.584   	 0         	 78.6399   	 7.77701   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 13, reductionFactor: 37, colBlockingSize: 12)                  	 0.00318132	 100       	 27.2791   	 0         	 8.21519   	 3.32057   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 13, n: 50, r2: 13)                                                                                         	 0.00314665	 800       	 0         	 0         	 34.3731   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 13, r: 13, streamingCols: 0)                   	 0.00225054	 100       	 18.7733   	 0         	 23.1356   	 0.811445  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 63, leftOrthog: 1)          	 0.00145221	 100       	 21.691    	 0         	 7.96026   	 2.72491   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 13, m: 2500)                                                                  	 0.00101102	 100       	 0         	 0         	 51.433    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 13, n: 50, r2left: 50, r2right: 0)                 	 0.000924994	 100       	 0         	 0         	 56.2166   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 13, Qr2: 50)       	 0.000912606	 100       	 0         	 0         	 276.132   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 13)                                                         	 0.00089726	 100       	 0         	 0         	 57.9542   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000852823	 100       	 0.586288  	 0         	 2.34515   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 13)                                                                                          	 0.000808633	 200       	 0         	 0         	 2.57224   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 13, reductionFactor: 37, colBlockingSize: 12)                    	 0.000733742	 100       	 2.36551   	 0         	 0.892957  	 2.64908   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000714201	 100       	 35.0042   	 0         	 8.401     	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 13, n: 50, r2: 1)                                                                                          	 0.000691702	 200       	 0         	 0         	 3.00708   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00054462	 100       	 0         	 0         	 7.34457   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 13)                 	 0.000458783	 100       	 0         	 0         	 10.9856   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 13, m: 50, k: 50)     	 0.000437472	 100       	 14.8581   	 0         	 6.94902   	 2.13816   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000426316	 100       	 0         	 0         	 9.38271   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000406155	 100       	 1.23106   	 0         	 14.7727   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 13, n: 50, r2left: 1, r2right: 0)                  	 0.000390405	 100       	 0         	 0         	 2.6639    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000376137	 100       	 0.664651  	 0         	 10.6344   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 13)   	 0.000354556	 100       	 18.3328   	 0         	 8.5741    	 2.13816   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 13)                                                                                 	 0.000347301	 100       	 0.187158  	 0         	 2.99452   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000334823	 100       	 0.746663  	 0         	 11.9466   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 13, m: 50, k: 50)  	 0.000323984	 100       	 20.0627   	 0         	 9.38318   	 2.13816   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 13)                                                           	 0.000318422	 100       	 0         	 0         	 3.26611   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 13, m: 13, fromLeft: 1)                	 0.000266496	 800       	 0         	 0         	 8.1172    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 13, k: 13)   	 0.000123141	 100       	 13.7241   	 0         	 9.54353   	 1.43805   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 650, m: 0, k: 13)   	 5.52e-06  	 100       	 0         	 0         	 1224.64   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.28939   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.28935   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.12655   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.12528   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.07839   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.432752  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.299729  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.275328  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.19491   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.162732  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0725447 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0306275 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.027225  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0254752 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0209006 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0195936 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0171915 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0105709 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.00969636	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0085375 	 1000      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00741803	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00693694	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00546078	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00519161	 1300      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00283719	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00120929	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105826	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000852823	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000406155	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000266496	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23056420493184 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23056189745152 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23055988418688 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23055787092224 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23055585765760 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23055384439296 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23055183112832 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23054981786368 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23054780459904 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23054579133440 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23054377806976 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23054176480512 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23053975154048 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23053773827584 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23053572501120 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23053371174656 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23053169848192 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23052968521728 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23052767195264 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23052565868800 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23052364542336 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23052163215872 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23051961889408 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23051760562944 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23051559236480 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23051357910016 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23051156583552 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23050955257088 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23050753930624 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23050552604160 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23050351277696 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23050149951232 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23049948620672 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23049747294208 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23049545967744 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23049344641280 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23049143314816 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23048941988352 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23048740661888 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23048539335424 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23048338008960 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23048136682496 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23047935356032 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23047734029568 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23047532703104 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23047331376640 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23047130050176 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23046928723712 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23046727397248 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23046526070784 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23046324744320 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23046123417856 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23045922091392 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23045720764928 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23045519438464 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23045318112000 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23045116785536 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23044915459072 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23044714132608 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23044512806144 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23044311479680 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23044110153216 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23043908826752 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23056314832640 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23056308242176 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 64, m: 64)                                                                 	 0.356705  	 700       	 4.80138   	 0         	 0.193917  	 24.7599   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3200, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.216049  	 600       	 74.7687   	 0         	 4.64107   	 16.1102   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3200, r: 64, r2: 64, leftOrthog: 1)        	 0.184819  	 600       	 85.1031   	 0         	 16.1696   	 5.26316   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 64)                                                                 	 0.0403944 	 100       	 3.58136   	 0         	 0.177252  	 20.2048   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.0374587 	 100       	 56.1512   	 0         	 3.50457   	 16.0223   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.034539  	 100       	 3.37782   	 0         	 0.174875  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 14, Qr2: 64)       	 0.0256256 	 700       	 0         	 0         	 81.8619   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3200, cols: 14, reductionFactor: 37, colBlockingSize: 12)                  	 0.0234242 	 700       	 38.4991   	 0         	 10.7571   	 3.57894   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0230903 	 100       	 71.1659   	 0         	 5.63007   	 12.6403   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, r1_: 64, n: 50, r2: 64)           	 0.022616  	 600       	 695.465   	 0         	 87.8025   	 7.92079   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 14, m: 50, k: 2500)   	 0.0200902 	 800       	 139.372   	 0         	 51.1932   	 2.72246   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3200, Xcols: 14, r: 14, streamingCols: 0)                   	 0.019509  	 700       	 22.5045   	 0         	 25.7475   	 0.874044  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 700, m: 50, k: 14)  	 0.0131913 	 800       	 59.4333   	 0         	 22.0752   	 2.69231   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 64, r2: 64, leftOrthog: 1)        	 0.0124029 	 100       	 165.123   	 0         	 31.4889   	 5.24384   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3200, r: 50, r2: 50, leftOrthog: 1)        	 0.0122712 	 100       	 130.386   	 0         	 31.6187   	 4.12371   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 14, m: 3200)                                                                  	 0.0112733 	 700       	 0         	 0         	 44.5088   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 14, m: 2500, k: 50)	 0.0105602 	 800       	 265.146   	 0         	 97.392    	 2.72246   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 14, n: 50, r2left: 50, r2right: 14)                	 0.00786117	 700       	 0         	 0         	 63.8277   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3200, m: 14)                                                         	 0.00623555	 700       	 0         	 0         	 80.4677   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 14, m: 14)                                                                  	 0.00608102	 900       	 0.541389  	 0         	 0.712775  	 0.759551  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, r1_: 50, n: 50, r2: 64)           	 0.00537363	 100       	 381.12    	 0         	 54.7861   	 6.95652   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 700, m: 14, k: 14)  	 0.00511381	 700       	 37.561    	 0         	 21.6781   	 1.73267   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 64, reductionFactor: 37, colBlockingSize: 12)                    	 0.00510203	 100       	 8.24515   	 0         	 1.14401   	 7.20721   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 14, reductionFactor: 37, colBlockingSize: 12)                  	 0.00377484	 100       	 26.6631   	 0         	 7.45908   	 3.57458   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, r1_: 64, n: 50, r2: 50)           	 0.00340281	 100       	 601.855   	 0         	 76.1949   	 7.89889   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 14, n: 50, r2: 14)                                                                                         	 0.00333055	 800       	 0         	 0         	 37.6634   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 14, r: 14, streamingCols: 0)                   	 0.00249257	 100       	 19.6584   	 0         	 22.4983   	 0.873777  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 14, m: 50, k: 50)     	 0.00167123	 100       	 4.18852   	 0         	 1.86689   	 2.24359   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 64, leftOrthog: 1)          	 0.00157243	 100       	 20.3507   	 0         	 7.42802   	 2.73973   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 14, m: 2500)                                                                  	 0.00119864	 100       	 0         	 0         	 46.7198   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 14, reductionFactor: 37, colBlockingSize: 12)                    	 0.00113851	 100       	 1.76808   	 0         	 0.629598  	 2.80828   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 14)                                                         	 0.00105518	 100       	 0         	 0         	 53.0716   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 14, Qr2: 50)       	 0.000957342	 100       	 0         	 0         	 267.407   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 14, n: 50, r2left: 50, r2right: 0)                 	 0.000932854	 100       	 0         	 0         	 60.0308   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000883296	 100       	 0.566062  	 0         	 2.26425   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 14)                                                                                          	 0.000827667	 200       	 0         	 0         	 2.7064    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000714846	 100       	 34.9726   	 0         	 8.39342   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 14, n: 50, r2: 1)                                                                                          	 0.000703654	 200       	 0         	 0         	 3.18338   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 14)   	 0.000578058	 100       	 12.1095   	 0         	 5.39738   	 2.24359   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000528562	 100       	 0         	 0         	 7.5677    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 14)                 	 0.000500319	 100       	 0         	 0         	 10.2335   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000436948	 100       	 1.1443    	 0         	 13.7316   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000436487	 100       	 0         	 0         	 9.16408   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 14)                                                                                 	 0.00040143	 100       	 0.174377  	 0         	 2.79003   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000400149	 100       	 0.624767  	 0         	 9.99628   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 14, n: 50, r2left: 1, r2right: 0)                  	 0.000395285	 100       	 0         	 0         	 2.8334    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 14, m: 50, k: 50)  	 0.000347227	 100       	 20.1597   	 0         	 8.98548   	 2.24359   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00034138	 100       	 0.732322  	 0         	 11.7171   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 14, m: 14, fromLeft: 1)                	 0.000336034	 800       	 0         	 0         	 7.46591   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 14)                                                           	 0.000303751	 100       	 0         	 0         	 3.68723   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 14, k: 14)   	 0.000134854	 100       	 14.5342   	 0         	 9.46802   	 1.53509   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 700, m: 0, k: 14)   	 6.12e-06  	 100       	 0         	 0         	 1281.05   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.34152   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.34149   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.16111   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.15979   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.11407   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.431638  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.310038  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.282319  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.211065  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.180311  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0831782 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0321073 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0288035 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0270194 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0220016 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0217614 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0190241 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0124719 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0109074 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00968963	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00759447	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00723034	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00608102	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00539044	 1300      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00311995	 6300      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00114296	 300       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00109141	 5200      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000883296	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000436948	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000336034	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22769831823232 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22769634895872 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22769433569408 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22769232242944 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22769030916480 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22768829590016 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22768628263552 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22768426937088 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22768225610624 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22768024284160 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22767822957696 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22767621631232 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22767420304768 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22767218978304 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22767017651840 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22766816325376 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22766614998912 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22766413672448 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22766212345984 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22766011019520 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22765809693056 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22765608366592 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22765407040128 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22765205713664 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22765004387200 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22764803060736 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22764601734272 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22764400407808 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22764199081344 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22763997754880 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22763796428416 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22763595101952 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22763393771392 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22763192444928 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22762991118464 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22762789792000 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22762588465536 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22762387139072 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22762185812608 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22761984486144 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22761783159680 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22761581833216 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22761380506752 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22761179180288 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22760977853824 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22760776527360 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22760575200896 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22760373874432 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22760172547968 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22759971221504 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22759769895040 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22759568568576 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22759367242112 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22759165915648 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22758964589184 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22758763262720 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22758561936256 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22758360609792 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22758159283328 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22757957956864 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22757756630400 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22757555303936 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22757353977472 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22769726162688 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22769719572224 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 65, m: 65)                                                                 	 0.377569  	 700       	 4.75202   	 0         	 0.188956  	 25.1488   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3250, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.215567  	 600       	 78.5038   	 0         	 4.79795   	 16.362    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3250, r: 65, r2: 65, leftOrthog: 1)        	 0.0994505 	 600       	 165.685   	 0         	 30.9959   	 5.34539   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, r1_: 65, n: 50, r2: 65)           	 0.0518035 	 600       	 318.077   	 0         	 39.5394   	 8.04455   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 65)                                                                 	 0.0401733 	 100       	 3.65085   	 0         	 0.180219  	 20.2578   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.0366943 	 100       	 59.1262   	 0         	 3.6349    	 16.2663   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0346322 	 100       	 3.36873   	 0         	 0.174404  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 15, Qr2: 65)       	 0.0310841 	 700       	 0         	 0         	 69.3603   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3250, cols: 15, reductionFactor: 37, colBlockingSize: 12)                  	 0.025064  	 700       	 41.9494   	 0         	 10.9424   	 3.83366   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0224859 	 100       	 74.2206   	 0         	 5.87034   	 12.6433   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 15, m: 50, k: 2500)   	 0.0207048 	 800       	 144.894   	 0         	 50.4618   	 2.87136   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3250, Xcols: 15, r: 15, streamingCols: 0)                   	 0.0199388 	 700       	 25.6723   	 0         	 27.4154   	 0.93642   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 750, m: 50, k: 15)  	 0.0143022 	 800       	 62.9272   	 0         	 22.1504   	 2.84091   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 65, r2: 65, leftOrthog: 1)        	 0.0129273 	 100       	 163.414   	 0         	 30.6917   	 5.32438   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 15, m: 2500, k: 50)	 0.0107993 	 800       	 277.795   	 0         	 96.7468   	 2.87136   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3250, r: 50, r2: 50, leftOrthog: 1)        	 0.010084  	 100       	 161.146   	 0         	 39.0716   	 4.12437   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 15, m: 3250)                                                                  	 0.00967177	 700       	 0         	 0         	 56.4529   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 15, n: 50, r2left: 50, r2right: 15)                	 0.00774398	 700       	 0         	 0         	 70.5064   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, r1_: 65, n: 50, r2: 50)           	 0.0069695 	 100       	 303.107   	 0         	 37.7904   	 8.02073   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3250, m: 15)                                                         	 0.00691025	 700       	 0         	 0         	 79.0131   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 15, m: 15)                                                                  	 0.00640608	 900       	 0.632212  	 0         	 0.775513  	 0.815217  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 750, m: 15, k: 15)  	 0.00529598	 700       	 44.6093   	 0         	 24.0296   	 1.85644   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, r1_: 50, n: 50, r2: 65)           	 0.00520213	 100       	 406.084   	 0         	 57.9763   	 7.00431   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 15, r: 15, streamingCols: 0)                   	 0.00419705	 100       	 13.4023   	 0         	 14.3172   	 0.936096  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 15, n: 50, r2: 15)                                                                                         	 0.00411115	 800       	 0         	 0         	 35.0267   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 65, reductionFactor: 37, colBlockingSize: 12)                    	 0.00401878	 100       	 10.7973   	 0         	 1.48801   	 7.25617   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 15, reductionFactor: 37, colBlockingSize: 12)                  	 0.00366144	 100       	 31.556    	 0         	 8.24265   	 3.82838   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 15, Qr2: 50)       	 0.00299562	 100       	 0         	 0         	 86.7935   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 65, leftOrthog: 1)          	 0.00164654	 100       	 19.7384   	 0         	 7.16655   	 2.75424   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 15, m: 2500)                                                                  	 0.00140898	 100       	 0         	 0         	 42.5841   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000950553	 100       	 0.52601   	 0         	 2.10404   	 0.25      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 15)                                                         	 0.00093233	 100       	 0         	 0         	 64.3549   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 15, n: 50, r2left: 50, r2right: 0)                 	 0.000908355	 100       	 0         	 0         	 66.0535   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 15, reductionFactor: 37, colBlockingSize: 12)                    	 0.000889093	 100       	 2.59907   	 0         	 0.877299  	 2.96258   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 15)                                                                                          	 0.000806575	 200       	 0         	 0         	 2.97554   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000714485	 100       	 34.9902   	 0         	 8.39766   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 15, n: 50, r2: 1)                                                                                          	 0.000700368	 200       	 0         	 0         	 3.42677   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000540087	 100       	 0         	 0         	 7.40621   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 15, m: 50, k: 50)     	 0.000505507	 100       	 14.8366   	 0         	 6.33028   	 2.34375   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 15)                 	 0.000464435	 100       	 0         	 0         	 11.1964   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000459317	 100       	 0         	 0         	 8.70858   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000409629	 100       	 1.22062   	 0         	 14.6474   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000403054	 100       	 0.620264  	 0         	 9.92423   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 15, n: 50, r2left: 1, r2right: 0)                  	 0.000397594	 100       	 0         	 0         	 3.01815   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 15)   	 0.00039336	 100       	 19.0665   	 0         	 8.13504   	 2.34375   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 15)                                                                                 	 0.000353401	 100       	 0.212224  	 0         	 3.39558   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000343814	 100       	 0.727137  	 0         	 11.6342   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 15, m: 50, k: 50)  	 0.000310063	 100       	 24.1886   	 0         	 10.3205   	 2.34375   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 15)                                                           	 0.000294717	 100       	 0         	 0         	 4.0717    	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 15, m: 15, fromLeft: 1)                	 0.000208679	 800       	 0         	 0         	 13.8011   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 15, k: 15)   	 0.000137623	 100       	 16.349    	 0         	 10.0274   	 1.63043   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 750, m: 0, k: 15)   	 5.67e-06  	 100       	 0         	 0         	 1587.3    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.26264   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.2626    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.07434   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.07296   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.00724   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.452374  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.308381  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.279343  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.18819   	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.124108  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0858967 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0646896 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.034539  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0301282 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0241359 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0212103 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0201349 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0111094 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0110807 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00951436	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00813729	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00640608	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00615818	 1300      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00250712	 6300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00179914	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00111076	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110027	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000950553	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000409629	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000208679	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22879948511104 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22879760541696 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22879559215232 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22879357888768 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22879156562304 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22878955235840 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22878753909376 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22878552582912 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22878351256448 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22878149929984 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22877948603520 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22877747277056 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22877545950592 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22877344624128 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22877143297664 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22876941971200 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22876740644736 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22876539318272 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22876337991808 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22876136665344 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22875935338880 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22875734012416 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22875532685952 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22875331359488 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22875130033024 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22874928706560 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22874727380096 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22874526053632 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22874324727168 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22874123400704 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22873922074240 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22873720747776 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22873519417216 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22873318090752 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22873116764288 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22872915437824 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22872714111360 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22872512784896 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22872311458432 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22872110131968 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22871908805504 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22871707479040 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22871506152576 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22871304826112 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22871103499648 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22870902173184 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22870700846720 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22870499520256 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22870298193792 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22870096867328 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22869895540864 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22869694214400 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22869492887936 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22869291561472 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22869090235008 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22868888908544 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22868687582080 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22868486255616 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22868284929152 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22868083602688 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22867882276224 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22867680949760 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22867479623296 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22879842850560 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22879836260096 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 66, m: 66)                                                                 	 0.367309  	 700       	 5.1137    	 0         	 0.200241  	 25.5377   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3300, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.22206   	 600       	 79.7801   	 0         	 4.80208   	 16.6137   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3300, r: 66, r2: 66, leftOrthog: 1)        	 0.0985198 	 600       	 175.089   	 0         	 32.2589   	 5.42763   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, r1_: 66, n: 50, r2: 66)           	 0.0550734 	 600       	 313.214   	 0         	 38.345    	 8.16832   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 66)                                                                 	 0.0409349 	 100       	 3.63178   	 0         	 0.178821  	 20.3097   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.0378249 	 100       	 59.1374   	 0         	 3.5819    	 16.5101   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.033734  	 100       	 3.45843   	 0         	 0.179048  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 16, Qr2: 66)       	 0.0292655 	 700       	 0         	 0         	 75.6988   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3300, cols: 16, reductionFactor: 37, colBlockingSize: 12)                  	 0.0274565 	 700       	 44.2404   	 0         	 10.8212   	 4.08829   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0221804 	 100       	 76.4005   	 0         	 6.04136   	 12.6462   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 16, m: 50, k: 2500)   	 0.0215362 	 800       	 148.587   	 0         	 49.2715   	 3.01568   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3300, Xcols: 16, r: 16, streamingCols: 0)                   	 0.021385  	 700       	 27.6531   	 0         	 27.6866   	 0.998789  
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 800, m: 50, k: 16)  	 0.0151109 	 800       	 67.7659   	 0         	 22.7016   	 2.98507   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 66, r2: 66, leftOrthog: 1)        	 0.0124866 	 100       	 174.426   	 0         	 32.272    	 5.40487   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3300, r: 50, r2: 50, leftOrthog: 1)        	 0.0107712 	 100       	 153.186   	 0         	 37.136    	 4.125     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 16, m: 2500, k: 50)	 0.0105503 	 800       	 303.309   	 0         	 100.577   	 3.01568   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 16, m: 3300)                                                                  	 0.0103872 	 700       	 0         	 0         	 56.9314   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 16, n: 50, r2left: 50, r2right: 16)                	 0.00712714	 700       	 0         	 0         	 82.9729   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3300, m: 16)                                                         	 0.00712671	 700       	 0         	 0         	 82.978    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, r1_: 66, n: 50, r2: 50)           	 0.00697677	 100       	 312.179   	 0         	 38.3394   	 8.14252   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 16, m: 16)                                                                  	 0.00633303	 900       	 0.775932  	 0         	 0.891327  	 0.870536  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 66, reductionFactor: 37, colBlockingSize: 12)                    	 0.00611798	 100       	 7.31243   	 0         	 1.00111   	 7.30429   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 800, m: 16, k: 16)  	 0.00568618	 700       	 50.424    	 0         	 25.4641   	 1.9802    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, r1_: 50, n: 50, r2: 66)           	 0.00544449	 100       	 400.037   	 0         	 56.7326   	 7.05128   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 16, n: 50, r2: 16)                                                                                         	 0.00440842	 800       	 0         	 0         	 37.1652   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 16, reductionFactor: 37, colBlockingSize: 12)                  	 0.00392813	 100       	 33.4662   	 0         	 8.19851   	 4.08198   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 16, Qr2: 50)       	 0.00296327	 100       	 0         	 0         	 89.0907   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 16, r: 16, streamingCols: 0)                   	 0.00268941	 100       	 23.797    	 0         	 23.8351   	 0.998403  
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 66, leftOrthog: 1)          	 0.00173981	 100       	 18.9676   	 0         	 6.85133   	 2.76846   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 16, m: 2500)                                                                  	 0.00125998	 100       	 0         	 0         	 50.7945   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 16)                                                         	 0.00112685	 100       	 0         	 0         	 56.7952   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 16, n: 50, r2left: 50, r2right: 0)                 	 0.000907925	 100       	 0         	 0         	 70.4904   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 16, reductionFactor: 37, colBlockingSize: 12)                    	 0.000851267	 100       	 3.08856   	 0         	 0.992403  	 3.1122    
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000802692	 100       	 0.622904  	 0         	 2.49162   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 16)                                                                                          	 0.000793068	 200       	 0         	 0         	 3.22797   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000745138	 100       	 33.5508   	 0         	 8.0522    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 16, n: 50, r2: 1)                                                                                          	 0.000716276	 200       	 0         	 0         	 3.57404   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000561293	 100       	 0         	 0         	 7.1264    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 16)                 	 0.000513635	 100       	 0         	 0         	 10.2797   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000489955	 100       	 0         	 0         	 8.16402   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 16, m: 50, k: 50)     	 0.000446481	 100       	 17.9179   	 0         	 7.34634   	 2.43902   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 16, n: 50, r2left: 1, r2right: 0)                  	 0.000429235	 100       	 0         	 0         	 2.98205   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00041039	 100       	 1.21835   	 0         	 14.6202   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000386619	 100       	 0.646631  	 0         	 10.3461   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 16)   	 0.000380642	 100       	 21.0171   	 0         	 8.61702   	 2.43902   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 16)                                                           	 0.000357199	 100       	 0         	 0         	 3.58344   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 16)                                                                                 	 0.000342123	 100       	 0.233834  	 0         	 3.74134   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000324788	 100       	 0.769733  	 0         	 12.3157   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 16, m: 50, k: 50)  	 0.00025144	 100       	 31.8167   	 0         	 13.0449   	 2.43902   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 16, m: 16, fromLeft: 1)                	 0.000213967	 800       	 0         	 0         	 15.3145   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 16, k: 16)   	 0.00018742	 100       	 13.6592   	 0         	 7.92231   	 1.72414   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 800, m: 0, k: 16)   	 5.19e-06  	 100       	 0         	 0         	 1973.03   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.2789    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.27885   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.08653   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.08528   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.01514   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.441978  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.320419  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.288729  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.192248  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.123517  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0890758 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0682398 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0327187 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0326707 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0240744 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0219827 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0213703 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0116472 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0108017 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.00897794	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00861076	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00647906	 1300      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00633303	 900       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00236136	 6300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00233275	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00114894	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105353	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000802692	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00041039	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000213967	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22623417046912 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22623203354624 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22623002028160 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22622800701696 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22622599375232 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22622398048768 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22622196722304 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22621995395840 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22621794069376 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22621592742912 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22621391416448 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22621190089984 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22620988763520 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22620787437056 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22620586110592 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22620384784128 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22620183457664 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22619982131200 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22619780804736 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22619579478272 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22619378151808 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22619176825344 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22618975498880 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22618774172416 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22618572845952 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22618371519488 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22618170193024 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22617968866560 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22617767540096 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22617566213632 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22617364887168 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22617163560704 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22616962230144 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22616760903680 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22616559577216 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22616358250752 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22616156924288 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22615955597824 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22615754271360 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22615552944896 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22615351618432 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22615150291968 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22614948965504 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22614747639040 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22614546312576 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22614344986112 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22614143659648 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22613942333184 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22613741006720 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22613539680256 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22613338353792 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22613137027328 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22612935700864 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22612734374400 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22612533047936 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22612331721472 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22612130395008 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22611929068544 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22611727742080 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22611526415616 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22611325089152 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22611123762688 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22610922436224 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22623311386368 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22623304795904 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 67, m: 67)                                                                 	 0.3861    	 700       	 5.08931   	 0         	 0.196297  	 25.9266   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3350, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.229154  	 600       	 80.8778   	 0         	 4.79549   	 16.8654   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3350, r: 67, r2: 67, leftOrthog: 1)        	 0.103757  	 600       	 173.924   	 0         	 31.5659   	 5.50987   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, r1_: 67, n: 50, r2: 67)           	 0.0560765 	 600       	 321.806   	 0         	 38.8089   	 8.29208   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 67)                                                                 	 0.0421452 	 100       	 3.57494   	 0         	 0.175583  	 20.3604   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.039373  	 100       	 58.5468   	 0         	 3.49456   	 16.7537   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0347022 	 100       	 3.36194   	 0         	 0.174052  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 17, Qr2: 67)       	 0.0318658 	 700       	 0         	 0         	 71.4196   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3350, cols: 17, reductionFactor: 37, colBlockingSize: 12)                  	 0.0306715 	 700       	 45.3855   	 0         	 10.4507   	 4.34283   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0224969 	 100       	 76.467    	 0         	 6.04528   	 12.649    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3350, Xcols: 17, r: 17, streamingCols: 0)                   	 0.0224315 	 700       	 30.2122   	 0         	 28.4711   	 1.06115   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 17, m: 50, k: 2500)   	 0.0219755 	 800       	 154.718   	 0         	 49.0292   	 3.15563   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 850, m: 50, k: 17)  	 0.0154101 	 800       	 75.0155   	 0         	 24.005    	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 17, m: 2500, k: 50)	 0.0120288 	 800       	 282.655   	 0         	 89.5718   	 3.15563   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 67, r2: 67, leftOrthog: 1)        	 0.0119641 	 100       	 187.603   	 0         	 34.2009   	 5.48533   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 17, m: 3350)                                                                  	 0.0118688 	 700       	 0         	 0         	 53.7408   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3350, r: 50, r2: 50, leftOrthog: 1)        	 0.0115142 	 100       	 145.473   	 0         	 35.2608   	 4.12562   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 17, n: 50, r2left: 50, r2right: 17)                	 0.0083293 	 700       	 0         	 0         	 76.5778   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 17, m: 17)                                                                  	 0.00757589	 900       	 0.778126  	 0         	 0.840139  	 0.926188  
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3350, m: 17)                                                         	 0.0074305 	 700       	 0         	 0         	 85.8408   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, r1_: 67, n: 50, r2: 50)           	 0.00740889	 100       	 302.947   	 0         	 36.6575   	 8.26426   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 850, m: 17, k: 17)  	 0.00616008	 700       	 55.8288   	 0         	 26.5351   	 2.10396   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 67, reductionFactor: 37, colBlockingSize: 12)                    	 0.00578109	 100       	 7.97483   	 0         	 1.08478   	 7.35158   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, r1_: 50, n: 50, r2: 67)           	 0.00576928	 100       	 389.043   	 0         	 54.8144   	 7.09746   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 17, n: 50, r2: 17)                                                                                         	 0.00481608	 800       	 0         	 0         	 38.4047   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 17, reductionFactor: 37, colBlockingSize: 12)                  	 0.00444306	 100       	 33.4016   	 0         	 7.70443   	 4.33538   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 17, Qr2: 50)       	 0.00305646	 100       	 0         	 0         	 87.6831   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 17, r: 17, streamingCols: 0)                   	 0.00280011	 100       	 25.8026   	 0         	 24.3261   	 1.0607    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 67, leftOrthog: 1)          	 0.00165029	 100       	 20.2994   	 0         	 7.29568   	 2.78239   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 17, m: 2500)                                                                  	 0.0014342 	 100       	 0         	 0         	 47.4134   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 17, reductionFactor: 37, colBlockingSize: 12)                    	 0.00113169	 100       	 2.62272   	 0         	 0.805168  	 3.25736   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 17)                                                         	 0.00110734	 100       	 0         	 0         	 61.4083   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 17, n: 50, r2left: 50, r2right: 0)                 	 0.00093806	 100       	 0         	 0         	 72.49     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000936181	 100       	 26.7042   	 0         	 6.40902   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 17)                                                                                          	 0.000817338	 200       	 0         	 0         	 3.32788   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000776629	 100       	 0.643808  	 0         	 2.57523   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 17, n: 50, r2: 1)                                                                                          	 0.000743009	 200       	 0         	 0         	 3.66079   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 17, m: 50, k: 50)     	 0.000586994	 100       	 14.4806   	 0         	 5.72408   	 2.52976   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00054147	 100       	 0         	 0         	 7.3873    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 17)                 	 0.000481743	 100       	 0         	 0         	 11.1263   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000445887	 100       	 0         	 0         	 8.97088   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 17, n: 50, r2left: 1, r2right: 0)                  	 0.000425463	 100       	 0         	 0         	 3.19652   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000411314	 100       	 1.21562   	 0         	 14.5874   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000408885	 100       	 0.611419  	 0         	 9.7827    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 17)   	 0.0003913 	 100       	 21.7225   	 0         	 8.58676   	 2.52976   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 17, m: 50, k: 50)  	 0.000360369	 100       	 23.5869   	 0         	 9.32378   	 2.52976   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 17)                                                                                 	 0.000346389	 100       	 0.245389  	 0         	 3.92622   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 17)                                                           	 0.00034244	 100       	 0         	 0         	 3.9715    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000329124	 100       	 0.759592  	 0         	 12.1535   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 17, m: 17, fromLeft: 1)                	 0.000236635	 800       	 0         	 0         	 15.6325   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 17, k: 17)   	 0.000169573	 100       	 17.0428   	 0         	 9.38357   	 1.81624   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 850, m: 0, k: 17)   	 5.81e-06  	 100       	 0         	 0         	 1989.67   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.34255   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.34249   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.13509   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.13389   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.06134   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.462948  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.333052  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.297392  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.207339  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.128885  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.0976993 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0701909 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0366905 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0353681 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0252316 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0225625 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0221369 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.013303  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0123892 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0101746 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00888028	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00757589	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00691789	 1300      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00279585	 6300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00265355	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0011288 	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010844 	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000776629	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000411314	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000236635	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22462271473536 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22462074972160 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22461873645696 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22461672319232 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22461470992768 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22461269666304 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22461068339840 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22460867013376 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22460665686912 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22460464360448 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22460263033984 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22460061707520 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22459860381056 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22459659054592 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22459457728128 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22459256401664 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22459055075200 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22458853748736 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22458652422272 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22458451095808 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22458249769344 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22458048442880 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22457847116416 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22457645789952 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22457444463488 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22457243137024 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22457041810560 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22456840484096 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22456639157632 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22456437831168 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22456236504704 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22456035178240 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22455833847680 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22455632521216 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22455431194752 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22455229868288 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22455028541824 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22454827215360 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22454625888896 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22454424562432 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22454223235968 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22454021909504 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22453820583040 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22453619256576 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22453417930112 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22453216603648 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22453015277184 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22452813950720 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22452612624256 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22452411297792 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22452209971328 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22452008644864 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22451807318400 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22451605991936 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22451404665472 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22451203339008 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22451002012544 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22450800686080 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22450599359616 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22450398033152 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22450196706688 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22449995380224 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22449794053760 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22462165812992 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22462159222528 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 68, m: 68)                                                                 	 0.378583  	 700       	 5.42626   	 0         	 0.206201  	 26.3154   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3400, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.230707  	 600       	 83.9843   	 0         	 4.90645   	 17.1171   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3400, r: 68, r2: 68, leftOrthog: 1)        	 0.104228  	 600       	 181.007   	 0         	 32.3683   	 5.59211   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, r1_: 68, n: 50, r2: 68)           	 0.0518753 	 600       	 363.679   	 0         	 43.2136   	 8.41584   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 68)                                                                 	 0.041182  	 100       	 3.70712   	 0         	 0.181633  	 20.41     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.0397906 	 100       	 59.6745   	 0         	 3.51086   	 16.9971   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0347482 	 100       	 3.35749   	 0         	 0.173822  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 18, Qr2: 68)       	 0.0332604 	 700       	 0         	 0         	 70.277    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3400, cols: 18, reductionFactor: 37, colBlockingSize: 12)                  	 0.0324024 	 700       	 48.8829   	 0         	 10.633    	 4.59728   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3400, Xcols: 18, r: 18, streamingCols: 0)                   	 0.0240391 	 700       	 32.0778   	 0         	 28.5513   	 1.12351   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 18, m: 50, k: 2500)   	 0.0224673 	 800       	 160.233   	 0         	 48.6823   	 3.2914    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0222117 	 100       	 78.6048   	 0         	 6.21294   	 12.6518   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 900, m: 50, k: 18)  	 0.0193649 	 800       	 66.9253   	 0         	 20.5238   	 3.26087   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 18, m: 3400)                                                                  	 0.0124993 	 700       	 0         	 0         	 54.8381   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 68, r2: 68, leftOrthog: 1)        	 0.0121362 	 100       	 190.505   	 0         	 34.2282   	 5.56574   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 18, m: 2500, k: 50)	 0.0120089 	 800       	 299.777   	 0         	 91.0789   	 3.2914    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3400, r: 50, r2: 50, leftOrthog: 1)        	 0.0112646 	 100       	 150.915   	 0         	 36.5748   	 4.12621   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 18, n: 50, r2left: 50, r2right: 18)                	 0.00872104	 700       	 0         	 0         	 78.5961   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3400, m: 18)                                                         	 0.00791482	 700       	 0         	 0         	 86.6021   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 18, m: 18)                                                                  	 0.00788261	 900       	 0.887828  	 0         	 0.904269  	 0.981818  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, r1_: 68, n: 50, r2: 50)           	 0.00693549	 100       	 333.358   	 0         	 39.752    	 8.38595   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 900, m: 18, k: 18)  	 0.00618726	 700       	 65.9807   	 0         	 29.618    	 2.22772   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, r1_: 50, n: 50, r2: 68)           	 0.00556159	 100       	 415.709   	 0         	 58.1992   	 7.14286   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 68, reductionFactor: 37, colBlockingSize: 12)                    	 0.00530209	 100       	 8.95679   	 0         	 1.21069   	 7.39808   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 18, n: 50, r2: 18)                                                                                         	 0.00513387	 800       	 0         	 0         	 40.3905   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 18, reductionFactor: 37, colBlockingSize: 12)                  	 0.00476362	 100       	 34.9268   	 0         	 7.61168   	 4.58858   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 18, Qr2: 50)       	 0.00317727	 100       	 0         	 0         	 85.6081   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 18, r: 18, streamingCols: 0)                   	 0.00291564	 100       	 27.7812   	 0         	 24.7388   	 1.12298   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 68, leftOrthog: 1)          	 0.00168785	 100       	 20.1439   	 0         	 7.20442   	 2.79605   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 18, reductionFactor: 37, colBlockingSize: 12)                    	 0.00122688	 100       	 2.71221   	 0         	 0.798119  	 3.39825   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 18, m: 2500)                                                                  	 0.00119898	 100       	 0         	 0         	 60.0511   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 18, n: 50, r2left: 50, r2right: 0)                 	 0.00109215	 100       	 0         	 0         	 65.9251   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 18)                                                         	 0.000981732	 100       	 0         	 0         	 73.3398   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 18)                                                                                          	 0.000819241	 200       	 0         	 0         	 3.51545   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000811391	 100       	 0.616226  	 0         	 2.4649    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 18, m: 50, k: 50)     	 0.000796871	 100       	 11.2942   	 0         	 4.31688   	 2.61628   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 18, n: 50, r2: 1)                                                                                          	 0.000742186	 200       	 0         	 0         	 3.88043   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000709523	 100       	 35.2349   	 0         	 8.45639   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00052429	 100       	 0         	 0         	 7.62937   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 18)                 	 0.000505129	 100       	 0         	 0         	 10.7695   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000436869	 100       	 0         	 0         	 9.15606   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 18, n: 50, r2left: 1, r2right: 0)                  	 0.00043231	 100       	 0         	 0         	 3.33094   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 18)   	 0.000420755	 100       	 21.3901   	 0         	 8.17578   	 2.61628   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000413723	 100       	 1.20854   	 0         	 14.5025   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000393754	 100       	 0.634914  	 0         	 10.1586   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 18, m: 50, k: 50)  	 0.000357306	 100       	 25.1885   	 0         	 9.6276    	 2.61628   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 18)                                                                                 	 0.000350265	 100       	 0.256948  	 0         	 4.11117   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000324563	 100       	 0.770266  	 0         	 12.3243   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 18)                                                           	 0.000320508	 100       	 0         	 0         	 4.49287   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 18, m: 18, fromLeft: 1)                	 0.000239619	 800       	 0         	 0         	 17.3075   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 18, k: 18)   	 0.000185628	 100       	 17.4543   	 0         	 9.15379   	 1.90678   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 900, m: 0, k: 18)   	 6.03e-06  	 100       	 0         	 0         	 2149.25   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.34316   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.34311   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.12525   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.12402   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.05594   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.454513  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.336405  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.298569  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.217797  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.129316  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.102242  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0650819 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0388663 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0368745 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0269547 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0261645 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0232642 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0136983 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0123662 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0107506 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00921706	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00788261	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00721959	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00235372	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00216284	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00118086	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106858	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000811391	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000413723	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000239619	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22686028068736 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22685815924736 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22685614598272 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22685413271808 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22685211945344 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22685010618880 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22684809292416 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22684607965952 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22684406639488 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22684205313024 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22684003986560 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22683802660096 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22683601333632 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22683400007168 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22683198680704 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22682997354240 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22682796027776 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22682594701312 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22682393374848 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22682192048384 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22681990721920 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22681789395456 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22681588068992 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22681386742528 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22681185416064 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22680984089600 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22680782763136 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22680581436672 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22680380110208 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22680178783744 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22679977457280 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22679776130816 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22679574800256 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22679373473792 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22679172147328 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22678970820864 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22678769494400 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22678568167936 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22678366841472 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22678165515008 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22677964188544 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22677762862080 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22677561535616 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22677360209152 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22677158882688 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22676957556224 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22676756229760 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22676554903296 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22676353576832 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22676152250368 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22675950923904 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22675749597440 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22675548270976 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22675346944512 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22675145618048 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22674944291584 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22674742965120 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22674541638656 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22674340312192 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22674138985728 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22673937659264 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22673736332800 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22673535006336 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22685922408192 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22685915817728 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 69, m: 69)                                                                 	 0.386606  	 700       	 5.55154   	 0         	 0.207889  	 26.7043   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3450, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.239564  	 600       	 84.5003   	 0         	 4.86505   	 17.3688   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3450, r: 69, r2: 69, leftOrthog: 1)        	 0.109326  	 600       	 180.291   	 0         	 31.773    	 5.67434   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, r1_: 69, n: 50, r2: 69)           	 0.0584189 	 600       	 337.4     	 0         	 39.51     	 8.5396    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.040197  	 100       	 60.8214   	 0         	 3.52784   	 17.2404   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 69)                                                                 	 0.0399572 	 100       	 3.87081   	 0         	 0.189202  	 20.4586   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0346785 	 100       	 3.36423   	 0         	 0.174171  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3450, cols: 19, reductionFactor: 37, colBlockingSize: 12)                  	 0.0340641 	 700       	 52.5701   	 0         	 10.8355   	 4.85166   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 19, Qr2: 69)       	 0.0336535 	 700       	 0         	 0         	 71.3197   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3450, Xcols: 19, r: 19, streamingCols: 0)                   	 0.0253695 	 700       	 34.3647   	 0         	 28.9786   	 1.18587   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 19, m: 50, k: 2500)   	 0.0228564 	 800       	 166.256   	 0         	 48.5676   	 3.42318   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0222287 	 100       	 79.6998   	 0         	 6.29817   	 12.6544   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 950, m: 50, k: 19)  	 0.0166878 	 800       	 86.5304   	 0         	 25.5037   	 3.39286   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 19, n: 50, r2left: 50, r2right: 19)                	 0.0159122 	 700       	 0         	 0         	 46.1381   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 69, r2: 69, leftOrthog: 1)        	 0.0125159 	 100       	 190.198   	 0         	 33.6865   	 5.64611   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 19, m: 3450)                                                                  	 0.0123596 	 700       	 0         	 0         	 59.4002   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 19, m: 2500, k: 50)	 0.0120273 	 800       	 315.947   	 0         	 92.2965   	 3.42318   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3450, r: 50, r2: 50, leftOrthog: 1)        	 0.0113673 	 100       	 151.752   	 0         	 36.7723   	 4.12679   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 19, m: 19)                                                                  	 0.00853467	 900       	 0.964255  	 0         	 0.929666  	 1.03721   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3450, m: 19)                                                         	 0.00781142	 700       	 0         	 0         	 93.9855   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, r1_: 69, n: 50, r2: 50)           	 0.00743134	 100       	 320.332   	 0         	 37.6525   	 8.5076    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, r1_: 50, n: 50, r2: 69)           	 0.00578703	 100       	 411.351   	 0         	 57.2314   	 7.1875    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 19, n: 50, r2: 19)                                                                                         	 0.00539771	 800       	 0         	 0         	 42.8033   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 950, m: 19, k: 19)  	 0.0052937 	 700       	 90.6984   	 0         	 38.5707   	 2.35149   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 19, reductionFactor: 37, colBlockingSize: 12)                  	 0.0050394 	 100       	 36.7858   	 0         	 7.59789   	 4.84158   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 69, reductionFactor: 37, colBlockingSize: 12)                    	 0.00426264	 100       	 11.471    	 0         	 1.54102   	 7.44379   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 19, r: 19, streamingCols: 0)                   	 0.00303044	 100       	 29.7812   	 0         	 25.1265   	 1.18525   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 19, Qr2: 50)       	 0.0029582 	 100       	 0         	 0         	 93.3001   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 69, leftOrthog: 1)          	 0.00166549	 100       	 20.7146   	 0         	 7.3732    	 2.80945   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 19, m: 2500)                                                                  	 0.00147537	 100       	 0         	 0         	 51.5124   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 19)                                                         	 0.00106526	 100       	 0         	 0         	 71.3442   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 19, reductionFactor: 37, colBlockingSize: 12)                    	 0.00104522	 100       	 3.54717   	 0         	 1.00343   	 3.53506   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 19, n: 50, r2left: 50, r2right: 0)                 	 0.00094929	 100       	 0         	 0         	 80.0598   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 19)                                                                                          	 0.000865538	 200       	 0         	 0         	 3.51227   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000855222	 100       	 0.584644  	 0         	 2.33857   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 19, n: 50, r2: 1)                                                                                          	 0.000728362	 200       	 0         	 0         	 4.17375   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000724191	 100       	 34.5213   	 0         	 8.28511   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 19, m: 50, k: 50)     	 0.000576045	 100       	 16.4918   	 0         	 6.11063   	 2.69886   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000499527	 100       	 0         	 0         	 8.00758   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 19)                 	 0.000494207	 100       	 0         	 0         	 11.1694   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 19)   	 0.000453551	 100       	 20.9458   	 0         	 7.76098   	 2.69886   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000440697	 100       	 0         	 0         	 9.07653   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 19, m: 50, k: 50)  	 0.000422814	 100       	 22.4685   	 0         	 8.32517   	 2.69886   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.0004098 	 100       	 1.22011   	 0         	 14.6413   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 19, n: 50, r2left: 1, r2right: 0)                  	 0.000392611	 100       	 0         	 0         	 3.87152   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000392463	 100       	 0.637003  	 0         	 10.192    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 19)                                                                                 	 0.000348592	 100       	 0.272525  	 0         	 4.3604    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000333259	 100       	 0.750167  	 0         	 12.0027   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 19)                                                           	 0.000318428	 100       	 0         	 0         	 4.77345   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 19, m: 19, fromLeft: 1)                	 0.00026785	 800       	 0         	 0         	 17.2514   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 19, k: 19)   	 0.000212757	 100       	 16.9677   	 0         	 8.50172   	 1.9958    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 950, m: 0, k: 19)   	 5.49e-06  	 100       	 0         	 0         	 2630.24   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.38925   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.3892    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.15578   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.15451   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.07903   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.461242  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.346401  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.306819  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.233345  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.134875  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.112168  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0723615 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0406524 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0370524 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0283999 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0234324 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0226533 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0177483 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0138349 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0124501 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0091951 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00853467	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00749114	 1300      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00262807	 6300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00256351	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00116386	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107431	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000855222	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.0004098 	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00026785	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23281233995648 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23281004439552 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23280803113088 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23280601786624 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23280400460160 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23280199133696 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23279997807232 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23279796480768 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23279595154304 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23279393827840 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23279192501376 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23278991174912 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23278789848448 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23278588521984 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23278387195520 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23278185869056 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23277984542592 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23277783216128 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23277581889664 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23277380563200 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23277179236736 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23276977910272 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23276776583808 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23276575257344 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23276373930880 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23276172604416 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23275971277952 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23275769951488 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23275568625024 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23275367298560 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23275165972096 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23274964645632 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23274763315072 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23274561988608 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23274360662144 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23274159335680 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23273958009216 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23273756682752 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23273555356288 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23273354029824 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23273152703360 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23272951376896 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23272750050432 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23272548723968 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23272347397504 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23272146071040 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23271944744576 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23271743418112 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23271542091648 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23271340765184 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23271139438720 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23270938112256 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23270736785792 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23270535459328 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23270334132864 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23270132806400 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23269931479936 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23269730153472 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23269528827008 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23269327500544 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23269126174080 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23268924847616 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23268723521152 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23281128335104 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23281121744640 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 70, m: 70)                                                                 	 0.393145  	 700       	 5.70001   	 0         	 0.210385  	 27.0932   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3500, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.243444  	 600       	 86.8216   	 0         	 4.92729   	 17.6206   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3500, r: 70, r2: 70, leftOrthog: 1)        	 0.109813  	 600       	 187.41    	 0         	 32.5558   	 5.75658   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, n: 50, r2: 70)           	 0.0587353 	 600       	 350.386   	 0         	 40.4445   	 8.66337   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.0417428 	 100       	 60.279    	 0         	 3.44778   	 17.4834   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 70)                                                                 	 0.0410958 	 100       	 3.81223   	 0         	 0.185907  	 20.5061   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3500, cols: 20, reductionFactor: 37, colBlockingSize: 12)                  	 0.0361571 	 700       	 55.6729   	 0         	 10.9035   	 5.10596   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0353035 	 100       	 3.30468   	 0         	 0.171088  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 20, Qr2: 70)       	 0.033376  	 700       	 0         	 0         	 73.8255   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3500, Xcols: 20, r: 20, streamingCols: 0)                   	 0.0271897 	 700       	 36.0431   	 0         	 28.8757   	 1.24822   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 50, k: 2500)   	 0.0239907 	 800       	 166.731   	 0         	 46.9516   	 3.55114   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0223991 	 100       	 80.2396   	 0         	 6.33953   	 12.657    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 3500)                                                                  	 0.0133683 	 700       	 0         	 0         	 58.6464   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 20, m: 2500, k: 50)	 0.0128041 	 800       	 312.399   	 0         	 87.9717   	 3.55114   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 70, r2: 70, leftOrthog: 1)        	 0.0127032 	 100       	 192.865   	 0         	 33.6798   	 5.72644   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1000, m: 50, k: 20) 	 0.0121788 	 800       	 131.376   	 0         	 37.3108   	 3.52113   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3500, r: 50, r2: 50, leftOrthog: 1)        	 0.0120483 	 100       	 145.249   	 0         	 35.1917   	 4.12736   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3500, m: 20)                                                         	 0.00933464	 700       	 0         	 0         	 83.9882   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 20, m: 20)                                                                  	 0.00859455	 900       	 1.11692   	 0         	 1.02204   	 1.09283   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 50, r2left: 50, r2right: 20)                	 0.00795598	 700       	 0         	 0         	 98.5422   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, n: 50, r2: 50)           	 0.00773579	 100       	 316.71    	 0         	 36.7021   	 8.62919   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1000, m: 20, k: 20) 	 0.00682158	 700       	 82.0924   	 0         	 33.1653   	 2.47525   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 20, n: 50, r2: 20)                                                                                         	 0.00582352	 800       	 0         	 0         	 43.9597   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 20, reductionFactor: 37, colBlockingSize: 12)                  	 0.00570189	 100       	 36.0241   	 0         	 7.07133   	 5.09438   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 50, n: 50, r2: 70)           	 0.00556822	 100       	 439.997   	 0         	 60.8453   	 7.2314    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 70, reductionFactor: 37, colBlockingSize: 12)                    	 0.00448293	 100       	 11.2258   	 0         	 1.49902   	 7.48874   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 20, r: 20, streamingCols: 0)                   	 0.00313227	 100       	 31.9257   	 0         	 25.5916   	 1.2475    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 20, Qr2: 50)       	 0.00307748	 100       	 0         	 0         	 90.9837   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 70, leftOrthog: 1)          	 0.00193331	 100       	 18.1036   	 0         	 6.41386   	 2.82258   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 2500)                                                                  	 0.00179735	 100       	 0         	 0         	 44.51     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 50, r2left: 50, r2right: 0)                 	 0.00117281	 100       	 0         	 0         	 68.2125   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 20)                                                         	 0.00112718	 100       	 0         	 0         	 70.9733   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 20, reductionFactor: 37, colBlockingSize: 12)                    	 0.000939035	 100       	 4.37482   	 0         	 1.19271   	 3.66795   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000896243	 100       	 0.557884  	 0         	 2.23154   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 20)                                                                                          	 0.00085026	 200       	 0         	 0         	 3.76355   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000724075	 100       	 34.5268   	 0         	 8.28643   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 20, n: 50, r2: 1)                                                                                          	 0.000718207	 200       	 0         	 0         	 4.45554   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 50, k: 50)     	 0.000509279	 100       	 19.6356   	 0         	 7.06882   	 2.77778   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000500914	 100       	 0         	 0         	 7.9854    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 20)                 	 0.000474204	 100       	 0         	 0         	 11.8093   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 20)   	 0.000447873	 100       	 22.3278   	 0         	 8.03799   	 2.77778   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000432797	 100       	 0         	 0         	 9.24221   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000424341	 100       	 0.589149  	 0         	 9.42638   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 50, r2left: 1, r2right: 0)                  	 0.000401386	 100       	 0         	 0         	 3.98619   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000394272	 100       	 1.26816   	 0         	 15.2179   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000337072	 100       	 0.741681  	 0         	 11.8669   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 20, m: 50, k: 50)  	 0.000336033	 100       	 29.759    	 0         	 10.7132   	 2.77778   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 20)                                                                                 	 0.000332472	 100       	 0.300777  	 0         	 4.81244   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 20)                                                           	 0.000315164	 100       	 0         	 0         	 5.07672   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 20, m: 20, fromLeft: 1)                	 0.000292607	 800       	 0         	 0         	 17.4979   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 20, k: 20)   	 0.000183373	 100       	 21.8135   	 0         	 10.4705   	 2.08333   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1000, m: 0, k: 20)  	 5.39e-06  	 100       	 0         	 0         	 2968.46   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.41001   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.40997   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.18402   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.18269   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.10709   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.469545  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.354867  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.312663  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.225881  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.136497  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.114232  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0727633 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0432643 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0368863 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0303219 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0245    	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.019637  	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0151656 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0131402 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.010777  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0100044 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.00859455	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0078929 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00312827	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00260272	 6300      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109388	 300       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00108547	 5200      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000896243	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000394272	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000292607	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22810355640192 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22810168649728 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22809967323264 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22809765996800 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22809564670336 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22809363343872 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22809162017408 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22808960690944 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22808759364480 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22808558038016 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22808356711552 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22808155385088 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22807954058624 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22807752732160 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22807551405696 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22807350079232 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22807148752768 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22806947426304 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22806746099840 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22806544773376 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22806343446912 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22806142120448 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22805940793984 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22805739467520 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22805538141056 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22805336814592 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22805135488128 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22804934161664 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22804732835200 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22804531508736 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22804330182272 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22804128855808 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22803927525248 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22803726198784 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22803524872320 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22803323545856 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22803122219392 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22802920892928 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22802719566464 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22802518240000 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22802316913536 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22802115587072 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22801914260608 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22801712934144 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22801511607680 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22801310281216 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22801108954752 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22800907628288 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22800706301824 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22800504975360 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22800303648896 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22800102322432 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22799900995968 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22799699669504 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22799498343040 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22799297016576 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22799095690112 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22798894363648 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22798693037184 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22798491710720 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22798290384256 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22798089057792 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22797887731328 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22810249979648 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22810243389184 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 71, m: 71)                                                                 	 0.402284  	 700       	 5.81268   	 0         	 0.211508  	 27.4821   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3550, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.255267  	 600       	 86.4      	 0         	 4.8343    	 17.8723   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3550, r: 71, r2: 71, leftOrthog: 1)        	 0.129494  	 600       	 165.835   	 0         	 28.4022   	 5.83882   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, r1_: 71, n: 50, r2: 71)           	 0.0623598 	 600       	 344.367   	 0         	 39.19     	 8.78713   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.0422739 	 100       	 61.2344   	 0         	 3.45444   	 17.7263   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 71)                                                                 	 0.0411278 	 100       	 3.85789   	 0         	 0.187707  	 20.5527   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3550, cols: 21, reductionFactor: 37, colBlockingSize: 12)                  	 0.0396733 	 700       	 56.7385   	 0         	 10.5852   	 5.36018   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0369116 	 100       	 3.1607    	 0         	 0.163634  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 21, Qr2: 71)       	 0.0334893 	 700       	 0         	 0         	 75.5155   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3550, Xcols: 21, r: 21, streamingCols: 0)                   	 0.0282159 	 700       	 38.8393   	 0         	 29.6356   	 1.31056   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 21, m: 50, k: 2500)   	 0.0252675 	 800       	 166.222   	 0         	 45.225    	 3.67544   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0222055 	 100       	 82.0957   	 0         	 6.48489   	 12.6595   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 71, r2: 71, leftOrthog: 1)        	 0.0143746 	 100       	 175.344   	 0         	 30.1968   	 5.80673   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 21, m: 3550)                                                                  	 0.0138203 	 700       	 0         	 0         	 60.4155   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 21, m: 2500, k: 50)	 0.0132097 	 800       	 317.947   	 0         	 86.5058   	 3.67544   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1050, m: 50, k: 21) 	 0.010857  	 800       	 162.476   	 0         	 44.5647   	 3.64583   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3550, r: 50, r2: 50, leftOrthog: 1)        	 0.0108006 	 100       	 164.343   	 0         	 39.8128   	 4.12791   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 21, m: 21)                                                                  	 0.0103482 	 900       	 1.07393   	 0         	 0.935119  	 1.14844   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 21, n: 50, r2left: 50, r2right: 21)                	 0.00950671	 700       	 0         	 0         	 87.8285   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3550, m: 21)                                                         	 0.00842415	 700       	 0         	 0         	 99.1151   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, r1_: 71, n: 50, r2: 50)           	 0.00765201	 100       	 329.391   	 0         	 37.6415   	 8.75074   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1050, m: 21, k: 21) 	 0.00677054	 700       	 95.7487   	 0         	 36.8405   	 2.59901   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 21, n: 50, r2: 21)                                                                                         	 0.00629746	 800       	 0         	 0         	 44.8181   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 21, reductionFactor: 37, colBlockingSize: 12)                  	 0.00590462	 100       	 38.3529   	 0         	 7.17283   	 5.34698   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, r1_: 50, n: 50, r2: 71)           	 0.00529262	 100       	 476.229   	 0         	 65.4647   	 7.27459   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 71, reductionFactor: 37, colBlockingSize: 12)                    	 0.00511036	 100       	 10.1309   	 0         	 1.34488   	 7.53295   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 21, r: 21, streamingCols: 0)                   	 0.00333374	 100       	 33.071    	 0         	 25.2499   	 1.30975   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 21, Qr2: 50)       	 0.00306642	 100       	 0         	 0         	 92.6161   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 71, leftOrthog: 1)          	 0.00170679	 100       	 20.7993   	 0         	 7.33542   	 2.83546   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 21, m: 2500)                                                                  	 0.00144602	 100       	 0         	 0         	 58.0904   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 21, reductionFactor: 37, colBlockingSize: 12)                    	 0.00132647	 100       	 3.41446   	 0         	 0.899227  	 3.79711   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 21, n: 50, r2left: 50, r2right: 0)                 	 0.00132456	 100       	 0         	 0         	 63.4174   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 21)                                                         	 0.00112417	 100       	 0         	 0         	 74.7215   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000891299	 100       	 0.560979  	 0         	 2.24392   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 21)                                                                                          	 0.000819932	 200       	 0         	 0         	 4.0979    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 21, n: 50, r2: 1)                                                                                          	 0.000812353	 200       	 0         	 0         	 4.13613   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000726633	 100       	 34.4053   	 0         	 8.25726   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 21, m: 50, k: 50)     	 0.000598123	 100       	 17.5549   	 0         	 6.15258   	 2.85326   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000532806	 100       	 0         	 0         	 7.50742   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 21)                 	 0.000485396	 100       	 0         	 0         	 11.7018   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000436253	 100       	 0         	 0         	 9.16899   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 21)   	 0.000433456	 100       	 24.2239   	 0         	 8.4899    	 2.85326   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 21, m: 50, k: 50)  	 0.000413433	 100       	 25.3971   	 0         	 8.90108   	 2.85326   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00040958	 100       	 0.610381  	 0         	 9.7661    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 21, n: 50, r2left: 1, r2right: 0)                  	 0.000408089	 100       	 0         	 0         	 4.11675   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00039521	 100       	 1.26515   	 0         	 15.1818   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000345175	 100       	 0.72427   	 0         	 11.5883   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 21)                                                                                 	 0.000341863	 100       	 0.307141  	 0         	 4.91425   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 21)                                                           	 0.000319295	 100       	 0         	 0         	 5.26159   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 21, m: 21, fromLeft: 1)                	 0.000303466	 800       	 0         	 0         	 18.6011   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 21, k: 21)   	 0.000206394	 100       	 21.3669   	 0         	 9.84912   	 2.16942   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1050, m: 0, k: 21)  	 5.35e-06  	 100       	 0         	 0         	 3297.2    	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.47774   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.4777    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.24455   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.24322   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.15988   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.480324  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.371761  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.32545   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.233079  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.156376  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.120649  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.076031  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0473487 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.036992  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0315496 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0258656 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0182727 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0152663 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0136232 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0117247 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0103482 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.00986762	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00846255	 1300      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00283635	 6300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0025651 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00119032	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109662	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000891299	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00039521	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000303466	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23353378850688 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23353146468352 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23352945141888 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23352743815424 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23352542488960 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23352341162496 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23352139836032 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23351938509568 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23351737183104 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23351535856640 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23351334530176 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23351133203712 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23350931877248 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23350730550784 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23350529224320 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23350327897856 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23350126571392 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23349925244928 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23349723918464 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23349522592000 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23349321265536 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23349119939072 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23348918612608 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23348717286144 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23348515959680 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23348314633216 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23348113306752 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23347911980288 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23347710653824 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23347509327360 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23347308000896 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23347106674432 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23346905343872 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23346704017408 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23346502690944 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23346301364480 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23346100038016 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23345898711552 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23345697385088 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23345496058624 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23345294732160 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23345093405696 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23344892079232 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23344690752768 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23344489426304 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23344288099840 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23344086773376 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23343885446912 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23343684120448 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23343482793984 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23343281467520 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23343080141056 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23342878814592 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23342677488128 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23342476161664 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23342274835200 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23342073508736 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23341872182272 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23341670855808 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23341469529344 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23341268202880 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23341066876416 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23340865549952 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23353273190144 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23353266599680 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 72, m: 72)                                                                 	 0.411718  	 700       	 5.92287   	 0         	 0.212511  	 27.871    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3600, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.264366  	 600       	 87.0011   	 0         	 4.80032   	 18.124    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3600, r: 72, r2: 72, leftOrthog: 1)        	 0.127177  	 600       	 176.092   	 0         	 29.7401   	 5.92105   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, r1_: 72, n: 50, r2: 72)           	 0.056443  	 600       	 396.77    	 0         	 44.5264   	 8.91089   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 72)                                                                 	 0.044687  	 100       	 3.59538   	 0         	 0.174547  	 20.5983   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.0440429 	 100       	 60.4423   	 0         	 3.3637    	 17.969    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3600, cols: 22, reductionFactor: 37, colBlockingSize: 12)                  	 0.0432063 	 700       	 57.9843   	 0         	 10.3279   	 5.61434   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0379551 	 100       	 3.07381   	 0         	 0.159135  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 22, Qr2: 72)       	 0.0346681 	 700       	 0         	 0         	 74.8539   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3600, Xcols: 22, r: 22, streamingCols: 0)                   	 0.0299084 	 700       	 40.7805   	 0         	 29.7038   	 1.3729    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 22, m: 50, k: 2500)   	 0.0246237 	 800       	 178.689   	 0         	 47.07     	 3.79625   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0228665 	 100       	 80.8451   	 0         	 6.38487   	 12.662    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 22, m: 3600)                                                                  	 0.0159574 	 700       	 0         	 0         	 55.588    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3600, r: 50, r2: 50, leftOrthog: 1)        	 0.0153916 	 100       	 116.947   	 0         	 28.3272   	 4.12844   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 72, r2: 72, leftOrthog: 1)        	 0.014592  	 100       	 177.632   	 0         	 30.1737   	 5.88697   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 22, m: 2500, k: 50)	 0.0138859 	 800       	 316.869   	 0         	 83.4691   	 3.79625   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1100, m: 50, k: 22) 	 0.0135369 	 800       	 143.017   	 0         	 37.9644   	 3.76712   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 22, m: 22)                                                                  	 0.010264  	 900       	 1.24477   	 0         	 1.03398   	 1.20387   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 22, n: 50, r2left: 50, r2right: 22)                	 0.00985783	 700       	 0         	 0         	 89.9833   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3600, m: 22)                                                         	 0.00867419	 700       	 0         	 0         	 102.262   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1100, m: 22, k: 22) 	 0.00757305	 700       	 98.4227   	 0         	 36.148    	 2.72277   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, r1_: 72, n: 50, r2: 50)           	 0.00733857	 100       	 353.203   	 0         	 39.8099   	 8.87224   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, r1_: 50, n: 50, r2: 72)           	 0.00680131	 100       	 381.103   	 0         	 52.084    	 7.31707   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 22, n: 50, r2: 22)                                                                                         	 0.00650301	 800       	 0         	 0         	 47.6333   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 22, reductionFactor: 37, colBlockingSize: 12)                  	 0.00629195	 100       	 39.5014   	 0         	 7.0546    	 5.59937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 72, reductionFactor: 37, colBlockingSize: 12)                    	 0.00593076	 100       	 8.97712   	 0         	 1.18487   	 7.57643   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 22, r: 22, streamingCols: 0)                   	 0.00349899	 100       	 34.5814   	 0         	 25.2054   	 1.37198   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 22, Qr2: 50)       	 0.00318147	 100       	 0         	 0         	 90.5241   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 22, m: 2500)                                                                  	 0.00205755	 100       	 0         	 0         	 42.7694   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 72, leftOrthog: 1)          	 0.00177712	 100       	 20.2575   	 0         	 7.11265   	 2.8481    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 22)                                                         	 0.00129107	 100       	 0         	 0         	 68.1603   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 22, n: 50, r2left: 50, r2right: 0)                 	 0.00117025	 100       	 0         	 0         	 75.1975   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 22, reductionFactor: 37, colBlockingSize: 12)                    	 0.00109263	 100       	 4.54942   	 0         	 1.15978   	 3.92267   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00101892	 100       	 0.490718  	 0         	 1.96287   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 22)                                                                                          	 0.00084783	 200       	 0         	 0         	 4.15178   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 22, n: 50, r2: 1)                                                                                          	 0.000739683	 200       	 0         	 0         	 4.7588    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00073641	 100       	 33.9485   	 0         	 8.14764   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 22, m: 50, k: 50)     	 0.000679373	 100       	 16.1914   	 0         	 5.53451   	 2.92553   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000516062	 100       	 0         	 0         	 7.75101   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 22)                 	 0.000498376	 100       	 0         	 0         	 11.5575   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 22)   	 0.000489011	 100       	 22.4944   	 0         	 7.68899   	 2.92553   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000460201	 100       	 0         	 0         	 8.69185   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 22, m: 50, k: 50)  	 0.000435831	 100       	 25.2391   	 0         	 8.6272    	 2.92553   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 22, n: 50, r2left: 1, r2right: 0)                  	 0.000412661	 100       	 0         	 0         	 4.265     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000386561	 100       	 1.29346   	 0         	 15.5215   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000380442	 100       	 0.65713   	 0         	 10.5141   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000348636	 100       	 0.71708   	 0         	 11.4733   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 22)                                                           	 0.000338194	 100       	 0         	 0         	 5.20411   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 22)                                                                                 	 0.000335845	 100       	 0.327532  	 0         	 5.24051   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 22, m: 22, fromLeft: 1)                	 0.000326532	 800       	 0         	 0         	 18.9727   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 22, k: 22)   	 0.000255898	 100       	 18.9138   	 0         	 8.39084   	 2.2541    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1100, m: 0, k: 22)  	 5.531e-06 	 100       	 0         	 0         	 3500.27   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.52717   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.52712   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.27643   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.27496   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.20163   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.49436   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.387797  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.337875  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.250616  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.158938  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.129356  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0713193 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0510138 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0383097 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0334074 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0253031 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0218604 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.018015  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0143217 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0119391 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0103035 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.010264  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00860659	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00378191	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00255967	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00120256	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106492	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00101892	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000386561	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000326532	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23045003290496 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23044781238272 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23044579911808 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23044378585344 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23044177258880 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23043975932416 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23043774605952 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23043573279488 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23043371953024 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23043170626560 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23042969300096 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23042767973632 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23042566647168 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23042365320704 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23042163994240 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23041962667776 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23041761341312 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23041560014848 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23041358688384 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23041157361920 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23040956035456 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23040754708992 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23040553382528 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23040352056064 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23040150729600 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23039949403136 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23039748076672 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23039546750208 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23039345423744 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23039144097280 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23038942770816 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23038741444352 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23038540113792 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23038338787328 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23038137460864 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23037936134400 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23037734807936 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23037533481472 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23037332155008 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23037130828544 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23036929502080 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23036728175616 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23036526849152 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23036325522688 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23036124196224 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23035922869760 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23035721543296 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23035520216832 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23035318890368 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23035117563904 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23034916237440 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23034714910976 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23034513584512 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23034312258048 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23034110931584 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23033909605120 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23033708278656 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23033506952192 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23033305625728 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23033104299264 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23032902972800 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23032701646336 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23032500319872 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23044897629952 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23044891039488 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 73, m: 73)                                                                 	 0.44499   	 700       	 5.71154   	 0         	 0.202108  	 28.2598   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3650, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.277894  	 600       	 86.2627   	 0         	 4.69438   	 18.3757   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3650, r: 73, r2: 73, leftOrthog: 1)        	 0.126697  	 600       	 184.227   	 0         	 30.6877   	 6.00329   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, r1_: 73, n: 50, r2: 73)           	 0.0713735 	 600       	 327.026   	 0         	 36.1969   	 9.03465   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.0464319 	 100       	 58.9361   	 0         	 3.23621   	 18.2115   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3650, cols: 23, reductionFactor: 37, colBlockingSize: 12)                  	 0.0464168 	 700       	 59.8113   	 0         	 10.1921   	 5.86843   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 73)                                                                 	 0.0463266 	 100       	 3.5113    	 0         	 0.170097  	 20.643    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0373447 	 100       	 3.12405   	 0         	 0.161736  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 23, Qr2: 73)       	 0.0355711 	 700       	 0         	 0         	 74.8429   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3650, Xcols: 23, r: 23, streamingCols: 0)                   	 0.0312981 	 700       	 43.1845   	 0         	 30.0887   	 1.43524   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 23, m: 50, k: 2500)   	 0.0260308 	 800       	 176.714   	 0         	 45.1527   	 3.91369   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0228961 	 100       	 81.8622   	 0         	 6.46398   	 12.6644   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 23, m: 3650)                                                                  	 0.0189716 	 700       	 0         	 0         	 49.5603   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 73, r2: 73, leftOrthog: 1)        	 0.0144661 	 100       	 184.189   	 0         	 30.8671   	 5.96717   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 23, m: 2500, k: 50)	 0.0141293 	 800       	 325.564   	 0         	 83.1858   	 3.91369   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3650, r: 50, r2: 50, leftOrthog: 1)        	 0.0122406 	 100       	 149.094   	 0         	 36.1094   	 4.12896   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1150, m: 50, k: 23) 	 0.0120408 	 800       	 175.736   	 0         	 45.2329   	 3.88514   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 23, m: 23)                                                                  	 0.0114576 	 900       	 1.27425   	 0         	 1.01173   	 1.25947   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3650, m: 23)                                                         	 0.0112429 	 700       	 0         	 0         	 83.6297   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 23, n: 50, r2left: 50, r2right: 23)                	 0.0104547 	 700       	 0         	 0         	 89.9351   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, r1_: 73, n: 50, r2: 50)           	 0.007965  	 100       	 334.526   	 0         	 37.1956   	 8.99369   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1150, m: 23, k: 23) 	 0.00758915	 700       	 112.225   	 0         	 39.425    	 2.84653   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 23, n: 50, r2: 23)                                                                                         	 0.00698099	 800       	 0         	 0         	 48.4974   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 23, reductionFactor: 37, colBlockingSize: 12)                  	 0.00644237	 100       	 42.1659   	 0         	 7.20592   	 5.85157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 73, reductionFactor: 37, colBlockingSize: 12)                    	 0.00585343	 100       	 9.35011   	 0         	 1.22718   	 7.6192    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, r1_: 50, n: 50, r2: 73)           	 0.00564296	 100       	 472.181   	 0         	 64.1649   	 7.35887   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 23, r: 23, streamingCols: 0)                   	 0.00362537	 100       	 36.4791   	 0         	 25.4351   	 1.4342    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 23, Qr2: 50)       	 0.00340429	 100       	 0         	 0         	 85.7741   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 23)                                                         	 0.00207254	 100       	 0         	 0         	 44.3901   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 73, leftOrthog: 1)          	 0.00176316	 100       	 20.7015   	 0         	 7.23701   	 2.8605    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 23, m: 2500)                                                                  	 0.00166832	 100       	 0         	 0         	 55.1452   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 23, n: 50, r2left: 50, r2right: 0)                 	 0.00116139	 100       	 0         	 0         	 79.2152   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 23, reductionFactor: 37, colBlockingSize: 12)                    	 0.00105415	 100       	 5.1539    	 0         	 1.2742    	 4.0448    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 23)                                                                                          	 0.000842339	 200       	 0         	 0         	 4.36879   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000795311	 100       	 0.628685  	 0         	 2.51474   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 23, n: 50, r2: 1)                                                                                          	 0.000755655	 200       	 0         	 0         	 4.86995   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000731636	 100       	 34.17     	 0         	 8.2008    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 23, m: 50, k: 50)     	 0.000670911	 100       	 17.1409   	 0         	 5.72356   	 2.99479   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 23)   	 0.00056085	 100       	 20.5046   	 0         	 6.84675   	 2.99479   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00053942	 100       	 0         	 0         	 7.41537   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 23)                 	 0.000515617	 100       	 0         	 0         	 11.3262   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000442746	 100       	 0         	 0         	 9.03453   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 23, n: 50, r2left: 1, r2right: 0)                  	 0.000431304	 100       	 0         	 0         	 4.26613   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 23, m: 50, k: 50)  	 0.000401516	 100       	 28.6414   	 0         	 9.56375   	 2.99479   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000400001	 100       	 0.624998  	 0         	 9.99998   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000390115	 100       	 1.28167   	 0         	 15.3801   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 23, m: 23, fromLeft: 1)                	 0.000361442	 800       	 0         	 0         	 18.7338   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00034231	 100       	 0.730332  	 0         	 11.6853   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 23)                                                                                 	 0.000340761	 100       	 0.33748   	 0         	 5.39968   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 23)                                                           	 0.000313565	 100       	 0         	 0         	 5.868     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 23, k: 23)   	 0.000234198	 100       	 22.5877   	 0         	 9.66362   	 2.3374    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1150, m: 0, k: 23)  	 5.17e-06  	 100       	 0         	 0         	 4092.84   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.58838   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.58833   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.32606   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.32482   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.23683   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.528661  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.406988  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.353658  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.262207  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.155167  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.141575  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0857131 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0543462 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0394181 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0349235 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0267017 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.02064   	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0204302 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0145309 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.013629  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.012563  	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0114576 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.00911841	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00263792	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00250162	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00114401	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108307	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000795311	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000390115	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000361442	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23268375832448 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23268186646528 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23267985320064 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23267783993600 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23267582667136 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23267381340672 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23267180014208 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23266978687744 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23266777361280 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23266576034816 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23266374708352 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23266173381888 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23265972055424 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23265770728960 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23265569402496 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23265368076032 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23265166749568 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23264965423104 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23264764096640 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23264562770176 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23264361443712 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23264160117248 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23263958790784 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23263757464320 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23263556137856 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23263354811392 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23263153484928 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23262952158464 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23262750832000 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23262549505536 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23262348179072 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23262146852608 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23261945522048 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23261744195584 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23261542869120 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23261341542656 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23261140216192 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23260938889728 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23260737563264 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23260536236800 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23260334910336 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23260133583872 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23259932257408 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23259730930944 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23259529604480 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23259328278016 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23259126951552 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23258925625088 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23258724298624 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23258522972160 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23258321645696 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23258120319232 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23257918992768 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23257717666304 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23257516339840 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23257315013376 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23257113686912 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23256912360448 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23256711033984 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23256509707520 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23256308381056 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23256107054592 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23255905728128 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23268270171904 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23268263581440 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 74, m: 74)                                                                 	 0.433842  	 700       	 6.10236   	 0         	 0.213006  	 28.6487   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3700, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.278297  	 600       	 89.7265   	 0         	 4.81689   	 18.6275   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3700, r: 74, r2: 74, leftOrthog: 1)        	 0.127306  	 600       	 190.984   	 0         	 31.3833   	 6.08553   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, r1_: 74, n: 50, r2: 74)           	 0.0662428 	 600       	 367.035   	 0         	 40.0763   	 9.15842   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3700, cols: 24, reductionFactor: 37, colBlockingSize: 12)                  	 0.0482319 	 700       	 63.5331   	 0         	 10.3771   	 6.12245   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 74)                                                                 	 0.0470309 	 100       	 3.50124   	 0         	 0.16925   	 20.6868   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.0463509 	 100       	 60.6677   	 0         	 3.28755   	 18.4538   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0388784 	 100       	 3.00081   	 0         	 0.155356  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 24, Qr2: 74)       	 0.0371057 	 700       	 0         	 0         	 73.5887   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3700, Xcols: 24, r: 24, streamingCols: 0)                   	 0.0358068 	 700       	 41.6636   	 0         	 27.8208   	 1.49757   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 24, m: 50, k: 2500)   	 0.0261598 	 800       	 183.487   	 0         	 45.5538   	 4.02793   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0235608 	 100       	 80.6425   	 0         	 6.36651   	 12.6667   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 24, m: 3700)                                                                  	 0.0150736 	 700       	 0         	 0         	 65.9803   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 74, r2: 74, leftOrthog: 1)        	 0.0150672 	 100       	 181.719   	 0         	 30.0495   	 6.04733   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1200, m: 50, k: 24) 	 0.0142596 	 800       	 161.575   	 0         	 40.3938   	 4         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3700, r: 50, r2: 50, leftOrthog: 1)        	 0.0136016 	 100       	 136.014   	 0         	 32.9374   	 4.12946   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 24, m: 2500, k: 50)	 0.0130701 	 800       	 367.25    	 0         	 91.1758   	 4.02793   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3700, m: 24)                                                         	 0.0120577 	 700       	 0         	 0         	 82.4836   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 24, m: 24)                                                                  	 0.0108395 	 900       	 1.5304    	 0         	 1.16374   	 1.31507   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 24, n: 50, r2left: 50, r2right: 24)                	 0.00929715	 700       	 0         	 0         	 106.975   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, r1_: 74, n: 50, r2: 50)           	 0.0079148 	 100       	 345.934   	 0         	 37.9518   	 9.1151    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1200, m: 24, k: 24) 	 0.00787113	 700       	 122.94    	 0         	 41.39     	 2.9703    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 24, n: 50, r2: 24)                                                                                         	 0.00720178	 800       	 0         	 0         	 51.1874   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 24, reductionFactor: 37, colBlockingSize: 12)                  	 0.00679286	 100       	 43.5433   	 0         	 7.13408   	 6.10357   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, r1_: 50, n: 50, r2: 74)           	 0.00616151	 100       	 444.372   	 0         	 60.0503   	 7.4       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 74, reductionFactor: 37, colBlockingSize: 12)                    	 0.0057972 	 100       	 9.70123   	 0         	 1.26627   	 7.66129   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 24, r: 24, streamingCols: 0)                   	 0.0037715 	 100       	 38.1811   	 0         	 25.5151   	 1.49641   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 24, Qr2: 50)       	 0.00349645	 100       	 0         	 0         	 84.6572   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 24)                                                         	 0.00192145	 100       	 0         	 0         	 49.9622   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 74, leftOrthog: 1)          	 0.00181236	 100       	 20.4154   	 0         	 7.10677   	 2.87267   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 24, m: 2500)                                                                  	 0.00162412	 100       	 0         	 0         	 59.109    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 24, reductionFactor: 37, colBlockingSize: 12)                    	 0.00137306	 100       	 4.30838   	 0         	 1.03477   	 4.16362   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 24, n: 50, r2left: 50, r2right: 0)                 	 0.00117396	 100       	 0         	 0         	 81.7747   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 24)                                                                                          	 0.000850246	 200       	 0         	 0         	 4.51634   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000848282	 100       	 0.589427  	 0         	 2.35771   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 24, n: 50, r2: 1)                                                                                          	 0.000726965	 200       	 0         	 0         	 5.28224   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000700892	 100       	 35.6688   	 0         	 8.56052   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000541211	 100       	 0         	 0         	 7.39083   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 24, m: 50, k: 50)     	 0.000502231	 100       	 23.8934   	 0         	 7.80517   	 3.06122   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 24)   	 0.000501559	 100       	 23.9254   	 0         	 7.81563   	 3.06122   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 24)                 	 0.000482496	 100       	 0         	 0         	 12.2695   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000462986	 100       	 0         	 0         	 8.63957   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 24, n: 50, r2left: 1, r2right: 0)                  	 0.000431571	 100       	 0         	 0         	 4.44886   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000394122	 100       	 1.26864   	 0         	 15.2237   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000384812	 100       	 0.649668  	 0         	 10.3947   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 24, m: 24, fromLeft: 1)                	 0.000372707	 800       	 0         	 0         	 19.7818   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 24)                                                           	 0.000363446	 100       	 0         	 0         	 5.28277   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 24, m: 50, k: 50)  	 0.00035742	 100       	 33.5739   	 0         	 10.9675   	 3.06122   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 24)                                                                                 	 0.000333277	 100       	 0.360061  	 0         	 5.76097   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000327064	 100       	 0.764376  	 0         	 12.23     	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 24, k: 24)   	 0.000235628	 100       	 24.4453   	 0         	 10.1041   	 2.41935   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1200, m: 0, k: 24)  	 6.071e-06 	 100       	 0         	 0         	 3795.09   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.60152   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.60148   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.33453   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.33326   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.2481    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.519752  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.410403  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.354619  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.266892  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.157788  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.144772  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.08102   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0569084 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0410651 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0395783 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0266621 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.022874  	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0166977 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0143426 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0134276 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0113852 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0108395 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0093202 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00376679	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0025876 	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00203754	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00104515	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000848282	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000394122	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000372707	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22787059029888 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22786881873920 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22786680547456 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22786479220992 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22786277894528 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22786076568064 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22785875241600 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22785673915136 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22785472588672 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22785271262208 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22785069935744 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22784868609280 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22784667282816 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22784465956352 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22784264629888 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22784063303424 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22783861976960 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22783660650496 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22783459324032 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22783257997568 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22783056671104 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22782855344640 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22782654018176 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22782452691712 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22782251365248 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22782050038784 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22781848712320 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22781647385856 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22781446059392 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22781244732928 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22781043406464 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22780842080000 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22780640749440 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22780439422976 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22780238096512 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22780036770048 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22779835443584 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22779634117120 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22779432790656 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22779231464192 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22779030137728 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22778828811264 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22778627484800 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22778426158336 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22778224831872 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22778023505408 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22777822178944 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22777620852480 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22777419526016 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22777218199552 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22777016873088 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22776815546624 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22776614220160 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22776412893696 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22776211567232 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22776010240768 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22775808914304 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22775607587840 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22775406261376 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22775204934912 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22775003608448 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22774802281984 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22774600955520 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22786953369344 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22786774775552 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 75, m: 75)                                                                 	 0.446944  	 700       	 6.16688   	 0         	 0.212376  	 29.0376   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3750, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.285077  	 600       	 91.1917   	 0         	 4.83028   	 18.8792   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3750, r: 75, r2: 75, leftOrthog: 1)        	 0.130901  	 600       	 193.371   	 0         	 31.3519   	 6.16776   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, r1_: 75, n: 50, r2: 75)           	 0.0678926 	 600       	 372.831   	 0         	 40.1664   	 9.28218   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3750, cols: 25, reductionFactor: 37, colBlockingSize: 12)                  	 0.051871  	 700       	 64.9676   	 0         	 10.1887   	 6.37641   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 75)                                                                 	 0.0512082 	 100       	 3.25469   	 0         	 0.157006  	 20.7297   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.0471498 	 100       	 61.2625   	 0         	 3.27679   	 18.6959   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 25, Qr2: 75)       	 0.0381671 	 700       	 0         	 0         	 73.3617   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0372736 	 100       	 3.13001   	 0         	 0.162045  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3750, Xcols: 25, r: 25, streamingCols: 0)                   	 0.0370675 	 700       	 44.2605   	 0         	 28.3739   	 1.5599    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 25, m: 50, k: 2500)   	 0.0272807 	 800       	 183.279   	 0         	 44.2803   	 4.13907   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0226126 	 100       	 85.1593   	 0         	 6.72191   	 12.6689   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 25, m: 3750)                                                                  	 0.0171394 	 700       	 0         	 0         	 61.2625   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1250, m: 50, k: 25) 	 0.0157058 	 800       	 159.176   	 0         	 38.7117   	 4.11184   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 25, m: 2500, k: 50)	 0.0149368 	 800       	 334.743   	 0         	 80.8738   	 4.13907   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 75, r2: 75, leftOrthog: 1)        	 0.0142042 	 100       	 198.004   	 0         	 32.3143   	 6.12745   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3750, r: 50, r2: 50, leftOrthog: 1)        	 0.0128931 	 100       	 145.426   	 0         	 35.2126   	 4.12996   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 25, m: 25)                                                                  	 0.0123046 	 900       	 1.52372   	 0         	 1.11178   	 1.37053   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3750, m: 25)                                                         	 0.0110701 	 700       	 0         	 0         	 94.8504   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 25, n: 50, r2left: 50, r2right: 25)                	 0.0109915 	 700       	 0         	 0         	 95.528    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1250, m: 25, k: 25) 	 0.00838048	 700       	 130.512   	 0         	 42.1814   	 3.09406   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, r1_: 75, n: 50, r2: 50)           	 0.00809174	 100       	 347.577   	 0         	 37.631    	 9.23645   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 25, n: 50, r2: 25)                                                                                         	 0.00791758	 800       	 0         	 0         	 50.5205   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 25, reductionFactor: 37, colBlockingSize: 12)                  	 0.00723647	 100       	 44.3511   	 0         	 6.97854   	 6.35537   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, r1_: 50, n: 50, r2: 75)           	 0.00580455	 100       	 484.533   	 0         	 65.1213   	 7.44048   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 25, Qr2: 50)       	 0.0050618 	 100       	 0         	 0         	 59.2675   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 75, reductionFactor: 37, colBlockingSize: 12)                    	 0.00486028	 100       	 11.8862   	 0         	 1.54312   	 7.7027    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 25, r: 25, streamingCols: 0)                   	 0.00405523	 100       	 38.5305   	 0         	 24.7212   	 1.5586    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 25, m: 2500)                                                                  	 0.00225851	 100       	 0         	 0         	 44.277    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 75, leftOrthog: 1)          	 0.00181929	 100       	 20.6125   	 0         	 7.14566   	 2.88462   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 25)                                                         	 0.00179817	 100       	 0         	 0         	 55.6121   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 25, n: 50, r2left: 50, r2right: 0)                 	 0.00148455	 100       	 0         	 0         	 67.3605   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 25, reductionFactor: 37, colBlockingSize: 12)                    	 0.00125072	 100       	 5.13219   	 0         	 1.19931   	 4.27928   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000907968	 100       	 0.55068   	 0         	 2.20272   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 25)                                                                                          	 0.000843738	 200       	 0         	 0         	 4.74081   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 25, n: 50, r2: 1)                                                                                          	 0.000712823	 200       	 0         	 0         	 5.61149   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000701626	 100       	 35.6315   	 0         	 8.55156   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 25, m: 50, k: 50)     	 0.000701037	 100       	 17.8307   	 0         	 5.70583   	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000553102	 100       	 0         	 0         	 7.23194   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 25, m: 50, k: 50)  	 0.000524593	 100       	 23.828    	 0         	 7.62496   	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 25)   	 0.000514997	 100       	 24.272    	 0         	 7.76704   	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 25)                 	 0.000503721	 100       	 0         	 0         	 11.9114   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 25, n: 50, r2left: 1, r2right: 0)                  	 0.00042831	 100       	 0         	 0         	 4.66952   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000420037	 100       	 0         	 0         	 9.52297   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000410757	 100       	 1.21726   	 0         	 14.6072   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 25, m: 25, fromLeft: 1)                	 0.000404941	 800       	 0         	 0         	 19.756    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000383561	 100       	 0.651787  	 0         	 10.4286   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 25)                                                                                 	 0.000333868	 100       	 0.374399  	 0         	 5.99039   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000316628	 100       	 0.78957   	 0         	 12.6331   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 25)                                                           	 0.000316559	 100       	 0         	 0         	 6.31794   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 25, k: 25)   	 0.000300833	 100       	 20.7756   	 0         	 8.31026   	 2.5       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1250, m: 0, k: 25)  	 5.251e-06 	 100       	 0         	 0         	 4761      	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.66821   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.66817   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.38115   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.37983   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.28963   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.535426  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.420057  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.360335  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.286956  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.159818  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.153268  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0824905 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0608672 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0436489 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0411227 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0279818 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0249074 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0193979 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0154614 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0134081 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0131848 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0123046 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0100272 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00568193	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00253903	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00112928	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00103406	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000907968	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000410757	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000404941	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23051021956992 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23050821036032 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23050619709568 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23050418383104 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23050217056640 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23050015730176 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23049814403712 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23049613077248 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23049411750784 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23049210424320 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23049009097856 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23048807771392 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23048606444928 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23048405118464 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23048203792000 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23048002465536 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23047801139072 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23047599812608 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23047398486144 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23047197159680 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23046995833216 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23046794506752 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23046593180288 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23046391853824 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23046190527360 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23045989200896 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23045787874432 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23045586547968 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23045385221504 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23045183895040 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23044982568576 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23044781242112 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23044579911552 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23044378585088 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23044177258624 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23043975932160 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23043774605696 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23043573279232 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23043371952768 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23043170626304 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23042969299840 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23042767973376 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23042566646912 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23042365320448 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23042163993984 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23041962667520 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23041761341056 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23041560014592 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23041358688128 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23041157361664 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23040956035200 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23040754708736 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23040553382272 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23040352055808 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23040150729344 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23039949402880 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23039748076416 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23039546749952 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23039345423488 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23039144097024 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23038942770560 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23038741444096 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23038540117632 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23050916296448 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23050909705984 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 76, m: 76)                                                                 	 0.450903  	 700       	 6.36052   	 0         	 0.21615   	 29.4265   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3800, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.288216  	 600       	 93.8545   	 0         	 4.90591   	 19.1309   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3800, r: 76, r2: 76, leftOrthog: 1)        	 0.137107  	 600       	 192.102   	 0         	 30.7363   	 6.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, r1_: 76, n: 50, r2: 76)           	 0.0647022 	 600       	 407.073   	 0         	 43.2783   	 9.40594   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3800, cols: 26, reductionFactor: 37, colBlockingSize: 12)                  	 0.0543868 	 700       	 67.912    	 0         	 10.2427   	 6.63031   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.0484556 	 100       	 61.2118   	 0         	 3.23226   	 18.9378   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 76)                                                                 	 0.0460979 	 100       	 3.65888   	 0         	 0.176147  	 20.7718   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 26, Qr2: 76)       	 0.0396452 	 700       	 0         	 0         	 72.4063   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.037729  	 100       	 3.09223   	 0         	 0.160089  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3800, Xcols: 26, r: 26, streamingCols: 0)                   	 0.0358577 	 700       	 50.1471   	 0         	 30.9125   	 1.62223   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 26, m: 50, k: 2500)   	 0.0271444 	 800       	 191.568   	 0         	 45.104    	 4.24726   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0228637 	 100       	 85.347    	 0         	 6.73555   	 12.6711   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 26, m: 3800)                                                                  	 0.018408  	 700       	 0         	 0         	 60.113    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1300, m: 50, k: 26) 	 0.0174274 	 800       	 155.158   	 0         	 36.7604   	 4.22078   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 26, m: 2500, k: 50)	 0.0156113 	 800       	 333.092   	 0         	 78.4251   	 4.24726   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 76, r2: 76, leftOrthog: 1)        	 0.0140466 	 100       	 205.602   	 0         	 33.1214   	 6.20753   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 26, m: 26)                                                                  	 0.0136792 	 900       	 1.5418    	 0         	 1.08111   	 1.42612   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3800, m: 26)                                                         	 0.0132601 	 700       	 0         	 0         	 83.4501   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 26, n: 50, r2left: 50, r2right: 26)                	 0.0116425 	 700       	 0         	 0         	 95.045    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3800, r: 50, r2: 50, leftOrthog: 1)        	 0.0108644 	 100       	 174.884   	 0         	 42.3403   	 4.13043   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1300, m: 26, k: 26) 	 0.00856352	 700       	 143.67    	 0         	 44.6482   	 3.21782   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 26, n: 50, r2: 26)                                                                                         	 0.00814644	 800       	 0         	 0         	 53.1079   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, r1_: 76, n: 50, r2: 50)           	 0.00795877	 100       	 362.87    	 0         	 38.7774   	 9.35776   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 26, reductionFactor: 37, colBlockingSize: 12)                  	 0.00784607	 100       	 44.2432   	 0         	 6.69645   	 6.60696   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 76, reductionFactor: 37, colBlockingSize: 12)                    	 0.00644392	 100       	 9.20574   	 0         	 1.18884   	 7.74346   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, r1_: 50, n: 50, r2: 76)           	 0.0058479 	 100       	 493.853   	 0         	 66.0203   	 7.48031   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 26, r: 26, streamingCols: 0)                   	 0.00396437	 100       	 42.6297   	 0         	 26.3019   	 1.62079   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 26, Qr2: 50)       	 0.00346004	 100       	 0         	 0         	 87.8603   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 26, m: 2500)                                                                  	 0.00215718	 100       	 0         	 0         	 48.2111   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 26, n: 50, r2left: 50, r2right: 0)                 	 0.00197264	 100       	 0         	 0         	 52.7212   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 26)                                                         	 0.00185808	 100       	 0         	 0         	 55.9717   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 76, leftOrthog: 1)          	 0.00181571	 100       	 20.9284   	 0         	 7.2258    	 2.89634   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 26, reductionFactor: 37, colBlockingSize: 12)                    	 0.0013345 	 100       	 5.20249   	 0         	 1.18457   	 4.39189   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 26)                                                                                          	 0.000837217	 200       	 0         	 0         	 4.96884   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 26, m: 50, k: 50)     	 0.000812178	 100       	 16.0063   	 0         	 5.02353   	 3.18627   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000777764	 100       	 0.642869  	 0         	 2.57147   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 26, n: 50, r2: 1)                                                                                          	 0.000775131	 200       	 0         	 0         	 5.36683   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000697287	 100       	 35.8532   	 0         	 8.60478   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000550327	 100       	 0         	 0         	 7.26841   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 26)                 	 0.000541323	 100       	 0         	 0         	 11.2317   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 26, m: 50, k: 50)  	 0.00052269	 100       	 24.8713   	 0         	 7.80577   	 3.18627   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 26)   	 0.000514154	 100       	 25.2843   	 0         	 7.93537   	 3.18627   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000452759	 100       	 0         	 0         	 8.83472   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 26, n: 50, r2left: 1, r2right: 0)                  	 0.000442652	 100       	 0         	 0         	 4.69895   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000423398	 100       	 1.18092   	 0         	 14.1711   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 26, m: 26, fromLeft: 1)                	 0.000417757	 800       	 0         	 0         	 20.7125   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000414881	 100       	 0.602582  	 0         	 9.64132   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 26, k: 26)   	 0.000361897	 100       	 18.6793   	 0         	 7.24184   	 2.57937   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 26)                                                                                 	 0.000358593	 100       	 0.362528  	 0         	 5.80045   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000348679	 100       	 0.716992  	 0         	 11.4719   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 26)                                                           	 0.000340562	 100       	 0         	 0         	 6.10755   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1300, m: 0, k: 26)  	 7.401e-06 	 100       	 0         	 0         	 3653.56   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.6802    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.68015   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.3806    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.37938   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.2945    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.53473   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.429547  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.366564  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.299481  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.163834  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.16137   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0792062 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0640149 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.043558  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0398221 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0279566 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0268744 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0205652 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.016134  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0154588 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0145991 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0136792 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0103091 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00384089	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00291143	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00285697	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112215	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000777764	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000423398	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000417757	 800       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22548203399040 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22547974318080 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22547772991616 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22547571665152 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22547370338688 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22547169012224 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22546967685760 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22546766359296 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22546565032832 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22546363706368 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22546162379904 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22545961053440 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22545759726976 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22545558400512 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22545357074048 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22545155747584 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22544954421120 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22544753094656 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22544551768192 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22544350441728 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22544149115264 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22543947788800 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22543746462336 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22543545135872 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22543343809408 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22543142482944 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22542941156480 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22542739830016 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22542538503552 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22542337177088 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22542135850624 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22541934524160 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22541733193600 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22541531867136 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22541330540672 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22541129214208 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22540927887744 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22540726561280 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22540525234816 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22540323908352 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22540122581888 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22539921255424 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22539719928960 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22539518602496 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22539317276032 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22539115949568 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22538914623104 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22538713296640 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22538511970176 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22538310643712 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22538109317248 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22537907990784 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22537706664320 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22537505337856 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22537304011392 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22537102684928 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22536901358464 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22536700032000 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22536498705536 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22536297379072 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22536096052608 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22535894726144 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22535693399680 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22548097738496 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22548091148032 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 77, m: 77)                                                                 	 0.465122  	 700       	 6.41268   	 0         	 0.21508   	 29.8154   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3850, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.294447  	 600       	 95.5427   	 0         	 4.9293    	 19.3826   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3850, r: 77, r2: 77, leftOrthog: 1)        	 0.139001  	 600       	 197.063   	 0         	 31.1206   	 6.33224   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, r1_: 77, n: 50, r2: 77)           	 0.0745739 	 600       	 367.313   	 0         	 38.5441   	 9.5297    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3850, cols: 27, reductionFactor: 37, colBlockingSize: 12)                  	 0.0576475 	 700       	 70.0032   	 0         	 10.1687   	 6.88415   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.0502523 	 100       	 60.5867   	 0         	 3.15892   	 19.1795   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 77)                                                                 	 0.0453544 	 100       	 3.76296   	 0         	 0.180798  	 20.813    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 27, Qr2: 77)       	 0.0409817 	 700       	 0         	 0         	 71.794    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0393165 	 100       	 2.96737   	 0         	 0.153625  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3850, Xcols: 27, r: 27, streamingCols: 0)                   	 0.037509  	 700       	 52.3783   	 0         	 31.0934   	 1.68455   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 27, m: 50, k: 2500)   	 0.0275338 	 800       	 196.122   	 0         	 45.0587   	 4.35259   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0225688 	 100       	 87.5999   	 0         	 6.91219   	 12.6733   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 27, m: 3850)                                                                  	 0.0190448 	 700       	 0         	 0         	 61.1316   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 77, r2: 77, leftOrthog: 1)        	 0.0158846 	 100       	 186.627   	 0         	 29.682    	 6.28756   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 27, m: 2500, k: 50)	 0.0154182 	 800       	 350.236   	 0         	 80.466    	 4.35259   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 27, m: 27)                                                                  	 0.014248  	 900       	 1.65774   	 0         	 1.11881   	 1.48171   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1350, m: 50, k: 27) 	 0.014033  	 800       	 207.796   	 0         	 48.024    	 4.32692   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3850, m: 27)                                                         	 0.0132581 	 700       	 0         	 0         	 87.8132   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 27, n: 50, r2left: 50, r2right: 27)                	 0.013038  	 700       	 0         	 0         	 89.2956   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3850, r: 50, r2: 50, leftOrthog: 1)        	 0.0110697 	 100       	 173.898   	 0         	 42.0969   	 4.1309    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1350, m: 27, k: 27) 	 0.00923047	 700       	 149.268   	 0         	 44.6697   	 3.34158   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 27, n: 50, r2: 27)                                                                                         	 0.00868438	 800       	 0         	 0         	 53.7241   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, r1_: 77, n: 50, r2: 50)           	 0.00866335	 100       	 342.189   	 0         	 36.0996   	 9.47902   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 27, reductionFactor: 37, colBlockingSize: 12)                  	 0.00798695	 100       	 46.8704   	 0         	 6.83405   	 6.85836   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 77, reductionFactor: 37, colBlockingSize: 12)                    	 0.00719287	 100       	 8.46566   	 0         	 1.08763   	 7.78357   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, r1_: 50, n: 50, r2: 77)           	 0.00577439	 100       	 513.388   	 0         	 68.2739   	 7.51953   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 27, r: 27, streamingCols: 0)                   	 0.00421053	 100       	 43.2843   	 0         	 25.7192   	 1.68296   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 27, Qr2: 50)       	 0.00330105	 100       	 0         	 0         	 93.3035   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 27, m: 2500)                                                                  	 0.00276497	 100       	 0         	 0         	 39.0601   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 27, n: 50, r2left: 50, r2right: 0)                 	 0.00186971	 100       	 0         	 0         	 57.763    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 77, leftOrthog: 1)          	 0.00183842	 100       	 20.9419   	 0         	 7.20182   	 2.90785   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 27)                                                         	 0.00176094	 100       	 0         	 0         	 61.3307   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 27, reductionFactor: 37, colBlockingSize: 12)                    	 0.00129409	 100       	 5.78557   	 0         	 1.28523   	 4.50158   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 27)                                                                                          	 0.000861013	 200       	 0         	 0         	 5.01735   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000786014	 100       	 0.636121  	 0         	 2.54448   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 27, n: 50, r2: 1)                                                                                          	 0.000724186	 200       	 0         	 0         	 5.96532   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000709949	 100       	 35.2138   	 0         	 8.45131   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 27, m: 50, k: 50)     	 0.000683667	 100       	 19.7465   	 0         	 6.08483   	 3.24519   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 27)                 	 0.000548669	 100       	 0         	 0         	 11.2272   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 27)   	 0.000538195	 100       	 25.0838   	 0         	 7.72954   	 3.24519   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 27, m: 50, k: 50)  	 0.000531416	 100       	 25.4038   	 0         	 7.82814   	 3.24519   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000530975	 100       	 0         	 0         	 7.53331   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 27, m: 27, fromLeft: 1)                	 0.000460556	 800       	 0         	 0         	 20.2607   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 27, n: 50, r2left: 1, r2right: 0)                  	 0.000437721	 100       	 0         	 0         	 4.93465   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000428397	 100       	 0         	 0         	 9.33713   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 27, k: 27)   	 0.000422221	 100       	 17.2658   	 0         	 6.49707   	 2.65748   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000411086	 100       	 1.21629   	 0         	 14.5955   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000381927	 100       	 0.654575  	 0         	 10.4732   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000370452	 100       	 0.674851  	 0         	 10.7976   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 27)                                                           	 0.000339134	 100       	 0         	 0         	 6.36916   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 27)                                                                                 	 0.000335719	 100       	 0.402122  	 0         	 6.43395   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1350, m: 0, k: 27)  	 5.74e-06  	 100       	 0         	 0         	 5080.14   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.72912   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.72908   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.42687   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.4256    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.33087   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.549793  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.44139   	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.375038  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.302148  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.167794  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.167134  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0897216 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0673484 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0447112 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0417195 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0282175 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0242296 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0218098 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0159496 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0158941 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0153582 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.014248  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0108006 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00328186	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00262181	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00119365	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010881 	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000786014	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000460556	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000411086	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22777270732672 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22777083979776 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22776882653312 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22776681326848 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22776480000384 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22776278673920 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22776077347456 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22775876020992 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22775674694528 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22775473368064 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22775272041600 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22775070715136 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22774869388672 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22774668062208 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22774466735744 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22774265409280 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22774064082816 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22773862756352 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22773661429888 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22773460103424 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22773258776960 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22773057450496 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22772856124032 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22772654797568 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22772453471104 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22772252144640 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22772050818176 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22771849491712 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22771648165248 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22771446838784 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22771245512320 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22771044185856 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22770842855296 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22770641528832 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22770440202368 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22770238875904 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22770037549440 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22769836222976 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22769634896512 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22769433570048 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22769232243584 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22769030917120 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22768829590656 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22768628264192 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22768426937728 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22768225611264 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22768024284800 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22767822958336 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22767621631872 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22767420305408 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22767218978944 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22767017652480 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22766816326016 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22766614999552 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22766413673088 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22766212346624 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22766011020160 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22765809693696 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22765608367232 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22765407040768 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22765205714304 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22765004387840 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22764803061376 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22777165072128 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22777158481664 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 78, m: 78)                                                                 	 0.472573  	 700       	 6.56069   	 0         	 0.217211  	 30.2043   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3900, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.303373  	 600       	 96.3917   	 0         	 4.90934   	 19.6343   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3900, r: 78, r2: 78, leftOrthog: 1)        	 0.141519  	 600       	 201.197   	 0         	 31.3661   	 6.41447   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, r1_: 78, n: 50, r2: 78)           	 0.07245   	 600       	 393.004   	 0         	 40.7111   	 9.65347   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3900, cols: 28, reductionFactor: 37, colBlockingSize: 12)                  	 0.0622956 	 700       	 70.5721   	 0         	 9.8869    	 7.13794   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.058114  	 100       	 53.7601   	 0         	 2.76813   	 19.4211   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 78)                                                                 	 0.0473528 	 100       	 3.64638   	 0         	 0.174858  	 20.8535   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 28, Qr2: 78)       	 0.043292  	 700       	 0         	 0         	 69.6443   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3900, Xcols: 28, r: 28, streamingCols: 0)                   	 0.0388079 	 700       	 55.1517   	 0         	 31.5718   	 1.74686   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.037929  	 100       	 3.07592   	 0         	 0.159245  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 28, m: 50, k: 2500)   	 0.0280128 	 800       	 199.909   	 0         	 44.8709   	 4.45519   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0227116 	 100       	 88.1798   	 0         	 6.9568    	 12.6753   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 28, m: 3900)                                                                  	 0.0189225 	 700       	 0         	 0         	 64.6342   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1400, m: 50, k: 28) 	 0.0166216 	 800       	 188.67    	 0         	 42.5855   	 4.43038   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 78, r2: 78, leftOrthog: 1)        	 0.0153348 	 100       	 198.372   	 0         	 31.1536   	 6.36755   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 28, m: 2500, k: 50)	 0.0144312 	 800       	 388.049   	 0         	 87.1004   	 4.45519   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 28, m: 28)                                                                  	 0.0141006 	 900       	 1.86809   	 0         	 1.21527   	 1.53718   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3900, r: 50, r2: 50, leftOrthog: 1)        	 0.0133165 	 100       	 146.435   	 0         	 35.4447   	 4.13136   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3900, m: 28)                                                         	 0.0127764 	 700       	 0         	 0         	 95.7265   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 28, n: 50, r2left: 50, r2right: 28)                	 0.0109981 	 700       	 0         	 0         	 111.204   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1400, m: 28, k: 28) 	 0.00984387	 700       	 156.101   	 0         	 45.0463   	 3.46535   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 28, reductionFactor: 37, colBlockingSize: 12)                  	 0.00911773	 100       	 44.1551   	 0         	 6.21067   	 7.10956   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 28, n: 50, r2: 28)                                                                                         	 0.00907082	 800       	 0         	 0         	 55.3158   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, r1_: 78, n: 50, r2: 50)           	 0.00885844	 100       	 343.401   	 0         	 35.7701   	 9.60024   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 78, reductionFactor: 37, colBlockingSize: 12)                    	 0.00657322	 100       	 9.50589   	 0         	 1.21511   	 7.82306   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, r1_: 50, n: 50, r2: 78)           	 0.00569307	 100       	 534.333   	 0         	 70.6964   	 7.55814   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 28, r: 28, streamingCols: 0)                   	 0.00432129	 100       	 45.3568   	 0         	 25.9907   	 1.74511   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 28, Qr2: 50)       	 0.00342369	 100       	 0         	 0         	 91.1297   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 28, m: 2500)                                                                  	 0.00222237	 100       	 0         	 0         	 50.3966   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 78, leftOrthog: 1)          	 0.00182802	 100       	 21.3346   	 0         	 7.30846   	 2.91916   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 28, n: 50, r2left: 50, r2right: 0)                 	 0.00165426	 100       	 0         	 0         	 67.704    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 28, reductionFactor: 37, colBlockingSize: 12)                    	 0.00146369	 100       	 5.50111   	 0         	 1.1937    	 4.60845   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 28)                                                         	 0.00144079	 100       	 0         	 0         	 77.7353   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000862877	 100       	 0.579457  	 0         	 2.31783   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 28)                                                                                          	 0.000813251	 200       	 0         	 0         	 5.50875   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.0007384 	 100       	 33.857    	 0         	 8.12568   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 28, n: 50, r2: 1)                                                                                          	 0.000700997	 200       	 0         	 0         	 6.3909    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 28, m: 50, k: 50)     	 0.000632692	 100       	 22.1277   	 0         	 6.70152   	 3.30189   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 28, m: 50, k: 50)  	 0.000540393	 100       	 25.9071   	 0         	 7.84614   	 3.30189   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 28)   	 0.000508957	 100       	 27.5072   	 0         	 8.33076   	 3.30189   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000492796	 100       	 0         	 0         	 8.11695   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 28)                 	 0.000480767	 100       	 0         	 0         	 12.9793   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 28, m: 28, fromLeft: 1)                	 0.000464087	 800       	 0         	 0         	 21.6235   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 28, n: 50, r2left: 1, r2right: 0)                  	 0.000462594	 100       	 0         	 0         	 4.84226   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000448506	 100       	 0         	 0         	 8.9185    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000443113	 100       	 1.12838   	 0         	 13.5406   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00038069	 100       	 0.656702  	 0         	 10.5072   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 28, k: 28)   	 0.000366061	 100       	 21.4172   	 0         	 7.83257   	 2.73438   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 28)                                                                                 	 0.000356113	 100       	 0.393134  	 0         	 6.29014   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 28)                                                           	 0.000338294	 100       	 0         	 0         	 6.62146   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000319911	 100       	 0.781467  	 0         	 12.5035   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1400, m: 0, k: 28)  	 5.34e-06  	 100       	 0         	 0         	 5872.66   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.77585   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.77581   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.46353   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.46224   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.36636   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.557855  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.463649  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.391349  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.312218  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.173765  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.171998  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0877399 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0733525 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0471642 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0431292 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0286455 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0273459 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0211449 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0149716 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0145555 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0141006 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0135957 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0110779 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00456962	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00253985	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00110626	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105671	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000862877	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000464087	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000443113	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22997046003584 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22996865509376 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22996664182912 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22996462856448 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22996261529984 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22996060203520 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22995858877056 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22995657550592 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22995456224128 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22995254897664 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22995053571200 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22994852244736 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22994650918272 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22994449591808 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22994248265344 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22994046938880 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22993845612416 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22993644285952 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22993442959488 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22993241633024 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22993040306560 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22992838980096 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22992637653632 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22992436327168 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22992235000704 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22992033674240 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22991832347776 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22991631021312 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22991429694848 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22991228368384 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22991027041920 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22990825715456 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22990624384896 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22990423058432 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22990221731968 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22990020405504 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22989819079040 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22989617752576 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22989416426112 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22989215099648 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22989013773184 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22988812446720 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22988611120256 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22988409793792 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22988208467328 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22988007140864 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22987805814400 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22987604487936 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22987403161472 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22987201835008 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22987000508544 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22986799182080 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22986597855616 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22986396529152 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22986195202688 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22985993876224 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22985792549760 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22985591223296 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22985389896832 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22985188570368 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22984987243904 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22984785917440 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22984584590976 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22996940343040 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22996760647424 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 79, m: 79)                                                                 	 0.484492  	 700       	 6.64859   	 0         	 0.217323  	 30.5931   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3950, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.316587  	 600       	 95.9669   	 0         	 4.82584   	 19.8861   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3950, r: 79, r2: 79, leftOrthog: 1)        	 0.146867  	 600       	 201.423   	 0         	 31.0038   	 6.49671   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, r1_: 79, n: 50, r2: 79)           	 0.0818469 	 600       	 361.435   	 0         	 36.967    	 9.77723   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3950, cols: 29, reductionFactor: 37, colBlockingSize: 12)                  	 0.0679003 	 700       	 70.3447   	 0         	 9.51674   	 7.39168   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.0522882 	 100       	 61.2918   	 0         	 3.1172    	 19.6625   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 79)                                                                 	 0.0455574 	 100       	 3.83399   	 0         	 0.183505  	 20.8931   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 29, Qr2: 79)       	 0.0422296 	 700       	 0         	 0         	 73.1467   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 3950, Xcols: 29, r: 29, streamingCols: 0)                   	 0.0417584 	 700       	 55.6861   	 0         	 30.7798   	 1.80918   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0383134 	 100       	 3.04506   	 0         	 0.157647  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 29, m: 50, k: 2500)   	 0.0288009 	 800       	 201.383   	 0         	 44.2097   	 4.55516   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 3950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0230778 	 100       	 87.8932   	 0         	 6.93308   	 12.6774   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 29, m: 3950)                                                                  	 0.0193272 	 700       	 0         	 0         	 66.3812   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 29, m: 2500, k: 50)	 0.0162678 	 800       	 356.533   	 0         	 78.2701   	 4.55516   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 79, r2: 79, leftOrthog: 1)        	 0.0159086 	 100       	 196.152   	 0         	 30.4229   	 6.44751   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 29, m: 29)                                                                  	 0.0155858 	 900       	 1.87775   	 0         	 1.17892   	 1.59277   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1450, m: 50, k: 29) 	 0.0148984 	 800       	 225.796   	 0         	 49.8309   	 4.53125   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 3950, r: 50, r2: 50, leftOrthog: 1)        	 0.0138943 	 100       	 142.144   	 0         	 34.4025   	 4.1318    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 29, n: 50, r2left: 50, r2right: 29)                	 0.0124695 	 700       	 0         	 0         	 102.888   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 3950, m: 29)                                                         	 0.0110892 	 700       	 0         	 0         	 115.695   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1450, m: 29, k: 29) 	 0.0103914 	 700       	 164.292   	 0         	 45.7753   	 3.58911   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 29, n: 50, r2: 29)                                                                                         	 0.00936673	 800       	 0         	 0         	 57.463    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 29, reductionFactor: 37, colBlockingSize: 12)                  	 0.00905801	 100       	 47.6777   	 0         	 6.47745   	 7.36056   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, r1_: 79, n: 50, r2: 50)           	 0.00869836	 100       	 358.746   	 0         	 36.9027   	 9.7214    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, r1_: 50, n: 50, r2: 79)           	 0.00653899	 100       	 477.214   	 0         	 62.8231   	 7.59615   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 79, reductionFactor: 37, colBlockingSize: 12)                    	 0.00530283	 100       	 12.0873   	 0         	 1.53744   	 7.86193   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 29, r: 29, streamingCols: 0)                   	 0.00442506	 100       	 47.5135   	 0         	 26.2904   	 1.80726   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 29, Qr2: 50)       	 0.00344466	 100       	 0         	 0         	 91.7361   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 79, leftOrthog: 1)          	 0.00204319	 100       	 19.3325   	 0         	 6.59752   	 2.93027   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 29, m: 2500)                                                                  	 0.0018371 	 100       	 0         	 0         	 63.1429   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 29, n: 50, r2left: 50, r2right: 0)                 	 0.00170751	 100       	 0         	 0         	 67.9351   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 29)                                                         	 0.00160826	 100       	 0         	 0         	 72.1275   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 29, reductionFactor: 37, colBlockingSize: 12)                    	 0.00140842	 100       	 6.1326    	 0         	 1.30131   	 4.71262   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 29)                                                                                          	 0.00083219	 200       	 0         	 0         	 5.57565   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000814497	 100       	 0.613876  	 0         	 2.4555    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 29, n: 50, r2: 1)                                                                                          	 0.000737823	 200       	 0         	 0         	 6.28877   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000710944	 100       	 35.1645   	 0         	 8.43948   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 29, m: 50, k: 50)     	 0.000661027	 100       	 21.9356   	 0         	 6.53529   	 3.35648   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 29, m: 50, k: 50)  	 0.000584243	 100       	 24.8184   	 0         	 7.39418   	 3.35648   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 29)                 	 0.000560542	 100       	 0         	 0         	 11.2748   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 29)   	 0.000551551	 100       	 26.2895   	 0         	 7.83246   	 3.35648   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00052417	 100       	 0         	 0         	 7.63111   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 29, m: 29, fromLeft: 1)                	 0.000500646	 800       	 0         	 0         	 21.5018   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.0004758 	 100       	 0         	 0         	 8.40689   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000435075	 100       	 1.14923   	 0         	 13.7907   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 29, n: 50, r2left: 1, r2right: 0)                  	 0.000414405	 100       	 0         	 0         	 5.59839   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 29, k: 29)   	 0.00041271	 100       	 20.3775   	 0         	 7.25158   	 2.81008   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000383759	 100       	 0.651451  	 0         	 10.4232   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 29)                                                                                 	 0.000349023	 100       	 0.415445  	 0         	 6.64713   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 29)                                                           	 0.000344083	 100       	 0         	 0         	 6.74256   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000329305	 100       	 0.759175  	 0         	 12.1468   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1450, m: 0, k: 29)  	 6.68e-06  	 100       	 0         	 0         	 5035.93   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.82854   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.82849   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.50289   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.50165   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.39379   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.568362  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.475622  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.397848  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.325531  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.181986  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.178713  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0977952 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0788172 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0461835 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0461501 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0294619 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0262607 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0211643 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.016852  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0155858 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0151519 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0130415 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0114609 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00538712	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00286797	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00210722	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106209	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000814497	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000500646	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000435075	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22479677032320 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22479456167936 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22479254841472 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22479053515008 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22478852188544 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22478650862080 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22478449535616 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22478248209152 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22478046882688 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22477845556224 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22477644229760 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22477442903296 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22477241576832 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22477040250368 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22476838923904 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22476637597440 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22476436270976 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22476234944512 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22476033618048 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22475832291584 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22475630965120 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22475429638656 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22475228312192 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22475026985728 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22474825659264 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22474624332800 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22474423006336 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22474221679872 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22474020353408 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22473819026944 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22473617700480 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22473416374016 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22473215043456 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22473013716992 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22472812390528 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22472611064064 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22472409737600 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22472208411136 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22472007084672 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22471805758208 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22471604431744 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22471403105280 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22471201778816 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22471000452352 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22470799125888 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22470597799424 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22470396472960 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22470195146496 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22469993820032 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22469792493568 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22469591167104 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22469389840640 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22469188514176 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22468987187712 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22468785861248 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22468584534784 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22468383208320 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22468181881856 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22467980555392 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22467779228928 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22467577902464 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22467376576000 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22467175249536 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22479571371776 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22479564781312 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 80, m: 80)                                                                 	 0.483847  	 700       	 6.91347   	 0         	 0.223145  	 30.982    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4000, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.315548  	 600       	 99.9856   	 0         	 4.96507   	 20.1378   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4000, r: 80, r2: 80, leftOrthog: 1)        	 0.158447  	 600       	 193.881   	 0         	 29.47     	 6.57895   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 80, n: 50, r2: 80)           	 0.0703298 	 600       	 436.799   	 0         	 44.1167   	 9.90099   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4000, cols: 30, reductionFactor: 37, colBlockingSize: 12)                  	 0.0668295 	 700       	 77.454    	 0         	 10.1309   	 7.64536   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.0527607 	 100       	 62.2904   	 0         	 3.1296    	 19.9036   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 30, Qr2: 80)       	 0.0467785 	 700       	 0         	 0         	 67.6379   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 80)                                                                 	 0.0456859 	 100       	 3.86698   	 0         	 0.18474   	 20.9321   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4000, Xcols: 30, r: 30, streamingCols: 0)                   	 0.0426194 	 700       	 59.128    	 0         	 31.5941   	 1.87149   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 50, k: 2500)   	 0.0385037 	 800       	 155.829   	 0         	 33.4929   	 4.65261   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0375849 	 100       	 3.10408   	 0         	 0.160703  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0229362 	 100       	 89.5551   	 0         	 7.06307   	 12.6793   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1500, m: 50, k: 30) 	 0.0165928 	 800       	 216.962   	 0         	 46.8638   	 4.62963   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 80, r2: 80, leftOrthog: 1)        	 0.0159639 	 100       	 200.452   	 0         	 30.7093   	 6.52742   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 30, m: 30)                                                                  	 0.0158919 	 900       	 2.03877   	 0         	 1.23685   	 1.64835   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 30, m: 2500, k: 50)	 0.0158515 	 800       	 378.513   	 0         	 81.3551   	 4.65261   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 4000)                                                                  	 0.0158411 	 700       	 0         	 0         	 84.8425   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 50, r2left: 50, r2right: 30)                	 0.0134633 	 700       	 0         	 0         	 99.8271   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4000, m: 30)                                                         	 0.0120292 	 700       	 0         	 0         	 111.728   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4000, r: 50, r2: 50, leftOrthog: 1)        	 0.0107953 	 100       	 185.265   	 0         	 44.8342   	 4.13223   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1500, m: 30, k: 30) 	 0.0106653 	 700       	 177.21    	 0         	 47.7285   	 3.71287   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 30, reductionFactor: 37, colBlockingSize: 12)                  	 0.00958573	 100       	 48.2135   	 0         	 6.33441   	 7.61137   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 50, r2: 30)                                                                                         	 0.0091482 	 800       	 0         	 0         	 62.9632   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 80, n: 50, r2: 50)           	 0.00904779	 100       	 353.678   	 0         	 35.9336   	 9.84252   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 50, n: 50, r2: 80)           	 0.00627772	 100       	 509.739   	 0         	 66.7759   	 7.63359   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 80, reductionFactor: 37, colBlockingSize: 12)                    	 0.00533818	 100       	 12.3131   	 0         	 1.55858   	 7.90021   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 30, r: 30, streamingCols: 0)                   	 0.00474734	 100       	 47.395    	 0         	 25.3532   	 1.86939   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 30, Qr2: 50)       	 0.00373785	 100       	 0         	 0         	 85.6106   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 80, leftOrthog: 1)          	 0.00192329	 100       	 20.7977   	 0         	 7.07123   	 2.94118   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 2500)                                                                  	 0.00168723	 100       	 0         	 0         	 71.1226   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 30)                                                         	 0.00161216	 100       	 0         	 0         	 74.4345   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 30, reductionFactor: 37, colBlockingSize: 12)                    	 0.00146578	 100       	 6.30602   	 0         	 1.30988   	 4.81419   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 50, r2left: 50, r2right: 0)                 	 0.00145331	 100       	 0         	 0         	 82.5703   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000884582	 100       	 0.565239  	 0         	 2.26095   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 30)                                                                                          	 0.000825581	 200       	 0         	 0         	 5.81409   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 50, r2: 1)                                                                                          	 0.00074532	 200       	 0         	 0         	 6.44019   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 30, m: 50, k: 50)     	 0.000700645	 100       	 21.4088   	 0         	 6.27993   	 3.40909   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000670464	 100       	 37.2876   	 0         	 8.94903   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 30, m: 50, k: 50)  	 0.000549741	 100       	 27.2856   	 0         	 8.00377   	 3.40909   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 30, m: 30, fromLeft: 1)                	 0.000526262	 800       	 0         	 0         	 21.8902   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 30)   	 0.000523047	 100       	 28.6781   	 0         	 8.41225   	 3.40909   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000510957	 100       	 0         	 0         	 7.82845   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 30)                 	 0.000495622	 100       	 0         	 0         	 12.9131   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000441015	 100       	 0         	 0         	 9.06999   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 50, r2left: 1, r2right: 0)                  	 0.000437767	 100       	 0         	 0         	 5.48237   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000419732	 100       	 1.19124   	 0         	 14.2948   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000404599	 100       	 0.617896  	 0         	 9.88633   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 30, k: 30)   	 0.000379022	 100       	 23.7453   	 0         	 8.23171   	 2.88462   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 30)                                                                                 	 0.00036688	 100       	 0.408853  	 0         	 6.54165   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000347128	 100       	 0.720195  	 0         	 11.5231   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 30)                                                           	 0.00032741	 100       	 0         	 0         	 7.33026   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1500, m: 0, k: 30)  	 5.42e-06  	 100       	 0         	 0         	 6642.07   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.83942   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.83937   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.50196   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.50062   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.39986   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.567118  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.474464  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.397167  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.337351  	 100       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.18713   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.179697  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0863258 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0783698 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0509574 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0473668 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0392044 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0281656 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0175283 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0164012 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0158919 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.01585   	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0139688 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0112301 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0030299 	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00300788	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00123664	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111861	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000884582	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000526262	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000419732	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22493671962496 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22493481920512 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22493280594048 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22493079267584 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22492877941120 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22492676614656 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22492475288192 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22492273961728 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22492072635264 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22491871308800 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22491669982336 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22491468655872 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22491267329408 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22491066002944 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22490864676480 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22490663350016 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22490462023552 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22490260697088 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22490059370624 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22489858044160 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22489656717696 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22489455391232 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22489254064768 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22489052738304 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22488851411840 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22488650085376 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22488448758912 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22488247432448 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22488046105984 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22487844779520 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22487643453056 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22487442126592 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22487240796032 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22487039469568 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22486838143104 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22486636816640 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22486435490176 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22486234163712 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22486032837248 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22485831510784 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22485630184320 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22485428857856 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22485227531392 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22485026204928 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22484824878464 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22484623552000 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22484422225536 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22484220899072 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22484019572608 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22483818246144 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22483616919680 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22483415593216 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22483214266752 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22483012940288 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22482811613824 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22482610287360 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22482408960896 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22482207634432 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22482006307968 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22481804981504 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22481603655040 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22481402328576 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22481201002112 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22493566301952 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22493559711488 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 81, m: 81)                                                                 	 0.538494  	 700       	 6.44776   	 0         	 0.205533  	 31.3709   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4050, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.327893  	 600       	 99.8749   	 0         	 4.89835   	 20.3895   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4050, r: 81, r2: 81, leftOrthog: 1)        	 0.15206   	 600       	 209.697   	 0         	 31.4805   	 6.66118   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, r1_: 81, n: 50, r2: 81)           	 0.0742341 	 600       	 429.539   	 0         	 42.8479   	 10.0248   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4050, cols: 31, reductionFactor: 37, colBlockingSize: 12)                  	 0.0722142 	 700       	 77.4935   	 0         	 9.81055   	 7.899     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.0547047 	 100       	 61.5881   	 0         	 3.0573    	 20.1446   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4050, Xcols: 31, r: 31, streamingCols: 0)                   	 0.0524362 	 700       	 51.9571   	 0         	 26.8679   	 1.9338    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 31, Qr2: 81)       	 0.0464062 	 700       	 0         	 0         	 69.8217   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 81)                                                                 	 0.0457759 	 100       	 3.90308   	 0         	 0.186124  	 20.9703   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0361125 	 100       	 3.23065   	 0         	 0.167255  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 31, m: 50, k: 2500)   	 0.0308367 	 800       	 201.059   	 0         	 42.3496   	 4.74761   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0229888 	 100       	 90.4672   	 0         	 7.13392   	 12.6813   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 31, m: 4050)                                                                  	 0.0187978 	 700       	 0         	 0         	 74.8045   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1550, m: 50, k: 31) 	 0.0187827 	 800       	 204.656   	 0         	 43.308    	 4.72561   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 31, m: 31)                                                                  	 0.0170066 	 900       	 2.102     	 0         	 1.23368   	 1.70384   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 31, m: 2500, k: 50)	 0.0167225 	 800       	 370.759   	 0         	 78.0938   	 4.74761   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 81, r2: 81, leftOrthog: 1)        	 0.0158481 	 100       	 206.997   	 0         	 31.3286   	 6.60728   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4050, r: 50, r2: 50, leftOrthog: 1)        	 0.0153975 	 100       	 131.515   	 0         	 31.8233   	 4.13265   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 31, n: 50, r2left: 50, r2right: 31)                	 0.0150061 	 700       	 0         	 0         	 93.706    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4050, m: 31)                                                         	 0.0135667 	 700       	 0         	 0         	 103.648   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1550, m: 31, k: 31) 	 0.0109976 	 700       	 189.621   	 0         	 49.4237   	 3.83663   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 31, reductionFactor: 37, colBlockingSize: 12)                  	 0.0103839 	 100       	 47.524    	 0         	 6.04479   	 7.86197   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 31, n: 50, r2: 31)                                                                                         	 0.0095028 	 800       	 0         	 0         	 64.722    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, r1_: 81, n: 50, r2: 50)           	 0.00813263	 100       	 403.375   	 0         	 40.4849   	 9.96359   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 81, reductionFactor: 37, colBlockingSize: 12)                    	 0.00680421	 100       	 9.90317   	 0         	 1.24758   	 7.9379    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, r1_: 50, n: 50, r2: 81)           	 0.00616171	 100       	 532.401   	 0         	 69.4093   	 7.67045   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 31, r: 31, streamingCols: 0)                   	 0.00479563	 100       	 50.0977   	 0         	 25.937    	 1.93151   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 31, Qr2: 50)       	 0.00309809	 100       	 0         	 0         	 104.58    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 31, reductionFactor: 37, colBlockingSize: 12)                    	 0.00209606	 100       	 4.70871   	 0         	 0.958371  	 4.91325   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 81, leftOrthog: 1)          	 0.00183371	 100       	 22.0863   	 0         	 7.48209   	 2.9519    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 31, m: 2500)                                                                  	 0.00178829	 100       	 0         	 0         	 69.3399   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 31)                                                         	 0.00155169	 100       	 0         	 0         	 79.9128   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 31, n: 50, r2left: 50, r2right: 0)                 	 0.00154761	 100       	 0         	 0         	 80.1235   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000826506	 100       	 0.604956  	 0         	 2.41983   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 31)                                                                                          	 0.000817675	 200       	 0         	 0         	 6.06598   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000752072	 100       	 33.2415   	 0         	 7.97796   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 31, n: 50, r2: 1)                                                                                          	 0.000714392	 200       	 0         	 0         	 6.94297   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 31, m: 50, k: 50)     	 0.000687484	 100       	 22.546    	 0         	 6.51652   	 3.45982   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 31)   	 0.000604536	 100       	 25.6395   	 0         	 7.41064   	 3.45982   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 31, m: 50, k: 50)  	 0.00059641	 100       	 25.9888   	 0         	 7.51161   	 3.45982   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 31, m: 31, fromLeft: 1)                	 0.000568889	 800       	 0         	 0         	 21.6225   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000563649	 100       	 0         	 0         	 7.09662   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 31)                 	 0.000519182	 100       	 0         	 0         	 12.4812   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000461207	 100       	 0         	 0         	 8.6729    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 31, k: 31)   	 0.000446839	 100       	 21.5066   	 0         	 7.27063   	 2.95802   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 31, n: 50, r2left: 1, r2right: 0)                  	 0.000440124	 100       	 0         	 0         	 5.63478   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000424607	 100       	 1.17756   	 0         	 14.1307   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000378749	 100       	 0.660068  	 0         	 10.5611   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 31)                                                           	 0.000354638	 100       	 0         	 0         	 6.99305   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000335341	 100       	 0.74551   	 0         	 11.9282   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 31)                                                                                 	 0.00032218	 100       	 0.481098  	 0         	 7.69756   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1550, m: 0, k: 31)  	 5.21e-06  	 100       	 0         	 0         	 7378.12   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.94086   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.94081   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.58369   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.58243   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.48227   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.620382  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.497085  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.412963  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.357056  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.202546  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.185139  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0892805 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0851226 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0572319 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0499655 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0315242 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0308369 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0205861 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.017513  	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0173189 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0170066 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.015473  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0115985 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00501294	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00258683	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00111862	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00103627	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000826506	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000568889	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000424607	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23130138212224 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23129942386688 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23129741060224 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23129539733760 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23129338407296 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23129137080832 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23128935754368 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23128734427904 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23128533101440 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23128331774976 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23128130448512 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23127929122048 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23127727795584 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23127526469120 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23127325142656 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23127123816192 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23126922489728 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23126721163264 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23126519836800 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23126318510336 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23126117183872 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23125915857408 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23125714530944 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23125513204480 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23125311878016 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23125110551552 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23124909225088 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23124707898624 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23124506572160 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23124305245696 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23124103919232 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23123902592768 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23123701262208 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23123499935744 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23123298609280 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23123097282816 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23122895956352 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23122694629888 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23122493303424 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23122291976960 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23122090650496 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23121889324032 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23121687997568 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23121486671104 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23121285344640 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23121084018176 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23120882691712 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23120681365248 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23120480038784 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23120278712320 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23120077385856 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23119876059392 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23119674732928 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23119473406464 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23119272080000 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23119070753536 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23118869427072 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23118668100608 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23118466774144 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23118265447680 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23118064121216 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23117862794752 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23117661468288 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23130032551680 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23130025961216 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 82, m: 82)                                                                 	 0.53955   	 700       	 6.67644   	 0         	 0.210217  	 31.7598   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4100, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.335198  	 600       	 101.361   	 0         	 4.91063   	 20.6412   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4100, r: 82, r2: 82, leftOrthog: 1)        	 0.151928  	 600       	 217.748   	 0         	 32.2904   	 6.74342   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4100, cols: 32, reductionFactor: 37, colBlockingSize: 12)                  	 0.0780721 	 700       	 77.3211   	 0         	 9.48424   	 8.15259   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, r1_: 82, n: 50, r2: 82)           	 0.07526   	 600       	 439.571   	 0         	 43.3138   	 10.1485   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.0623865 	 100       	 55.3463   	 0         	 2.715     	 20.3854   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 32, Qr2: 82)       	 0.0503281 	 700       	 0         	 0         	 65.9163   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4100, Xcols: 32, r: 32, streamingCols: 0)                   	 0.0462754 	 700       	 63.5085   	 0         	 31.8162   	 1.99611   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 82)                                                                 	 0.0458332 	 100       	 3.94183   	 0         	 0.187637  	 21.0078   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0367334 	 100       	 3.17603   	 0         	 0.164428  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 32, m: 50, k: 2500)   	 0.0315391 	 800       	 202.923   	 0         	 41.9239   	 4.84027   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 32, m: 4100)                                                                  	 0.0253669 	 700       	 0         	 0         	 57.9275   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0226269 	 100       	 93.0489   	 0         	 7.33641   	 12.6832   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1600, m: 50, k: 32) 	 0.0192608 	 800       	 212.66    	 0         	 44.127    	 4.81928   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 32, m: 32)                                                                  	 0.0171078 	 900       	 2.29842   	 0         	 1.30635   	 1.75942   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 32, m: 2500, k: 50)	 0.0154239 	 800       	 414.941   	 0         	 85.7269   	 4.84027   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 32, n: 50, r2left: 50, r2right: 32)                	 0.0153187 	 700       	 0         	 0         	 95.9244   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 82, r2: 82, leftOrthog: 1)        	 0.0153052 	 100       	 219.664   	 0         	 32.8488   	 6.68711   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4100, m: 32)                                                         	 0.0149617 	 700       	 0         	 0         	 98.2133   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4100, r: 50, r2: 50, leftOrthog: 1)        	 0.0144686 	 100       	 141.686   	 0         	 34.2811   	 4.13306   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1600, m: 32, k: 32) 	 0.011776  	 700       	 194.783   	 0         	 49.1828   	 3.9604    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 32, n: 50, r2: 32)                                                                                         	 0.0113547 	 800       	 0         	 0         	 57.717    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 32, reductionFactor: 37, colBlockingSize: 12)                  	 0.0111919 	 100       	 46.9838   	 0         	 5.79162   	 8.11238   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 82, reductionFactor: 37, colBlockingSize: 12)                    	 0.00831221	 100       	 8.30794   	 0         	 1.04174   	 7.97502   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, r1_: 82, n: 50, r2: 50)           	 0.00820993	 100       	 409.504   	 0         	 40.6068   	 10.0846   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, r1_: 50, n: 50, r2: 82)           	 0.00649104	 100       	 517.945   	 0         	 67.2065   	 7.70677   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 32, r: 32, streamingCols: 0)                   	 0.00490329	 100       	 52.2099   	 0         	 26.1885   	 1.99362   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 32, Qr2: 50)       	 0.00353526	 100       	 0         	 0         	 92.7795   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 32, m: 2500)                                                                  	 0.00297823	 100       	 0         	 0         	 42.9786   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 32, n: 50, r2left: 50, r2right: 0)                 	 0.00240531	 100       	 0         	 0         	 53.2156   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 32)                                                         	 0.00238835	 100       	 0         	 0         	 53.5934   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 82, leftOrthog: 1)          	 0.00210971	 100       	 19.4339   	 0         	 6.56014   	 2.96243   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 32, reductionFactor: 37, colBlockingSize: 12)                    	 0.00197648	 100       	 5.32096   	 0         	 1.06209   	 5.00989   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000915717	 100       	 0.54602   	 0         	 2.18408   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 32)                                                                                          	 0.000840337	 200       	 0         	 0         	 6.09279   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000776094	 100       	 32.2126   	 0         	 7.73102   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 32, n: 50, r2: 1)                                                                                          	 0.000744541	 200       	 0         	 0         	 6.87672   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 32, m: 50, k: 50)     	 0.000668419	 100       	 23.9371   	 0         	 6.82207   	 3.50877   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 32)   	 0.000591888	 100       	 27.0321   	 0         	 7.70416   	 3.50877   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 32, m: 32, fromLeft: 1)                	 0.000583498	 800       	 0         	 0         	 22.4631   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 32, m: 50, k: 50)  	 0.000569028	 100       	 28.1181   	 0         	 8.01367   	 3.50877   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000528428	 100       	 0         	 0         	 7.56962   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 32)                 	 0.000487868	 100       	 0         	 0         	 13.4463   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000432227	 100       	 0         	 0         	 9.2544    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000421846	 100       	 1.18527   	 0         	 14.2232   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 32, n: 50, r2left: 1, r2right: 0)                  	 0.000414093	 100       	 0         	 0         	 6.18219   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 32, k: 32)   	 0.000412884	 100       	 24.8012   	 0         	 8.18438   	 3.0303    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000387528	 100       	 0.645115  	 0         	 10.3218   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 32)                                                           	 0.00034349	 100       	 0         	 0         	 7.45291   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 32)                                                                                 	 0.000336803	 100       	 0.475055  	 0         	 7.60088   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000327039	 100       	 0.764435  	 0         	 12.231    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1600, m: 0, k: 32)  	 5.72e-06  	 100       	 0         	 0         	 7160.84   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 1.98999   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 1.98994   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.61392   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.61259   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.50793   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.622116  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.519764  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.429155  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.37596   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.214931  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.183812  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0917117 	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.090737  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0542955 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0511787 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0322075 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0320472 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0283451 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.018626  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0176936 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0171078 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0159929 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.013468  	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00452691	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00290379	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00116538	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105137	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000915717	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000583498	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000421846	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22375851419520 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22375638755328 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22375437428864 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22375236102400 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22375034775936 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22374833449472 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22374632123008 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22374430796544 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22374229470080 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22374028143616 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22373826817152 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22373625490688 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22373424164224 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22373222837760 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22373021511296 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22372820184832 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22372618858368 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22372417531904 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22372216205440 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22372014878976 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22371813552512 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22371612226048 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22371410899584 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22371209573120 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22371008246656 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22370806920192 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22370605593728 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22370404267264 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22370202940800 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22370001614336 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22369800287872 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22369598961408 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22369397630848 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22369196304384 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22368994977920 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22368793651456 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22368592324992 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22368390998528 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22368189672064 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22367988345600 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22367787019136 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22367585692672 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22367384366208 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22367183039744 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22366981713280 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22366780386816 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22366579060352 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22366377733888 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22366176407424 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22365975080960 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22365773754496 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22365572428032 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22365371101568 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22365169775104 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22364968448640 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22364767122176 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22364565795712 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22364364469248 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22364163142784 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22363961816320 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22363760489856 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22363559163392 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22363357836928 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22375745758976 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22375739168512 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 83, m: 83)                                                                 	 0.613803  	 700       	 6.08612   	 0         	 0.189312  	 32.1487   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4150, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.346664  	 600       	 101.638   	 0         	 4.86473   	 20.893    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4150, r: 83, r2: 83, leftOrthog: 1)        	 0.153603  	 600       	 223.35    	 0         	 32.7221   	 6.82566   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, r1_: 83, n: 50, r2: 83)           	 0.0789131 	 600       	 434.747   	 0         	 42.3223   	 10.2723   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4150, cols: 33, reductionFactor: 37, colBlockingSize: 12)                  	 0.0783359 	 700       	 82.9516   	 0         	 9.86799   	 8.40613   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.0565567 	 100       	 62.5495   	 0         	 3.03255   	 20.626    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 33, Qr2: 83)       	 0.0496233 	 700       	 0         	 0         	 68.4323   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4150, Xcols: 33, r: 33, streamingCols: 0)                   	 0.0474419 	 700       	 66.6825   	 0         	 32.3952   	 2.05841   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 83)                                                                 	 0.0452131 	 100       	 4.04012   	 0         	 0.19198   	 21.0445   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0372345 	 100       	 3.1333    	 0         	 0.162215  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 33, m: 50, k: 2500)   	 0.0308899 	 800       	 213.662   	 0         	 43.3332   	 4.93067   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.023036  	 100       	 92.5108   	 0         	 7.29292   	 12.685    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 33, m: 4150)                                                                  	 0.0195674 	 700       	 0         	 0         	 78.3876   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 33, m: 33)                                                                  	 0.0187768 	 900       	 2.29669   	 0         	 1.26539   	 1.815     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1650, m: 50, k: 33) 	 0.0187635 	 800       	 232.153   	 0         	 47.2747   	 4.91071   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 33, m: 2500, k: 50)	 0.017049  	 800       	 387.119   	 0         	 78.5123   	 4.93067   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 83, r2: 83, leftOrthog: 1)        	 0.0164984 	 100       	 208.778   	 0         	 30.8528   	 6.76689   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 33, n: 50, r2left: 50, r2right: 33)                	 0.015871  	 700       	 0         	 0         	 96.6441   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4150, r: 50, r2: 50, leftOrthog: 1)        	 0.0158182 	 100       	 131.178   	 0         	 31.7357   	 4.13347   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4150, m: 33)                                                         	 0.0132639 	 700       	 0         	 0         	 115.64    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1650, m: 33, k: 33) 	 0.012253  	 700       	 205.304   	 0         	 50.2683   	 4.08416   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 33, reductionFactor: 37, colBlockingSize: 12)                  	 0.0114383 	 100       	 48.8897   	 0         	 5.84624   	 8.36259   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 33, n: 50, r2: 33)                                                                                         	 0.0113201 	 800       	 0         	 0         	 61.5681   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, r1_: 83, n: 50, r2: 50)           	 0.00828569	 100       	 415.717   	 0         	 40.7342   	 10.2056   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 83, reductionFactor: 37, colBlockingSize: 12)                    	 0.00744663	 100       	 9.5012    	 0         	 1.18593   	 8.01158   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, r1_: 50, n: 50, r2: 83)           	 0.00682982	 100       	 504.332   	 0         	 65.1379   	 7.74254   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 33, r: 33, streamingCols: 0)                   	 0.00521594	 100       	 52.1958   	 0         	 25.3906   	 2.05572   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 33, Qr2: 50)       	 0.00313335	 100       	 0         	 0         	 105.957   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 33, reductionFactor: 37, colBlockingSize: 12)                    	 0.00216063	 100       	 5.17641   	 0         	 1.01415   	 5.1042    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 33, m: 2500)                                                                  	 0.00198002	 100       	 0         	 0         	 66.6659   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 83, leftOrthog: 1)          	 0.00190935	 100       	 21.7352   	 0         	 7.3114    	 2.97278   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 33, n: 50, r2left: 50, r2right: 0)                 	 0.00180844	 100       	 0         	 0         	 72.9912   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 33)                                                         	 0.00180002	 100       	 0         	 0         	 73.3324   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000862086	 100       	 0.579989  	 0         	 2.31995   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 33)                                                                                          	 0.000851931	 200       	 0         	 0         	 6.19769   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000803155	 100       	 31.1272   	 0         	 7.47054   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 33, m: 50, k: 50)  	 0.000797511	 100       	 20.6894   	 0         	 5.8181    	 3.55603   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 33, m: 50, k: 50)     	 0.000759364	 100       	 21.7287   	 0         	 6.11038   	 3.55603   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 33, n: 50, r2: 1)                                                                                          	 0.000714535	 200       	 0         	 0         	 7.38942   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 33, m: 33, fromLeft: 1)                	 0.000631573	 800       	 0         	 0         	 22.0706   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 33)   	 0.000613696	 100       	 26.8863   	 0         	 7.56075   	 3.55603   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000544739	 100       	 0         	 0         	 7.34297   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 33, k: 33)   	 0.000527503	 100       	 20.6444   	 0         	 6.65627   	 3.1015    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 33)                 	 0.000517797	 100       	 0         	 0         	 12.8236   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00044333	 100       	 0         	 0         	 9.02262   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000441435	 100       	 1.13267   	 0         	 13.592    	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 33, n: 50, r2left: 1, r2right: 0)                  	 0.000428388	 100       	 0         	 0         	 6.16264   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000400963	 100       	 0.623499  	 0         	 9.97598   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 33)                                                                                 	 0.000336985	 100       	 0.489636  	 0         	 7.83418   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 33)                                                           	 0.000336887	 100       	 0         	 0         	 7.83646   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000323794	 100       	 0.772096  	 0         	 12.3535   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1650, m: 0, k: 33)  	 5.31e-06  	 100       	 0         	 0         	 8203.39   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.08459   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.08455   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.71007   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.70878   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.60301   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.69625   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.525639  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.434304  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.374411  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.209318  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.187829  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0948318 	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.0924058 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0532    	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0526578 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0321631 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0316493 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0215474 	 800       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0187768 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0186256 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0178466 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0154008 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0134313 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00570736	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00327591	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00116495	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106174	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000862086	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000631573	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000441435	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22577549690752 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22577368000512 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22577166674048 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22576965347584 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22576764021120 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22576562694656 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22576361368192 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22576160041728 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22575958715264 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22575757388800 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22575556062336 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22575354735872 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22575153409408 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22574952082944 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22574750756480 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22574549430016 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22574348103552 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22574146777088 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22573945450624 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22573744124160 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22573542797696 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22573341471232 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22573140144768 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22572938818304 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22572737491840 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22572536165376 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22572334838912 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22572133512448 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22571932185984 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22571730859520 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22571529533056 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22571328206592 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22571126876032 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22570925549568 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22570724223104 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22570522896640 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22570321570176 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22570120243712 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22569918917248 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22569717590784 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22569516264320 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22569314937856 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22569113611392 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22568912284928 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22568710958464 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22568509632000 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22568308305536 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22568106979072 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22567905652608 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22567704326144 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22567502999680 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22567301673216 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22567100346752 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22566899020288 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22566697693824 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22566496367360 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22566295040896 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22566093714432 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22565892387968 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22565691061504 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22565489735040 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22565288408576 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22565087082112 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22577444030208 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22577437439744 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 84, m: 84)                                                                 	 0.618283  	 700       	 6.26304   	 0         	 0.192487  	 32.5375   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4200, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.357048  	 600       	 102.293   	 0         	 4.83775   	 21.1447   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4200, r: 84, r2: 84, leftOrthog: 1)        	 0.156251  	 600       	 227.597   	 0         	 32.9474   	 6.90789   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4200, cols: 34, reductionFactor: 37, colBlockingSize: 12)                  	 0.0875525 	 700       	 79.7349   	 0         	 9.20766   	 8.65963   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, r1_: 84, n: 50, r2: 84)           	 0.0776494 	 600       	 457.985   	 0         	 44.0538   	 10.396    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.0577192 	 100       	 62.7755   	 0         	 3.00844   	 20.8665   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4200, Xcols: 34, r: 34, streamingCols: 0)                   	 0.049536  	 700       	 68.6095   	 0         	 32.3522   	 2.12071   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 34, Qr2: 84)       	 0.049319  	 700       	 0         	 0         	 70.4669   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 84)                                                                 	 0.0455504 	 100       	 4.05412   	 0         	 0.192315  	 21.0807   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0372803 	 100       	 3.12945   	 0         	 0.162016  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 34, m: 50, k: 2500)   	 0.0316358 	 800       	 214.947   	 0         	 42.8275   	 5.01889   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0232508 	 100       	 92.7604   	 0         	 7.31157   	 12.6868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1700, m: 50, k: 34) 	 0.0201349 	 800       	 229.651   	 0         	 45.9302   	 5         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 34, m: 4200)                                                                  	 0.0199174 	 700       	 0         	 0         	 80.2996   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 34, m: 34)                                                                  	 0.0190476 	 900       	 2.47609   	 0         	 1.32376   	 1.8705    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 34, n: 50, r2left: 50, r2right: 34)                	 0.0182426 	 700       	 0         	 0         	 87.6716   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 34, m: 2500, k: 50)	 0.0177229 	 800       	 383.685   	 0         	 76.4481   	 5.01889   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4200, m: 34)                                                         	 0.0168869 	 700       	 0         	 0         	 94.7103   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 84, r2: 84, leftOrthog: 1)        	 0.0162925 	 100       	 216.541   	 0         	 31.6274   	 6.84664   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4200, r: 50, r2: 50, leftOrthog: 1)        	 0.015334  	 100       	 136.951   	 0         	 33.129    	 4.13386   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1700, m: 34, k: 34) 	 0.0123396 	 700       	 222.963   	 0         	 52.9864   	 4.20792   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 34, reductionFactor: 37, colBlockingSize: 12)                  	 0.0119216 	 100       	 49.7937   	 0         	 5.78149   	 8.6126    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 34, n: 50, r2: 34)                                                                                         	 0.0114771 	 800       	 0         	 0         	 64.4622   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, r1_: 84, n: 50, r2: 50)           	 0.00807502	 100       	 436.903   	 0         	 42.3089   	 10.3265   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, r1_: 50, n: 50, r2: 84)           	 0.00653137	 100       	 540.162   	 0         	 69.4494   	 7.77778   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 84, reductionFactor: 37, colBlockingSize: 12)                    	 0.00587356	 100       	 12.3378   	 0         	 1.53311   	 8.0476    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 34, r: 34, streamingCols: 0)                   	 0.00508916	 100       	 56.7873   	 0         	 26.8143   	 2.1178    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 34, Qr2: 50)       	 0.00323338	 100       	 0         	 0         	 103.916   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 34, reductionFactor: 37, colBlockingSize: 12)                    	 0.00213146	 100       	 5.57008   	 0         	 1.07194   	 5.19627   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 34)                                                         	 0.00202864	 100       	 0         	 0         	 67.04     	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 84, leftOrthog: 1)          	 0.00196804	 100       	 21.341    	 0         	 7.15432   	 2.98295   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 34, m: 2500)                                                                  	 0.00174147	 100       	 0         	 0         	 78.0951   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 34, n: 50, r2left: 50, r2right: 0)                 	 0.000927183	 100       	 0         	 0         	 146.681   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 34)                                                                                          	 0.000850175	 200       	 0         	 0         	 6.39868   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000834617	 100       	 0.599077  	 0         	 2.39631   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 34, n: 50, r2: 1)                                                                                          	 0.000697918	 200       	 0         	 0         	 7.79461   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000693822	 100       	 36.0323   	 0         	 8.64775   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 34, m: 50, k: 50)     	 0.000682302	 100       	 24.9157   	 0         	 6.91776   	 3.60169   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 34, m: 34, fromLeft: 1)                	 0.000634263	 800       	 0         	 0         	 23.3291   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 34)   	 0.000596959	 100       	 28.4777   	 0         	 7.90674   	 3.60169   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 34, m: 50, k: 50)  	 0.000557742	 100       	 30.48     	 0         	 8.46269   	 3.60169   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000527218	 100       	 0         	 0         	 7.58699   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 34)                 	 0.000511778	 100       	 0         	 0         	 13.1307   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 34, k: 34)   	 0.000462428	 100       	 24.9985   	 0         	 7.88188   	 3.17164   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000442885	 100       	 0         	 0         	 9.03169   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 34, n: 50, r2left: 1, r2right: 0)                  	 0.000428227	 100       	 0         	 0         	 6.35177   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000412645	 100       	 1.2117    	 0         	 14.5403   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000388457	 100       	 0.643572  	 0         	 10.2972   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 34)                                                           	 0.000349912	 100       	 0         	 0         	 7.77338   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 34)                                                                                 	 0.00033727	 100       	 0.504047  	 0         	 8.06476   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000323595	 100       	 0.772571  	 0         	 12.3611   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1700, m: 0, k: 34)  	 5.96e-06  	 100       	 0         	 0         	 7758.39   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.12481   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.12476   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.73151   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.73024   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.6268    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.701114  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.545497  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.44449   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.393191  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.225519  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.189845  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.102074  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0929496 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0546251 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0529953 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0335399 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0323181 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0216589 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0201098 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0192654 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0190476 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0182806 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0135524 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00522288	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00311203	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00116307	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00104932	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000834617	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000634263	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000412645	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22930998069120 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22930763278336 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22930561951872 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22930360625408 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22930159298944 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22929957972480 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22929756646016 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22929555319552 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22929353993088 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22929152666624 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22928951340160 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22928750013696 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22928548687232 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22928347360768 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22928146034304 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22927944707840 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22927743381376 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22927542054912 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22927340728448 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22927139401984 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22926938075520 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22926736749056 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22926535422592 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22926334096128 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22926132769664 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22925931443200 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22925730116736 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22925528790272 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22925327463808 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22925126137344 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22924924810880 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22924723484416 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22924522153856 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22924320827392 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22924119500928 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22923918174464 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22923716848000 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22923515521536 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22923314195072 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22923112868608 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22922911542144 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22922710215680 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22922508889216 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22922307562752 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22922106236288 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22921904909824 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22921703583360 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22921502256896 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22921300930432 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22921099603968 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22920898277504 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22920696951040 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22920495624576 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22920294298112 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22920092971648 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22919891645184 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22919690318720 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22919488992256 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22919287665792 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22919086339328 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22918885012864 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22918683686400 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22918482359936 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22930892408576 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22930885818112 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 85, m: 85)                                                                 	 0.664581  	 700       	 6.03731   	 0         	 0.183358  	 32.9264   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4250, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.367814  	 600       	 102.887   	 0         	 4.80863   	 21.3964   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4250, r: 85, r2: 85, leftOrthog: 1)        	 0.175259  	 600       	 210.246   	 0         	 30.0776   	 6.99013   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4250, cols: 35, reductionFactor: 37, colBlockingSize: 12)                  	 0.0864023 	 700       	 86.6383   	 0         	 9.72035   	 8.91308   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, r1_: 85, n: 50, r2: 85)           	 0.0822551 	 600       	 447.966   	 0         	 42.5831   	 10.5198   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.0597284 	 100       	 62.1167   	 0         	 2.94299   	 21.1067   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 35, Qr2: 85)       	 0.0523096 	 700       	 0         	 0         	 67.9799   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4250, Xcols: 35, r: 35, streamingCols: 0)                   	 0.0519577 	 700       	 70.1412   	 0         	 32.1306   	 2.18301   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 85)                                                                 	 0.0468142 	 100       	 3.98739   	 0         	 0.188831  	 21.1161   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0370514 	 100       	 3.14878   	 0         	 0.163017  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 35, m: 50, k: 2500)   	 0.0320224 	 800       	 218.597   	 0         	 42.82     	 5.10502   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0233803 	 100       	 93.3449   	 0         	 7.35662   	 12.6886   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 35, m: 35)                                                                  	 0.0205309 	 900       	 2.50595   	 0         	 1.30107   	 1.92608   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 35, m: 4250)                                                                  	 0.0202933 	 700       	 0         	 0         	 82.0962   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1750, m: 50, k: 35) 	 0.0201797 	 800       	 242.818   	 0         	 47.7311   	 5.08721   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 35, n: 50, r2left: 50, r2right: 35)                	 0.0195862 	 700       	 0         	 0         	 85.06     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 35, m: 2500, k: 50)	 0.0180894 	 800       	 386.968   	 0         	 75.8014   	 5.10502   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4250, m: 35)                                                         	 0.0180509 	 700       	 0         	 0         	 92.2946   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 85, r2: 85, leftOrthog: 1)        	 0.0176948 	 100       	 204.156   	 0         	 29.4753   	 6.92634   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4250, r: 50, r2: 50, leftOrthog: 1)        	 0.0143675 	 100       	 147.903   	 0         	 35.7751   	 4.13424   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1750, m: 35, k: 35) 	 0.0126282 	 700       	 237.662   	 0         	 54.8659   	 4.33168   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 35, reductionFactor: 37, colBlockingSize: 12)                  	 0.0119419 	 100       	 52.6761   	 0         	 5.94377   	 8.86241   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 35, n: 50, r2: 35)                                                                                         	 0.011616  	 800       	 0         	 0         	 67.493    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, r1_: 85, n: 50, r2: 50)           	 0.00878013	 100       	 411.44    	 0         	 39.3821   	 10.4474   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, r1_: 50, n: 50, r2: 85)           	 0.00677232	 100       	 533.421   	 0         	 68.2779   	 7.8125    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 85, reductionFactor: 37, colBlockingSize: 12)                    	 0.00615234	 100       	 12.0609   	 0         	 1.49211   	 8.08308   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 35, r: 35, streamingCols: 0)                   	 0.00538928	 100       	 56.8258   	 0         	 26.0684   	 2.17987   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 35, Qr2: 50)       	 0.00332323	 100       	 0         	 0         	 102.31    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 35)                                                         	 0.00217009	 100       	 0         	 0         	 64.5135   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 35, reductionFactor: 37, colBlockingSize: 12)                    	 0.00207615	 100       	 6.05982   	 0         	 1.14635   	 5.28617   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 85, leftOrthog: 1)          	 0.00198576	 100       	 21.4024   	 0         	 7.15091   	 2.99296   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 35, m: 2500)                                                                  	 0.0018358 	 100       	 0         	 0         	 76.2612   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 35, n: 50, r2left: 50, r2right: 0)                 	 0.000988396	 100       	 0         	 0         	 141.644   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 35)                                                                                          	 0.000817225	 200       	 0         	 0         	 6.85246   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000806931	 100       	 0.619632  	 0         	 2.47853   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 35, n: 50, r2: 1)                                                                                          	 0.000718344	 200       	 0         	 0         	 7.79571   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000693718	 100       	 36.0377   	 0         	 8.64905   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 35, m: 50, k: 50)     	 0.000693634	 100       	 25.2294   	 0         	 6.92008   	 3.64583   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 35, m: 35, fromLeft: 1)                	 0.000674845	 800       	 0         	 0         	 23.235    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 35, m: 50, k: 50)  	 0.000603956	 100       	 28.9756   	 0         	 7.9476    	 3.64583   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 35)   	 0.000587928	 100       	 29.7655   	 0         	 8.16427   	 3.64583   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 35, k: 35)   	 0.000521278	 100       	 23.4999   	 0         	 7.25141   	 3.24074   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000492514	 100       	 0         	 0         	 8.1216    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 35)                 	 0.000487683	 100       	 0         	 0         	 13.9435   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 35, n: 50, r2left: 1, r2right: 0)                  	 0.000486115	 100       	 0         	 0         	 5.75995   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000436153	 100       	 0         	 0         	 9.17109   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000432768	 100       	 1.15535   	 0         	 13.8642   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000406116	 100       	 0.615588  	 0         	 9.8494    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 35)                                                           	 0.000392203	 100       	 0         	 0         	 7.13916   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 35)                                                                                 	 0.000337671	 100       	 0.518256  	 0         	 8.29209   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000331429	 100       	 0.754309  	 0         	 12.0689   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1750, m: 0, k: 35)  	 4.91e-06  	 100       	 0         	 0         	 9979.63   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.22734   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.22729   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.82305   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.82181   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.71392   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.748447  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.557495  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.457662  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.404174  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.231152  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.209307  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.100875  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0985013 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.057347  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.056069  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0339221 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.032716  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.022129  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0215484 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0206132 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0205309 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0186933 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0136441 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00537907	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00319177	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00114875	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107522	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000806931	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000674845	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000432768	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23228493608832 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23228256872448 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23228055545984 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23227854219520 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23227652893056 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23227451566592 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23227250240128 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23227048913664 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23226847587200 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23226646260736 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23226444934272 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23226243607808 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23226042281344 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23225840954880 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23225639628416 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23225438301952 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23225236975488 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23225035649024 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23224834322560 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23224632996096 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23224431669632 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23224230343168 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23224029016704 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23223827690240 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23223626363776 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23223425037312 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23223223710848 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23223022384384 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23222821057920 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23222619731456 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23222418404992 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23222217078528 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23222015747968 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23221814421504 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23221613095040 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23221411768576 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23221210442112 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23221009115648 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23220807789184 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23220606462720 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23220405136256 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23220203809792 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23220002483328 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23219801156864 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23219599830400 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23219398503936 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23219197177472 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23218995851008 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23218794524544 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23218593198080 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23218391871616 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23218190545152 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23217989218688 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23217787892224 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23217586565760 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23217385239296 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23217183912832 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23216982586368 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23216781259904 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23216579933440 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23216378606976 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23216177280512 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23215975954048 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23228387948288 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23228381357824 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 86, m: 86)                                                                 	 0.677496  	 700       	 6.13371   	 0         	 0.184111  	 33.3153   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4300, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.373447  	 600       	 104.954   	 0         	 4.84818   	 21.6481   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4300, r: 86, r2: 86, leftOrthog: 1)        	 0.167913  	 600       	 227.28    	 0         	 32.1363   	 7.07237   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4300, cols: 36, reductionFactor: 37, colBlockingSize: 12)                  	 0.0941026 	 700       	 85.1495   	 0         	 9.2892    	 9.1665    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, r1_: 86, n: 50, r2: 86)           	 0.080474  	 600       	 474.232   	 0         	 44.5557   	 10.6436   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.0600136 	 100       	 63.2848   	 0         	 2.96461   	 21.3468   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 36, Qr2: 86)       	 0.0598825 	 700       	 0         	 0         	 60.7483   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4300, Xcols: 36, r: 36, streamingCols: 0)                   	 0.0538195 	 700       	 72.4822   	 0         	 32.2817   	 2.2453    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 86)                                                                 	 0.0468366 	 100       	 4.02819   	 0         	 0.190449  	 21.151    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0382767 	 100       	 3.04798   	 0         	 0.157798  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 36, m: 50, k: 2500)   	 0.0316692 	 800       	 227.35    	 0         	 43.8129   	 5.18911   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1800, m: 50, k: 36) 	 0.0276067 	 800       	 187.781   	 0         	 36.3043   	 5.17241   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 36, m: 4300)                                                                  	 0.0253535 	 700       	 0         	 0         	 68.3835   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0233782 	 100       	 94.4515   	 0         	 7.44283   	 12.6903   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 36, m: 36)                                                                  	 0.0203839 	 900       	 2.74664   	 0         	 1.38604   	 1.98165   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4300, m: 36)                                                         	 0.0199108 	 700       	 0         	 0         	 87.0763   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 36, n: 50, r2left: 50, r2right: 36)                	 0.0180343 	 700       	 0         	 0         	 96.137    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 36, m: 2500, k: 50)	 0.0179779 	 800       	 400.492   	 0         	 77.1793   	 5.18911   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 86, r2: 86, leftOrthog: 1)        	 0.0166326 	 100       	 222.335   	 0         	 31.735    	 7.006     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1800, m: 36, k: 36) 	 0.0143435 	 700       	 227.693   	 0         	 51.1045   	 4.45545   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4300, r: 50, r2: 50, leftOrthog: 1)        	 0.0138606 	 100       	 155.116   	 0         	 37.5163   	 4.13462   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 36, reductionFactor: 37, colBlockingSize: 12)                  	 0.0133452 	 100       	 49.869    	 0         	 5.47287   	 9.11203   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 36, n: 50, r2: 36)                                                                                         	 0.0117603 	 800       	 0         	 0         	 70.5287   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, r1_: 86, n: 50, r2: 50)           	 0.00846332	 100       	 436.944   	 0         	 41.3451   	 10.5682   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, r1_: 50, n: 50, r2: 86)           	 0.00700835	 100       	 527.656   	 0         	 67.2455   	 7.84672   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 86, reductionFactor: 37, colBlockingSize: 12)                    	 0.00602515	 100       	 12.607    	 0         	 1.55296   	 8.11804   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 36, r: 36, streamingCols: 0)                   	 0.0054289 	 100       	 59.6806   	 0         	 26.6202   	 2.24193   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 36, Qr2: 50)       	 0.00324066	 100       	 0         	 0         	 106.151   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 36)                                                         	 0.00312626	 100       	 0         	 0         	 46.0614   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 36, m: 2500)                                                                  	 0.00310045	 100       	 0         	 0         	 46.4449   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 86, leftOrthog: 1)          	 0.00204538	 100       	 21.023    	 0         	 7.00115   	 3.00279   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 36, reductionFactor: 37, colBlockingSize: 12)                    	 0.00182412	 100       	 7.29681   	 0         	 1.3578    	 5.37398   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 36, n: 50, r2left: 50, r2right: 0)                 	 0.0011148 	 100       	 0         	 0         	 129.171   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00092089	 100       	 0.542953  	 0         	 2.17181   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 36)                                                                                          	 0.000833967	 200       	 0         	 0         	 6.90675   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 36, m: 36, fromLeft: 1)                	 0.000736533	 800       	 0         	 0         	 22.5228   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 36, n: 50, r2: 1)                                                                                          	 0.000711621	 200       	 0         	 0         	 8.0942    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000695199	 100       	 35.9609   	 0         	 8.63062   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 36, n: 50, r2left: 1, r2right: 0)                  	 0.000680746	 100       	 0         	 0         	 4.23065   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 36, m: 50, k: 50)     	 0.000634147	 100       	 28.3846   	 0         	 7.69538   	 3.68852   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 36, k: 36)   	 0.000627109	 100       	 20.6663   	 0         	 6.2458    	 3.30882   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 36)   	 0.000584422	 100       	 30.7997   	 0         	 8.35013   	 3.68852   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 36, m: 50, k: 50)  	 0.000562643	 100       	 31.9919   	 0         	 8.67335   	 3.68852   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 36)                 	 0.00055388	 100       	 0         	 0         	 12.4215   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000510343	 100       	 0         	 0         	 7.83787   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000438826	 100       	 0         	 0         	 9.11523   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000430278	 100       	 1.16204   	 0         	 13.9445   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00041023	 100       	 0.609414  	 0         	 9.75063   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 36)                                                           	 0.000371718	 100       	 0         	 0         	 7.74781   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000342735	 100       	 0.729427  	 0         	 11.6708   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 36)                                                                                 	 0.000340571	 100       	 0.528524  	 0         	 8.45639   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1800, m: 0, k: 36)  	 5.42e-06  	 100       	 0         	 0         	 9564.58   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.27292   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.27287   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.83797   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.83661   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.73021   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.762609  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.572136  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.463359  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.434847  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.250778  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.200452  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.109738  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0966409 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.063562  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0592484 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0431671 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0323034 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0284539 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0234088 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0203839 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0203837 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0185405 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0138162 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00300306	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00292267	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00123175	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109354	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00092089	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000736533	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000430278	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22972473800576 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22972236556288 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22972035229824 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22971833903360 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22971632576896 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22971431250432 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22971229923968 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22971028597504 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22970827271040 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22970625944576 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22970424618112 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22970223291648 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22970021965184 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22969820638720 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22969619312256 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22969417985792 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22969216659328 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22969015332864 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22968814006400 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22968612679936 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22968411353472 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22968210027008 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22968008700544 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22967807374080 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22967606047616 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22967404721152 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22967203394688 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22967002068224 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22966800741760 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22966599415296 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22966398088832 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22966196762368 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22965995431808 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22965794105344 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22965592778880 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22965391452416 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22965190125952 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22964988799488 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22964787473024 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22964586146560 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22964384820096 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22964183493632 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22963982167168 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22963780840704 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22963579514240 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22963378187776 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22963176861312 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22962975534848 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22962774208384 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22962572881920 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22962371555456 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22962170228992 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22961968902528 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22961767576064 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22961566249600 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22961364923136 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22961163596672 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22960962270208 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22960760943744 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22960559617280 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22960358290816 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22960156964352 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22959955637888 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22972368140032 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22972361549568 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 87, m: 87)                                                                 	 0.692754  	 700       	 6.21031   	 0         	 0.184259  	 33.7042   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4350, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.385559  	 600       	 105.245   	 0         	 4.80573   	 21.8998   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4350, r: 87, r2: 87, leftOrthog: 1)        	 0.17668   	 600       	 223.625   	 0         	 31.2561   	 7.15461   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4350, cols: 37, reductionFactor: 37, colBlockingSize: 12)                  	 0.0938251 	 700       	 91.2607   	 0         	 9.6881    	 9.41988   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, r1_: 87, n: 50, r2: 87)           	 0.0867538 	 600       	 455.429   	 0         	 42.2973   	 10.7673   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.0617243 	 100       	 62.9701   	 0         	 2.91709   	 21.5866   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4350, Xcols: 37, r: 37, streamingCols: 0)                   	 0.0556986 	 700       	 74.8422   	 0         	 32.433    	 2.30759   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 37, Qr2: 87)       	 0.0519654 	 700       	 0         	 0         	 71.5984   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 87)                                                                 	 0.0477362 	 100       	 3.99417   	 0         	 0.188536  	 21.1852   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0367347 	 100       	 3.17593   	 0         	 0.164422  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 37, m: 50, k: 2500)   	 0.0310171 	 800       	 238.578   	 0         	 45.2603   	 5.27126   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0231697 	 100       	 96.4096   	 0         	 7.59612   	 12.692    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 37, m: 37)                                                                  	 0.0218641 	 900       	 2.78      	 0         	 1.36464   	 2.03716   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 37, m: 4350)                                                                  	 0.0214046 	 700       	 0         	 0         	 84.2174   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1850, m: 50, k: 37) 	 0.0213357 	 800       	 256.659   	 0         	 48.8347   	 5.25568   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 37, n: 50, r2left: 50, r2right: 37)                	 0.0204299 	 700       	 0         	 0         	 88.2354   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4350, m: 37)                                                         	 0.0199234 	 700       	 0         	 0         	 90.4786   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 37, m: 2500, k: 50)	 0.0184145 	 800       	 401.856   	 0         	 76.2354   	 5.27126   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 87, r2: 87, leftOrthog: 1)        	 0.0166267 	 100       	 227.616   	 0         	 32.1237   	 7.08561   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4350, r: 50, r2: 50, leftOrthog: 1)        	 0.0136914 	 100       	 158.859   	 0         	 38.4184   	 4.13498   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1850, m: 37, k: 37) 	 0.0135195 	 700       	 262.266   	 0         	 57.2732   	 4.57921   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 37, reductionFactor: 37, colBlockingSize: 12)                  	 0.013349  	 100       	 52.663    	 0         	 5.62551   	 9.36145   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 37, n: 50, r2: 37)                                                                                         	 0.0120398 	 800       	 0         	 0         	 72.7721   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, r1_: 87, n: 50, r2: 50)           	 0.0086505 	 100       	 437.489   	 0         	 40.9289   	 10.689    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 87, reductionFactor: 37, colBlockingSize: 12)                    	 0.00784493	 100       	 9.90904   	 0         	 1.21546   	 8.1525    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, r1_: 50, n: 50, r2: 87)           	 0.00675358	 100       	 560.37    	 0         	 71.109    	 7.88043   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 37, r: 37, streamingCols: 0)                   	 0.00579742	 100       	 59.0349   	 0         	 25.6231   	 2.30398   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 37, Qr2: 50)       	 0.0033498 	 100       	 0         	 0         	 103.887   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 37, m: 2500)                                                                  	 0.00275889	 100       	 0         	 0         	 53.6448   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 37)                                                         	 0.00274884	 100       	 0         	 0         	 53.8408   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 37, reductionFactor: 37, colBlockingSize: 12)                    	 0.00195436	 100       	 7.19417   	 0         	 1.31767   	 5.45977   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 87, leftOrthog: 1)          	 0.00193862	 100       	 22.4386   	 0         	 7.44859   	 3.01247   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 37, n: 50, r2left: 50, r2right: 0)                 	 0.00114109	 100       	 0         	 0         	 129.701   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 37)                                                                                          	 0.000834824	 200       	 0         	 0         	 7.09132   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000776068	 100       	 0.644273  	 0         	 2.57709   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 37, n: 50, r2: 1)                                                                                          	 0.000762841	 200       	 0         	 0         	 7.76046   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 37, m: 37, fromLeft: 1)                	 0.000747486	 800       	 0         	 0         	 23.4428   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000720357	 100       	 34.705    	 0         	 8.3292    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 37, m: 50, k: 50)     	 0.000702927	 100       	 26.3185   	 0         	 7.05621   	 3.72984   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 37)   	 0.000602817	 100       	 30.6892   	 0         	 8.22804   	 3.72984   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 37, m: 50, k: 50)  	 0.000581796	 100       	 31.7981   	 0         	 8.52533   	 3.72984   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 37, k: 37)   	 0.000565585	 100       	 24.205    	 0         	 7.16992   	 3.37591   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 37)                 	 0.000560196	 100       	 0         	 0         	 12.4242   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000524971	 100       	 0         	 0         	 7.61947   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 37, n: 50, r2left: 1, r2right: 0)                  	 0.000488037	 100       	 0         	 0         	 6.06511   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000418245	 100       	 0         	 0         	 9.56377   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000409274	 100       	 1.22168   	 0         	 14.6601   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000381972	 100       	 0.654498  	 0         	 10.472    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 37)                                                           	 0.000359598	 100       	 0         	 0         	 8.23141   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 37)                                                                                 	 0.000347268	 100       	 0.53273   	 0         	 8.52368   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000328919	 100       	 0.760066  	 0         	 12.161    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1850, m: 0, k: 37)  	 5.141e-06 	 100       	 0         	 0         	 10651.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.31396   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.31391   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.88832   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.88711   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.777     	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.777225  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.587426  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.478878  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.425527  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.249103  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.208937  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.109558  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.102878  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.061496  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0557334 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0360287 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.03172   	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0241635 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0230318 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0226192 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0218641 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0189963 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0141624 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00456827	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00297532	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00116189	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105816	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000776068	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000747486	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000409274	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22443434157952 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22443217381376 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22443016054912 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22442814728448 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22442613401984 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22442412075520 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22442210749056 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22442009422592 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22441808096128 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22441606769664 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22441405443200 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22441204116736 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22441002790272 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22440801463808 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22440600137344 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22440398810880 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22440197484416 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22439996157952 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22439794831488 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22439593505024 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22439392178560 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22439190852096 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22438989525632 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22438788199168 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22438586872704 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22438385546240 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22438184219776 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22437982893312 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22437781566848 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22437580240384 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22437378913920 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22437177587456 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22436976256896 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22436774930432 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22436573603968 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22436372277504 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22436170951040 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22435969624576 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22435768298112 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22435566971648 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22435365645184 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22435164318720 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22434962992256 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22434761665792 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22434560339328 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22434359012864 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22434157686400 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22433956359936 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22433755033472 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22433553707008 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22433352380544 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22433151054080 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22432949727616 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22432748401152 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22432547074688 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22432345748224 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22432144421760 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22431943095296 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22431741768832 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22431540442368 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22431339115904 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22431137789440 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22430936462976 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22443328497408 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22443321906944 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 88, m: 88)                                                                 	 0.67747   	 700       	 6.57193   	 0         	 0.192764  	 34.0931   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4400, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.390825  	 600       	 107.448   	 0         	 4.85058   	 22.1516   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4400, r: 88, r2: 88, leftOrthog: 1)        	 0.183581  	 600       	 222.726   	 0         	 30.7767   	 7.23684   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4400, cols: 38, reductionFactor: 37, colBlockingSize: 12)                  	 0.09711   	 700       	 94.0731   	 0         	 9.72512   	 9.67322   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, r1_: 88, n: 50, r2: 88)           	 0.0796753 	 600       	 513.187   	 0         	 47.1199   	 10.8911   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.0633681 	 100       	 62.7548   	 0         	 2.87519   	 21.8263   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4400, Xcols: 38, r: 38, streamingCols: 0)                   	 0.0578178 	 700       	 76.923    	 0         	 32.4586   	 2.36988   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 38, Qr2: 88)       	 0.0559925 	 700       	 0         	 0         	 67.9491   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 88)                                                                 	 0.0491767 	 100       	 3.91784   	 0         	 0.18464   	 21.2188   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0376332 	 100       	 3.1001    	 0         	 0.160497  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 38, m: 50, k: 2500)   	 0.0341451 	 800       	 222.58    	 0         	 41.5919   	 5.35151   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4400, m: 38)                                                         	 0.0243194 	 700       	 0         	 0         	 77.002    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1900, m: 50, k: 38) 	 0.0240686 	 800       	 239.98    	 0         	 44.9647   	 5.33708   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0234979 	 100       	 96.1558   	 0         	 7.57515   	 12.6936   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 38, m: 38)                                                                  	 0.0225782 	 900       	 2.91634   	 0         	 1.39355   	 2.09273   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 38, m: 4400)                                                                  	 0.0221666 	 700       	 0         	 0         	 84.4801   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 38, n: 50, r2left: 50, r2right: 38)                	 0.0215905 	 700       	 0         	 0         	 86.7343   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 38, m: 2500, k: 50)	 0.0185784 	 800       	 409.077   	 0         	 76.4415   	 5.35151   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 88, r2: 88, leftOrthog: 1)        	 0.0172344 	 100       	 224.667   	 0         	 31.3553   	 7.16519   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1900, m: 38, k: 38) 	 0.014563  	 700       	 263.753   	 0         	 56.0822   	 4.70297   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 38, reductionFactor: 37, colBlockingSize: 12)                  	 0.0137806 	 100       	 53.8087   	 0         	 5.59885   	 9.61067   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4400, r: 50, r2: 50, leftOrthog: 1)        	 0.0136068 	 100       	 161.684   	 0         	 39.0982   	 4.13534   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 38, n: 50, r2: 38)                                                                                         	 0.0119977 	 800       	 0         	 0         	 77.0278   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 88, reductionFactor: 37, colBlockingSize: 12)                    	 0.00853064	 100       	 9.32322   	 0         	 1.13886   	 8.18645   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, r1_: 88, n: 50, r2: 50)           	 0.00822392	 100       	 470.822   	 0         	 43.5553   	 10.8097   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, r1_: 50, n: 50, r2: 88)           	 0.00712049	 100       	 543.783   	 0         	 68.7144   	 7.91367   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 38, r: 38, streamingCols: 0)                   	 0.0057511 	 100       	 62.7706   	 0         	 26.5301   	 2.36601   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 38, Qr2: 50)       	 0.00343688	 100       	 0         	 0         	 102.419   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 38)                                                         	 0.0033172 	 100       	 0         	 0         	 45.8218   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 38, m: 2500)                                                                  	 0.00284189	 100       	 0         	 0         	 53.4856   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 38, reductionFactor: 37, colBlockingSize: 12)                    	 0.00239543	 100       	 6.19106   	 0         	 1.11679   	 5.54361   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 88, leftOrthog: 1)          	 0.00204688	 100       	 21.4962   	 0         	 7.11328   	 3.02198   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 38, n: 50, r2left: 50, r2right: 0)                 	 0.00131639	 100       	 0         	 0         	 115.467   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 38)                                                                                          	 0.000828252	 200       	 0         	 0         	 7.34076   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 38, m: 38, fromLeft: 1)                	 0.000815785	 800       	 0         	 0         	 22.657    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000792496	 100       	 0.630918  	 0         	 2.52367   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 38, n: 50, r2: 1)                                                                                          	 0.000702423	 200       	 0         	 0         	 8.65575   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 38, m: 50, k: 50)     	 0.000688602	 100       	 27.5921   	 0         	 7.31918   	 3.76984   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000674114	 100       	 37.0857   	 0         	 8.90057   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 38)   	 0.000657894	 100       	 28.88     	 0         	 7.66081   	 3.76984   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 38, m: 50, k: 50)  	 0.000601242	 100       	 31.6013   	 0         	 8.38265   	 3.76984   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 38)                 	 0.000592449	 100       	 0         	 0         	 11.8829   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 38, k: 38)   	 0.000579272	 100       	 24.9278   	 0         	 7.24219   	 3.44203   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000529361	 100       	 0         	 0         	 7.55628   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 38, n: 50, r2left: 1, r2right: 0)                  	 0.000503728	 100       	 0         	 0         	 6.035     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000451729	 100       	 0         	 0         	 8.85487   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000429291	 100       	 1.16471   	 0         	 13.9765   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 38)                                                           	 0.000376713	 100       	 0         	 0         	 8.0698    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000369171	 100       	 0.677193  	 0         	 10.8351   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 38)                                                                                 	 0.000333384	 100       	 0.569913  	 0         	 9.11861   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000321753	 100       	 0.776994  	 0         	 12.4319   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1900, m: 0, k: 38)  	 5.25e-06  	 100       	 0         	 0         	 11001.9   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.35123   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.35116   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.90336   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.90215   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.79307   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.76428   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.599508  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.48684   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.447732  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.26266   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.216469  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.113791  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0956938 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0635689 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0598811 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0398741 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0348337 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0280133 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0250085 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0240031 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0225782 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0191796 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0140578 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00383921	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00317031	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00136024	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00102431	 300       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000815785	 800       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000792496	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000429291	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22565066516352 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22564885751808 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22564684425344 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22564483098880 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22564281772416 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22564080445952 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22563879119488 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22563677793024 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22563476466560 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22563275140096 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22563073813632 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22562872487168 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22562671160704 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22562469834240 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22562268507776 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22562067181312 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22561865854848 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22561664528384 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22561463201920 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22561261875456 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22561060548992 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22560859222528 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22560657896064 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22560456569600 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22560255243136 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22560053916672 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22559852590208 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22559651263744 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22559449937280 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22559248610816 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22559047284352 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22558845957888 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22558644627328 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22558443300864 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22558241974400 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22558040647936 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22557839321472 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22557637995008 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22557436668544 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22557235342080 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22557034015616 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22556832689152 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22556631362688 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22556430036224 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22556228709760 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22556027383296 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22555826056832 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22555624730368 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22555423403904 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22555222077440 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22555020750976 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22554819424512 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22554618098048 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22554416771584 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22554215445120 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22554014118656 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22553812792192 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22553611465728 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22553410139264 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22553208812800 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22553007486336 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22552806159872 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22552604833408 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22564960855808 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22564780889856 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 89, m: 89)                                                                 	 0.715304  	 700       	 6.43893   	 0         	 0.186733  	 34.482    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4450, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.408523  	 600       	 106.337   	 0         	 4.74651   	 22.4033   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4450, r: 89, r2: 89, leftOrthog: 1)        	 0.182662  	 600       	 231.565   	 0         	 31.6386   	 7.31908   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4450, cols: 39, reductionFactor: 37, colBlockingSize: 12)                  	 0.101984  	 700       	 95.4258   	 0         	 9.61322   	 9.92652   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, r1_: 89, n: 50, r2: 89)           	 0.093665  	 600       	 451.589   	 0         	 40.9982   	 11.0149   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4450, Xcols: 39, r: 39, streamingCols: 0)                   	 0.0658662 	 700       	 71.9324   	 0         	 29.5754   	 2.43217   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.0648556 	 100       	 62.7168   	 0         	 2.84226   	 22.0658   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 39, Qr2: 89)       	 0.0564011 	 700       	 0         	 0         	 68.9661   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 89)                                                                 	 0.047627  	 100       	 4.08732   	 0         	 0.192328  	 21.2518   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.038655  	 100       	 3.01816   	 0         	 0.156254  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 39, m: 50, k: 2500)   	 0.0327651 	 800       	 238.058   	 0         	 43.8417   	 5.42994   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0245621 	 100       	 93.0352   	 0         	 7.32838   	 12.6952   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 39, m: 39)                                                                  	 0.0244129 	 900       	 2.91579   	 0         	 1.35725   	 2.14831   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 39, m: 4450)                                                                  	 0.0237037 	 700       	 0         	 0         	 82.0025   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1950, m: 50, k: 39) 	 0.0215321 	 800       	 282.555   	 0         	 52.1641   	 5.41667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 39, n: 50, r2left: 50, r2right: 39)                	 0.0206484 	 700       	 0         	 0         	 94.1359   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 39, m: 2500, k: 50)	 0.0186723 	 800       	 417.73    	 0         	 76.9309   	 5.42994   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4450, m: 39)                                                         	 0.0180654 	 700       	 0         	 0         	 107.596   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 89, r2: 89, leftOrthog: 1)        	 0.0172488 	 100       	 229.61    	 0         	 31.6934   	 7.24473   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1950, m: 39, k: 39) 	 0.0156134 	 700       	 265.947   	 0         	 55.0988   	 4.82673   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 39, reductionFactor: 37, colBlockingSize: 12)                  	 0.0150902 	 100       	 51.7589   	 0         	 5.24954   	 9.8597    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4450, r: 50, r2: 50, leftOrthog: 1)        	 0.0133589 	 100       	 166.556   	 0         	 40.2728   	 4.13569   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 39, n: 50, r2: 39)                                                                                         	 0.0125942 	 800       	 0         	 0         	 77.2925   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, r1_: 89, n: 50, r2: 50)           	 0.00942939	 100       	 420.017   	 0         	 38.4263   	 10.9304   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, r1_: 50, n: 50, r2: 89)           	 0.0068762 	 100       	 575.972   	 0         	 72.4819   	 7.94643   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 89, reductionFactor: 37, colBlockingSize: 12)                    	 0.00655775	 100       	 12.4053   	 0         	 1.50918   	 8.21991   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 39, r: 39, streamingCols: 0)                   	 0.00588955	 100       	 64.5635   	 0         	 26.5909   	 2.42803   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 39, Qr2: 50)       	 0.00362404	 100       	 0         	 0         	 98.233    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 39, m: 2500)                                                                  	 0.00276936	 100       	 0         	 0         	 56.3308   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 39, reductionFactor: 37, colBlockingSize: 12)                    	 0.00253395	 100       	 6.16471   	 0         	 1.09584   	 5.62557   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 39)                                                         	 0.00229241	 100       	 0         	 0         	 68.0506   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 39, n: 50, r2left: 50, r2right: 0)                 	 0.00212458	 100       	 0         	 0         	 73.4261   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 89, leftOrthog: 1)          	 0.0020308 	 100       	 21.9126   	 0         	 7.2287    	 3.03134   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000999136	 100       	 0.500432  	 0         	 2.00173   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 39)                                                                                          	 0.000882339	 200       	 0         	 0         	 7.07211   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 39, m: 39, fromLeft: 1)                	 0.000863665	 800       	 0         	 0         	 22.5421   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00078192	 100       	 31.9726   	 0         	 7.67342   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 39, n: 50, r2: 1)                                                                                          	 0.000755529	 200       	 0         	 0         	 8.25911   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 39, m: 50, k: 50)     	 0.000704108	 100       	 27.6946   	 0         	 7.27161   	 3.80859   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 39, n: 50, r2left: 1, r2right: 0)                  	 0.000659151	 100       	 0         	 0         	 4.73336   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 39)   	 0.000608397	 100       	 32.0514   	 0         	 8.41556   	 3.80859   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 39, m: 50, k: 50)  	 0.000601009	 100       	 32.4454   	 0         	 8.51901   	 3.80859   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 39, k: 39)   	 0.000558904	 100       	 27.214    	 0         	 7.75947   	 3.50719   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 39)                 	 0.000550212	 100       	 0         	 0         	 12.9405   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000498474	 100       	 0         	 0         	 8.02449   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00042586	 100       	 0         	 0         	 9.39276   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000412241	 100       	 1.21288   	 0         	 14.5546   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000381795	 100       	 0.654802  	 0         	 10.4768   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000366094	 100       	 0.682885  	 0         	 10.9262   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 39)                                                                                 	 0.000344922	 100       	 0.565345  	 0         	 9.04552   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 39)                                                           	 0.000341132	 100       	 0         	 0         	 9.14602   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 1950, m: 0, k: 39)  	 5.4e-06   	 100       	 0         	 0         	 11266.7   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.4185    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.41846   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.96081   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.95935   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.83538   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.801586  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.624107  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.505138  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.457578  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.273665  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.2153    	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.120077  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.110753  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0717557 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.060451  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0383181 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0334692 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.026473  	 800       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0244129 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0239824 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0206989 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0192734 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0147306 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00549115	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0031143 	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.001235  	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109281	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000999136	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000863665	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000412241	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23340950943616 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23340731328512 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23340530002048 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23340328675584 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23340127349120 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23339926022656 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23339724696192 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23339523369728 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23339322043264 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23339120716800 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23338919390336 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23338718063872 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23338516737408 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23338315410944 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23338114084480 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23337912758016 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23337711431552 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23337510105088 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23337308778624 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23337107452160 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23336906125696 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23336704799232 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23336503472768 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23336302146304 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23336100819840 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23335899493376 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23335698166912 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23335496840448 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23335295513984 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23335094187520 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23334892861056 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23334691534592 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23334490204032 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23334288877568 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23334087551104 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23333886224640 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23333684898176 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23333483571712 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23333282245248 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23333080918784 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23332879592320 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23332678265856 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23332476939392 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23332275612928 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23332074286464 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23331872960000 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23331671633536 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23331470307072 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23331268980608 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23331067654144 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23330866327680 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23330665001216 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23330463674752 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23330262348288 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23330061021824 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23329859695360 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23329658368896 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23329457042432 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23329255715968 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23329054389504 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23328853063040 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23328651736576 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23328450410112 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23340845283072 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23340838692608 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 90, m: 90)                                                                 	 0.714409  	 700       	 6.66677   	 0         	 0.191185  	 34.8708   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4500, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.406978  	 600       	 110.38    	 0         	 4.8722    	 22.655    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4500, r: 90, r2: 90, leftOrthog: 1)        	 0.190747  	 600       	 229.309   	 0         	 30.9822   	 7.40132   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4500, cols: 40, reductionFactor: 37, colBlockingSize: 12)                  	 0.114186  	 700       	 90.6626   	 0         	 8.90614   	 10.1798   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, r1_: 90, n: 50, r2: 90)           	 0.0918206 	 600       	 476.364   	 0         	 42.7669   	 11.1386   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.0650135 	 100       	 63.9784   	 0         	 2.86833   	 22.3051   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4500, Xcols: 40, r: 40, streamingCols: 0)                   	 0.0614975 	 700       	 81.9546   	 0         	 32.8547   	 2.49446   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 40, Qr2: 90)       	 0.0574165 	 700       	 0         	 0         	 69.2484   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 90)                                                                 	 0.0486726 	 100       	 4.04061   	 0         	 0.18984   	 21.2843   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0399435 	 100       	 2.92079   	 0         	 0.151214  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 40, m: 50, k: 2500)   	 0.028971  	 800       	 276.139   	 0         	 50.1468   	 5.50661   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 40, m: 4500)                                                                  	 0.0270559 	 700       	 0         	 0         	 74.5124   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2000, m: 50, k: 40) 	 0.0259179 	 800       	 246.933   	 0         	 44.9419   	 5.49451   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0236102 	 100       	 97.8732   	 0         	 7.70852   	 12.6968   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 40, m: 40)                                                                  	 0.0233441 	 900       	 3.28986   	 0         	 1.4928    	 2.20382   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 40, n: 50, r2left: 50, r2right: 40)                	 0.0204283 	 700       	 0         	 0         	 98.6865   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4500, m: 40)                                                         	 0.0200926 	 700       	 0         	 0         	 100.335   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 40, m: 2500, k: 50)	 0.0181909 	 800       	 439.779   	 0         	 79.8639   	 5.50661   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 90, r2: 90, leftOrthog: 1)        	 0.0171415 	 100       	 236.269   	 0         	 32.2585   	 7.32422   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 40, reductionFactor: 37, colBlockingSize: 12)                  	 0.0163551 	 100       	 50.2364   	 0         	 4.9697    	 10.1085   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2000, m: 40, k: 40) 	 0.0163147 	 700       	 274.598   	 0         	 55.4689   	 4.9505    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4500, r: 50, r2: 50, leftOrthog: 1)        	 0.0133078 	 100       	 169.074   	 0         	 40.8782   	 4.13603   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 40, n: 50, r2: 40)                                                                                         	 0.012951  	 800       	 0         	 0         	 79.067    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, r1_: 90, n: 50, r2: 50)           	 0.00913704	 100       	 443.251   	 0         	 40.1092   	 11.0511   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 90, reductionFactor: 37, colBlockingSize: 12)                    	 0.0082668 	 100       	 10.0631   	 0         	 1.21934   	 8.2529    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, r1_: 50, n: 50, r2: 90)           	 0.00708314	 100       	 571.781   	 0         	 71.6632   	 7.97872   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 40, r: 40, streamingCols: 0)                   	 0.00644528	 100       	 62.0609   	 0         	 24.9237   	 2.49004   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 40, Qr2: 50)       	 0.00340516	 100       	 0         	 0         	 105.722   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 40, m: 2500)                                                                  	 0.0031006 	 100       	 0         	 0         	 51.6029   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 40)                                                         	 0.00287015	 100       	 0         	 0         	 55.7463   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 90, leftOrthog: 1)          	 0.00213065	 100       	 21.1203   	 0         	 6.94623   	 3.04054   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 40, reductionFactor: 37, colBlockingSize: 12)                    	 0.00205229	 100       	 8.00688   	 0         	 1.40331   	 5.70571   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 40, n: 50, r2left: 50, r2right: 0)                 	 0.0018433 	 100       	 0         	 0         	 86.8008   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 40, m: 40, fromLeft: 1)                	 0.000879766	 800       	 0         	 0         	 23.2789   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 40)                                                                                          	 0.000867808	 200       	 0         	 0         	 7.3749    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000837406	 100       	 0.597082  	 0         	 2.38833   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 40, n: 50, r2: 1)                                                                                          	 0.000743278	 200       	 0         	 0         	 8.61051   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00071278	 100       	 35.0739   	 0         	 8.41774   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 40, m: 50, k: 50)     	 0.000645654	 100       	 30.9763   	 0         	 8.05385   	 3.84615   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 40)   	 0.000625109	 100       	 31.9944   	 0         	 8.31855   	 3.84615   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 40, k: 40)   	 0.00058354	 100       	 27.4189   	 0         	 7.67728   	 3.57143   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000552169	 100       	 0         	 0         	 7.24416   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 40)                 	 0.00054828	 100       	 0         	 0         	 13.132    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 40, m: 50, k: 50)  	 0.000540889	 100       	 36.9762   	 0         	 9.6138    	 3.84615   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 40, n: 50, r2left: 1, r2right: 0)                  	 0.000475264	 100       	 0         	 0         	 6.7331    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000432842	 100       	 0         	 0         	 9.24125   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000432725	 100       	 1.15547   	 0         	 13.8656   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000407717	 100       	 0.61317   	 0         	 9.81073   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 40)                                                                                 	 0.000374751	 100       	 0.533688  	 0         	 8.539     	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 40)                                                           	 0.000359739	 100       	 0         	 0         	 8.89534   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00035585	 100       	 0.702543  	 0         	 11.2407   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2000, m: 0, k: 40)  	 5.01e-06  	 100       	 0         	 0         	 12774.5   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.44812   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.44807   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 1.97614   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 1.97486   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.85305   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.803025  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.636462  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.50446   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.47186   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.286861  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.223327  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.13307   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.108754  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0679428 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0612545 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0434463 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0301565 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0296166 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0233441 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0233225 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0232952 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0187318 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0151143 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00535139	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00277053	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0011721 	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113832	 300       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000879766	 800       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000837406	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000432725	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22925341972352 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22925126133760 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22924924807296 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22924723480832 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22924522154368 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22924320827904 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22924119501440 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22923918174976 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22923716848512 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22923515522048 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22923314195584 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22923112869120 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22922911542656 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22922710216192 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22922508889728 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22922307563264 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22922106236800 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22921904910336 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22921703583872 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22921502257408 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22921300930944 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22921099604480 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22920898278016 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22920696951552 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22920495625088 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22920294298624 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22920092972160 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22919891645696 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22919690319232 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22919488992768 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22919287666304 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22919086339840 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22918885009280 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22918683682816 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22918482356352 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22918281029888 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22918079703424 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22917878376960 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22917677050496 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22917475724032 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22917274397568 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22917073071104 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22916871744640 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22916670418176 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22916469091712 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22916267765248 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22916066438784 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22915865112320 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22915663785856 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22915462459392 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22915261132928 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22915059806464 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22914858480000 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22914657153536 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22914455827072 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22914254500608 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22914053174144 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22913851847680 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22913650521216 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22913449194752 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22913247868288 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22913046541824 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22912845215360 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22925236311808 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22925229721344 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 91, m: 91)                                                                 	 0.738451  	 700       	 6.66711   	 0         	 0.189086  	 35.2597   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4550, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.417734  	 600       	 111.162   	 0         	 4.85282   	 22.9067   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4550, r: 91, r2: 91, leftOrthog: 1)        	 0.196686  	 600       	 229.88    	 0         	 30.718    	 7.48355   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4550, cols: 41, reductionFactor: 37, colBlockingSize: 12)                  	 0.113116  	 700       	 97.222    	 0         	 9.31868   	 10.433    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, r1_: 91, n: 50, r2: 91)           	 0.0953429 	 600       	 474.228   	 0         	 42.1073   	 11.2624   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.0665648 	 100       	 63.8837   	 0         	 2.8337    	 22.5443   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4550, Xcols: 41, r: 41, streamingCols: 0)                   	 0.0634315 	 700       	 84.4058   	 0         	 33.0131   	 2.55674   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 41, Qr2: 91)       	 0.060822  	 700       	 0         	 0         	 66.8074   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 91)                                                                 	 0.0480691 	 100       	 4.13294   	 0         	 0.193888  	 21.3162   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0369636 	 100       	 3.15626   	 0         	 0.163404  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 41, m: 50, k: 2500)   	 0.0322907 	 800       	 253.943   	 0         	 45.4966   	 5.58157   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 41, m: 41)                                                                  	 0.0269374 	 900       	 3.07025   	 0         	 1.35888   	 2.25939   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 41, m: 4550)                                                                  	 0.0258391 	 700       	 0         	 0         	 80.8604   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2050, m: 50, k: 41) 	 0.0246306 	 800       	 272.994   	 0         	 49.0058   	 5.57065   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0243062 	 100       	 96.1273   	 0         	 7.57009   	 12.6983   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 41, n: 50, r2left: 50, r2right: 41)                	 0.0229004 	 700       	 0         	 0         	 91.2369   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4550, m: 41)                                                         	 0.0202962 	 700       	 0         	 0         	 102.943   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 41, m: 2500, k: 50)	 0.0195108 	 800       	 420.279   	 0         	 75.2977   	 5.58157   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 91, r2: 91, leftOrthog: 1)        	 0.0176575 	 100       	 234.49    	 0         	 31.6721   	 7.40367   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2050, m: 41, k: 41) 	 0.0159909 	 700       	 301.7     	 0         	 59.457    	 5.07426   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 41, reductionFactor: 37, colBlockingSize: 12)                  	 0.0157608 	 100       	 54.77     	 0         	 5.28812   	 10.3572   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 41, n: 50, r2: 41)                                                                                         	 0.013217  	 800       	 0         	 0         	 81.398    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4550, r: 50, r2: 50, leftOrthog: 1)        	 0.0128519 	 100       	 177.016   	 0         	 42.7951   	 4.13636   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, r1_: 91, n: 50, r2: 50)           	 0.00938085	 100       	 441.378   	 0         	 39.5087   	 11.1717   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 91, reductionFactor: 37, colBlockingSize: 12)                    	 0.00827245	 100       	 10.2809   	 0         	 1.24084   	 8.28541   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, r1_: 50, n: 50, r2: 91)           	 0.00726268	 100       	 570.107   	 0         	 71.1694   	 8.01056   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 41, r: 41, streamingCols: 0)                   	 0.00645938	 100       	 65.0604   	 0         	 25.4935   	 2.55204   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 41, Qr2: 50)       	 0.00356616	 100       	 0         	 0         	 102.071   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 41, m: 2500)                                                                  	 0.00313914	 100       	 0         	 0         	 52.2436   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 41)                                                         	 0.00295899	 100       	 0         	 0         	 55.4243   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 41, n: 50, r2left: 50, r2right: 0)                 	 0.00218285	 100       	 0         	 0         	 75.1311   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 41, reductionFactor: 37, colBlockingSize: 12)                    	 0.00202226	 100       	 8.53715   	 0         	 1.47597   	 5.78408   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 91, leftOrthog: 1)          	 0.00198573	 100       	 22.9135   	 0         	 7.5136    	 3.0496    
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000893933	 100       	 0.559326  	 0         	 2.2373    	 0.25      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 41, m: 41, fromLeft: 1)                	 0.000885096	 800       	 0         	 0         	 24.3101   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 41)                                                                                          	 0.000844856	 200       	 0         	 0         	 7.76464   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 41, n: 50, r2: 1)                                                                                          	 0.00074681	 200       	 0         	 0         	 8.78403   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 41, k: 41)   	 0.000697842	 100       	 24.0885   	 0         	 6.62729   	 3.63475   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 41, m: 50, k: 50)     	 0.000697469	 100       	 29.392    	 0         	 7.57023   	 3.88258   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000697095	 100       	 35.8631   	 0         	 8.60715   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 41)   	 0.000686598	 100       	 29.8574   	 0         	 7.69009   	 3.88258   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 41, m: 50, k: 50)  	 0.000666076	 100       	 30.7773   	 0         	 7.92702   	 3.88258   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 41)                 	 0.000541125	 100       	 0         	 0         	 13.4535   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000538532	 100       	 0         	 0         	 7.4276    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 41, n: 50, r2left: 1, r2right: 0)                  	 0.000477595	 100       	 0         	 0         	 6.86774   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000433052	 100       	 0         	 0         	 9.23677   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000411704	 100       	 1.21446   	 0         	 14.5736   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000385946	 100       	 0.647759  	 0         	 10.3641   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 41)                                                           	 0.00037296	 100       	 0         	 0         	 8.79451   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 41)                                                                                 	 0.000350151	 100       	 0.585462  	 0         	 9.36739   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000350001	 100       	 0.714284  	 0         	 11.4285   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2050, m: 0, k: 41)  	 5.48e-06  	 100       	 0         	 0         	 12270.1   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.51162   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.51157   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.02384   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.0225    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.89589   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.823483  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.647777  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.5175    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.48767   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.291167  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.229181  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.131385  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.112684  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0698909 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0648212 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0420114 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0329882 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0289783 	 800       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0269374 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0261019 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0236281 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0201769 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0153472 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00591292	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0029023 	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00116219	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010861 	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000893933	 100       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000885096	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000411704	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22764209391488 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22763997751296 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22763796424832 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22763595098368 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22763393771904 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22763192445440 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22762991118976 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22762789792512 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22762588466048 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22762387139584 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22762185813120 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22761984486656 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22761783160192 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22761581833728 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22761380507264 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22761179180800 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22760977854336 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22760776527872 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22760575201408 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22760373874944 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22760172548480 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22759971222016 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22759769895552 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22759568569088 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22759367242624 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22759165916160 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22758964589696 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22758763263232 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22758561936768 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22758360610304 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22758159283840 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22757957957376 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22757756626816 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22757555300352 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22757353973888 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22757152647424 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22756951320960 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22756749994496 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22756548668032 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22756347341568 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22756146015104 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22755944688640 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22755743362176 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22755542035712 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22755340709248 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22755139382784 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22754938056320 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22754736729856 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22754535403392 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22754334076928 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22754132750464 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22753931424000 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22753730097536 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22753528771072 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22753327444608 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22753126118144 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22752924791680 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22752723465216 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22752522138752 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22752320812288 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22752119485824 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22751918159360 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22751716832896 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22764103730944 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22764097140480 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 92, m: 92)                                                                 	 0.73333   	 700       	 6.93743   	 0         	 0.194606  	 35.6486   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4600, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.426783  	 600       	 112.432   	 0         	 4.8549    	 23.1585   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4600, r: 92, r2: 92, leftOrthog: 1)        	 0.198918  	 600       	 234.877   	 0         	 31.0447   	 7.56579   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4600, cols: 42, reductionFactor: 37, colBlockingSize: 12)                  	 0.120544  	 700       	 96.7881   	 0         	 9.05728   	 10.6862   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, r1_: 92, n: 50, r2: 92)           	 0.0901576 	 600       	 518.218   	 0         	 45.5131   	 11.3861   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 42, Qr2: 92)       	 0.0770497 	 700       	 0         	 0         	 53.8852   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.0693935 	 100       	 62.6338   	 0         	 2.74912   	 22.7832   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4600, Xcols: 42, r: 42, streamingCols: 0)                   	 0.0687065 	 700       	 82.6717   	 0         	 31.5659   	 2.61902   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 92)                                                                 	 0.0481464 	 100       	 4.16784   	 0         	 0.195238  	 21.3475   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0389283 	 100       	 2.99696   	 0         	 0.155157  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 42, m: 50, k: 2500)   	 0.0332315 	 800       	 252.772   	 0         	 44.6997   	 5.65489   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 42, m: 42)                                                                  	 0.0274606 	 900       	 3.23757   	 0         	 1.39854   	 2.31496   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 42, m: 4600)                                                                  	 0.0248948 	 700       	 0         	 0         	 86.9192   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2100, m: 50, k: 42) 	 0.0248675 	 800       	 283.744   	 0         	 50.2632   	 5.64516   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0239999 	 100       	 98.4237   	 0         	 7.75002   	 12.6998   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 42, n: 50, r2left: 50, r2right: 42)                	 0.0231123 	 700       	 0         	 0         	 93.623    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4600, m: 42)                                                         	 0.0226949 	 700       	 0         	 0         	 95.3448   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 42, m: 2500, k: 50)	 0.0193316 	 800       	 434.522   	 0         	 76.8401   	 5.65489   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 92, r2: 92, leftOrthog: 1)        	 0.017708  	 100       	 238.988   	 0         	 31.9371   	 7.48308   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2100, m: 42, k: 42) 	 0.0173156 	 700       	 299.507   	 0         	 57.6195   	 5.19802   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 42, reductionFactor: 37, colBlockingSize: 12)                  	 0.0165745 	 100       	 54.6525   	 0         	 5.15317   	 10.6056   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4600, r: 50, r2: 50, leftOrthog: 1)        	 0.0147561 	 100       	 155.867   	 0         	 37.6792   	 4.13669   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 42, n: 50, r2: 42)                                                                                         	 0.0136085 	 800       	 0         	 0         	 82.9602   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, r1_: 92, n: 50, r2: 50)           	 0.0095552 	 100       	 442.9     	 0         	 39.2217   	 11.2922   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 92, reductionFactor: 37, colBlockingSize: 12)                    	 0.00918385	 100       	 9.46526   	 0         	 1.138     	 8.31747   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, r1_: 50, n: 50, r2: 92)           	 0.00714473	 100       	 592.325   	 0         	 73.6543   	 8.04196   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 42, r: 42, streamingCols: 0)                   	 0.00636512	 100       	 69.2838   	 0         	 26.5047   	 2.61402   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 42, Qr2: 50)       	 0.00357271	 100       	 0         	 0         	 103.003   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 42)                                                         	 0.00316106	 100       	 0         	 0         	 53.1467   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 42, m: 2500)                                                                  	 0.00307013	 100       	 0         	 0         	 54.7209   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 42, reductionFactor: 37, colBlockingSize: 12)                    	 0.00288436	 100       	 6.28103   	 0         	 1.07171   	 5.86075   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 42, n: 50, r2left: 50, r2right: 0)                 	 0.00216336	 100       	 0         	 0         	 77.6568   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 92, leftOrthog: 1)          	 0.00211962	 100       	 21.7021   	 0         	 7.09563   	 3.05851   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 42, m: 42, fromLeft: 1)                	 0.000977939	 800       	 0         	 0         	 23.0886   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000854555	 100       	 0.5851    	 0         	 2.3404    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 42)                                                                                          	 0.000825756	 200       	 0         	 0         	 8.138     	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 42, n: 50, r2: 1)                                                                                          	 0.00075693	 200       	 0         	 0         	 8.87797   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 42, m: 50, k: 50)     	 0.000723523	 100       	 29.0246   	 0         	 7.4082    	 3.91791   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000691516	 100       	 36.1525   	 0         	 8.67659   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 42, m: 50, k: 50)  	 0.000635231	 100       	 33.0588   	 0         	 8.43788   	 3.91791   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 42)   	 0.000623785	 100       	 33.6654   	 0         	 8.5927    	 3.91791   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 42, k: 42)   	 0.000614455	 100       	 28.7084   	 0         	 7.76493   	 3.69718   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 42)                 	 0.000547715	 100       	 0         	 0         	 13.4376   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00051785	 100       	 0         	 0         	 7.72424   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 42, n: 50, r2left: 1, r2right: 0)                  	 0.000465415	 100       	 0         	 0         	 7.21936   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000437099	 100       	 0         	 0         	 9.15124   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000402314	 100       	 1.24281   	 0         	 14.9137   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000386434	 100       	 0.646941  	 0         	 10.3511   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 42)                                                                                 	 0.000381231	 100       	 0.550847  	 0         	 8.81355   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 42)                                                           	 0.000348949	 100       	 0         	 0         	 9.62891   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000323543	 100       	 0.772695  	 0         	 12.3631   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2100, m: 0, k: 42)  	 5.82e-06  	 100       	 0         	 0         	 12123.7   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.56671   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.56666   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.04401   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.04274   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.92346   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.820405  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.669363  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.529981  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.522584  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.307896  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.233502  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.140503  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.107549  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0810595 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0750716 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0434272 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0339551 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.027965  	 800       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0274606 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0262888 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0262049 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0199668 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.015709  	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00658196	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00286207	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00205415	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109121	 300       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.000977939	 800       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000854555	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000402314	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22423881430912 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22423688701952 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22423487375488 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22423286049024 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22423084722560 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22422883396096 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22422682069632 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22422480743168 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22422279416704 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22422078090240 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22421876763776 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22421675437312 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22421474110848 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22421272784384 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22421071457920 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22420870131456 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22420668804992 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22420467478528 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22420266152064 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22420064825600 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22419863499136 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22419662172672 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22419460846208 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22419259519744 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22419058193280 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22418856866816 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22418655540352 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22418454213888 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22418252887424 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22418051560960 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22417850234496 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22417648908032 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22417447577472 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22417246251008 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22417044924544 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22416843598080 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22416642271616 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22416440945152 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22416239618688 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22416038292224 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22415836965760 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22415635639296 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22415434312832 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22415232986368 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22415031659904 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22414830333440 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22414629006976 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22414427680512 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22414226354048 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22414025027584 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22413823701120 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22413622374656 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22413421048192 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22413219721728 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22413018395264 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22412817068800 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22412615742336 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22412414415872 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22412213089408 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22412011762944 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22411810436480 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22411609110016 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22411407783552 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22423775770368 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22423769179904 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 93, m: 93)                                                                 	 0.784222  	 700       	 6.70108   	 0         	 0.185947  	 36.0375   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4650, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.432375  	 600       	 114.636   	 0         	 4.89685   	 23.4102   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4650, r: 93, r2: 93, leftOrthog: 1)        	 0.203993  	 600       	 236.584   	 0         	 30.9339   	 7.64803   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4650, cols: 43, reductionFactor: 37, colBlockingSize: 12)                  	 0.123796  	 700       	 99.8606   	 0         	 9.12854   	 10.9394   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, r1_: 93, n: 50, r2: 93)           	 0.101453  	 600       	 475.701   	 0         	 41.3297   	 11.5099   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.0693589 	 100       	 64.0348   	 0         	 2.78146   	 23.022    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 43, Qr2: 93)       	 0.0684547 	 700       	 0         	 0         	 61.9598   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4650, Xcols: 43, r: 43, streamingCols: 0)                   	 0.0680213 	 700       	 88.4795   	 0         	 32.9987   	 2.6813    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 93)                                                                 	 0.0477473 	 100       	 4.24457   	 0         	 0.198545  	 21.3783   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0382716 	 100       	 3.04839   	 0         	 0.15782   	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 43, m: 50, k: 2500)   	 0.0331866 	 800       	 259.14    	 0         	 45.2519   	 5.72661   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 43, m: 43)                                                                  	 0.028688  	 900       	 3.32569   	 0         	 1.40296   	 2.37048   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 43, n: 50, r2left: 50, r2right: 43)                	 0.0263773 	 700       	 0         	 0         	 84.9003   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2150, m: 50, k: 43) 	 0.0253777 	 800       	 291.437   	 0         	 50.9675   	 5.71809   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0238215 	 100       	 100.239   	 0         	 7.89203   	 12.7013   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 43, m: 4650)                                                                  	 0.0224642 	 700       	 0         	 0         	 99.6894   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 43, m: 2500, k: 50)	 0.0197594 	 800       	 435.235   	 0         	 76.0021   	 5.72661   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 93, r2: 93, leftOrthog: 1)        	 0.018074  	 100       	 239.267   	 0         	 31.6388   	 7.56245   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4650, m: 43)                                                         	 0.0180229 	 700       	 0         	 0         	 124.255   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2150, m: 43, k: 43) 	 0.0179714 	 700       	 309.686   	 0         	 58.1923   	 5.32178   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 43, reductionFactor: 37, colBlockingSize: 12)                  	 0.0169943 	 100       	 55.8709   	 0         	 5.14756   	 10.8539   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 43, n: 50, r2: 43)                                                                                         	 0.0142784 	 800       	 0         	 0         	 82.8776   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4650, r: 50, r2: 50, leftOrthog: 1)        	 0.0136574 	 100       	 170.237   	 0         	 41.1499   	 4.13701   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, r1_: 93, n: 50, r2: 50)           	 0.0103775 	 100       	 416.718   	 0         	 36.5135   	 11.4127   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, r1_: 50, n: 50, r2: 93)           	 0.00760357	 100       	 568.746   	 0         	 70.4511   	 8.07292   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 93, reductionFactor: 37, colBlockingSize: 12)                    	 0.00700591	 100       	 12.6789   	 0         	 1.5186    	 8.34908   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 43, r: 43, streamingCols: 0)                   	 0.00651621	 100       	 70.9385   	 0         	 26.5092   	 2.67599   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 43, Qr2: 50)       	 0.00380212	 100       	 0         	 0         	 97.8402   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 43, m: 2500)                                                                  	 0.00260266	 100       	 0         	 0         	 66.0863   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 43, reductionFactor: 37, colBlockingSize: 12)                    	 0.00246769	 100       	 7.69535   	 0         	 1.29644   	 5.93577   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 43)                                                         	 0.00239437	 100       	 0         	 0         	 71.8352   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 43, n: 50, r2left: 50, r2right: 0)                 	 0.00223487	 100       	 0         	 0         	 76.9619   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 93, leftOrthog: 1)          	 0.00211071	 100       	 22.0305   	 0         	 7.18243   	 3.06728   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 43, m: 43, fromLeft: 1)                	 0.00100065	 800       	 0         	 0         	 23.6517   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 43, n: 50, r2: 1)                                                                                          	 0.000904119	 200       	 0         	 0         	 7.60962   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000881516	 100       	 0.567205  	 0         	 2.26882   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 43)                                                                                          	 0.000848435	 200       	 0         	 0         	 8.10905   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 43, m: 50, k: 50)     	 0.00075179	 100       	 28.5984   	 0         	 7.23606   	 3.95221   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00072807	 100       	 34.3374   	 0         	 8.24097   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 43)   	 0.000664263	 100       	 32.3667   	 0         	 8.18953   	 3.95221   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 43, m: 50, k: 50)  	 0.000650558	 100       	 33.0486   	 0         	 8.36205   	 3.95221   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 43, k: 43)   	 0.000640085	 100       	 28.8868   	 0         	 7.68523   	 3.75874   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 43)                 	 0.000558672	 100       	 0         	 0         	 13.3173   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000544969	 100       	 0         	 0         	 7.33987   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 43, n: 50, r2left: 1, r2right: 0)                  	 0.000474805	 100       	 0         	 0         	 7.24508   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000425378	 100       	 1.17543   	 0         	 14.1051   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000425357	 100       	 0.587742  	 0         	 9.40387   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000414577	 100       	 0         	 0         	 9.64839   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 43)                                                           	 0.000358961	 100       	 0         	 0         	 9.58321   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 43)                                                                                 	 0.000343872	 100       	 0.625233  	 0         	 10.0037   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000343133	 100       	 0.72858   	 0         	 11.6573   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2150, m: 0, k: 43)  	 5.27e-06  	 100       	 0         	 0         	 14034.2   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.65772   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.65767   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.14663   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.14531   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.00428   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.87024   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.675818  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.533158  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.510975  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.303692  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.237835  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.143725  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.120162  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0745375 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0726714 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0446587 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0339384 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0296456 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.028688  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0250668 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0207762 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.02041   	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0165759 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00621904	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00298455	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00122095	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111236	 300       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00100065	 800       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000881516	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000425378	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22405181294464 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22404965328896 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22404764002432 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22404562675968 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22404361349504 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22404160023040 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22403958696576 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22403757370112 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22403556043648 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22403354717184 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22403153390720 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22402952064256 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22402750737792 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22402549411328 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22402348084864 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22402146758400 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22401945431936 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22401744105472 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22401542779008 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22401341452544 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22401140126080 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22400938799616 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22400737473152 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22400536146688 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22400334820224 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22400133493760 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22399932167296 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22399730840832 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22399529514368 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22399328187904 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22399126861440 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22398925534976 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22398724204416 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22398522877952 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22398321551488 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22398120225024 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22397918898560 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22397717572096 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22397516245632 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22397314919168 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22397113592704 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22396912266240 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22396710939776 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22396509613312 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22396308286848 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22396106960384 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22395905633920 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22395704307456 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22395502980992 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22395301654528 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22395100328064 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22394899001600 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22394697675136 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22394496348672 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22394295022208 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22394093695744 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22393892369280 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22393691042816 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22393489716352 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22393288389888 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22393087063424 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22392885736960 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22392684410496 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22405075633920 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22405069043456 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 94, m: 94)                                                                 	 0.749784  	 700       	 7.2374    	 0         	 0.198686  	 36.4264   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4700, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.440407  	 600       	 116.215   	 0         	 4.91148   	 23.6619   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4700, r: 94, r2: 94, leftOrthog: 1)        	 0.198949  	 600       	 250.491   	 0         	 32.404    	 7.73026   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4700, cols: 44, reductionFactor: 37, colBlockingSize: 12)                  	 0.136906  	 700       	 95.5633   	 0         	 8.53814   	 11.1925   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, r1_: 94, n: 50, r2: 94)           	 0.104337  	 600       	 477.638   	 0         	 41.0565   	 11.6337   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.0716849 	 100       	 63.2966   	 0         	 2.7212    	 23.2605   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4700, Xcols: 44, r: 44, streamingCols: 0)                   	 0.0693904 	 700       	 91.7914   	 0         	 33.4568   	 2.74358   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 44, Qr2: 94)       	 0.0662453 	 700       	 0         	 0         	 65.3957   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 94)                                                                 	 0.0536347 	 100       	 3.81594   	 0         	 0.178243  	 21.4086   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0372993 	 100       	 3.12785   	 0         	 0.161933  	 19.3157   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 44, m: 44)                                                                  	 0.0315413 	 900       	 3.24084   	 0         	 1.33585   	 2.42605   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 44, m: 50, k: 2500)   	 0.0314279 	 800       	 280.006   	 0         	 48.3036   	 5.7968    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 44, m: 4700)                                                                  	 0.0299674 	 700       	 0         	 0         	 77.2893   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2200, m: 50, k: 44) 	 0.0274764 	 800       	 281.842   	 0         	 48.6817   	 5.78947   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 44, n: 50, r2left: 50, r2right: 44)                	 0.0241189 	 700       	 0         	 0         	 96.0309   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.023365  	 100       	 103.296   	 0         	 8.13181   	 12.7027   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4700, m: 44)                                                         	 0.0232163 	 700       	 0         	 0         	 99.7643   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 44, m: 2500, k: 50)	 0.019408  	 800       	 453.421   	 0         	 78.2192   	 5.7968    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 44, reductionFactor: 37, colBlockingSize: 12)                  	 0.019383  	 100       	 51.2905   	 0         	 4.61997   	 11.1019   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 94, r2: 94, leftOrthog: 1)        	 0.0189065 	 100       	 233.676   	 0         	 30.5788   	 7.64178   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2200, m: 44, k: 44) 	 0.0185733 	 700       	 321.045   	 0         	 58.9555   	 5.44554   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4700, r: 50, r2: 50, leftOrthog: 1)        	 0.0147207 	 100       	 159.639   	 0         	 38.585    	 4.13732   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 44, n: 50, r2: 44)                                                                                         	 0.0146585 	 800       	 0         	 0         	 84.5272   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, r1_: 94, n: 50, r2: 50)           	 0.010063  	 100       	 439.034   	 0         	 38.067    	 11.5332   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 94, reductionFactor: 37, colBlockingSize: 12)                    	 0.0100584 	 100       	 9.02212   	 0         	 1.07659   	 8.38026   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, r1_: 50, n: 50, r2: 94)           	 0.00785944	 100       	 562.126   	 0         	 69.3688   	 8.10345   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 44, r: 44, streamingCols: 0)                   	 0.00667037	 100       	 72.5597   	 0         	 26.5014   	 2.73795   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 44, Qr2: 50)       	 0.00364871	 100       	 0         	 0         	 103.05    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 44, m: 2500)                                                                  	 0.0035815 	 100       	 0         	 0         	 49.1415   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 44, reductionFactor: 37, colBlockingSize: 12)                    	 0.00261131	 100       	 7.61428   	 0         	 1.2671    	 6.0092    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 94, leftOrthog: 1)          	 0.00214233	 100       	 21.9387   	 0         	 7.13241   	 3.07592   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 44)                                                         	 0.00193582	 100       	 0         	 0         	 90.9175   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 44, m: 44, fromLeft: 1)                	 0.00106263	 800       	 0         	 0         	 23.3203   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 44, n: 50, r2left: 50, r2right: 0)                 	 0.000957705	 100       	 0         	 0         	 183.773   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 44)                                                                                          	 0.000881479	 200       	 0         	 0         	 7.98658   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000793751	 100       	 0.62992   	 0         	 2.51968   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000739667	 100       	 33.799    	 0         	 8.11176   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 44, m: 50, k: 50)     	 0.000716327	 100       	 30.7122   	 0         	 7.70598   	 3.98551   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 44, n: 50, r2: 1)                                                                                          	 0.000711459	 200       	 0         	 0         	 9.89516   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 44)   	 0.000657903	 100       	 33.4396   	 0         	 8.39029   	 3.98551   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 44, k: 44)   	 0.000637364	 100       	 30.3751   	 0         	 7.95276   	 3.81944   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 44, m: 50, k: 50)  	 0.000565441	 100       	 38.9077   	 0         	 9.76229   	 3.98551   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 44)                 	 0.00054128	 100       	 0         	 0         	 13.893    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000538215	 100       	 0         	 0         	 7.43197   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 44, n: 50, r2left: 1, r2right: 0)                  	 0.000487194	 100       	 0         	 0         	 7.22505   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000452758	 100       	 0         	 0         	 8.83474   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 44)                                                           	 0.000428886	 100       	 0         	 0         	 8.20731   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000422226	 100       	 1.1842    	 0         	 14.2104   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000376841	 100       	 0.66341   	 0         	 10.6146   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00036484	 100       	 0.685232  	 0         	 10.9637   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 44)                                                                                 	 0.000340666	 100       	 0.645794  	 0         	 10.3327   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2200, m: 0, k: 44)  	 5.42e-06  	 100       	 0         	 0         	 14287.8   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.66012   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.66007   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.11972   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.11845   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 1.97784   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.840718  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.704416  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.546143  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.540277  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.338171  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.234719  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.1594    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.122999  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0760608 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0703468 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0473505 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0335489 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0321442 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0315413 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0261051 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.025581  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0199735 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0167896 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00522827	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00303713	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00124415	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108235	 300       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00106263	 800       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000793751	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000422226	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23367572248448 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23367373547520 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23367172221056 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23366970894592 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23366769568128 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23366568241664 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23366366915200 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23366165588736 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23365964262272 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23365762935808 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23365561609344 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23365360282880 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23365158956416 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23364957629952 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23364756303488 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23364554977024 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23364353650560 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23364152324096 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23363950997632 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23363749671168 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23363548344704 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23363347018240 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23363145691776 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23362944365312 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23362743038848 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23362541712384 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23362340385920 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23362139059456 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23361937732992 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23361736406528 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23361535080064 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23361333753600 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23361132423040 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23360931096576 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23360729770112 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23360528443648 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23360327117184 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23360125790720 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23359924464256 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23359723137792 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23359521811328 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23359320484864 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23359119158400 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23358917831936 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23358716505472 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23358515179008 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23358313852544 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23358112526080 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23357911199616 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23357709873152 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23357508546688 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23357307220224 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23357105893760 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23356904567296 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23356703240832 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23356501914368 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23356300587904 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23356099261440 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23355897934976 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23355696608512 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23355495282048 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23355293955584 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23355092629120 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23367466587904 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23367459997440 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 95, m: 95)                                                                 	 0.792755  	 700       	 7.06589   	 0         	 0.191928  	 36.8153   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4750, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.496951  	 600       	 106.314   	 0         	 4.44575   	 23.9136   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4750, r: 95, r2: 95, leftOrthog: 1)        	 0.206627  	 600       	 248.963   	 0         	 31.8673   	 7.8125    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4750, cols: 45, reductionFactor: 37, colBlockingSize: 12)                  	 0.149756  	 700       	 92.3514   	 0         	 8.06871   	 11.4456   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, r1_: 95, n: 50, r2: 95)           	 0.107366  	 600       	 479.133   	 0         	 40.7515   	 11.7574   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.0727193 	 100       	 63.7308   	 0         	 2.71207   	 23.4989   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4750, Xcols: 45, r: 45, streamingCols: 0)                   	 0.0716523 	 700       	 93.9694   	 0         	 33.4905   	 2.80585   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 45, Qr2: 95)       	 0.0695872 	 700       	 0         	 0         	 63.5749   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 95)                                                                 	 0.0529007 	 100       	 3.90669   	 0         	 0.182228  	 21.4385   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0385743 	 100       	 3.02447   	 0         	 0.156581  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 45, m: 50, k: 2500)   	 0.0335809 	 800       	 268.01    	 0         	 45.6927   	 5.86548   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 45, m: 45)                                                                  	 0.0310111 	 900       	 3.52615   	 0         	 1.42091   	 2.48162   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0273878 	 100       	 89.0613   	 0         	 7.01043   	 12.7041   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2250, m: 50, k: 45) 	 0.0255903 	 800       	 316.526   	 0         	 54.0204   	 5.85938   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4750, m: 45)                                                         	 0.0248703 	 700       	 0         	 0         	 96.2592   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 45, n: 50, r2left: 50, r2right: 45)                	 0.0248365 	 700       	 0         	 0         	 96.3903   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 45, m: 4750)                                                                  	 0.0242336 	 700       	 0         	 0         	 98.7885   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 45, m: 2500, k: 50)	 0.0205378 	 800       	 438.217   	 0         	 74.7112   	 5.86548   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2250, m: 45, k: 45) 	 0.0194236 	 700       	 328.401   	 0         	 58.9663   	 5.56931   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 95, r2: 95, leftOrthog: 1)        	 0.0187341 	 100       	 240.87    	 0         	 31.1965   	 7.72107   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 45, reductionFactor: 37, colBlockingSize: 12)                  	 0.0183138 	 100       	 56.7803   	 0         	 5.00278   	 11.3498   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 45, n: 50, r2: 45)                                                                                         	 0.0154007 	 800       	 0         	 0         	 84.1519   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4750, r: 50, r2: 50, leftOrthog: 1)        	 0.015237  	 100       	 155.87    	 0         	 37.6714   	 4.13763   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 95, reductionFactor: 37, colBlockingSize: 12)                    	 0.0105201 	 100       	 8.81068   	 0         	 1.04752   	 8.411     
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, r1_: 95, n: 50, r2: 50)           	 0.0105146 	 100       	 429.164   	 0         	 36.8268   	 11.6536   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, r1_: 50, n: 50, r2: 95)           	 0.00761468	 100       	 592.605   	 0         	 72.8593   	 8.13356   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 45, r: 45, streamingCols: 0)                   	 0.00679712	 100       	 74.4801   	 0         	 26.601    	 2.7999    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 45, Qr2: 50)       	 0.00370922	 100       	 0         	 0         	 102.447   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 45, m: 2500)                                                                  	 0.00354372	 100       	 0         	 0         	 50.7941   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 45)                                                         	 0.00350888	 100       	 0         	 0         	 51.2984   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 45, reductionFactor: 37, colBlockingSize: 12)                    	 0.00260258	 100       	 7.99103   	 0         	 1.31408   	 6.08108   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 95, leftOrthog: 1)          	 0.00232813	 100       	 20.4026   	 0         	 6.61474   	 3.08442   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 45, m: 45, fromLeft: 1)                	 0.00109884	 800       	 0         	 0         	 23.5885   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 45, n: 50, r2left: 50, r2right: 0)                 	 0.00100199	 100       	 0         	 0         	 179.642   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 45)                                                                                          	 0.000863198	 200       	 0         	 0         	 8.34108   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00084146	 100       	 0.594205  	 0         	 2.37682   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 45, m: 50, k: 50)     	 0.000730811	 100       	 30.7877   	 0         	 7.66272   	 4.01786   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 45, n: 50, r2: 1)                                                                                          	 0.00073015	 200       	 0         	 0         	 9.86099   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000700489	 100       	 35.6894   	 0         	 8.56544   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 45)   	 0.000693021	 100       	 32.4665   	 0         	 8.08056   	 4.01786   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 45, m: 50, k: 50)  	 0.000663249	 100       	 33.9239   	 0         	 8.44328   	 4.01786   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 45, k: 45)   	 0.000635901	 100       	 31.8446   	 0         	 8.20882   	 3.87931   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 45)                 	 0.000546176	 100       	 0         	 0         	 13.9149   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00051521	 100       	 0         	 0         	 7.76382   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 45, n: 50, r2left: 1, r2right: 0)                  	 0.000489002	 100       	 0         	 0         	 7.36193   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 45)                                                           	 0.000465112	 100       	 0         	 0         	 7.74007   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000424538	 100       	 1.17775   	 0         	 14.133    	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000416028	 100       	 0         	 0         	 9.61474   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 45)                                                                                 	 0.000402564	 100       	 0.558917  	 0         	 8.94268   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000387009	 100       	 0.64598   	 0         	 10.3357   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000343199	 100       	 0.72844   	 0         	 11.655    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2250, m: 0, k: 45)  	 5.5e-06   	 100       	 0         	 0         	 14727.3   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.81612   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.81607   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.25714   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.25584   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.10897   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.88423   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.778251  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.608184  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.558864  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.349092  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.242926  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.171146  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.126196  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0784494 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0737125 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0463484 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0343117 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0310111 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0288443 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0277773 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0268737 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.021201  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0175093 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00658388	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0032588 	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00118108	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113277	 300       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00109884	 800       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00084146	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000424538	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22801416873856 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22801243170816 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22801041844352 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22800840517888 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22800639191424 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22800437864960 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22800236538496 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22800035212032 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22799833885568 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22799632559104 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22799431232640 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22799229906176 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22799028579712 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22798827253248 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22798625926784 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22798424600320 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22798223273856 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22798021947392 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22797820620928 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22797619294464 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22797417968000 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22797216641536 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22797015315072 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22796813988608 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22796612662144 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22796411335680 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22796210009216 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22796008682752 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22795807356288 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22795606029824 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22795404703360 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22795203376896 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22795002046336 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22794800719872 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22794599393408 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22794398066944 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22794196740480 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22793995414016 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22793794087552 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22793592761088 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22793391434624 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22793190108160 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22792988781696 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22792787455232 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22792586128768 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22792384802304 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22792183475840 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22791982149376 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22791780822912 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22791579496448 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22791378169984 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22791176843520 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22790975517056 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22790774190592 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22790572864128 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22790371537664 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22790170211200 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22789968884736 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22789767558272 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22789566231808 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22789364905344 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22789163578880 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22788962252416 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22801138308864 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22801132611328 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 96, m: 96)                                                                 	 0.788343  	 700       	 7.33218   	 0         	 0.19708   	 37.2042   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4800, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.518698  	 600       	 105.107   	 0         	 4.3495    	 24.1653   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4800, r: 96, r2: 96, leftOrthog: 1)        	 0.216116  	 600       	 245.629   	 0         	 31.113    	 7.89474   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4800, cols: 46, reductionFactor: 37, colBlockingSize: 12)                  	 0.156802  	 700       	 93.1357   	 0         	 7.96121   	 11.6987   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, r1_: 96, n: 50, r2: 96)           	 0.100036  	 600       	 530.652   	 0         	 44.6632   	 11.8812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.0742403 	 100       	 63.7463   	 0         	 2.68551   	 23.7371   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4800, Xcols: 46, r: 46, streamingCols: 0)                   	 0.0742293 	 700       	 95.7811   	 0         	 33.395    	 2.86813   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 46, Qr2: 96)       	 0.0720599 	 700       	 0         	 0         	 62.6834   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 96)                                                                 	 0.0503926 	 100       	 4.14082   	 0         	 0.192885  	 21.4678   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0390339 	 100       	 2.98885   	 0         	 0.154737  	 19.3157   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4800, m: 46)                                                         	 0.0345328 	 700       	 0         	 0         	 71.612    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 46, m: 50, k: 2500)   	 0.0331113 	 800       	 277.851   	 0         	 46.8336   	 5.93273   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 46, m: 46)                                                                  	 0.0313558 	 900       	 3.72506   	 0         	 1.46821   	 2.53714   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2300, m: 50, k: 46) 	 0.0285998 	 800       	 295.946   	 0         	 49.9248   	 5.92784   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0279671 	 100       	 88.1346   	 0         	 6.93673   	 12.7055   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 46, n: 50, r2left: 50, r2right: 46)                	 0.0259891 	 700       	 0         	 0         	 95.1539   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 46, m: 4800)                                                                  	 0.0243994 	 700       	 0         	 0         	 101.353   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 46, m: 2500, k: 50)	 0.0231569 	 800       	 397.29    	 0         	 66.9658   	 5.93273   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2300, m: 46, k: 46) 	 0.0200197 	 700       	 340.34    	 0         	 59.7814   	 5.69307   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 46, reductionFactor: 37, colBlockingSize: 12)                  	 0.0186867 	 100       	 58.1479   	 0         	 5.01387   	 11.5974   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 96, r2: 96, leftOrthog: 1)        	 0.0178162 	 100       	 258.641   	 0         	 33.1578   	 7.80031   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4800, r: 50, r2: 50, leftOrthog: 1)        	 0.0167751 	 100       	 143.069   	 0         	 34.5751   	 4.13793   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 46, n: 50, r2: 46)                                                                                         	 0.0160019 	 800       	 0         	 0         	 84.63     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, r1_: 96, n: 50, r2: 50)           	 0.0103278 	 100       	 446.176   	 0         	 37.8952   	 11.7739   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 96, reductionFactor: 37, colBlockingSize: 12)                    	 0.00993393	 100       	 9.52803   	 0         	 1.12874   	 8.44132   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, r1_: 50, n: 50, r2: 96)           	 0.00785121	 100       	 586.916   	 0         	 71.8972   	 8.16327   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 46, r: 46, streamingCols: 0)                   	 0.00694202	 100       	 76.2026   	 0         	 26.6272   	 2.86184   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 46, m: 2500)                                                                  	 0.00385386	 100       	 0         	 0         	 47.7443   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 46)                                                         	 0.00380826	 100       	 0         	 0         	 48.3161   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 46, Qr2: 50)       	 0.00377812	 100       	 0         	 0         	 101.638   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 46, reductionFactor: 37, colBlockingSize: 12)                    	 0.00268037	 100       	 8.1078    	 0         	 1.31803   	 6.15146   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 46, n: 50, r2left: 50, r2right: 0)                 	 0.00251717	 100       	 0         	 0         	 73.098    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 96, leftOrthog: 1)          	 0.00223474	 100       	 21.479    	 0         	 6.94488   	 3.09278   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 46, m: 46, fromLeft: 1)                	 0.00113415	 800       	 0         	 0         	 23.8811   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 46, n: 50, r2: 1)                                                                                          	 0.000913611	 200       	 0         	 0         	 8.05595   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 46)                                                                                          	 0.000829024	 200       	 0         	 0         	 8.87791   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000823809	 100       	 0.606937  	 0         	 2.42775   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 46, m: 50, k: 50)     	 0.0007472 	 100       	 30.7816   	 0         	 7.60171   	 4.0493    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000735231	 100       	 34.0029   	 0         	 8.1607    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 46)   	 0.000671918	 100       	 34.2304   	 0         	 8.45341   	 4.0493    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 46, m: 50, k: 50)  	 0.000634486	 100       	 36.2498   	 0         	 8.95213   	 4.0493    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 46, k: 46)   	 0.000617256	 100       	 34.2808   	 0         	 8.70433   	 3.93836   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 46)                 	 0.000597024	 100       	 0         	 0         	 12.8638   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000545076	 100       	 0         	 0         	 7.33843   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 46, n: 50, r2left: 1, r2right: 0)                  	 0.000496955	 100       	 0         	 0         	 7.4051    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000448505	 100       	 0         	 0         	 8.91852   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000413961	 100       	 1.20784   	 0         	 14.4941   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00038923	 100       	 0.642294  	 0         	 10.2767   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 46)                                                           	 0.000363056	 100       	 0         	 0         	 10.1362   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 46)                                                                                 	 0.000357933	 100       	 0.642578  	 0         	 10.2813   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000344728	 100       	 0.725209  	 0         	 11.6034   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2300, m: 0, k: 46)  	 5.521e-06 	 100       	 0         	 0         	 15330.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.89024   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.89018   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.29156   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.2903    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.15293   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.87777   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.809008  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.631475  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.598552  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.368153  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.252942  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.178609  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.11895   	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0811713 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0762865 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0499142 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0387041 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0338585 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0313558 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0296002 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0282532 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0237914 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0182896 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0086979 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00711891	 5200      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00324007	 6300      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00113415	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109189	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000823809	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000413961	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23136309553024 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23136116402176 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23135915075712 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23135713749248 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23135512422784 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23135311096320 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23135109769856 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23134908443392 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23134707116928 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23134505790464 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23134304464000 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23134103137536 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23133901811072 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23133700484608 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23133499158144 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23133297831680 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23133096505216 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23132895178752 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23132693852288 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23132492525824 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23132291199360 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23132089872896 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23131888546432 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23131687219968 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23131485893504 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23131284567040 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23131083240576 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23130881914112 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23130680587648 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23130479261184 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23130277934720 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23130076608256 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23129875277696 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23129673951232 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23129472624768 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23129271298304 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23129069971840 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23128868645376 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23128667318912 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23128465992448 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23128264665984 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23128063339520 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23127862013056 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23127660686592 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23127459360128 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23127258033664 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23127056707200 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23126855380736 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23126654054272 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23126452727808 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23126251401344 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23126050074880 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23125848748416 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23125647421952 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23125446095488 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23125244769024 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23125043442560 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23124842116096 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23124640789632 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23124439463168 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23124238136704 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23124036810240 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23123835483776 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23136203892480 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23136197302016 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 97, m: 97)                                                                 	 0.822014  	 700       	 7.25389   	 0         	 0.192958  	 37.593    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4850, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.530562  	 600       	 106.002   	 0         	 4.34129   	 24.4171   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4850, r: 97, r2: 97, leftOrthog: 1)        	 0.213772  	 600       	 256.162   	 0         	 32.1127   	 7.97697   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4850, cols: 47, reductionFactor: 37, colBlockingSize: 12)                  	 0.156144  	 700       	 98.6559   	 0         	 8.25451   	 11.9517   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4850, Xcols: 47, r: 47, streamingCols: 0)                   	 0.0760484 	 700       	 98.6156   	 0         	 33.6526   	 2.9304    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.0756098 	 100       	 63.9024   	 0         	 2.66536   	 23.9752   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, r1_: 97, n: 50, r2: 97)           	 0.074372  	 600       	 736.304   	 0         	 61.3333   	 12.005    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 47, Qr2: 97)       	 0.0717572 	 700       	 0         	 0         	 64.2589   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 97)                                                                 	 0.0498273 	 100       	 4.22794   	 0         	 0.196679  	 21.4966   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0389076 	 100       	 2.99855   	 0         	 0.155239  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 47, m: 50, k: 2500)   	 0.0344275 	 800       	 273.038   	 0         	 45.5171   	 5.99857   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 47, m: 47)                                                                  	 0.0329759 	 900       	 3.77812   	 0         	 1.45721   	 2.59271   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 47, m: 2500, k: 50)	 0.0285322 	 800       	 329.452   	 0         	 54.9218   	 5.99857   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 47, m: 4850)                                                                  	 0.0284282 	 700       	 0         	 0         	 89.8065   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 47, n: 50, r2left: 50, r2right: 47)                	 0.0284276 	 700       	 0         	 0         	 89.8085   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0276356 	 100       	 90.1208   	 0         	 7.09231   	 12.7068   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2350, m: 50, k: 47) 	 0.026779  	 800       	 329.96    	 0         	 55.0401   	 5.9949    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2350, m: 47, k: 47) 	 0.0256961 	 700       	 282.829   	 0         	 48.6226   	 5.81683   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4850, m: 47)                                                         	 0.0256932 	 700       	 0         	 0         	 99.3665   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 97, r2: 97, leftOrthog: 1)        	 0.0192453 	 100       	 244.449   	 0         	 31.0233   	 7.87952   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 47, reductionFactor: 37, colBlockingSize: 12)                  	 0.0191521 	 100       	 59.2286   	 0         	 5.00036   	 11.8449   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 47, n: 50, r2: 47)                                                                                         	 0.016631  	 800       	 0         	 0         	 85.0075   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4850, r: 50, r2: 50, leftOrthog: 1)        	 0.0158559 	 100       	 152.94    	 0         	 36.9579   	 4.13823   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 97, reductionFactor: 37, colBlockingSize: 12)                    	 0.0085566 	 100       	 11.2934   	 0         	 1.33315   	 8.47123   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, r1_: 50, n: 50, r2: 97)           	 0.00810426	 100       	 580.497   	 0         	 70.8566   	 8.19257   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, r1_: 97, n: 50, r2: 50)           	 0.00726169	 100       	 647.852   	 0         	 54.4676   	 11.8943   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 47, r: 47, streamingCols: 0)                   	 0.0072476 	 100       	 76.1976   	 0         	 26.0615   	 2.92376   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 47, n: 50, r2left: 50, r2right: 0)                 	 0.00492946	 100       	 0         	 0         	 38.138    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 47, m: 2500)                                                                  	 0.00369227	 100       	 0         	 0         	 50.9172   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 47)                                                         	 0.0034929 	 100       	 0         	 0         	 53.8235   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 47, reductionFactor: 37, colBlockingSize: 12)                    	 0.00266385	 100       	 8.51664   	 0         	 1.36915   	 6.2204    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 97, leftOrthog: 1)          	 0.00215945	 100       	 22.4594   	 0         	 7.24257   	 3.10102   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 47, m: 47, fromLeft: 1)                	 0.00116961	 800       	 0         	 0         	 24.1749   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 47, Qr2: 50)       	 0.00113859	 100       	 0         	 0         	 340.771   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 47)                                                                                          	 0.000862552	 200       	 0         	 0         	 8.71831   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000813231	 100       	 0.614831  	 0         	 2.45933   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 47, n: 50, r2: 1)                                                                                          	 0.000754863	 200       	 0         	 0         	 9.96207   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000731917	 100       	 34.1569   	 0         	 8.19765   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 47, m: 50, k: 50)     	 0.000711632	 100       	 33.0227   	 0         	 8.09407   	 4.07986   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 47)   	 0.000683124	 100       	 34.4008   	 0         	 8.43185   	 4.07986   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 47, m: 50, k: 50)  	 0.000633065	 100       	 37.121    	 0         	 9.09859   	 4.07986   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 47, k: 47)   	 0.000632032	 100       	 34.9508   	 0         	 8.74513   	 3.9966    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00058734	 100       	 0.425648  	 0         	 6.81037   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 47)                 	 0.00058556	 100       	 0         	 0         	 13.2523   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000512186	 100       	 0         	 0         	 7.80966   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 47, n: 50, r2left: 1, r2right: 0)                  	 0.000485129	 100       	 0         	 0         	 7.75052   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000429221	 100       	 0         	 0         	 9.31921   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 47)                                                           	 0.000405407	 100       	 0         	 0         	 9.27463   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000403825	 100       	 1.23816   	 0         	 14.8579   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 47)                                                                                 	 0.000345625	 100       	 0.679928  	 0         	 10.8788   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000331749	 100       	 0.753582  	 0         	 12.0573   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2350, m: 0, k: 47)  	 5.73e-06  	 100       	 0         	 0         	 15420.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.93257   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.93252   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.32566   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.32442   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.21571   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.910749  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.820323  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.642992  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.606796  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.368549  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.251033  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.178422  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0904699 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.083296  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.073325  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.053796  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0351391 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0344277 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0329759 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0321205 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0295915 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0291653 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0187606 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00711398	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00315277	 6300      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00126471	 300       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00116961	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00116119	 5200      
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000813231	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000403825	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22806161008512 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22805940791296 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22805739464832 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22805538138368 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22805336811904 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22805135485440 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22804934158976 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22804732832512 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22804531506048 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22804330179584 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22804128853120 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22803927526656 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22803726200192 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22803524873728 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22803323547264 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22803122220800 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22802920894336 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22802719567872 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22802518241408 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22802316914944 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22802115588480 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22801914262016 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22801712935552 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22801511609088 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22801310282624 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22801108956160 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22800907629696 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22800706303232 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22800504976768 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22800303650304 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22800102323840 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22799900997376 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22799699666816 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22799498340352 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22799297013888 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22799095687424 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22798894360960 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22798693034496 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22798491708032 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22798290381568 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22798089055104 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22797887728640 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22797686402176 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22797485075712 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22797283749248 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22797082422784 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22796881096320 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22796679769856 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22796478443392 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22796277116928 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22796075790464 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22795874464000 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22795673137536 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22795471811072 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22795270484608 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22795069158144 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22794867831680 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22794666505216 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22794465178752 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22794263852288 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22794062525824 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22793861199360 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22793659872896 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22806055347968 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22806048757504 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 98, m: 98)                                                                 	 0.815724  	 700       	 7.53824   	 0         	 0.198469  	 37.9819   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4900, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.535087  	 600       	 108.389   	 0         	 4.39378   	 24.6688   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4900, r: 98, r2: 98, leftOrthog: 1)        	 0.219005  	 600       	 257.855   	 0         	 31.9951   	 8.05921   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4900, cols: 48, reductionFactor: 37, colBlockingSize: 12)                  	 0.168859  	 700       	 96.1313   	 0         	 7.87653   	 12.2048   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4900, Xcols: 48, r: 48, streamingCols: 0)                   	 0.0776099 	 700       	 101.826   	 0         	 34.0252   	 2.99267   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.0753969 	 100       	 65.411    	 0         	 2.70148   	 24.213    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, r1_: 98, n: 50, r2: 98)           	 0.0746729 	 600       	 756.252   	 0         	 62.3522   	 12.1287   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 48, Qr2: 98)       	 0.0692622 	 700       	 0         	 0         	 67.9481   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 98)                                                                 	 0.0501625 	 100       	 4.23956   	 0         	 0.19696   	 21.525    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0368889 	 100       	 3.16265   	 0         	 0.163735  	 19.3157   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 48, m: 4900)                                                                  	 0.032096  	 700       	 0         	 0         	 82.0737   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 48, m: 50, k: 2500)   	 0.0318775 	 800       	 301.153   	 0         	 49.6701   	 6.06306   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 48, m: 48)                                                                  	 0.0316104 	 900       	 4.19832   	 0         	 1.5853    	 2.64828   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2400, m: 50, k: 48) 	 0.0298836 	 800       	 308.396   	 0         	 50.8854   	 6.06061   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0273396 	 100       	 92.0354   	 0         	 7.24223   	 12.7082   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 48, n: 50, r2left: 50, r2right: 48)                	 0.0260453 	 700       	 0         	 0         	 101.141   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4900, m: 48)                                                         	 0.0256781 	 700       	 0         	 0         	 102.587   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2400, m: 48, k: 48) 	 0.0217253 	 700       	 356.334   	 0         	 59.9828   	 5.94059   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 48, reductionFactor: 37, colBlockingSize: 12)                  	 0.0203425 	 100       	 58.1607   	 0         	 4.80978   	 12.0922   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 48, m: 2500, k: 50)	 0.0192692 	 800       	 498.205   	 0         	 82.1705   	 6.06306   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 98, r2: 98, leftOrthog: 1)        	 0.0187461 	 100       	 256.16    	 0         	 32.1863   	 7.95868   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 48, n: 50, r2: 48)                                                                                         	 0.0171337 	 800       	 0         	 0         	 86.0621   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4900, r: 50, r2: 50, leftOrthog: 1)        	 0.0166693 	 100       	 146.977   	 0         	 35.5144   	 4.13851   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 98, reductionFactor: 37, colBlockingSize: 12)                    	 0.00786547	 100       	 12.5403   	 0         	 1.47521   	 8.50073   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 48, r: 48, streamingCols: 0)                   	 0.00782777	 100       	 73.5841   	 0         	 24.6458   	 2.98567   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, r1_: 50, n: 50, r2: 98)           	 0.00763705	 100       	 628.776   	 0         	 76.4798   	 8.22148   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, r1_: 98, n: 50, r2: 50)           	 0.00733454	 100       	 654.71    	 0         	 54.4933   	 12.0145   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 48, m: 2500)                                                                  	 0.00350143	 100       	 0         	 0         	 54.8348   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 48)                                                         	 0.00282278	 100       	 0         	 0         	 68.0182   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 48, reductionFactor: 37, colBlockingSize: 12)                    	 0.00271636	 100       	 8.71119   	 0         	 1.38538   	 6.28792   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 98, leftOrthog: 1)          	 0.00219881	 100       	 22.2848   	 0         	 7.16751   	 3.10914   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 48, n: 50, r2left: 50, r2right: 0)                 	 0.00195778	 100       	 0         	 0         	 98.0705   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 48, m: 48, fromLeft: 1)                	 0.00126043	 800       	 0         	 0         	 23.3978   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 48, Qr2: 50)       	 0.00113714	 100       	 0         	 0         	 344.725   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000890063	 100       	 0.561758  	 0         	 2.24703   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 48)                                                                                          	 0.000827477	 200       	 0         	 0         	 9.28122   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000764481	 100       	 32.7019   	 0         	 7.84846   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 48, n: 50, r2: 1)                                                                                          	 0.000757758	 200       	 0         	 0         	 10.1352   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 48, m: 50, k: 50)     	 0.000712921	 100       	 33.6643   	 0         	 8.19165   	 4.10959   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 48, k: 48)   	 0.000692376	 100       	 33.2767   	 0         	 8.20826   	 4.05405   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 48)   	 0.000656867	 100       	 36.5371   	 0         	 8.89069   	 4.10959   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 48, m: 50, k: 50)  	 0.000619046	 100       	 38.7693   	 0         	 9.43387   	 4.10959   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 48)                 	 0.000556598	 100       	 0         	 0         	 14.0856   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00050218	 100       	 0         	 0         	 7.96527   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 48, n: 50, r2left: 1, r2right: 0)                  	 0.000469998	 100       	 0         	 0         	 8.17025   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000429721	 100       	 0         	 0         	 9.30837   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000408568	 100       	 1.22379   	 0         	 14.6854   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.0003839 	 100       	 0.651211  	 0         	 10.4194   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 48)                                                           	 0.000382778	 100       	 0         	 0         	 10.0319   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 48)                                                                                 	 0.000345698	 100       	 0.694248  	 0         	 11.108    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000330788	 100       	 0.755771  	 0         	 12.0923   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2400, m: 0, k: 48)  	 5.78e-06  	 100       	 0         	 0         	 15944.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 2.92593   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 2.92589   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.32631   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.32498   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.21098   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.902775  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.837607  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.646303  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.599513  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.38716   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.256619  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.192382  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.090409  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0854376 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0708291 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0529639 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0355975 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0325904 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0316104 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0290297 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0288836 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0198882 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0192211 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00761494	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0033332 	 6300      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00126043	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00125956	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106039	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000890063	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000408568	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23205292955520 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23205104314368 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23204902987904 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23204701661440 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23204500334976 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23204299008512 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23204097682048 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23203896355584 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23203695029120 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23203493702656 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23203292376192 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23203091049728 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23202889723264 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23202688396800 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23202487070336 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23202285743872 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23202084417408 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23201883090944 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23201681764480 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23201480438016 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23201279111552 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23201077785088 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23200876458624 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23200675132160 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23200473805696 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23200272479232 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23200071152768 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23199869826304 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23199668499840 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23199467173376 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23199265846912 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23199064520448 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23198863189888 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23198661863424 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23198460536960 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23198259210496 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23198057884032 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23197856557568 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23197655231104 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23197453904640 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23197252578176 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23197051251712 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23196849925248 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23196648598784 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23196447272320 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23196245945856 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23196044619392 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23195843292928 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23195641966464 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23195440640000 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23195239313536 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23195037987072 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23194836660608 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23194635334144 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23194434007680 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23194232681216 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23194031354752 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23193830028288 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23193628701824 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23193427375360 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23193226048896 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23193024722432 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23192823395968 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23205187294976 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23205180704512 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 99, m: 99)                                                                 	 0.870676  	 700       	 7.28088   	 0         	 0.18975   	 38.3708   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4950, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.553299  	 600       	 108.063   	 0         	 4.33632   	 24.9205   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4950, r: 99, r2: 99, leftOrthog: 1)        	 0.225352  	 600       	 258.342   	 0         	 31.7317   	 8.14145   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4950, cols: 49, reductionFactor: 37, colBlockingSize: 12)                  	 0.187771  	 700       	 91.0078   	 0         	 7.30531   	 12.4578   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 4950, Xcols: 49, r: 49, streamingCols: 0)                   	 0.0825439 	 700       	 100.788   	 0         	 32.9919   	 3.05494   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, r1_: 99, n: 50, r2: 99)           	 0.0788022 	 600       	 738.786   	 0         	 60.2969   	 12.2525   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.077992  	 100       	 64.5316   	 0         	 2.63926   	 24.4507   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 49, Qr2: 99)       	 0.069994  	 700       	 0         	 0         	 68.6139   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 99)                                                                 	 0.0516414 	 100       	 4.15687   	 0         	 0.192868  	 21.5529   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 49, m: 50, k: 2500)   	 0.0445972 	 800       	 219.745   	 0         	 35.8695   	 6.12623   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0382602 	 100       	 3.0493    	 0         	 0.157867  	 19.3157   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 49, m: 49)                                                                  	 0.0362362 	 900       	 3.89604   	 0         	 1.44095   	 2.70381   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 49, m: 4950)                                                                  	 0.0291729 	 700       	 0         	 0         	 93.1193   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2450, m: 50, k: 49) 	 0.0290969 	 800       	 330.07    	 0         	 53.889    	 6.125     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 4950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0285195 	 100       	 89.1281   	 0         	 7.01274   	 12.7095   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 49, n: 50, r2left: 50, r2right: 49)                	 0.0279548 	 700       	 0         	 0         	 97.1769   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 4950, m: 49)                                                         	 0.0271901 	 700       	 0         	 0         	 99.9098   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 49, m: 2500, k: 50)	 0.0218691 	 800       	 448.12    	 0         	 73.1479   	 6.12623   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 49, reductionFactor: 37, colBlockingSize: 12)                  	 0.0216614 	 100       	 56.9191   	 0         	 4.61286   	 12.3392   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 99, r2: 99, leftOrthog: 1)        	 0.0187227 	 100       	 261.742   	 0         	 32.5639   	 8.0378    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 49, n: 50, r2: 49)                                                                                         	 0.017485  	 800       	 0         	 0         	 87.8836   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 4950, r: 50, r2: 50, leftOrthog: 1)        	 0.0164053 	 100       	 150.866   	 0         	 36.4516   	 4.1388    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2450, m: 49, k: 49) 	 0.0160006 	 700       	 514.695   	 0         	 84.8722   	 6.06436   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 99, reductionFactor: 37, colBlockingSize: 12)                    	 0.00905066	 100       	 11.1217   	 0         	 1.30386   	 8.52984   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, r1_: 50, n: 50, r2: 99)           	 0.00832631	 100       	 588.556   	 0         	 71.3401   	 8.25      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 49, r: 49, streamingCols: 0)                   	 0.00748148	 100       	 80.2314   	 0         	 26.3264   	 3.04757   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, r1_: 99, n: 50, r2: 50)           	 0.00745542	 100       	 657.307   	 0         	 54.1674   	 12.1347   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 49, m: 2500)                                                                  	 0.00393853	 100       	 0         	 0         	 49.7648   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 49, reductionFactor: 37, colBlockingSize: 12)                    	 0.00320907	 100       	 7.68413   	 0         	 1.20932   	 6.35408   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 49, n: 50, r2left: 50, r2right: 0)                 	 0.00318625	 100       	 0         	 0         	 61.5143   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 49)                                                         	 0.00303093	 100       	 0         	 0         	 64.6665   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 99, leftOrthog: 1)          	 0.00221872	 100       	 22.3101   	 0         	 7.15727   	 3.11713   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 49, m: 49, fromLeft: 1)                	 0.00131855	 800       	 0         	 0         	 23.3081   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 49, Qr2: 50)       	 0.00113715	 100       	 0         	 0         	 348.239   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 49)                                                                                          	 0.00088535	 200       	 0         	 0         	 8.85525   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 49, m: 50, k: 50)     	 0.000801439	 100       	 30.57     	 0         	 7.38671   	 4.13851   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000791444	 100       	 0.631757  	 0         	 2.52703   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 49, n: 50, r2: 1)                                                                                          	 0.000785193	 200       	 0         	 0         	 9.98481   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000768242	 100       	 32.5418   	 0         	 7.81004   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 49)   	 0.000702563	 100       	 34.8723   	 0         	 8.42629   	 4.13851   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 49, m: 50, k: 50)  	 0.00066154	 100       	 37.0348   	 0         	 8.94882   	 4.13851   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 49, k: 49)   	 0.000581271	 100       	 41.306    	 0         	 10.0483   	 4.11074   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 49)                 	 0.000565366	 100       	 0         	 0         	 14.0086   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000522947	 100       	 0         	 0         	 7.64896   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 49, n: 50, r2left: 1, r2right: 0)                  	 0.000485153	 100       	 0         	 0         	 8.07993   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00042977	 100       	 0         	 0         	 9.3073    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000425487	 100       	 1.17512   	 0         	 14.1015   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 49)                                                           	 0.000397606	 100       	 0         	 0         	 9.85901   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00038903	 100       	 0.642624  	 0         	 10.282    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 49)                                                                                 	 0.00035586	 100       	 0.688473  	 0         	 11.0156   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000332824	 100       	 0.751148  	 0         	 12.0184   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2450, m: 0, k: 49)  	 5.26e-06  	 100       	 0         	 0         	 18258.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.10592   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.10587   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.46047   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.45924   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.34377   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.960578  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.881503  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.669508  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.645334  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.414618  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.262699  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.213089  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0953522 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0900254 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0715609 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0463865 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0453987 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0362362 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0331114 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0321916 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0306187 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0225307 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0196784 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00842538	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00309543	 6300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00296698	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00131855	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107771	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000791444	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000425487	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22728172881792 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22727960291328 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22727758964864 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22727557638400 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22727356311936 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22727154985472 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22726953659008 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22726752332544 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22726551006080 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22726349679616 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22726148353152 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22725947026688 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22725745700224 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22725544373760 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22725343047296 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22725141720832 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22724940394368 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22724739067904 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22724537741440 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22724336414976 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22724135088512 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22723933762048 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22723732435584 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22723531109120 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22723329782656 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22723128456192 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22722927129728 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22722725803264 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22722524476800 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22722323150336 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22722121823872 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22721920497408 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22721719166848 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22721517840384 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22721316513920 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22721115187456 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22720913860992 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22720712534528 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22720511208064 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22720309881600 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22720108555136 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22719907228672 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22719705902208 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22719504575744 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22719303249280 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22719101922816 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22718900596352 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22718699269888 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22718497943424 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22718296616960 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22718095290496 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22717893964032 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22717692637568 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22717491311104 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22717289984640 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22717088658176 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22716887331712 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22716686005248 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22716484678784 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22716283352320 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22716082025856 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22715880699392 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22715679372928 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22728067221248 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22728060630784 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 100, m: 100)                                                               	 0.850286  	 700       	 7.68369   	 0         	 0.198239  	 38.7597   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 100, reductionFactor: 37, colBlockingSize: 12)                 	 0.561464  	 600       	 109.752   	 0         	 4.36003   	 25.1722   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5000, r: 100, r2: 100, leftOrthog: 1)      	 0.234996  	 600       	 255.323   	 0         	 31.0473   	 8.22368   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.219219  	 800       	 93.6989   	 0         	 7.37164   	 12.7107   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5000, Xcols: 50, r: 50, streamingCols: 0)                   	 0.0836232 	 700       	 104.636   	 0         	 33.5672   	 3.11721   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 100, reductionFactor: 37, colBlockingSize: 12)                 	 0.0785009 	 100       	 65.4149   	 0         	 2.64965   	 24.6881   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, n: 50, r2: 100)        	 0.0759189 	 600       	 790.317   	 0         	 63.8576   	 12.3762   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 100)      	 0.0738818 	 700       	 0         	 0         	 66.3222   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 100)                                                                	 0.0517839 	 100       	 4.18406   	 0         	 0.193883  	 21.5803   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2500, m: 50, k: 50) 	 0.0517384 	 1500      	 362.4     	 0         	 58.5639   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0390467 	 100       	 2.98788   	 0         	 0.154687  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 2500)   	 0.0384329 	 800       	 260.194   	 0         	 42.0473   	 6.18812   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0359297 	 900       	 4.1748    	 0         	 1.51295   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 50, r2right: 50)                	 0.0289205 	 700       	 0         	 0         	 96.8172   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5000, m: 50)                                                         	 0.0276097 	 700       	 0         	 0         	 101.414   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 5000)                                                                  	 0.0267215 	 700       	 0         	 0         	 104.785   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0223871 	 100       	 57.3449   	 0         	 4.5562    	 12.5861   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 2500, k: 50)	 0.0222779 	 800       	 448.875   	 0         	 72.5381   	 6.18812   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 100, r2: 100, leftOrthog: 1)      	 0.0203747 	 100       	 245.402   	 0         	 30.2336   	 8.11688   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 50)                                                                                         	 0.0187739 	 800       	 0         	 0         	 85.2245   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5000, r: 50, r2: 50, leftOrthog: 1)        	 0.0140364 	 100       	 178.108   	 0         	 43.031    	 4.13907   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 50, n: 50, r2: 100)         	 0.00858424	 100       	 582.463   	 0         	 70.3615   	 8.27815   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 100, reductionFactor: 37, colBlockingSize: 12)                   	 0.00837507	 100       	 12.2629   	 0         	 1.43282   	 8.55856   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 50, r: 50, streamingCols: 0)                   	 0.00779456	 100       	 80.1841   	 0         	 25.7872   	 3.10945   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, n: 50, r2: 50)         	 0.00718868	 100       	 695.538   	 0         	 56.7559   	 12.2549   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 2500)                                                                  	 0.00401152	 100       	 0         	 0         	 49.8564   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00342075	 100       	 7.50586   	 0         	 1.16933   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 50)                                                         	 0.00260309	 100       	 0         	 0         	 76.8319   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 50, r2right: 0)                 	 0.00252902	 100       	 0         	 0         	 79.082    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 100, leftOrthog: 1)         	 0.00230073	 100       	 21.7322   	 0         	 6.95431   	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00141581	 300       	 0         	 0         	 8.47573   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 1)                	 0.00130975	 800       	 0         	 0         	 24.4322   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 50)   	 0.00124773	 200       	 40.0726   	 0         	 9.61743   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 50, Qr2: 50)       	 0.00116031	 100       	 0         	 0         	 344.735   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000823034	 100       	 0.607508  	 0         	 2.43003   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000803442	 100       	 31.1161   	 0         	 7.46787   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000752267	 200       	 0         	 0         	 10.6345   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000737484	 200       	 0.677981  	 0         	 10.8477   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000731556	 100       	 34.1737   	 0         	 8.2017    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000694388	 100       	 36.0029   	 0         	 8.6407    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 50)                 	 0.000536703	 100       	 0         	 0         	 14.9058   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000487612	 100       	 0         	 0         	 8.20324   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000447181	 100       	 1.11812   	 0         	 13.4174   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000422205	 100       	 0         	 0         	 9.47407   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.00041055	 100       	 0         	 0         	 9.74303   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000323226	 100       	 0.773453  	 0         	 12.3752   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2500, m: 0, k: 50)  	 5.311e-06 	 100       	 0         	 0         	 18828.8   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.09827   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.09822   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.44772   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.44648   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.32397   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.941117  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.893366  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.676487  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.650421  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.418129  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.271708  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.217958  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0924233 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0914178 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0754643 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0529914 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0392363 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0359297 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0324738 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.030733  	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0306233 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0229723 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.020942  	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00896936	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00324763	 6300      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00130975	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00128539	 5000      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106071	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000823034	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000447181	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23150931650432 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23150746134528 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23150544808064 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23150343481600 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23150142155136 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23149940828672 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23149739502208 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23149538175744 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23149336849280 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23149135522816 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23148934196352 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23148732869888 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23148531543424 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23148330216960 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23148128890496 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23147927564032 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23147726237568 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23147524911104 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23147323584640 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23147122258176 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23146920931712 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23146719605248 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23146518278784 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23146316952320 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23146115625856 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23145914299392 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23145712972928 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23145511646464 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23145310320000 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23145108993536 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23144907667072 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23144706340608 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23144505010048 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23144303683584 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23144102357120 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23143901030656 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23143699704192 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23143498377728 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23143297051264 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23143095724800 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23142894398336 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23142693071872 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23142491745408 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23142290418944 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23142089092480 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23141887766016 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23141686439552 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23141485113088 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23141283786624 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23141082460160 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23140881133696 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23140679807232 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23140478480768 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23140277154304 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23140075827840 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23139874501376 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23139673174912 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23139471848448 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23139270521984 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23139069195520 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23138867869056 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23138666542592 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23138465216128 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23150825989888 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23150819399424 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 101, m: 101)                                                               	 0.926586  	 700       	 7.26462   	 0         	 0.185565  	 39.1486   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5050, cols: 101, reductionFactor: 37, colBlockingSize: 12)                 	 0.566171  	 600       	 112.137   	 0         	 4.41069   	 25.424    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5050, r: 101, r2: 101, leftOrthog: 1)      	 0.230728  	 600       	 267.927   	 0         	 32.2573   	 8.30592   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5050, cols: 51, reductionFactor: 37, colBlockingSize: 12)                  	 0.198142  	 700       	 95.316    	 0         	 7.35254   	 12.9637   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 51, Qr2: 101)      	 0.130279  	 700       	 0         	 0         	 38.3682   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5050, Xcols: 51, r: 51, streamingCols: 0)                   	 0.0852343 	 700       	 107.874   	 0         	 33.9281   	 3.17947   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 101, reductionFactor: 37, colBlockingSize: 12)                 	 0.0801155 	 100       	 65.385    	 0         	 2.62322   	 24.9254   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 101, r1_: 101, n: 50, r2: 101)        	 0.0795281 	 600       	 777.311   	 0         	 62.1849   	 12.5      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5050, m: 51)                                                         	 0.0639198 	 700       	 0         	 0         	 45.1278   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 101)                                                                	 0.0509811 	 100       	 4.28917   	 0         	 0.198505  	 21.6074   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, n: 50, r2left: 50, r2right: 51)                	 0.0448906 	 700       	 0         	 0         	 64.2576   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 51, m: 5050)                                                                  	 0.044161  	 700       	 0         	 0         	 65.3192   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.039765  	 100       	 2.9339    	 0         	 0.151892  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 51, m: 50, k: 2500)   	 0.0385426 	 800       	 264.642   	 0         	 42.3511   	 6.24877   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 51, m: 51)                                                                  	 0.0342501 	 800       	 4.13121   	 0         	 1.4676    	 2.81494   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2550, m: 50, k: 51) 	 0.0297278 	 700       	 306.229   	 0         	 48.9966   	 6.25      
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0278247 	 100       	 93.1992   	 0         	 7.3316    	 12.712    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 51, reductionFactor: 37, colBlockingSize: 12)                  	 0.0230218 	 100       	 58.0166   	 0         	 4.52096   	 12.8328   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 51, m: 2500, k: 50)	 0.0228297 	 800       	 446.787   	 0         	 71.4999   	 6.24877   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 101, r2: 101, leftOrthog: 1)      	 0.0189237 	 100       	 269.529   	 0         	 32.8858   	 8.19592   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 51, n: 50, r2: 51)                                                                                         	 0.0176677 	 700       	 0         	 0         	 82.4418   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5050, r: 50, r2: 50, leftOrthog: 1)        	 0.0175026 	 100       	 144.264   	 0         	 34.8519   	 4.13934   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2550, m: 51, k: 51) 	 0.0173266 	 700       	 535.914   	 0         	 84.9056   	 6.31188   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 101, r1_: 50, n: 50, r2: 101)         	 0.00886467	 100       	 575.374   	 0         	 69.2727   	 8.30592   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 101, reductionFactor: 37, colBlockingSize: 12)                   	 0.00860377	 100       	 12.1769   	 0         	 1.41808   	 8.5869    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 51, r: 51, streamingCols: 0)                   	 0.00783996	 100       	 82.9405   	 0         	 26.1533   	 3.17133   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 101, r1_: 101, n: 50, r2: 50)         	 0.00768415	 100       	 663.769   	 0         	 53.6378   	 12.375    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2550, m: 50, k: 50) 	 0.00505977	 100       	 251.988   	 0         	 40.7134   	 6.18932   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00451561	 100       	 3.69088   	 0         	 1.33758   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 51)                                                         	 0.00361562	 100       	 0         	 0         	 56.4219   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 51, m: 2500)                                                                  	 0.00354222	 100       	 0         	 0         	 57.591    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00327053	 100       	 7.85063   	 0         	 1.22304   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, n: 50, r2left: 50, r2right: 0)                 	 0.00247463	 100       	 0         	 0         	 82.4366   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 101, leftOrthog: 1)         	 0.00222419	 100       	 22.7049   	 0         	 7.24759   	 3.13275   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 51, n: 50, r2: 50)                                                                                         	 0.00158353	 100       	 0         	 0         	 128.826   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 51, m: 51, fromLeft: 1)                	 0.00135573	 800       	 0         	 0         	 24.5571   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 51, Qr2: 50)       	 0.00132141	 100       	 0         	 0         	 305.735   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000940688	 100       	 0.531526  	 0         	 2.1261    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 51)                                                                                          	 0.00089865	 200       	 0         	 0         	 9.08029   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000811769	 100       	 30.7969   	 0         	 7.39127   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 51)   	 0.000772721	 100       	 33.0003   	 0         	 7.8683    	 4.19408   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000752826	 200       	 0         	 0         	 10.6266   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000722782	 100       	 34.5886   	 0         	 8.30126   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000658944	 100       	 37.9395   	 0         	 9.10548   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 51)                 	 0.000580867	 100       	 0         	 0         	 13.9102   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 51, k: 51)   	 0.000543301	 100       	 47.874    	 0         	 11.3396   	 4.22185   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000497297	 100       	 0         	 0         	 8.04348   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000478775	 100       	 0         	 0         	 8.35466   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000437047	 100       	 1.14404   	 0         	 13.7285   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000426203	 100       	 0         	 0         	 9.3852    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000397128	 100       	 0         	 0         	 10.0723   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000389965	 100       	 0.641083  	 0         	 10.2573   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 51)                                                                                 	 0.000360513	 100       	 0.707325  	 0         	 11.3172   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000333597	 100       	 0.749407  	 0         	 11.9905   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2550, m: 0, k: 50)  	 5.34e-06  	 100       	 0         	 0         	 19101.1   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.38171   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.38167   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.59132   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.58994   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.40394   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.01733   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.907149  	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.79028   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.68334   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.486947  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.269378  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.224922  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.132026  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0967997 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0930743 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0679326 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0534355 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0484249 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0477032 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0393544 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0387658 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0234886 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0214    	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00468821	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00330127	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00289836	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00135573	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108407	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000940688	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000437047	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23145206413184 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23144974772224 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23144773445760 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23144572119296 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23144370792832 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23144169466368 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23143968139904 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23143766813440 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23143565486976 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23143364160512 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23143162834048 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23142961507584 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23142760181120 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23142558854656 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23142357528192 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23142156201728 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23141954875264 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23141753548800 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23141552222336 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23141350895872 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23141149569408 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23140948242944 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23140746916480 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23140545590016 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23140344263552 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23140142937088 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23139941610624 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23139740284160 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23139538957696 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23139337631232 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23139136304768 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23138934978304 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23138733647744 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23138532321280 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23138330994816 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23138129668352 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23137928341888 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23137727015424 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23137525688960 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23137324362496 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23137123036032 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23136921709568 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23136720383104 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23136519056640 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23136317730176 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23136116403712 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23135915077248 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23135713750784 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23135512424320 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23135311097856 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23135109771392 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23134908444928 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23134707118464 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23134505792000 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23134304465536 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23134103139072 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23133901812608 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23133700486144 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23133499159680 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23133297833216 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23133096506752 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23132895180288 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23132693853824 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23145100752640 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23145094162176 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 102, m: 102)                                                               	 0.909896  	 700       	 7.6198    	 0         	 0.192724  	 39.5375   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5100, cols: 102, reductionFactor: 37, colBlockingSize: 12)                 	 0.590915  	 600       	 110.665   	 0         	 4.31009   	 25.6757   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5100, r: 102, r2: 102, leftOrthog: 1)      	 0.234254  	 600       	 271.809   	 0         	 32.4039   	 8.38816   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5100, cols: 52, reductionFactor: 37, colBlockingSize: 12)                  	 0.202624  	 700       	 97.8577   	 0         	 7.40416   	 13.2166   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5100, Xcols: 52, r: 52, streamingCols: 0)                   	 0.086972  	 700       	 110.993   	 0         	 34.2387   	 3.24174   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 102, r1_: 102, n: 50, r2: 102)        	 0.0815189 	 600       	 781.076   	 0         	 61.8735   	 12.6238   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 102, reductionFactor: 37, colBlockingSize: 12)                 	 0.0813975 	 100       	 65.6359   	 0         	 2.60847   	 25.1626   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 52, Qr2: 102)      	 0.0811702 	 700       	 0         	 0         	 62.8092   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 102)                                                                	 0.0515892 	 100       	 4.27738   	 0         	 0.197716  	 21.634    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0396876 	 100       	 2.93963   	 0         	 0.152189  	 19.3157   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 52, m: 5100)                                                                  	 0.0388544 	 700       	 0         	 0         	 76.4454   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 52, m: 50, k: 2500)   	 0.037299  	 800       	 278.828   	 0         	 44.2007   	 6.30823   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 52, m: 52)                                                                  	 0.0327893 	 800       	 4.57408   	 0         	 1.5935    	 2.87047   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, n: 50, r2left: 50, r2right: 52)                	 0.0312668 	 700       	 0         	 0         	 94.9966   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5100, m: 52)                                                         	 0.0306269 	 700       	 0         	 0         	 96.9816   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0293796 	 100       	 89.1408   	 0         	 7.01168   	 12.7132   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2600, m: 50, k: 52) 	 0.0288505 	 700       	 328.036   	 0         	 51.9811   	 6.31068   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 52, m: 2500, k: 50)	 0.0254643 	 800       	 408.415   	 0         	 64.7433   	 6.30823   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 52, reductionFactor: 37, colBlockingSize: 12)                  	 0.0244189 	 100       	 56.8634   	 0         	 4.34759   	 13.0793   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2600, m: 52, k: 52) 	 0.0204841 	 700       	 480.498   	 0         	 74.662    	 6.43564   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 102, r2: 102, leftOrthog: 1)      	 0.0198242 	 100       	 262.407   	 0         	 31.7111   	 8.27492   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 52, n: 50, r2: 52)                                                                                         	 0.0183732 	 700       	 0         	 0         	 82.4158   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5100, r: 50, r2: 50, leftOrthog: 1)        	 0.0148845 	 100       	 171.32    	 0         	 41.3855   	 4.13961   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 102, r1_: 50, n: 50, r2: 102)         	 0.00874573	 100       	 594.804   	 0         	 71.3765   	 8.33333   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 102, reductionFactor: 37, colBlockingSize: 12)                   	 0.00857171	 100       	 12.4656   	 0         	 1.44699   	 8.61486   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 52, r: 52, streamingCols: 0)                   	 0.00789822	 100       	 85.5889   	 0         	 26.472    	 3.23319   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 102, r1_: 102, n: 50, r2: 50)         	 0.00768284	 100       	 677.093   	 0         	 54.1887   	 12.4951   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2600, m: 50, k: 50) 	 0.0054025 	 100       	 240.63    	 0         	 38.8709   	 6.19048   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 52, m: 2500)                                                                  	 0.00471183	 100       	 0         	 0         	 44.1442   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00439782	 100       	 3.78974   	 0         	 1.37341   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 52)                                                         	 0.00384787	 100       	 0         	 0         	 54.0558   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 52, n: 50, r2left: 50, r2right: 0)                 	 0.0036467 	 100       	 0         	 0         	 57.0378   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00349065	 100       	 7.35556   	 0         	 1.14592   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 102, leftOrthog: 1)         	 0.00220885	 100       	 23.089    	 0         	 7.35225   	 3.14039   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 52, n: 50, r2: 50)                                                                                         	 0.00169762	 100       	 0         	 0         	 122.524   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 52, m: 52, fromLeft: 1)                	 0.00143537	 800       	 0         	 0         	 24.1131   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 52, Qr2: 50)       	 0.00114988	 100       	 0         	 0         	 354.821   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000971427	 100       	 25.7353   	 0         	 6.17648   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000898916	 100       	 0.556225  	 0         	 2.2249    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 52)                                                                                          	 0.000884506	 200       	 0         	 0         	 9.40638   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000770249	 200       	 0         	 0         	 10.3863   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000732005	 100       	 34.1528   	 0         	 8.19667   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 52)   	 0.000714  	 100       	 36.4146   	 0         	 8.62745   	 4.22078   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000649947	 100       	 38.4647   	 0         	 9.23152   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 52, k: 52)   	 0.000646773	 100       	 41.8076   	 0         	 9.77654   	 4.27632   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 52)                 	 0.0005387 	 100       	 0         	 0         	 15.1476   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000529778	 100       	 0         	 0         	 7.55033   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000471185	 100       	 0         	 0         	 8.48923   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000450492	 100       	 1.1099    	 0         	 13.3188   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000430849	 100       	 0         	 0         	 9.284     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000400327	 100       	 0.624489  	 0         	 9.99183   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000385127	 100       	 0         	 0         	 10.3862   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 52)                                                                                 	 0.000353984	 100       	 0.734496  	 0         	 11.7519   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000326372	 100       	 0.765997  	 0         	 12.256    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2600, m: 0, k: 50)  	 5.49e-06  	 100       	 0         	 0         	 18943.5   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.24771   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.24767   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.54916   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.54785   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.41209   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.00117   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.940798  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.710918  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.698438  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.453032  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.271172  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.231099  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.0986795 	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0948702 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.082751  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0561033 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0435662 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0382704 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0371871 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0359234 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0348599 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0261142 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0222553 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00667932	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00334216	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00152045	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00143537	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108068	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000898916	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000450492	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23409562924928 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23409383696384 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23409182369920 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23408981043456 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23408779716992 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23408578390528 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23408377064064 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23408175737600 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23407974411136 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23407773084672 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23407571758208 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23407370431744 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23407169105280 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23406967778816 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23406766452352 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23406565125888 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23406363799424 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23406162472960 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23405961146496 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23405759820032 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23405558493568 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23405357167104 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23405155840640 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23404954514176 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23404753187712 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23404551861248 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23404350534784 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23404149208320 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23403947881856 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23403746555392 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23403545228928 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23403343902464 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23403142571904 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23402941245440 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23402739918976 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23402538592512 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23402337266048 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23402135939584 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23401934613120 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23401733286656 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23401531960192 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23401330633728 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23401129307264 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23400927980800 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23400726654336 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23400525327872 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23400324001408 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23400122674944 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23399921348480 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23399720022016 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23399518695552 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23399317369088 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23399116042624 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23398914716160 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23398713389696 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23398512063232 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23398310736768 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23398109410304 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23397908083840 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23397706757376 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23397505430912 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23397304104448 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23397102777984 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23409457264384 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23409278633728 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 103, m: 103)                                                               	 0.968063  	 700       	 7.37468   	 0         	 0.184707  	 39.9263   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5150, cols: 103, reductionFactor: 37, colBlockingSize: 12)                 	 0.591786  	 600       	 113.784   	 0         	 4.38855   	 25.9274   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5150, r: 103, r2: 103, leftOrthog: 1)      	 0.238973  	 600       	 274.356   	 0         	 32.39     	 8.47039   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5150, cols: 53, reductionFactor: 37, colBlockingSize: 12)                  	 0.208004  	 700       	 99.9994   	 0         	 7.42414   	 13.4695   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5150, Xcols: 53, r: 53, streamingCols: 0)                   	 0.0957316 	 700       	 105.78    	 0         	 32.0156   	 3.304     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 103, reductionFactor: 37, colBlockingSize: 12)                 	 0.0852627 	 100       	 63.895    	 0         	 2.5156    	 25.3995   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 53, Qr2: 103)      	 0.0837901 	 700       	 0         	 0         	 62.0484   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 103, r1_: 103, n: 50, r2: 103)        	 0.0827937 	 600       	 791.892   	 0         	 62.1212   	 12.7475   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 103)                                                                	 0.0527379 	 100       	 4.22214   	 0         	 0.194926  	 21.6602   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0401683 	 100       	 2.90444   	 0         	 0.150367  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 53, m: 50, k: 2500)   	 0.0395672 	 800       	 267.898   	 0         	 42.0793   	 6.36652   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 53, m: 53)                                                                  	 0.0369449 	 800       	 4.29833   	 0         	 1.469     	 2.92603   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, n: 50, r2left: 50, r2right: 53)                	 0.0339104 	 700       	 0         	 0         	 90.1505   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 53, m: 5150)                                                                  	 0.0293457 	 700       	 0         	 0         	 104.173   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0289106 	 100       	 91.4749   	 0         	 7.19459   	 12.7144   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5150, m: 53)                                                         	 0.0282922 	 700       	 0         	 0         	 108.052   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 53, m: 2500, k: 50)	 0.0270633 	 800       	 391.674   	 0         	 61.5209   	 6.36652   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2650, m: 50, k: 53) 	 0.0266502 	 700       	 368.908   	 0         	 57.9117   	 6.37019   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 53, reductionFactor: 37, colBlockingSize: 12)                  	 0.024759  	 100       	 58.2599   	 0         	 4.37203   	 13.3256   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 53, n: 50, r2: 53)                                                                                         	 0.02036   	 700       	 0         	 0         	 77.2614   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 103, r2: 103, leftOrthog: 1)      	 0.0193753 	 100       	 273.777   	 0         	 32.7724   	 8.35388   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2650, m: 53, k: 53) 	 0.0185779 	 700       	 560.956   	 0         	 85.5193   	 6.55941   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5150, r: 50, r2: 50, leftOrthog: 1)        	 0.0158031 	 100       	 162.942   	 0         	 39.3593   	 4.13987   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 103, r1_: 50, n: 50, r2: 103)         	 0.00908576	 100       	 583.825   	 0         	 69.8323   	 8.36039   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 103, reductionFactor: 37, colBlockingSize: 12)                   	 0.00900279	 100       	 12.1026   	 0         	 1.40037   	 8.64247   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 53, r: 53, streamingCols: 0)                   	 0.00810052	 100       	 86.692    	 0         	 26.3099   	 3.29504   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 103, r1_: 103, n: 50, r2: 50)         	 0.00795334	 100       	 666.952   	 0         	 52.8692   	 12.6151   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2650, m: 50, k: 50) 	 0.00467954	 100       	 283.148   	 0         	 45.731    	 6.19159   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00431838	 100       	 3.85946   	 0         	 1.39867   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 53, m: 2500)                                                                  	 0.00377359	 100       	 0         	 0         	 56.1799   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 53)                                                         	 0.0035714 	 100       	 0         	 0         	 59.3604   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00308325	 100       	 8.32747   	 0         	 1.29733   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 53, n: 50, r2left: 50, r2right: 0)                 	 0.00305819	 100       	 0         	 0         	 69.3221   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 103, leftOrthog: 1)         	 0.00228527	 100       	 22.5357   	 0         	 7.1589    	 3.14792   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 53, n: 50, r2: 50)                                                                                         	 0.00172211	 100       	 0         	 0         	 123.105   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 53, m: 53, fromLeft: 1)                	 0.00149658	 800       	 0         	 0         	 24.0248   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 53, Qr2: 50)       	 0.0013381 	 100       	 0         	 0         	 307.899   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00115789	 100       	 0.431821  	 0         	 1.72728   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 53)                                                                                          	 0.000881405	 200       	 0         	 0         	 9.621     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000828577	 100       	 30.1722   	 0         	 7.24133   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000763315	 200       	 0         	 0         	 10.4806   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000735952	 100       	 33.9696   	 0         	 8.15271   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 53)   	 0.000720434	 100       	 36.7834   	 0         	 8.66145   	 4.24679   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 53, k: 53)   	 0.000684452	 100       	 41.0401   	 0         	 9.47795   	 4.33007   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00065783	 100       	 38.0037   	 0         	 9.1209    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 53)                 	 0.000556861	 100       	 0         	 0         	 14.7972   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000496922	 100       	 0         	 0         	 8.04955   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000494553	 100       	 0         	 0         	 8.08811   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000409523	 100       	 0         	 0         	 9.76746   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000408785	 100       	 1.22314   	 0         	 14.6776   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000402674	 100       	 0.62085   	 0         	 9.93359   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000394583	 100       	 0         	 0         	 10.1373   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 53)                                                                                 	 0.000356528	 100       	 0.74328   	 0         	 11.8925   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000334532	 100       	 0.747313  	 0         	 11.957    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2650, m: 0, k: 50)  	 5.1e-06   	 100       	 0         	 0         	 20784.3   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.34582   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.34578   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.63706   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.63545   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.49519   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.06097   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.950809  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.715648  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.70866   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.458175  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.276436  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.236349  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.103832  	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.100569  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0855377 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0513177 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0412633 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0403958 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0380224 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0331193 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0322582 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0277211 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0242214 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00722896	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00339613	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00151086	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00149658	 800       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00115789	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109373	 300       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000408785	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22592426354560 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22592199059456 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22591997732992 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22591796406528 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22591595080064 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22591393753600 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22591192427136 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22590991100672 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22590789774208 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22590588447744 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22590387121280 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22590185794816 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22589984468352 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22589783141888 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22589581815424 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22589380488960 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22589179162496 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22588977836032 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22588776509568 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22588575183104 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22588373856640 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22588172530176 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22587971203712 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22587769877248 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22587568550784 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22587367224320 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22587165897856 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22586964571392 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22586763244928 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22586561918464 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22586360592000 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22586159265536 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22585957934976 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22585756608512 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22585555282048 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22585353955584 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22585152629120 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22584951302656 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22584749976192 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22584548649728 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22584347323264 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22584145996800 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22583944670336 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22583743343872 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22583542017408 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22583340690944 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22583139364480 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22582938038016 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22582736711552 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22582535385088 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22582334058624 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22582132732160 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22581931405696 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22581730079232 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22581528752768 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22581327426304 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22581126099840 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22580924773376 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22580723446912 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22580522120448 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22580320793984 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22580119467520 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22579918141056 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22592320694016 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22592314103552 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 104, m: 104)                                                               	 0.887881  	 700       	 8.27714   	 0         	 0.20531   	 40.3152   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5200, cols: 104, reductionFactor: 37, colBlockingSize: 12)                 	 0.593886  	 600       	 116.716   	 0         	 4.45836   	 26.1791   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5200, r: 104, r2: 104, leftOrthog: 1)      	 0.256876  	 600       	 262.741   	 0         	 30.7204   	 8.55263   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5200, cols: 54, reductionFactor: 37, colBlockingSize: 12)                  	 0.214511  	 700       	 101.637   	 0         	 7.40667   	 13.7224   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5200, Xcols: 54, r: 54, streamingCols: 0)                   	 0.0903005 	 700       	 117.544   	 0         	 34.9181   	 3.36626   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 54, Qr2: 104)      	 0.087874  	 700       	 0         	 0         	 60.3246   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 104, reductionFactor: 37, colBlockingSize: 12)                 	 0.0854786 	 100       	 64.9772   	 0         	 2.53459   	 25.6362   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 104, r1_: 104, n: 50, r2: 104)        	 0.082764  	 600       	 815.474   	 0         	 63.356    	 12.8713   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 104)                                                                	 0.0535626 	 100       	 4.19447   	 0         	 0.193419  	 21.686    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 54, m: 54)                                                                  	 0.0439302 	 800       	 3.82337   	 0         	 1.28232   	 2.9816    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0395833 	 100       	 2.94737   	 0         	 0.15259   	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 54, m: 50, k: 2500)   	 0.0389309 	 800       	 277.415   	 0         	 43.1863   	 6.42368   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, n: 50, r2left: 50, r2right: 54)                	 0.034857  	 700       	 0         	 0         	 90.2246   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5200, m: 54)                                                         	 0.0311942 	 700       	 0         	 0         	 100.819   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2700, m: 50, k: 54) 	 0.0299054 	 700       	 341.276   	 0         	 53.0874   	 6.42857   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 54, m: 5200)                                                                  	 0.0299043 	 700       	 0         	 0         	 105.168   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0283064 	 100       	 94.3344   	 0         	 7.41881   	 12.7156   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 54, reductionFactor: 37, colBlockingSize: 12)                  	 0.0259237 	 100       	 57.7619   	 0         	 4.25605   	 13.5717   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 54, m: 2500, k: 50)	 0.0234244 	 800       	 461.059   	 0         	 71.7749   	 6.42368   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2700, m: 54, k: 54) 	 0.0223172 	 700       	 493.901   	 0         	 73.9022   	 6.68317   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 54, n: 50, r2: 54)                                                                                         	 0.0206177 	 700       	 0         	 0         	 79.202    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 104, r2: 104, leftOrthog: 1)      	 0.0206089 	 100       	 262.411   	 0         	 31.118    	 8.4328    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5200, r: 50, r2: 50, leftOrthog: 1)        	 0.0158368 	 100       	 164.175   	 0         	 39.6545   	 4.14013   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 104, reductionFactor: 37, colBlockingSize: 12)                   	 0.00989521	 100       	 11.226    	 0         	 1.29485   	 8.66971   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 104, r1_: 50, n: 50, r2: 104)         	 0.00947101	 100       	 571.006   	 0         	 68.0814   	 8.3871    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 54, r: 54, streamingCols: 0)                   	 0.00854033	 100       	 85.3597   	 0         	 25.4283   	 3.35687   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 104, r1_: 104, n: 50, r2: 50)         	 0.00747124	 100       	 723.842   	 0         	 56.8383   	 12.7351   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2700, m: 50, k: 50) 	 0.00540792	 100       	 249.634   	 0         	 40.3113   	 6.19266   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 54, m: 2500)                                                                  	 0.00465911	 100       	 0         	 0         	 46.3608   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00438056	 100       	 3.80467   	 0         	 1.37882   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 54)                                                         	 0.00424742	 100       	 0         	 0         	 50.8544   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00363713	 100       	 7.05933   	 0         	 1.09977   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 54, n: 50, r2left: 50, r2right: 0)                 	 0.00358061	 100       	 0         	 0         	 60.325    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 104, leftOrthog: 1)         	 0.00234392	 100       	 22.1851   	 0         	 7.03096   	 3.15534   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 54, n: 50, r2: 50)                                                                                         	 0.00170737	 100       	 0         	 0         	 126.511   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 54, m: 54, fromLeft: 1)                	 0.00156548	 800       	 0         	 0         	 23.8424   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 54, Qr2: 50)       	 0.00121336	 100       	 0         	 0         	 342.85    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 54)                                                                                          	 0.000883502	 200       	 0         	 0         	 9.77926   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000826006	 100       	 0.605322  	 0         	 2.42129   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000764964	 100       	 32.6813   	 0         	 7.84351   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000757308	 200       	 0         	 0         	 10.5637   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 54)   	 0.000738953	 100       	 36.5382   	 0         	 8.55264   	 4.27215   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000722147	 100       	 34.619    	 0         	 8.30856   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000647477	 100       	 38.6114   	 0         	 9.26674   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 54, k: 54)   	 0.000618038	 100       	 47.1816   	 0         	 10.7644   	 4.38312   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 54)                 	 0.000546505	 100       	 0         	 0         	 15.224    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000520329	 100       	 0         	 0         	 7.68744   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000488663	 100       	 0         	 0         	 8.1856    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000458816	 100       	 0         	 0         	 8.71809   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000443039	 100       	 1.12857   	 0         	 13.5428   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000434418	 100       	 0         	 0         	 9.20772   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000385694	 100       	 0.648182  	 0         	 10.3709   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 54)                                                                                 	 0.000365554	 100       	 0.738605  	 0         	 11.8177   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000333254	 100       	 0.750179  	 0         	 12.0029   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2700, m: 0, k: 50)  	 5.56e-06  	 100       	 0         	 0         	 19424.5   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.31337   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.31332   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.57846   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.57719   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.43573   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 0.981027  	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 0.961637  	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.734791  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.71826   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.473264  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.295666  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.244527  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.100428  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0988408 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0895461 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0589931 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0483108 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0396958 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0394728 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.035876  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0345634 	 800       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0244862 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0240718 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0059749 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00365326	 5200      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00332636	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00156548	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0010845 	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000826006	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000443039	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22930012444544 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22929823754240 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22929622427776 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22929421101312 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22929219774848 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22929018448384 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22928817121920 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22928615795456 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22928414468992 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22928213142528 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22928011816064 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22927810489600 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22927609163136 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22927407836672 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22927206510208 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22927005183744 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22926803857280 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22926602530816 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22926401204352 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22926199877888 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22925998551424 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22925797224960 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22925595898496 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22925394572032 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22925193245568 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22924991919104 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22924790592640 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22924589266176 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22924387939712 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22924186613248 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22923985286784 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22923783960320 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22923582629760 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22923381303296 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22923179976832 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22922978650368 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22922777323904 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22922575997440 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22922374670976 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22922173344512 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22921972018048 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22921770691584 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22921569365120 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22921368038656 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22921166712192 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22920965385728 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22920764059264 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22920562732800 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22920361406336 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22920160079872 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22919958753408 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22919757426944 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22919556100480 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22919354774016 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22919153447552 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22918952121088 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22918750794624 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22918549468160 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22918348141696 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22918146815232 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22917945488768 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22917744162304 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22917542835840 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22929906784000 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22929900193536 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 105, m: 105)                                                               	 0.930001  	 700       	 8.13241   	 0         	 0.199793  	 40.7041   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5250, cols: 105, reductionFactor: 37, colBlockingSize: 12)                 	 0.625565  	 600       	 114.033   	 0         	 4.31437   	 26.4308   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5250, r: 105, r2: 105, leftOrthog: 1)      	 0.253116  	 600       	 274.409   	 0         	 31.7792   	 8.63487   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5250, cols: 55, reductionFactor: 37, colBlockingSize: 12)                  	 0.220699  	 700       	 103.465   	 0         	 7.40348   	 13.9752   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5250, Xcols: 55, r: 55, streamingCols: 0)                   	 0.0901647 	 700       	 123.295   	 0         	 35.9616   	 3.42852   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 105, reductionFactor: 37, colBlockingSize: 12)                 	 0.0868337 	 100       	 65.1991   	 0         	 2.51999   	 25.8728   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 105, r1_: 105, n: 50, r2: 105)        	 0.0866933 	 600       	 801.186   	 0         	 61.6532   	 12.995    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 55, Qr2: 105)      	 0.0839533 	 700       	 0         	 0         	 64.3691   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 105)                                                                	 0.0531446 	 100       	 4.26509   	 0         	 0.196445  	 21.7114   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0388942 	 100       	 2.99959   	 0         	 0.155293  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 55, m: 50, k: 2500)   	 0.0387553 	 800       	 283.832   	 0         	 43.8031   	 6.47974   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 55, m: 55)                                                                  	 0.0375669 	 800       	 4.72399   	 0         	 1.55541   	 3.03713   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, n: 50, r2left: 50, r2right: 55)                	 0.0369876 	 700       	 0         	 0         	 87.4347   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5250, m: 55)                                                         	 0.0352002 	 700       	 0         	 0         	 91.8746   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 55, m: 5250)                                                                  	 0.0350993 	 700       	 0         	 0         	 92.1386   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2750, m: 50, k: 55) 	 0.0285071 	 700       	 371.399   	 0         	 57.263    	 6.48585   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0283167 	 100       	 95.2069   	 0         	 7.48675   	 12.7167   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 55, reductionFactor: 37, colBlockingSize: 12)                  	 0.0273875 	 100       	 56.7185   	 0         	 4.10479   	 13.8176   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 55, m: 2500, k: 50)	 0.0238025 	 800       	 462.137   	 0         	 71.3204   	 6.47974   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 55, n: 50, r2: 55)                                                                                         	 0.0206137 	 700       	 0         	 0         	 82.1783   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 105, r2: 105, leftOrthog: 1)      	 0.0203901 	 100       	 270.351   	 0         	 31.7624   	 8.51167   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2750, m: 55, k: 55) 	 0.0190062 	 700       	 612.762   	 0         	 90.0203   	 6.80693   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5250, r: 50, r2: 50, leftOrthog: 1)        	 0.0153223 	 100       	 171.319   	 0         	 41.3777   	 4.14038   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0100115 	 100       	 2.56461   	 0         	 0.399539  	 6.41892   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 105, reductionFactor: 37, colBlockingSize: 12)                   	 0.00987809	 100       	 11.4627   	 0         	 1.31807   	 8.6966    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 105, r1_: 50, n: 50, r2: 105)         	 0.0093223 	 100       	 591.324   	 0         	 70.2831   	 8.41346   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 55, r: 55, streamingCols: 0)                   	 0.0084638 	 100       	 89.3511   	 0         	 26.136    	 3.4187    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 105, r1_: 105, n: 50, r2: 50)         	 0.00788656	 100       	 698.974   	 0         	 54.3735   	 12.855    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2750, m: 50, k: 50) 	 0.00558399	 100       	 246.24    	 0         	 39.7565   	 6.19369   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 55, m: 2500)                                                                  	 0.00468177	 100       	 0         	 0         	 46.9907   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00439708	 100       	 3.79038   	 0         	 1.37364   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 55)                                                         	 0.00403538	 100       	 0         	 0         	 54.5178   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 55, n: 50, r2left: 50, r2right: 0)                 	 0.0039952 	 100       	 0         	 0         	 55.066    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 105, leftOrthog: 1)         	 0.00269562	 100       	 19.4761   	 0         	 6.15815   	 3.16265   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 55, n: 50, r2: 50)                                                                                         	 0.00176005	 100       	 0         	 0         	 124.996   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 55, m: 55, fromLeft: 1)                	 0.00158872	 800       	 0         	 0         	 24.3719   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 55, Qr2: 50)       	 0.00115883	 100       	 0         	 0         	 362.436   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000961652	 100       	 0.519939  	 0         	 2.07975   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000913989	 100       	 27.3526   	 0         	 6.56463   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 55)                                                                                          	 0.000852691	 200       	 0         	 0         	 10.3203   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00080886	 200       	 0         	 0         	 9.89046   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000798681	 100       	 31.3016   	 0         	 7.51239   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 55)   	 0.000787477	 100       	 34.9217   	 0         	 8.12722   	 4.29688   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000676146	 100       	 36.9743   	 0         	 8.87382   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 55, k: 55)   	 0.000631183	 100       	 47.9259   	 0         	 10.8051   	 4.43548   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 55)                 	 0.000553185	 100       	 0         	 0         	 15.1848   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00052226	 100       	 0         	 0         	 7.65902   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000479042	 100       	 0         	 0         	 8.35      	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000450083	 100       	 1.11091   	 0         	 13.3309   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000412511	 100       	 0         	 0         	 9.69671   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000408976	 100       	 0.611283  	 0         	 9.78053   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000371008	 100       	 0         	 0         	 10.7814   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 55)                                                                                 	 0.000354687	 100       	 0.775331  	 0         	 12.4053   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000330279	 100       	 0.756936  	 0         	 12.111    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2750, m: 0, k: 50)  	 5.35e-06  	 100       	 0         	 0         	 20560.7   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.39738   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.39734   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.64737   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.64598   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.5166    	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.02204   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.00869   	 1800      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.751278  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.749903  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.49332   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.291524  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.258598  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.104816  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0986285 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0855246 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0545212 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.042015  	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0419639 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0397811 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0396065 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0395539 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0245576 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0244786 	 900       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00650379	 6400      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00539003	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00248892	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00158872	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109394	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000961652	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000450083	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22758196787072 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22757957953536 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22757756627072 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22757555300608 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22757353974144 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22757152647680 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22756951321216 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22756749994752 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22756548668288 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22756347341824 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22756146015360 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22755944688896 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22755743362432 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22755542035968 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22755340709504 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22755139383040 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22754938056576 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22754736730112 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22754535403648 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22754334077184 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22754132750720 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22753931424256 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22753730097792 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22753528771328 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22753327444864 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22753126118400 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22752924791936 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22752723465472 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22752522139008 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22752320812544 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22752119486080 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22751918159616 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22751716829056 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22751515502592 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22751314176128 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22751112849664 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22750911523200 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22750710196736 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22750508870272 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22750307543808 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22750106217344 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22749904890880 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22749703564416 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22749502237952 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22749300911488 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22749099585024 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22748898258560 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22748696932096 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22748495605632 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22748294279168 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22748092952704 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22747891626240 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22747690299776 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22747488973312 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22747287646848 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22747086320384 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22746884993920 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22746683667456 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22746482340992 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22746281014528 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22746079688064 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22745878361600 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22745677035136 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22758091126528 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22758084536064 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 106, m: 106)                                                               	 0.936378  	 700       	 8.31      	 0         	 0.202224  	 41.093    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5300, cols: 106, reductionFactor: 37, colBlockingSize: 12)                 	 0.648813  	 600       	 113.118   	 0         	 4.23939   	 26.6826   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5300, r: 106, r2: 106, leftOrthog: 1)      	 0.261525  	 600       	 273.247   	 0         	 31.3461   	 8.71711   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5300, cols: 56, reductionFactor: 37, colBlockingSize: 12)                  	 0.228083  	 700       	 104.778   	 0         	 7.36417   	 14.228    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5300, Xcols: 56, r: 56, streamingCols: 0)                   	 0.0896936 	 700       	 129.715   	 0         	 37.1592   	 3.49078   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 106, r1_: 106, n: 50, r2: 106)        	 0.0896302 	 600       	 797.286   	 0         	 60.7743   	 13.1188   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 106, reductionFactor: 37, colBlockingSize: 12)                 	 0.088804  	 100       	 64.9727   	 0         	 2.4885    	 26.1092   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 56, Qr2: 106)      	 0.083429  	 700       	 0         	 0         	 66.0221   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 106)                                                                	 0.0552728 	 100       	 4.13706   	 0         	 0.190329  	 21.7364   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5300, m: 56)                                                         	 0.0466978 	 700       	 0         	 0         	 71.1845   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 56, m: 5300)                                                                  	 0.0418271 	 700       	 0         	 0         	 79.4739   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0411331 	 100       	 2.83632   	 0         	 0.14684   	 19.3157   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 56, m: 56)                                                                  	 0.0404823 	 800       	 4.62729   	 0         	 1.4962    	 3.09269   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 56, m: 50, k: 2500)   	 0.0344724 	 800       	 324.898   	 0         	 49.7187   	 6.53473   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, n: 50, r2left: 50, r2right: 56)                	 0.0344436 	 700       	 0         	 0         	 96.5103   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2800, m: 50, k: 56) 	 0.0321392 	 700       	 341.514   	 0         	 52.2029   	 6.54206   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0284935 	 100       	 95.5174   	 0         	 7.51049   	 12.7179   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 56, reductionFactor: 37, colBlockingSize: 12)                  	 0.0263987 	 100       	 61.0022   	 0         	 4.33767   	 14.0634   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 56, m: 2500, k: 50)	 0.0224303 	 800       	 499.324   	 0         	 76.4108   	 6.53473   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 106, r2: 106, leftOrthog: 1)      	 0.0218723 	 100       	 256.855   	 0         	 29.8999   	 8.59051   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2800, m: 56, k: 56) 	 0.0208037 	 700       	 590.91    	 0         	 85.2599   	 6.93069   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 56, n: 50, r2: 56)                                                                                         	 0.0203767 	 700       	 0         	 0         	 86.1846   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5300, r: 50, r2: 50, leftOrthog: 1)        	 0.0157878 	 100       	 167.851   	 0         	 40.5376   	 4.14062   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 106, reductionFactor: 37, colBlockingSize: 12)                   	 0.010045  	 100       	 11.4879   	 0         	 1.31695   	 8.72315   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 106, r1_: 50, n: 50, r2: 106)         	 0.00974195	 100       	 576.681   	 0         	 68.3313   	 8.43949   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 56, r: 56, streamingCols: 0)                   	 0.00870188	 100       	 90.0955   	 0         	 25.8857   	 3.48051   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 106, r1_: 106, n: 50, r2: 50)         	 0.00812003	 100       	 691.869   	 0         	 53.3235   	 12.9749   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2800, m: 50, k: 50) 	 0.00550542	 100       	 254.295   	 0         	 41.0505   	 6.19469   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 56)                                                         	 0.00508381	 100       	 0         	 0         	 44.0615   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 56, m: 2500)                                                                  	 0.00482751	 100       	 0         	 0         	 46.4008   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00442227	 100       	 3.76879   	 0         	 1.36582   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 56, n: 50, r2left: 50, r2right: 0)                 	 0.00414754	 100       	 0         	 0         	 54.008    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00318054	 100       	 8.07275   	 0         	 1.25765   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 106, leftOrthog: 1)         	 0.00249829	 100       	 21.2145   	 0         	 6.69259   	 3.16986   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 56, n: 50, r2: 50)                                                                                         	 0.00175767	 100       	 0         	 0         	 127.442   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 56, m: 56, fromLeft: 1)                	 0.00161966	 800       	 0         	 0         	 24.7835   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 56, Qr2: 50)       	 0.00120824	 100       	 0         	 0         	 350.923   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00097397	 200       	 0         	 0         	 8.21381   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000863059	 100       	 0.579335  	 0         	 2.31734   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 56)                                                                                          	 0.000855247	 200       	 0         	 0         	 10.4765   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000803544	 100       	 31.1122   	 0         	 7.46692   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 56)   	 0.000765779	 100       	 36.5641   	 0         	 8.46197   	 4.32099   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000739441	 100       	 33.8093   	 0         	 8.11424   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000675165	 100       	 37.028    	 0         	 8.88672   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 56, k: 56)   	 0.000578023	 100       	 54.2539   	 0         	 12.0909   	 4.48718   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 56)                 	 0.000553072	 100       	 0         	 0         	 15.3325   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000509286	 100       	 0         	 0         	 7.85413   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000480781	 100       	 0         	 0         	 8.3198    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000434194	 100       	 1.15156   	 0         	 13.8187   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00043185	 100       	 0         	 0         	 9.26248   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000429946	 100       	 0.581468  	 0         	 9.30349   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000379512	 100       	 0         	 0         	 10.5399   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 56)                                                                                 	 0.000360439	 100       	 0.77683   	 0         	 12.4293   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000324924	 100       	 0.769411  	 0         	 12.3106   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2800, m: 0, k: 50)  	 5.5e-06   	 100       	 0         	 0         	 20363.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.48615   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.4861    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.72131   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.72003   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.58086   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.03382   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.03278   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.776756  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.764728  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.512784  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.301684  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.25815   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.108232  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.0983955 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0850691 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0597976 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0521611 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0466546 	 800       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0449045 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0396535 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0352759 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0244444 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0231055 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00454844	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00333465	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00161966	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00153063	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111531	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000863059	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000434194	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23381844121472 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23381667735552 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23381466409088 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23381265082624 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23381063756160 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23380862429696 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23380661103232 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23380459776768 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23380258450304 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23380057123840 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23379855797376 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23379654470912 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23379453144448 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23379251817984 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23379050491520 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23378849165056 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23378647838592 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23378446512128 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23378245185664 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23378043859200 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23377842532736 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23377641206272 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23377439879808 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23377238553344 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23377037226880 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23376835900416 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23376634573952 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23376433247488 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23376231921024 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23376030594560 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23375829268096 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23375627941632 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23375426611072 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23375225284608 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23375023958144 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23374822631680 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23374621305216 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23374419978752 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23374218652288 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23374017325824 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23373815999360 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23373614672896 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23373413346432 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23373212019968 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23373010693504 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23372809367040 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23372608040576 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23372406714112 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23372205387648 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23372004061184 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23371802734720 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23371601408256 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23371400081792 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23371198755328 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23370997428864 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23370796102400 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23370594775936 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23370393449472 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23370192123008 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23369990796544 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23369789470080 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23369588143616 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23369386817152 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23381738460928 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23381559834368 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 107, m: 107)                                                               	 0.978488  	 700       	 8.17957   	 0         	 0.197184  	 41.4819   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5350, cols: 107, reductionFactor: 37, colBlockingSize: 12)                 	 0.685386  	 600       	 110.141   	 0         	 4.08925   	 26.9343   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5350, r: 107, r2: 107, leftOrthog: 1)      	 0.260562  	 600       	 282.092   	 0         	 32.0583   	 8.79934   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5350, cols: 57, reductionFactor: 37, colBlockingSize: 12)                  	 0.244925  	 700       	 102.043   	 0         	 7.04672   	 14.4809   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5350, Xcols: 57, r: 57, streamingCols: 0)                   	 0.0924642 	 700       	 131.592   	 0         	 37.0364   	 3.55304   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 107, reductionFactor: 37, colBlockingSize: 12)                 	 0.0911132 	 100       	 64.5265   	 0         	 2.44925   	 26.3454   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 107, r1_: 107, n: 50, r2: 107)        	 0.0896837 	 600       	 819.576   	 0         	 61.8895   	 13.2426   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 57, Qr2: 107)      	 0.0811345 	 700       	 0         	 0         	 69.1869   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 107)                                                                	 0.0545168 	 100       	 4.23111   	 0         	 0.194435  	 21.761    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 57, m: 57)                                                                  	 0.0419459 	 800       	 4.70938   	 0         	 1.49587   	 3.14826   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0417251 	 100       	 2.79608   	 0         	 0.144757  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 57, m: 50, k: 2500)   	 0.0404344 	 800       	 281.938   	 0         	 42.7913   	 6.58868   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, n: 50, r2left: 50, r2right: 57)                	 0.0400945 	 700       	 0         	 0         	 85.1847   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 57, m: 5350)                                                                  	 0.0389676 	 700       	 0         	 0         	 87.6483   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5350, m: 57)                                                         	 0.0333494 	 700       	 0         	 0         	 102.414   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2850, m: 50, k: 57) 	 0.0315985 	 700       	 359.874   	 0         	 54.5494   	 6.59722   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 57, reductionFactor: 37, colBlockingSize: 12)                  	 0.0294791 	 100       	 56.5962   	 0         	 3.95532   	 14.3089   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0293456 	 100       	 93.6188   	 0         	 7.36057   	 12.719    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 57, m: 2500, k: 50)	 0.0246895 	 800       	 461.734   	 0         	 70.0799   	 6.58868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2850, m: 57, k: 57) 	 0.0218002 	 700       	 594.65    	 0         	 84.2942   	 7.05446   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 107, r2: 107, leftOrthog: 1)      	 0.0215233 	 100       	 265.968   	 0         	 30.6793   	 8.6693    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 57, n: 50, r2: 57)                                                                                         	 0.0209146 	 700       	 0         	 0         	 86.9937   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5350, r: 50, r2: 50, leftOrthog: 1)        	 0.0157554 	 100       	 169.783   	 0         	 41.0018   	 4.14087   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 107, r1_: 50, n: 50, r2: 107)         	 0.00954749	 100       	 599.582   	 0         	 70.8291   	 8.46519   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 107, reductionFactor: 37, colBlockingSize: 12)                   	 0.00936339	 100       	 12.5579   	 0         	 1.43529   	 8.74935   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 57, r: 57, streamingCols: 0)                   	 0.00893642	 100       	 90.8921   	 0         	 25.659    	 3.54231   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 107, r1_: 107, n: 50, r2: 50)         	 0.00818711	 100       	 699.209   	 0         	 53.396    	 13.0948   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2850, m: 50, k: 50) 	 0.00514626	 100       	 276.9     	 0         	 44.6926   	 6.19565   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 57, m: 2500)                                                                  	 0.00480102	 100       	 0         	 0         	 47.4899   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00448487	 100       	 5.72496   	 0         	 0.891888  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 57)                                                         	 0.0044133 	 100       	 0         	 0         	 51.662    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00428513	 100       	 3.88941   	 0         	 1.40953   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 57, n: 50, r2left: 50, r2right: 0)                 	 0.00391092	 100       	 0         	 0         	 58.2983   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 107, leftOrthog: 1)         	 0.00257808	 100       	 20.7519   	 0         	 6.53199   	 3.17696   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 57, n: 50, r2: 50)                                                                                         	 0.00182917	 100       	 0         	 0         	 124.647   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 57, m: 57, fromLeft: 1)                	 0.00170961	 800       	 0         	 0         	 24.3255   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 57, Qr2: 50)       	 0.00123326	 100       	 0         	 0         	 347.047   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 57)                                                                                          	 0.000991247	 200       	 0         	 0         	 9.20053   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000906874	 100       	 0.551345  	 0         	 2.20538   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 57)   	 0.000770093	 100       	 37.0085   	 0         	 8.51845   	 4.34451   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00075478	 200       	 0         	 0         	 10.5991   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000754309	 100       	 33.1429   	 0         	 7.9543    	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000753899	 100       	 33.1609   	 0         	 7.95863   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00069018	 100       	 36.2224   	 0         	 8.69338   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 57, k: 57)   	 0.000636601	 100       	 51.0367   	 0         	 11.246    	 4.53822   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 57)                 	 0.000569631	 100       	 0         	 0         	 15.0273   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000503344	 100       	 0         	 0         	 7.94685   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000487025	 100       	 0         	 0         	 8.21313   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000441781	 100       	 1.13178   	 0         	 13.5814   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000410927	 100       	 0         	 0         	 9.73409   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000404764	 100       	 0         	 0         	 9.8823    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000381194	 100       	 0.655834  	 0         	 10.4933   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 57)                                                                                 	 0.000353183	 100       	 0.806947  	 0         	 12.9112   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00031837	 100       	 0.78525   	 0         	 12.564    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2850, m: 0, k: 50)  	 5.11e-06  	 100       	 0         	 0         	 22309.2   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.59343   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.59338   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.80755   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.80621   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.67392   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.0941    	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.07473   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.81584   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.785773  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.523141  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.300419  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.279375  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.108172  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.101401  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0827725 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0599568 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0462311 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0450621 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0437686 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0411887 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0381736 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0253797 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0249932 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00471813	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00326453	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00170961	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00142103	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00105275	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000906874	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000441781	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22463648933760 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22463417149440 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22463215822976 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22463014496512 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22462813170048 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22462611843584 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22462410517120 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22462209190656 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22462007864192 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22461806537728 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22461605211264 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22461403884800 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22461202558336 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22461001231872 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22460799905408 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22460598578944 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22460397252480 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22460195926016 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22459994599552 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22459793273088 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22459591946624 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22459390620160 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22459189293696 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22458987967232 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22458786640768 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22458585314304 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22458383987840 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22458182661376 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22457981334912 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22457780008448 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22457578681984 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22457377355520 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22457176024960 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22456974698496 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22456773372032 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22456572045568 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22456370719104 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22456169392640 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22455968066176 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22455766739712 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22455565413248 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22455364086784 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22455162760320 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22454961433856 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22454760107392 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22454558780928 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22454357454464 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22454156128000 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22453954801536 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22453753475072 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22453552148608 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22453350822144 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22453149495680 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22452948169216 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22452746842752 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22452545516288 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22452344189824 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22452142863360 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22451941536896 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22451740210432 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22451538883968 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22451337557504 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22451136231040 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22463543273216 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22463536682752 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 108, m: 108)                                                               	 0.963348  	 700       	 8.54325   	 0         	 0.204038  	 41.8708   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5400, cols: 108, reductionFactor: 37, colBlockingSize: 12)                 	 0.705686  	 600       	 110       	 0         	 4.0462    	 27.186    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5400, r: 108, r2: 108, leftOrthog: 1)      	 0.266247  	 600       	 283.882   	 0         	 31.963    	 8.88158   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5400, cols: 58, reductionFactor: 37, colBlockingSize: 12)                  	 0.253927  	 700       	 102.861   	 0         	 6.98138   	 14.7336   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 108, reductionFactor: 37, colBlockingSize: 12)                 	 0.0951522 	 100       	 62.9478   	 0         	 2.36811   	 26.5814   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5400, Xcols: 58, r: 58, streamingCols: 0)                   	 0.0933153 	 700       	 136.268   	 0         	 37.6922   	 3.61529   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 108, r1_: 108, n: 50, r2: 108)        	 0.0886401 	 600       	 852.693   	 0         	 63.794    	 13.3663   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 58, Qr2: 108)      	 0.0861724 	 700       	 0         	 0         	 66.3767   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 108)                                                                	 0.0543106 	 100       	 4.284     	 0         	 0.196647  	 21.7853   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 58, m: 50, k: 2500)   	 0.0434021 	 800       	 267.268   	 0         	 40.2414   	 6.64163   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 58, m: 58)                                                                  	 0.0414144 	 800       	 5.02527   	 0         	 1.56854   	 3.20379   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.040271  	 100       	 2.89704   	 0         	 0.149984  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, n: 50, r2left: 50, r2right: 58)                	 0.0396108 	 700       	 0         	 0         	 88.5578   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2900, m: 50, k: 58) 	 0.0373561 	 700       	 315.183   	 0         	 47.3861   	 6.65138   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5400, m: 58)                                                         	 0.0349056 	 700       	 0         	 0         	 100.495   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 58, m: 5400)                                                                  	 0.0316452 	 700       	 0         	 0         	 110.849   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 58, reductionFactor: 37, colBlockingSize: 12)                  	 0.0298622 	 100       	 57.8477   	 0         	 3.97463   	 14.5542   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0291406 	 100       	 95.1583   	 0         	 7.48097   	 12.7201   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 58, m: 2500, k: 50)	 0.0249844 	 800       	 464.29    	 0         	 69.9061   	 6.64163   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2900, m: 58, k: 58) 	 0.0234816 	 700       	 581.64    	 0         	 81.0285   	 7.17822   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 108, r2: 108, leftOrthog: 1)      	 0.0223133 	 100       	 261.368   	 0         	 29.8773   	 8.74806   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 58, n: 50, r2: 58)                                                                                         	 0.0212085 	 700       	 0         	 0         	 88.825    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 108, r1_: 108, n: 50, r2: 50)         	 0.0177104 	 100       	 329.297   	 0         	 24.9193   	 13.2146   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5400, r: 50, r2: 50, leftOrthog: 1)        	 0.0161358 	 100       	 167.33    	 0         	 40.407    	 4.1411    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 108, reductionFactor: 37, colBlockingSize: 12)                   	 0.00968556	 100       	 12.3681   	 0         	 1.40944   	 8.77523   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 108, r1_: 50, n: 50, r2: 108)         	 0.00938342	 100       	 621.522   	 0         	 73.2015   	 8.49057   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 58, r: 58, streamingCols: 0)                   	 0.00903849	 100       	 93.0466   	 0         	 25.8169   	 3.6041    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2900, m: 50, k: 50) 	 0.00600654	 100       	 241.403   	 0         	 38.9575   	 6.19658   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 58)                                                         	 0.00534181	 100       	 0         	 0         	 43.431    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 58, m: 2500)                                                                  	 0.00457253	 100       	 0         	 0         	 50.7378   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00432764	 100       	 3.8512    	 0         	 1.39568   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 58, n: 50, r2left: 50, r2right: 0)                 	 0.00420292	 100       	 0         	 0         	 55.1998   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 58, n: 50, r2: 50)                                                                                         	 0.00391941	 100       	 0         	 0         	 59.1926   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00318777	 100       	 8.05443   	 0         	 1.25479   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 108, leftOrthog: 1)         	 0.00263571	 100       	 20.4878   	 0         	 6.4347    	 3.18396   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 58, m: 58, fromLeft: 1)                	 0.00176746	 800       	 0         	 0         	 24.3622   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 58, Qr2: 50)       	 0.00118736	 100       	 0         	 0         	 363.834   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000944607	 100       	 26.466    	 0         	 6.35185   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00092668	 100       	 0.539561  	 0         	 2.15824   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000894205	 100       	 27.9578   	 0         	 6.70987   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 58)                                                                                          	 0.000877353	 200       	 0         	 0         	 10.5773   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 58, k: 58)   	 0.000821668	 100       	 40.9411   	 0         	 8.92234   	 4.58861   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000781427	 200       	 0         	 0         	 10.2377   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 58)   	 0.000770677	 100       	 37.6293   	 0         	 8.6158    	 4.36747   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000707503	 100       	 35.3355   	 0         	 8.48053   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 58)                 	 0.000557438	 100       	 0         	 0         	 15.4995   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000515537	 100       	 0         	 0         	 7.7589    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000467067	 100       	 0         	 0         	 8.56408   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000437345	 100       	 1.14326   	 0         	 13.7191   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000408938	 100       	 0.61134   	 0         	 9.78143   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000404475	 100       	 0         	 0         	 9.88936   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000397725	 100       	 0         	 0         	 10.0572   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 58)                                                                                 	 0.000372852	 100       	 0.777789  	 0         	 12.4446   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000332803	 100       	 0.751195  	 0         	 12.0191   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2900, m: 0, k: 50)  	 5.362e-06 	 100       	 0         	 0         	 21633.7   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.66756   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.66751   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.86077   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.85942   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.71186   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.12664   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.05793   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.840297  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.806669  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.525096  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.307332  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.287445  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.116441  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.102354  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0877643 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0684419 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.045742  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0448382 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0442963 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0406451 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0362177 	 800       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0273022 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.025929  	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00635889	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00325316	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00176746	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00150179	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111459	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00092668	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000437345	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22888456042368 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22888283367424 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22888082040960 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22887880714496 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22887679388032 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22887478061568 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22887276735104 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22887075408640 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22886874082176 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22886672755712 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22886471429248 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22886270102784 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22886068776320 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22885867449856 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22885666123392 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22885464796928 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22885263470464 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22885062144000 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22884860817536 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22884659491072 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22884458164608 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22884256838144 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22884055511680 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22883854185216 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22883652858752 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22883451532288 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22883250205824 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22883048879360 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22882847552896 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22882646226432 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22882444899968 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22882243573504 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22882042242944 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22881840916480 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22881639590016 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22881438263552 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22881236937088 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22881035610624 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22880834284160 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22880632957696 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22880431631232 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22880230304768 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22880028978304 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22879827651840 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22879626325376 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22879424998912 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22879223672448 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22879022345984 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22878821019520 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22878619693056 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22878418366592 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22878217040128 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22878015713664 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22877814387200 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22877613060736 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22877411734272 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22877210407808 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22877009081344 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22876807754880 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22876606428416 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22876405101952 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22876203775488 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22876002449024 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22888178005760 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22888171816704 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 109, m: 109)                                                               	 1.01319   	 700       	 8.35071   	 0         	 0.197605  	 42.2597   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5450, cols: 109, reductionFactor: 37, colBlockingSize: 12)                 	 0.709937  	 600       	 112.407   	 0         	 4.0968    	 27.4377   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5450, r: 109, r2: 109, leftOrthog: 1)      	 0.279786  	 600       	 277.718   	 0         	 30.9822   	 8.96382   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5450, cols: 59, reductionFactor: 37, colBlockingSize: 12)                  	 0.256929  	 700       	 106.169   	 0         	 7.08434   	 14.9864   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 109, reductionFactor: 37, colBlockingSize: 12)                 	 0.0958724 	 100       	 63.6372   	 0         	 2.373     	 26.8173   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 109, r1_: 109, n: 50, r2: 109)        	 0.0940639 	 600       	 826.052   	 0         	 61.234    	 13.4901   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5450, Xcols: 59, r: 59, streamingCols: 0)                   	 0.0934507 	 700       	 142.107   	 0         	 38.6418   	 3.67755   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 59, Qr2: 109)      	 0.090644  	 700       	 0         	 0         	 64.2884   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 109)                                                                	 0.0543791 	 100       	 4.31538   	 0         	 0.19787   	 21.8092   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 59, m: 59)                                                                  	 0.0456766 	 800       	 4.79612   	 0         	 1.47149   	 3.25936   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, n: 50, r2left: 50, r2right: 59)                	 0.0437078 	 700       	 0         	 0         	 82.3963   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 59, m: 50, k: 2500)   	 0.0429457 	 800       	 274.765   	 0         	 41.049    	 6.69359   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0398929 	 100       	 2.92449   	 0         	 0.151405  	 19.3157   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 59, m: 5450)                                                                  	 0.0370679 	 700       	 0         	 0         	 97.1558   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5450, m: 59)                                                         	 0.0356478 	 700       	 0         	 0         	 101.026   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2950, m: 50, k: 59) 	 0.0333363 	 700       	 365.472   	 0         	 54.5111   	 6.70455   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 59, reductionFactor: 37, colBlockingSize: 12)                  	 0.0312093 	 100       	 57.2759   	 0         	 3.87015   	 14.7994   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0292778 	 100       	 95.5896   	 0         	 7.51424   	 12.7211   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 59, m: 2500, k: 50)	 0.0250193 	 800       	 471.637   	 0         	 70.4609   	 6.69359   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2950, m: 59, k: 59) 	 0.0244163 	 700       	 588.81    	 0         	 80.637    	 7.30198   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 109, r2: 109, leftOrthog: 1)      	 0.0218875 	 100       	 271.41    	 0         	 30.7485   	 8.82677   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 59, n: 50, r2: 59)                                                                                         	 0.0218425 	 700       	 0         	 0         	 89.2464   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5450, r: 50, r2: 50, leftOrthog: 1)        	 0.0162811 	 100       	 167.372   	 0         	 40.415    	 4.14134   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 109, reductionFactor: 37, colBlockingSize: 12)                   	 0.0100594 	 100       	 12.1301   	 0         	 1.3783    	 8.80078   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 59, r: 59, streamingCols: 0)                   	 0.00911037	 100       	 95.523    	 0         	 26.0574   	 3.66587   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 109, r1_: 50, n: 50, r2: 109)         	 0.0090869 	 100       	 653.743   	 0         	 76.7699   	 8.51562   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 109, r1_: 109, n: 50, r2: 50)         	 0.00820104	 100       	 724.359   	 0         	 54.323    	 13.3343   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2950, m: 50, k: 50) 	 0.00527585	 100       	 279.576   	 0         	 45.1112   	 6.19748   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 59, m: 2500)                                                                  	 0.00448524	 100       	 0         	 0         	 52.6171   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00439935	 100       	 3.78842   	 0         	 1.37293   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 59)                                                         	 0.00430897	 100       	 0         	 0         	 54.7695   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00356191	 100       	 7.2084    	 0         	 1.12299   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 59, n: 50, r2left: 50, r2right: 0)                 	 0.00350236	 100       	 0         	 0         	 67.3832   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 109, leftOrthog: 1)         	 0.00267663	 100       	 20.3614   	 0         	 6.38115   	 3.19087   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 59, n: 50, r2: 50)                                                                                         	 0.00188979	 100       	 0         	 0         	 124.882   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 59, m: 59, fromLeft: 1)                	 0.00186957	 800       	 0         	 0         	 23.8326   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 59, Qr2: 50)       	 0.00123596	 100       	 0         	 0         	 352.761   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 59)                                                                                          	 0.000854558	 200       	 0         	 0         	 11.0466   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000853488	 100       	 29.2916   	 0         	 7.02998   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000817996	 100       	 0.61125   	 0         	 2.445     	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 59)   	 0.000774969	 100       	 38.066    	 0         	 8.67131   	 4.38988   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 59, k: 59)   	 0.000753365	 100       	 46.206    	 0         	 9.96171   	 4.63836   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000752814	 100       	 33.2087   	 0         	 7.9701    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000742786	 200       	 0         	 0         	 10.7703   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00070852	 100       	 35.2848   	 0         	 8.46836   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 59)                 	 0.000568636	 100       	 0         	 0         	 15.3349   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000515856	 100       	 0         	 0         	 7.7541    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000477867	 100       	 0         	 0         	 8.37053   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000438174	 100       	 1.1411    	 0         	 13.6932   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000426395	 100       	 0         	 0         	 9.38097   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000410031	 100       	 0.60971   	 0         	 9.75536   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.00040657	 100       	 0         	 0         	 9.8384    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 59)                                                                                 	 0.00036884	 100       	 0.799805  	 0         	 12.7969   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000329362	 100       	 0.759043  	 0         	 12.1447   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 2950, m: 0, k: 50)  	 5.35e-06  	 100       	 0         	 0         	 22056.1   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.73534   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.73529   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.91273   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.91149   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.75948   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.13685   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.10746   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.845896  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.822492  	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.5392    	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.320631  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.292174  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.112105  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.102561  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0923064 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0645621 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.050076  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0482566 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0437992 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0415531 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0403633 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0258454 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0257278 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0051458 	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0035458 	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00350684	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00186957	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110823	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000817996	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000438174	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22424852326272 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22424628226048 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22424426899584 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22424225573120 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22424024246656 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22423822920192 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22423621593728 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22423420267264 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22423218940800 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22423017614336 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22422816287872 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22422614961408 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22422413634944 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22422212308480 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22422010982016 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22421809655552 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22421608329088 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22421407002624 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22421205676160 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22421004349696 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22420803023232 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22420601696768 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22420400370304 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22420199043840 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22419997717376 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22419796390912 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22419595064448 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22419393737984 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22419192411520 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22418991085056 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22418789758592 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22418588432128 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22418387101568 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22418185775104 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22417984448640 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22417783122176 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22417581795712 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22417380469248 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22417179142784 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22416977816320 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22416776489856 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22416575163392 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22416373836928 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22416172510464 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22415971184000 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22415769857536 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22415568531072 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22415367204608 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22415165878144 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22414964551680 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22414763225216 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22414561898752 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22414360572288 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22414159245824 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22413957919360 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22413756592896 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22413555266432 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22413353939968 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22413152613504 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22412951287040 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22412749960576 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22412548634112 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22412347307648 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22424746665728 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22424740075264 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 110, m: 110)                                                               	 0.997797  	 700       	 8.71507   	 0         	 0.204346  	 42.6485   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 110, reductionFactor: 37, colBlockingSize: 12)                 	 0.730483  	 600       	 112.28    	 0         	 4.05496   	 27.6895   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.283006  	 700       	 100.596   	 0         	 6.60113   	 15.2392   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5500, r: 110, r2: 110, leftOrthog: 1)      	 0.270622  	 600       	 295.098   	 0         	 32.6217   	 9.04605   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 60, Qr2: 110)      	 0.102984  	 700       	 0         	 0         	 57.6401   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 110, reductionFactor: 37, colBlockingSize: 12)                 	 0.0959519 	 100       	 64.7566   	 0         	 2.3937    	 27.0529   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 110, r1_: 110, n: 50, r2: 110)        	 0.0956341 	 600       	 835.058   	 0         	 61.3388   	 13.6139   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5500, Xcols: 60, r: 60, streamingCols: 0)                   	 0.0951355 	 700       	 145.687   	 0         	 38.9558   	 3.7398    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 60, m: 5500)                                                                  	 0.0578434 	 700       	 0         	 0         	 63.8967   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 110)                                                                	 0.0551489 	 100       	 4.29141   	 0         	 0.196559  	 21.8327   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5500, m: 60)                                                         	 0.0550092 	 700       	 0         	 0         	 67.1888   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0515402 	 100       	 2.2636    	 0         	 0.11719   	 19.3157   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 60, m: 60)                                                                  	 0.0471078 	 800       	 4.89091   	 0         	 1.47543   	 3.31492   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, n: 50, r2left: 50, r2right: 60)                	 0.0424402 	 700       	 0         	 0         	 87.0872   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 60, m: 50, k: 2500)   	 0.0388601 	 800       	 308.8     	 0         	 45.7847   	 6.7446    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3000, m: 60, k: 60) 	 0.0355395 	 700       	 425.442   	 0         	 57.2928   	 7.42574   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3000, m: 50, k: 60) 	 0.0349646 	 700       	 360.364   	 0         	 53.3339   	 6.75676   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 60, reductionFactor: 37, colBlockingSize: 12)                  	 0.0323876 	 100       	 57.079    	 0         	 3.79405   	 15.0443   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0300552 	 100       	 93.9714   	 0         	 7.38642   	 12.7222   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 60, m: 2500, k: 50)	 0.0246315 	 800       	 487.182   	 0         	 72.2328   	 6.7446    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 60, n: 50, r2: 60)                                                                                         	 0.0216351 	 700       	 0         	 0         	 93.1819   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 110, r2: 110, leftOrthog: 1)      	 0.0214576 	 100       	 281.952   	 0         	 31.6606   	 8.90544   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5500, r: 50, r2: 50, leftOrthog: 1)        	 0.0167103 	 100       	 164.569   	 0         	 39.736    	 4.14157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 110, reductionFactor: 37, colBlockingSize: 12)                   	 0.0103631 	 100       	 11.9916   	 0         	 1.35866   	 8.82601   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 110, r1_: 50, n: 50, r2: 110)         	 0.00975923	 100       	 619.926   	 0         	 72.5877   	 8.54037   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 60, r: 60, streamingCols: 0)                   	 0.00949133	 100       	 94.8233   	 0         	 25.4379   	 3.72763   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 110, r1_: 110, n: 50, r2: 50)         	 0.00809396	 100       	 747.471   	 0         	 55.5575   	 13.454    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 60)                                                         	 0.00695069	 100       	 0         	 0         	 34.5289   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3000, m: 50, k: 50) 	 0.00563608	 100       	 266.142   	 0         	 42.9376   	 6.19835   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 60, m: 2500)                                                                  	 0.00543668	 100       	 0         	 0         	 44.1446   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00473547	 100       	 3.51952   	 0         	 1.27548   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 60, n: 50, r2left: 50, r2right: 0)                 	 0.00421775	 100       	 0         	 0         	 56.9024   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00309597	 100       	 8.29325   	 0         	 1.292     	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 110, leftOrthog: 1)         	 0.00263945	 100       	 20.8377   	 0         	 6.5165    	 3.19767   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 60, m: 60, fromLeft: 1)                	 0.00192371	 800       	 0         	 0         	 23.9538   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 60, n: 50, r2: 50)                                                                                         	 0.00187   	 100       	 0         	 0         	 128.343   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 60, Qr2: 50)       	 0.00121125	 100       	 0         	 0         	 363.26    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000882008	 100       	 0.566888  	 0         	 2.26755   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 60)                                                                                          	 0.000877131	 200       	 0         	 0         	 10.9448   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000824685	 100       	 30.3146   	 0         	 7.27551   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 60, k: 60)   	 0.000810656	 100       	 44.4085   	 0         	 9.47381   	 4.6875    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 60)   	 0.000800351	 100       	 37.4836   	 0         	 8.49627   	 4.41176   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000774597	 200       	 0         	 0         	 10.328    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000756787	 100       	 33.0344   	 0         	 7.92825   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000681554	 100       	 36.6809   	 0         	 8.80341   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 60)                 	 0.000571617	 100       	 0         	 0         	 15.3949   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000513226	 100       	 0         	 0         	 7.79384   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000498842	 100       	 0         	 0         	 8.01857   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000441123	 100       	 1.13347   	 0         	 13.6016   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000426405	 100       	 0         	 0         	 9.38075   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000419615	 100       	 0         	 0         	 9.53255   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000391233	 100       	 0.639005  	 0         	 10.2241   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 60)                                                                                 	 0.00035661	 100       	 0.841255  	 0         	 13.4601   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00033909	 100       	 0.737267  	 0         	 11.7963   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3000, m: 0, k: 50)  	 6.23e-06  	 100       	 0         	 0         	 19261.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.9071    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.90705   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.98393   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.9826    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.80615   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.18534   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.10449   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.923053  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.867485  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.61664   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.318934  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.31143   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.114244  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.104627  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.104622  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0777575 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0632801 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0623795 	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0518432 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0477284 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0396848 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0256701 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.025313  	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00690332	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00422579	 5200      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00363337	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00192371	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108693	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000882008	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000441123	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22938124478336 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22937943926784 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22937742600320 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22937541273856 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22937339947392 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22937138620928 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22936937294464 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22936735968000 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22936534641536 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22936333315072 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22936131988608 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22935930662144 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22935729335680 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22935528009216 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22935326682752 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22935125356288 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22934924029824 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22934722703360 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22934521376896 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22934320050432 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22934118723968 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22933917397504 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22933716071040 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22933514744576 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22933313418112 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22933112091648 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22932910765184 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22932709438720 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22932508112256 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22932306785792 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22932105459328 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22931904132864 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22931702802304 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22931501475840 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22931300149376 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22931098822912 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22930897496448 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22930696169984 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22930494843520 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22930293517056 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22930092190592 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22929890864128 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22929689537664 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22929488211200 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22929286884736 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22929085558272 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22928884231808 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22928682905344 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22928481578880 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22928280252416 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22928078925952 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22927877599488 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22927676273024 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22927474946560 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22927273620096 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22927072293632 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22926870967168 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22926669640704 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22926468314240 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22926266987776 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22926065661312 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22925864334848 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22925663008384 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22938018817792 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22937839064832 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 111, m: 111)                                                               	 1.04291   	 700       	 8.5676    	 0         	 0.199073  	 43.0374   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5550, cols: 111, reductionFactor: 37, colBlockingSize: 12)                 	 0.741976  	 600       	 113.583   	 0         	 4.06506   	 27.9412   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5550, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.288159  	 700       	 103.046   	 0         	 6.65159   	 15.4919   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5550, r: 111, r2: 111, leftOrthog: 1)      	 0.279355  	 600       	 293.741   	 0         	 32.1792   	 9.12829   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5550, Xcols: 61, r: 61, streamingCols: 0)                   	 0.0972623 	 700       	 148.63    	 0         	 39.092    	 3.80205   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 111, reductionFactor: 37, colBlockingSize: 12)                 	 0.0971615 	 100       	 65.1184   	 0         	 2.3863    	 27.2884   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 111, r1_: 111, n: 50, r2: 111)        	 0.0961626 	 600       	 853.324   	 0         	 62.1158   	 13.7376   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 61, Qr2: 111)      	 0.0952266 	 700       	 0         	 0         	 63.4881   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 111)                                                                	 0.0570287 	 100       	 4.18502   	 0         	 0.191482  	 21.8559   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 61, m: 61)                                                                  	 0.0477684 	 800       	 5.06845   	 0         	 1.50379   	 3.37046   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, n: 50, r2left: 50, r2right: 61)                	 0.0453525 	 700       	 0         	 0         	 83.6064   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 61, m: 5550)                                                                  	 0.04448   	 700       	 0         	 0         	 85.2463   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0411622 	 100       	 2.83432   	 0         	 0.146737  	 19.3157   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5550, m: 61)                                                         	 0.0408081 	 700       	 0         	 0         	 92.9169   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 61, m: 50, k: 2500)   	 0.0405532 	 800       	 300.84    	 0         	 44.2757   	 6.79469   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3050, m: 50, k: 61) 	 0.0343308 	 700       	 379.353   	 0         	 55.7214   	 6.80804   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 61, reductionFactor: 37, colBlockingSize: 12)                  	 0.0324778 	 100       	 58.8334   	 0         	 3.84806   	 15.2891   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.030507  	 100       	 93.4213   	 0         	 7.34259   	 12.7232   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 61, m: 2500, k: 50)	 0.0257404 	 800       	 473.963   	 0         	 69.7549   	 6.79469   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3050, m: 61, k: 61) 	 0.0247136 	 700       	 642.913   	 0         	 85.1596   	 7.5495    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 61, n: 50, r2: 61)                                                                                         	 0.0219795 	 700       	 0         	 0         	 94.8046   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 111, r2: 111, leftOrthog: 1)      	 0.0216542 	 100       	 284.494   	 0         	 31.6665   	 8.98407   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5550, r: 50, r2: 50, leftOrthog: 1)        	 0.016535  	 100       	 167.826   	 0         	 40.5201   	 4.14179   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 111, reductionFactor: 37, colBlockingSize: 12)                   	 0.0115246 	 100       	 10.98     	 0         	 1.24054   	 8.85093   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 111, r1_: 50, n: 50, r2: 111)         	 0.00980843	 100       	 628.082   	 0         	 73.3328   	 8.56481   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 61, r: 61, streamingCols: 0)                   	 0.00955741	 100       	 97.3328   	 0         	 25.6857   	 3.78938   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 111, r1_: 111, n: 50, r2: 50)         	 0.00829107	 100       	 743.029   	 0         	 54.7405   	 13.5737   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3050, m: 50, k: 50) 	 0.00519018	 100       	 293.824   	 0         	 47.3972   	 6.19919   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 61, m: 2500)                                                                  	 0.00463187	 100       	 0         	 0         	 52.6785   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00459053	 100       	 3.63065   	 0         	 1.31575   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 61)                                                         	 0.00340129	 100       	 0         	 0         	 71.7375   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00293515	 100       	 8.74767   	 0         	 1.36279   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 111, leftOrthog: 1)         	 0.00268064	 100       	 20.704    	 0         	 6.46115   	 3.20439   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 61, m: 61, fromLeft: 1)                	 0.00201771	 800       	 0         	 0         	 23.6054   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 61, n: 50, r2: 50)                                                                                         	 0.00197551	 100       	 0         	 0         	 123.513   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 61, n: 50, r2left: 50, r2right: 0)                 	 0.00163114	 100       	 0         	 0         	 149.588   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 61, Qr2: 50)       	 0.00124047	 100       	 0         	 0         	 357.929   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000928003	 100       	 0.538791  	 0         	 2.15517   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 61)                                                                                          	 0.000883701	 200       	 0         	 0         	 11.0445   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000840816	 100       	 29.733    	 0         	 7.13593   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000823463	 200       	 0         	 0         	 9.71507   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 61)   	 0.000818316	 100       	 37.2717   	 0         	 8.40751   	 4.43314   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 61, k: 61)   	 0.000806094	 100       	 46.1609   	 0         	 9.74675   	 4.73602   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000773807	 100       	 32.3078   	 0         	 7.75387   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000661611	 100       	 37.7866   	 0         	 9.06877   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 61)                 	 0.000551096	 100       	 0         	 0         	 16.1133   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00053524	 100       	 0         	 0         	 7.47328   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000525508	 100       	 0         	 0         	 7.61168   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000456025	 100       	 0         	 0         	 8.77145   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000454905	 100       	 1.09913   	 0         	 13.1896   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000398116	 100       	 0.627958  	 0         	 10.0473   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000373353	 100       	 0         	 0         	 10.7137   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 61)                                                                                 	 0.000352989	 100       	 0.86405   	 0         	 13.8248   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000347633	 100       	 0.719149  	 0         	 11.5064   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3050, m: 0, k: 50)  	 5.53e-06  	 100       	 0         	 0         	 22061.5   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.92368   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.92364   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.04028   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.03891   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.87088   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.20474   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.1411    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.883291  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.881812  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.590742  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.324157  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.320225  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.115036  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.10682   	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0969231 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0658645 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.052359  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0491119 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0480602 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0445827 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.041394  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.026402  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0261974 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0094277 	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00380273	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00361172	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00201771	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109874	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000928003	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000454905	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22795063842688 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22794867828736 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22794666502272 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22794465175808 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22794263849344 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22794062522880 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22793861196416 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22793659869952 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22793458543488 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22793257217024 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22793055890560 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22792854564096 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22792653237632 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22792451911168 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22792250584704 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22792049258240 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22791847931776 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22791646605312 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22791445278848 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22791243952384 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22791042625920 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22790841299456 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22790639972992 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22790438646528 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22790237320064 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22790035993600 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22789834667136 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22789633340672 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22789432014208 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22789230687744 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22789029361280 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22788828034816 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22788626704256 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22788425377792 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22788224051328 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22788022724864 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22787821398400 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22787620071936 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22787418745472 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22787217419008 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22787016092544 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22786814766080 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22786613439616 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22786412113152 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22786210786688 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22786009460224 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22785808133760 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22785606807296 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22785405480832 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22785204154368 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22785002827904 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22784801501440 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22784600174976 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22784398848512 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22784197522048 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22783996195584 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22783794869120 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22783593542656 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22783392216192 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22783190889728 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22782989563264 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22782788236800 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22782586910336 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22794958182144 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22794951591680 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 112, m: 112)                                                               	 1.01817   	 700       	 9.01503   	 0         	 0.207594  	 43.4263   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5600, cols: 112, reductionFactor: 37, colBlockingSize: 12)                 	 0.740231  	 600       	 116.955   	 0         	 4.1484    	 28.1929   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5600, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.294923  	 700       	 104.948   	 0         	 6.66562   	 15.7446   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5600, r: 112, r2: 112, leftOrthog: 1)      	 0.293091  	 600       	 287.609   	 0         	 31.2261   	 9.21053   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 112, reductionFactor: 37, colBlockingSize: 12)                 	 0.0992937 	 100       	 64.8733   	 0         	 2.357     	 27.5237   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5600, Xcols: 62, r: 62, streamingCols: 0)                   	 0.0991669 	 700       	 151.951   	 0         	 39.3216   	 3.8643    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 62, Qr2: 112)      	 0.0951512 	 700       	 0         	 0         	 64.7037   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 112, r1_: 112, n: 50, r2: 112)        	 0.0932423 	 600       	 904.05    	 0         	 65.2207   	 13.8614   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 112)                                                                	 0.0562028 	 100       	 4.28211   	 0         	 0.19572   	 21.8788   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, n: 50, r2left: 50, r2right: 62)                	 0.0473369 	 700       	 0         	 0         	 82.1482   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 62, m: 62)                                                                  	 0.0470814 	 800       	 5.3995    	 0         	 1.57603   	 3.42602   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0408721 	 100       	 2.85443   	 0         	 0.147778  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 62, m: 50, k: 2500)   	 0.0407182 	 800       	 304.532   	 0         	 44.497    	 6.84387   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5600, m: 62)                                                         	 0.0394086 	 700       	 0         	 0         	 98.6748   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3100, m: 50, k: 62) 	 0.0364153 	 700       	 369.46    	 0         	 53.8696   	 6.85841   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 62, reductionFactor: 37, colBlockingSize: 12)                  	 0.0336503 	 100       	 58.6606   	 0         	 3.77635   	 15.5337   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 62, m: 5600)                                                                  	 0.0324369 	 700       	 0         	 0         	 119.883   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0296841 	 100       	 96.8758   	 0         	 7.61349   	 12.7242   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3100, m: 62, k: 62) 	 0.0260419 	 700       	 640.619   	 0         	 83.4872   	 7.67327   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 62, m: 2500, k: 50)	 0.0258995 	 800       	 478.774   	 0         	 69.9566   	 6.84387   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 62, n: 50, r2: 62)                                                                                         	 0.0231451 	 700       	 0         	 0         	 93.0063   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 112, r2: 112, leftOrthog: 1)      	 0.0229584 	 100       	 273.19    	 0         	 30.1445   	 9.06266   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5600, r: 50, r2: 50, leftOrthog: 1)        	 0.0148528 	 100       	 188.517   	 0         	 45.5134   	 4.14201   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 112, reductionFactor: 37, colBlockingSize: 12)                   	 0.0109712 	 100       	 11.7426   	 0         	 1.32302   	 8.87554   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 112, r1_: 50, n: 50, r2: 112)         	 0.0108224 	 100       	 579.539   	 0         	 67.4749   	 8.58896   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 62, r: 62, streamingCols: 0)                   	 0.0097826 	 100       	 98.2356   	 0         	 25.5083   	 3.85112   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 112, r1_: 112, n: 50, r2: 50)         	 0.00905632	 100       	 692.555   	 0         	 50.5763   	 13.6933   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3100, m: 50, k: 50) 	 0.00559245	 100       	 277.16    	 0         	 44.7032   	 6.2       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 62, m: 2500)                                                                  	 0.00454917	 100       	 0         	 0         	 54.5154   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00454606	 100       	 3.66616   	 0         	 1.32862   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 62)                                                         	 0.00381032	 100       	 0         	 0         	 65.0864   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 62, n: 50, r2left: 50, r2right: 0)                 	 0.00376506	 100       	 0         	 0         	 65.8688   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00375191	 100       	 6.84336   	 0         	 1.06612   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 112, leftOrthog: 1)         	 0.00296599	 100       	 18.8807   	 0         	 5.87999   	 3.21101   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 62, n: 50, r2: 50)                                                                                         	 0.00204103	 100       	 0         	 0         	 121.507   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 62, m: 62, fromLeft: 1)                	 0.00203907	 800       	 0         	 0         	 24.1302   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 62, Qr2: 50)       	 0.00144656	 100       	 0         	 0         	 309.7     	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 62)                                                                                          	 0.000872703	 200       	 0         	 0         	 11.367    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 62, k: 62)   	 0.000841906	 100       	 45.6583   	 0         	 9.54406   	 4.78395   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 62)   	 0.000827334	 100       	 37.4698   	 0         	 8.41256   	 4.45402   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000811058	 100       	 0.616479  	 0         	 2.46591   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000796081	 100       	 31.4038   	 0         	 7.53692   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000773447	 200       	 0         	 0         	 10.3433   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000718071	 100       	 34.8155   	 0         	 8.35572   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000638748	 100       	 39.1391   	 0         	 9.39338   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 62)                 	 0.000554536	 100       	 0         	 0         	 16.1577   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000527228	 100       	 0         	 0         	 7.58685   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000519864	 100       	 0         	 0         	 7.69432   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00043084	 100       	 0.580262  	 0         	 9.28419   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000428777	 100       	 1.16611   	 0         	 13.9933   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000428497	 100       	 0         	 0         	 9.33495   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000395432	 100       	 0         	 0         	 10.1155   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 62)                                                                                 	 0.00037542	 100       	 0.825742  	 0         	 13.2119   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000328029	 100       	 0.762128  	 0         	 12.194    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3100, m: 0, k: 50)  	 5.341e-06 	 100       	 0         	 0         	 23216.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 3.86516   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 3.86511   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 2.9816    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 2.98037   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.81885   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.21251   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.11525   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.883438  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.880808  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.588237  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.333868  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.332784  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.113839  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.10895   	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0970263 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0697243 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0521763 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0516274 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0436144 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0415143 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0369861 	 800       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0273595 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0265382 	 900       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00662827	 6400      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00317052	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00203907	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00162724	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113429	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000811058	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000428777	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23191272839040 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23191078561792 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23190877235328 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23190675908864 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23190474582400 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23190273255936 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23190071929472 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23189870603008 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23189669276544 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23189467950080 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23189266623616 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23189065297152 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23188863970688 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23188662644224 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23188461317760 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23188259991296 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23188058664832 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23187857338368 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23187656011904 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23187454685440 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23187253358976 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23187052032512 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23186850706048 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23186649379584 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23186448053120 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23186246726656 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23186045400192 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23185844073728 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23185642747264 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23185441420800 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23185240094336 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23185038767872 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23184837437312 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23184636110848 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23184434784384 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23184233457920 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23184032131456 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23183830804992 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23183629478528 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23183428152064 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23183226825600 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23183025499136 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23182824172672 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23182622846208 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23182421519744 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23182220193280 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23182018866816 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23181817540352 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23181616213888 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23181414887424 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23181213560960 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23181012234496 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23180810908032 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23180609581568 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23180408255104 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23180206928640 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23180005602176 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23179804275712 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23179602949248 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23179401622784 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23179200296320 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23178998969856 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23178797643392 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23191167178496 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23191160588032 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 113, m: 113)                                                               	 1.08048   	 700       	 8.72472   	 0         	 0.199125  	 43.8152   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5650, cols: 113, reductionFactor: 37, colBlockingSize: 12)                 	 0.751682  	 600       	 118.286   	 0         	 4.15847   	 28.4446   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5650, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.296207  	 700       	 108.854   	 0         	 6.80453   	 15.9973   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5650, r: 113, r2: 113, leftOrthog: 1)      	 0.289146  	 600       	 299.412   	 0         	 32.2199   	 9.29276   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 113, r1_: 113, n: 50, r2: 113)        	 0.100481  	 600       	 861.593   	 0         	 61.6077   	 13.9851   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5650, Xcols: 63, r: 63, streamingCols: 0)                   	 0.0997548 	 700       	 157.36    	 0         	 40.0758   	 3.92655   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 113, reductionFactor: 37, colBlockingSize: 12)                 	 0.0995638 	 100       	 65.8578   	 0         	 2.3725    	 27.7588   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 63, Qr2: 113)      	 0.0975806 	 700       	 0         	 0         	 64.2407   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 113)                                                                	 0.0552358 	 100       	 4.39328   	 0         	 0.200594  	 21.9013   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 63, m: 63)                                                                  	 0.0529723 	 800       	 5.03503   	 0         	 1.44619   	 3.48158   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, n: 50, r2left: 50, r2right: 63)                	 0.0513486 	 700       	 0         	 0         	 77.6388   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 63, m: 5650)                                                                  	 0.0437341 	 700       	 0         	 0         	 91.1564   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 63, m: 50, k: 2500)   	 0.0426699 	 800       	 295.29    	 0         	 42.8442   	 6.89218   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0392983 	 100       	 2.96875   	 0         	 0.153696  	 19.3157   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5650, m: 63)                                                         	 0.0382276 	 700       	 0         	 0         	 104.287   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 63, reductionFactor: 37, colBlockingSize: 12)                  	 0.0370013 	 100       	 55.0828   	 0         	 3.4911    	 15.7781   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3150, m: 50, k: 63) 	 0.0365233 	 700       	 380.346   	 0         	 55.0596   	 6.90789   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0304822 	 100       	 95.1818   	 0         	 7.47977   	 12.7252   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3150, m: 63, k: 63) 	 0.0280945 	 700       	 623.014   	 0         	 79.9041   	 7.79703   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 63, m: 2500, k: 50)	 0.0264425 	 800       	 476.506   	 0         	 69.1372   	 6.89218   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 63, n: 50, r2: 63)                                                                                         	 0.0228935 	 700       	 0         	 0         	 97.0859   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 113, r2: 113, leftOrthog: 1)      	 0.0221981 	 100       	 287.615   	 0         	 31.4636   	 9.14121   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5650, r: 50, r2: 50, leftOrthog: 1)        	 0.0158325 	 100       	 178.43    	 0         	 43.0758   	 4.14223   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 113, reductionFactor: 37, colBlockingSize: 12)                   	 0.0102427 	 100       	 12.8034   	 0         	 1.4386    	 8.89985   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 113, r1_: 50, n: 50, r2: 113)         	 0.0102298 	 100       	 624.107   	 0         	 72.4627   	 8.6128    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 63, r: 63, streamingCols: 0)                   	 0.0100454 	 100       	 98.7765   	 0         	 25.2441   	 3.91285   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 113, r1_: 113, n: 50, r2: 50)         	 0.00832489	 100       	 766.918   	 0         	 55.5221   	 13.8128   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3150, m: 50, k: 50) 	 0.00562415	 100       	 280.042   	 0         	 45.1624   	 6.20079   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 63, m: 2500)                                                                  	 0.00492134	 100       	 0         	 0         	 51.2055   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 63, n: 50, r2left: 50, r2right: 0)                 	 0.00480847	 100       	 0         	 0         	 52.4075   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 63)                                                         	 0.00469423	 100       	 0         	 0         	 53.6829   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00441941	 100       	 3.77123   	 0         	 1.3667    	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00344622	 100       	 7.45038   	 0         	 1.16069   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 113, leftOrthog: 1)         	 0.0026802 	 100       	 21.0805   	 0         	 6.55176   	 3.21754   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 63, m: 63, fromLeft: 1)                	 0.0021364 	 800       	 0         	 0         	 23.7798   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 63, n: 50, r2: 50)                                                                                         	 0.00205561	 100       	 0         	 0         	 122.591   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 63, Qr2: 50)       	 0.00126506	 100       	 0         	 0         	 357.297   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 63)                                                                                          	 0.000900919	 200       	 0         	 0         	 11.1886   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 63, k: 63)   	 0.000841798	 100       	 47.1491   	 0         	 9.75911   	 4.83129   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000839553	 100       	 29.7778   	 0         	 7.14666   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000836796	 100       	 0.597517  	 0         	 2.39007   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 63)   	 0.000814652	 100       	 38.6668   	 0         	 8.64173   	 4.47443   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000756374	 200       	 0         	 0         	 10.5768   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00074329	 100       	 33.6342   	 0         	 8.07222   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000672772	 100       	 37.1597   	 0         	 8.91833   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 63)                 	 0.000583634	 100       	 0         	 0         	 15.4892   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000538257	 100       	 0         	 0         	 7.43139   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000485871	 100       	 0         	 0         	 8.23264   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000429063	 100       	 1.16533   	 0         	 13.984    	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000425258	 100       	 0         	 0         	 9.40605   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.00040547	 100       	 0         	 0         	 9.86509   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000390601	 100       	 0.640039  	 0         	 10.2406   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 63)                                                                                 	 0.000354666	 100       	 0.88816   	 0         	 14.2106   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000345352	 100       	 0.723899  	 0         	 11.5824   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3150, m: 0, k: 50)  	 5.27e-06  	 100       	 0         	 0         	 23908.9   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.0709    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.07085   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.15418   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.15291   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.9723    	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.22863   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.17502   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.916601  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.892637  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.610971  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.337095  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.329857  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.119779  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.1098    	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.0992709 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0719037 	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0573917 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0572265 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0486554 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0435095 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0433273 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0271447 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0271153 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00895417	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0034991 	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0021364 	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00171448	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109062	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000836796	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000429063	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22949913347968 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22949687977984 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22949486651520 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22949285325056 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22949083998592 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22948882672128 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22948681345664 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22948480019200 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22948278692736 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22948077366272 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22947876039808 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22947674713344 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22947473386880 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22947272060416 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22947070733952 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22946869407488 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22946668081024 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22946466754560 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22946265428096 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22946064101632 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22945862775168 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22945661448704 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22945460122240 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22945258795776 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22945057469312 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22944856142848 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22944654816384 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22944453489920 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22944252163456 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22944050836992 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22943849510528 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22943648184064 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22943446853504 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22943245527040 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22943044200576 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22942842874112 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22942641547648 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22942440221184 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22942238894720 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22942037568256 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22941836241792 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22941634915328 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22941433588864 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22941232262400 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22941030935936 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22940829609472 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22940628283008 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22940426956544 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22940225630080 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22940024303616 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22939822977152 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22939621650688 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22939420324224 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22939218997760 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22939017671296 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22938816344832 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22938615018368 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22938413691904 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22938212365440 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22938011038976 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22937809712512 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22937608386048 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22937407059584 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22949807687424 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22949801096960 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 114, m: 114)                                                               	 1.0812    	 700       	 8.95249   	 0         	 0.202526  	 44.2041   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5700, cols: 114, reductionFactor: 37, colBlockingSize: 12)                 	 0.772235  	 600       	 118.222   	 0         	 4.11976   	 28.6963   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5700, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.306584  	 700       	 109.495   	 0         	 6.73818   	 16.25     
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5700, r: 114, r2: 114, leftOrthog: 1)      	 0.294013  	 600       	 302.343   	 0         	 32.2499   	 9.375     
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 114, r1_: 114, n: 50, r2: 114)        	 0.104678  	 600       	 849.204   	 0         	 60.1892   	 14.1089   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 114, reductionFactor: 37, colBlockingSize: 12)                 	 0.104501  	 100       	 63.8621   	 0         	 2.2813    	 27.9938   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5700, Xcols: 64, r: 64, streamingCols: 0)                   	 0.100469  	 700       	 162.668   	 0         	 40.7811   	 3.9888    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 64, Qr2: 114)      	 0.0990436 	 700       	 0         	 0         	 64.4339   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 64, m: 5700)                                                                  	 0.0599764 	 700       	 0         	 0         	 68.1228   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 114)                                                                	 0.0567478 	 100       	 4.31147   	 0         	 0.196659  	 21.9235   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 64, m: 64)                                                                  	 0.0488921 	 800       	 5.71911   	 0         	 1.61688   	 3.53712   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, n: 50, r2left: 50, r2right: 64)                	 0.0483516 	 700       	 0         	 0         	 84.501    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3200, m: 50, k: 64) 	 0.0448426 	 700       	 319.696   	 0         	 45.9563   	 6.95652   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5700, m: 64)                                                         	 0.0437898 	 700       	 0         	 0         	 93.304    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0401474 	 100       	 2.90595   	 0         	 0.150445  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 64, m: 50, k: 2500)   	 0.0379616 	 800       	 337.183   	 0         	 48.588    	 6.93963   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 64, reductionFactor: 37, colBlockingSize: 12)                  	 0.0353162 	 100       	 59.5576   	 0         	 3.71718   	 16.0223   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3200, m: 64, k: 64) 	 0.0327749 	 700       	 559.883   	 0         	 70.6852   	 7.92079   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0294367 	 100       	 99.4347   	 0         	 7.81338   	 12.7262   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 64, m: 2500, k: 50)	 0.0251604 	 800       	 508.735   	 0         	 73.3088   	 6.93963   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 64, n: 50, r2: 64)                                                                                         	 0.025142  	 700       	 0         	 0         	 91.2321   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 114, r2: 114, leftOrthog: 1)      	 0.0250006 	 100       	 259.914   	 0         	 28.1911   	 9.21972   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5700, r: 50, r2: 50, leftOrthog: 1)        	 0.0157952 	 100       	 180.434   	 0         	 43.5575   	 4.14244   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 114, reductionFactor: 37, colBlockingSize: 12)                   	 0.0112689 	 100       	 11.8443   	 0         	 1.32726   	 8.92386   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 114, r1_: 50, n: 50, r2: 114)         	 0.0105878 	 100       	 613.727   	 0         	 71.0631   	 8.63636   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 64, r: 64, streamingCols: 0)                   	 0.0101349 	 100       	 101.037   	 0         	 25.4209   	 3.97456   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 114, r1_: 114, n: 50, r2: 50)         	 0.00877686	 100       	 740.356   	 0         	 53.1393   	 13.9323   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3200, m: 50, k: 50) 	 0.00626348	 100       	 255.449   	 0         	 41.1911   	 6.20155   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 64, m: 2500)                                                                  	 0.0054615 	 100       	 0         	 0         	 46.8736   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 64)                                                         	 0.00463177	 100       	 0         	 0         	 55.2705   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00447131	 100       	 3.72745   	 0         	 1.35083   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 64, n: 50, r2left: 50, r2right: 0)                 	 0.00444216	 100       	 0         	 0         	 57.6296   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0031662 	 100       	 8.10931   	 0         	 1.26335   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 114, leftOrthog: 1)         	 0.00271026	 100       	 21.0312   	 0         	 6.52337   	 3.22398   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 64, m: 64, fromLeft: 1)                	 0.00256444	 800       	 0         	 0         	 20.4445   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 64, n: 50, r2: 50)                                                                                         	 0.00200839	 100       	 0         	 0         	 127.465   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 64, Qr2: 50)       	 0.00130776	 100       	 0         	 0         	 348.688   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00108062	 100       	 0.462698  	 0         	 1.85079   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 64, k: 64)   	 0.000911945	 100       	 44.915    	 0         	 9.20757   	 4.87805   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 64)                                                                                          	 0.000869013	 200       	 0         	 0         	 11.7835   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000820137	 100       	 30.4827   	 0         	 7.31585   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000814981	 100       	 30.6756   	 0         	 7.36213   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000809917	 200       	 0         	 0         	 9.87756   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 64)   	 0.000805847	 100       	 39.7098   	 0         	 8.83542   	 4.49438   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000710969	 100       	 35.1633   	 0         	 8.43919   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 64)                 	 0.000585316	 100       	 0         	 0         	 15.5813   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000530427	 100       	 0         	 0         	 7.54109   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000489064	 100       	 0         	 0         	 8.17889   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000432726	 100       	 0         	 0         	 9.24372   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000429338	 100       	 1.16458   	 0         	 13.975    	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000389  	 100       	 0.642674  	 0         	 10.2828   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000380693	 100       	 0         	 0         	 10.5072   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 64)                                                                                 	 0.000368052	 100       	 0.869442  	 0         	 13.9111   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00032914	 100       	 0.759555  	 0         	 12.1529   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3200, m: 0, k: 50)  	 5.53e-06  	 100       	 0         	 0         	 23146.5   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.12521   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.12516   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.17204   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.17052   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 2.99565   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.26251   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.17809   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.953055  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.91807   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.639006  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.345564  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.337519  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.124862  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.110604  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.100784  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0856042 	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0654379 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0538682 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0533634 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0488022 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0387766 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0293598 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0258714 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00851998	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00341687	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00277165	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00256444	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108619	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00108062	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000429338	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22813345298304 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22813121439744 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22812920113280 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22812718786816 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22812517460352 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22812316133888 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22812114807424 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22811913480960 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22811712154496 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22811510828032 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22811309501568 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22811108175104 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22810906848640 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22810705522176 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22810504195712 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22810302869248 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22810101542784 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22809900216320 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22809698889856 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22809497563392 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22809296236928 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22809094910464 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22808893584000 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22808692257536 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22808490931072 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22808289604608 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22808088278144 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22807886951680 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22807685625216 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22807484298752 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22807282972288 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22807081645824 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22806880315264 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22806678988800 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22806477662336 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22806276335872 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22806075009408 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22805873682944 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22805672356480 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22805471030016 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22805269703552 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22805068377088 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22804867050624 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22804665724160 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22804464397696 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22804263071232 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22804061744768 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22803860418304 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22803659091840 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22803457765376 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22803256438912 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22803055112448 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22802853785984 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22802652459520 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22802451133056 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22802249806592 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22802048480128 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22801847153664 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22801645827200 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22801444500736 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22801243174272 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22801041847808 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22800840521344 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22813239637760 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22813233047296 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 115, m: 115)                                                               	 1.14091   	 700       	 8.70917   	 0         	 0.195304  	 44.593    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5750, cols: 115, reductionFactor: 37, colBlockingSize: 12)                 	 0.768555  	 600       	 121.942   	 0         	 4.21242   	 28.9481   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5750, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.312177  	 700       	 111.893   	 0         	 6.78032   	 16.5026   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5750, r: 115, r2: 115, leftOrthog: 1)      	 0.303144  	 600       	 301.021   	 0         	 31.8297   	 9.45724   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 115, r1_: 115, n: 50, r2: 115)        	 0.103823  	 600       	 878.922   	 0         	 61.7538   	 14.2327   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 115, reductionFactor: 37, colBlockingSize: 12)                 	 0.102668  	 100       	 66.1471   	 0         	 2.34327   	 28.2285   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5750, Xcols: 65, r: 65, streamingCols: 0)                   	 0.102397  	 700       	 166.076   	 0         	 40.9958   	 4.05105   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 65, Qr2: 115)      	 0.100509  	 700       	 0         	 0         	 64.6307   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, n: 50, r2left: 50, r2right: 65)                	 0.0604285 	 700       	 0         	 0         	 69.272    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 115)                                                                	 0.0562537 	 100       	 4.38489   	 0         	 0.199809  	 21.9454   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 65, m: 65)                                                                  	 0.0532732 	 800       	 5.49869   	 0         	 1.53053   	 3.59268   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5750, m: 65)                                                         	 0.0484285 	 700       	 0         	 0         	 86.4367   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 65, m: 50, k: 2500)   	 0.0477862 	 800       	 272.045   	 0         	 38.9401   	 6.98624   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 65, m: 5750)                                                                  	 0.0464109 	 700       	 0         	 0         	 90.1943   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3250, m: 50, k: 65) 	 0.041847  	 700       	 353.371   	 0         	 50.4505   	 7.00431   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0401385 	 100       	 2.90661   	 0         	 0.150479  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 65, m: 2500, k: 50)	 0.0394601 	 800       	 329.447   	 0         	 47.1565   	 6.98624   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 65, reductionFactor: 37, colBlockingSize: 12)                  	 0.036961  	 100       	 58.6996   	 0         	 3.60867   	 16.2663   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.029918  	 100       	 98.6933   	 0         	 7.75454   	 12.7272   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3250, m: 65, k: 65) 	 0.0293972 	 700       	 653.931   	 0         	 81.2886   	 8.04455   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 115, r2: 115, leftOrthog: 1)      	 0.0271328 	 100       	 243.709   	 0         	 26.2103   	 9.29819   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 65, n: 50, r2: 65)                                                                                         	 0.0253602 	 700       	 0         	 0         	 93.2958   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5750, r: 50, r2: 50, leftOrthog: 1)        	 0.0148357 	 100       	 193.789   	 0         	 46.779    	 4.14265   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 115, reductionFactor: 37, colBlockingSize: 12)                   	 0.0116934 	 100       	 11.6155   	 0         	 1.29817   	 8.94758   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 115, r1_: 50, n: 50, r2: 115)         	 0.0106143 	 100       	 622.979   	 0         	 71.9405   	 8.65964   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 65, r: 65, streamingCols: 0)                   	 0.0105375 	 100       	 100.237   	 0         	 24.8341   	 4.03626   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 115, r1_: 115, n: 50, r2: 50)         	 0.0087814 	 100       	 753.012   	 0         	 53.5883   	 14.0518   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3250, m: 50, k: 50) 	 0.0058294 	 100       	 278.76    	 0         	 44.9446   	 6.20229   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00558398	 100       	 4.59809   	 0         	 0.716335  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 65, n: 50, r2left: 50, r2right: 0)                 	 0.00542783	 100       	 0         	 0         	 47.9012   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 65, m: 2500)                                                                  	 0.00509755	 100       	 0         	 0         	 51.0049   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 65)                                                         	 0.0047838 	 100       	 0         	 0         	 54.3501   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00454892	 100       	 3.66386   	 0         	 1.32779   	 2.75937   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 115, leftOrthog: 1)         	 0.00284987	 100       	 20.1764   	 0         	 6.2459    	 3.23034   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 65, m: 65, fromLeft: 1)                	 0.00231428	 800       	 0         	 0         	 23.3679   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 65, n: 50, r2: 50)                                                                                         	 0.00224162	 100       	 0         	 0         	 115.988   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 65, Qr2: 50)       	 0.00139246	 100       	 0         	 0         	 330.352   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 65)                                                                                          	 0.000863766	 200       	 0         	 0         	 12.0403   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 65)   	 0.000855362	 100       	 37.9956   	 0         	 8.41749   	 4.51389   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 65, k: 65)   	 0.00082424	 100       	 51.2593   	 0         	 10.4096   	 4.92424   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000821735	 100       	 0.608469  	 0         	 2.43387   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00081323	 100       	 30.7416   	 0         	 7.37799   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000776034	 200       	 0         	 0         	 10.3088   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000763667	 100       	 32.7368   	 0         	 7.85683   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000648912	 100       	 38.526    	 0         	 9.24625   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 65)                 	 0.000574081	 100       	 0         	 0         	 16.0256   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000533512	 100       	 0         	 0         	 7.49749   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000514066	 100       	 0         	 0         	 7.7811    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000429636	 100       	 1.16378   	 0         	 13.9653   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000427011	 100       	 0         	 0         	 9.36744   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000410451	 100       	 0.609086  	 0         	 9.74538   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000389705	 100       	 0         	 0         	 10.2642   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 65)                                                                                 	 0.000371051	 100       	 0.87589   	 0         	 14.0142   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000345772	 100       	 0.72302   	 0         	 11.5683   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3250, m: 0, k: 50)  	 5.6e-06   	 100       	 0         	 0         	 23214.3   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.24578   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.24573   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.24966   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.24841   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.06006   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.26756   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.2373    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 0.995994  	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.913527  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.646085  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.355211  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.347962  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.123983  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.112934  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.102329  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0787588 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0669445 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0578221 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.053602  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0515085 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0485994 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.040109  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0297751 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00740426	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00558023	 5200      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.003573  	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00231428	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112727	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000821735	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000429636	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22504407041920 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22504219338752 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22504018012288 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22503816685824 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22503615359360 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22503414032896 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22503212706432 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22503011379968 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22502810053504 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22502608727040 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22502407400576 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22502206074112 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22502004747648 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22501803421184 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22501602094720 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22501400768256 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22501199441792 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22500998115328 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22500796788864 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22500595462400 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22500394135936 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22500192809472 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22499991483008 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22499790156544 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22499588830080 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22499387503616 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22499186177152 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22498984850688 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22498783524224 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22498582197760 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22498380871296 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22498179544832 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22497978214272 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22497776887808 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22497575561344 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22497374234880 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22497172908416 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22496971581952 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22496770255488 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22496568929024 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22496367602560 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22496166276096 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22495964949632 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22495763623168 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22495562296704 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22495360970240 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22495159643776 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22494958317312 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22494756990848 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22494555664384 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22494354337920 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22494153011456 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22493951684992 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22493750358528 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22493549032064 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22493347705600 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22493146379136 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22492945052672 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22492743726208 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22492542399744 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22492341073280 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22492139746816 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22491938420352 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22504301381376 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22504294790912 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 116, m: 116)                                                               	 1.10194   	 700       	 9.25447   	 0         	 0.205738  	 44.9819   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5800, cols: 116, reductionFactor: 37, colBlockingSize: 12)                 	 0.777305  	 600       	 123.742   	 0         	 4.23776   	 29.1998   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5800, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.316669  	 700       	 114.715   	 0         	 6.84649   	 16.7553   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5800, r: 116, r2: 116, leftOrthog: 1)      	 0.302466  	 600       	 309.634   	 0         	 32.4581   	 9.53947   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5800, Xcols: 66, r: 66, streamingCols: 0)                   	 0.10743   	 700       	 164.622   	 0         	 40.0219   	 4.1133    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 66, Qr2: 116)      	 0.107022  	 700       	 0         	 0         	 61.7757   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 116, reductionFactor: 37, colBlockingSize: 12)                 	 0.105995  	 100       	 65.1904   	 0         	 2.29035   	 28.4631   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 116, r1_: 116, n: 50, r2: 116)        	 0.103419  	 600       	 905.577   	 0         	 63.0781   	 14.3564   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, n: 50, r2left: 50, r2right: 66)                	 0.0601914 	 700       	 0         	 0         	 71.2288   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 116)                                                                	 0.0561416 	 100       	 4.42928   	 0         	 0.201633  	 21.967    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 66, m: 66)                                                                  	 0.0537161 	 800       	 5.70895   	 0         	 1.56485   	 3.64824   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 66, m: 50, k: 2500)   	 0.0466223 	 800       	 283.127   	 0         	 40.2623   	 7.03205   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5800, m: 66)                                                         	 0.0460546 	 700       	 0         	 0         	 93.093    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 66, m: 5800)                                                                  	 0.0453659 	 700       	 0         	 0         	 94.5062   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3300, m: 50, k: 66) 	 0.0429121 	 700       	 355.284   	 0         	 50.3858   	 7.05128   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0424572 	 100       	 2.74786   	 0         	 0.142261  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 66, m: 2500, k: 50)	 0.0392786 	 800       	 336.061   	 0         	 47.7899   	 7.03205   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 66, reductionFactor: 37, colBlockingSize: 12)                  	 0.0364687 	 100       	 61.3366   	 0         	 3.7151    	 16.5101   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3300, m: 66, k: 66) 	 0.0302072 	 700       	 666.223   	 0         	 81.5619   	 8.16832   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.029159  	 100       	 102.143   	 0         	 8.02497   	 12.7281   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 66, n: 50, r2: 66)                                                                                         	 0.0261438 	 700       	 0         	 0         	 93.3056   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 116, r2: 116, leftOrthog: 1)      	 0.0234008 	 100       	 287.512   	 0         	 30.6626   	 9.37662   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5800, r: 50, r2: 50, leftOrthog: 1)        	 0.0163332 	 100       	 177.552   	 0         	 42.8574   	 4.14286   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 116, reductionFactor: 37, colBlockingSize: 12)                   	 0.0117907 	 100       	 11.7208   	 0         	 1.30652   	 8.97102   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 116, r1_: 50, n: 50, r2: 116)         	 0.0109023 	 100       	 617.118   	 0         	 71.0749   	 8.68263   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 66, r: 66, streamingCols: 0)                   	 0.0105761 	 100       	 102.968   	 0         	 25.1267   	 4.09795   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 116, r1_: 116, n: 50, r2: 50)         	 0.00831115	 100       	 809.515   	 0         	 57.1238   	 14.1712   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3300, m: 50, k: 50) 	 0.00652343	 100       	 252.934   	 0         	 40.7761   	 6.20301   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 66, n: 50, r2left: 50, r2right: 0)                 	 0.00509648	 100       	 0         	 0         	 51.8004   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 66, m: 2500)                                                                  	 0.00504841	 100       	 0         	 0         	 52.2937   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 66)                                                         	 0.00484403	 100       	 0         	 0         	 54.5001   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00445893	 100       	 3.73781   	 0         	 1.35459   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00337376	 100       	 7.6104    	 0         	 1.18562   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 116, leftOrthog: 1)         	 0.0027143 	 100       	 21.3683   	 0         	 6.60208   	 3.23661   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 66, m: 66, fromLeft: 1)                	 0.00237375	 800       	 0         	 0         	 23.4889   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 66, n: 50, r2: 50)                                                                                         	 0.00211109	 100       	 0         	 0         	 125.054   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 66, Qr2: 50)       	 0.00138148	 100       	 0         	 0         	 335.871   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 66)                                                                                          	 0.000855803	 200       	 0         	 0         	 12.3393   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000838938	 100       	 29.7996   	 0         	 7.1519    	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000828825	 100       	 0.603264  	 0         	 2.41305   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 66)   	 0.000807606	 100       	 40.8615   	 0         	 9.0143    	 4.53297   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 66, k: 66)   	 0.00080094	 100       	 54.3861   	 0         	 10.9431   	 4.96988   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000784863	 200       	 0         	 0         	 10.1929   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000738283	 100       	 33.8624   	 0         	 8.12696   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00072883	 100       	 34.3016   	 0         	 8.23237   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 66)                 	 0.000554162	 100       	 0         	 0         	 16.746    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000525744	 100       	 0         	 0         	 7.60827   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000522847	 100       	 0         	 0         	 7.65042   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000447984	 100       	 0         	 0         	 8.92889   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000438962	 100       	 0         	 0         	 9.11241   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000419571	 100       	 1.19169   	 0         	 14.3003   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000384764	 100       	 0.649749  	 0         	 10.396    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 66)                                                                                 	 0.00036144	 100       	 0.913015  	 0         	 14.6082   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000323032	 100       	 0.773917  	 0         	 12.3827   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3300, m: 0, k: 50)  	 5.36e-06  	 100       	 0         	 0         	 24626.9   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.2081    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.20804   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.20444   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.20318   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.01515   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.28076   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.20054   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.00353   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.92488   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.650828  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.356956  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.344915  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.123371  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.118006  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.108842  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0812566 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0663649 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.058175  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0513466 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0504143 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0474612 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0400075 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0304213 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00677913	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00371336	 5200      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00345501	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00237375	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106924	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000828825	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000419571	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23036206536576 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23035989977088 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23035788650624 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23035587324160 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23035385997696 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23035184671232 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23034983344768 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23034782018304 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23034580691840 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23034379365376 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23034178038912 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23033976712448 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23033775385984 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23033574059520 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23033372733056 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23033171406592 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23032970080128 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23032768753664 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23032567427200 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23032366100736 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23032164774272 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23031963447808 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23031762121344 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23031560794880 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23031359468416 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23031158141952 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23030956815488 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23030755489024 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23030554162560 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23030352836096 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23030151509632 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23029950183168 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23029748852608 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23029547526144 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23029346199680 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23029144873216 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23028943546752 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23028742220288 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23028540893824 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23028339567360 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23028138240896 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23027936914432 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23027735587968 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23027534261504 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23027332935040 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23027131608576 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23026930282112 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23026728955648 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23026527629184 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23026326302720 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23026124976256 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23025923649792 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23025722323328 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23025520996864 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23025319670400 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23025118343936 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23024917017472 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23024715691008 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23024514364544 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23024313038080 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23024111711616 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23023910385152 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23023709058688 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23036100876032 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23036094285568 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 117, m: 117)                                                               	 1.1629    	 700       	 8.9981    	 0         	 0.198324  	 45.3707   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5850, cols: 117, reductionFactor: 37, colBlockingSize: 12)                 	 0.785708  	 600       	 125.611   	 0         	 4.26503   	 29.4515   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5850, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.323136  	 700       	 116.85    	 0         	 6.87035   	 17.0079   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5850, r: 117, r2: 117, leftOrthog: 1)      	 0.30899   	 600       	 311.002   	 0         	 32.323    	 9.62171   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5850, Xcols: 67, r: 67, streamingCols: 0)                   	 0.112862  	 700       	 162.875   	 0         	 39.007    	 4.17554   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 67, Qr2: 117)      	 0.107839  	 700       	 0         	 0         	 62.3875   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 117, r1_: 117, n: 50, r2: 117)        	 0.106499  	 600       	 902.323   	 0         	 62.3143   	 14.4802   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 117, reductionFactor: 37, colBlockingSize: 12)                 	 0.103436  	 100       	 67.9597   	 0         	 2.36814   	 28.6975   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, n: 50, r2left: 50, r2right: 67)                	 0.0622918 	 700       	 0         	 0         	 70.4722   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3350, m: 50, k: 67) 	 0.0601514 	 700       	 261.199   	 0         	 36.8018   	 7.09746   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 67, m: 5850)                                                                  	 0.0599501 	 700       	 0         	 0         	 73.2249   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 117)                                                                	 0.0595504 	 100       	 4.20932   	 0         	 0.191435  	 21.9883   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 67, m: 67)                                                                  	 0.0550161 	 800       	 5.83125   	 0         	 1.5744    	 3.70378   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 67, m: 50, k: 2500)   	 0.0470904 	 800       	 284.559   	 0         	 40.2087   	 7.07707   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5850, m: 67)                                                         	 0.0439748 	 700       	 0         	 0         	 99.8263   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0411059 	 100       	 2.83819   	 0         	 0.146937  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 67, m: 2500, k: 50)	 0.0400836 	 800       	 334.302   	 0         	 47.2373   	 7.07707   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 67, reductionFactor: 37, colBlockingSize: 12)                  	 0.0381059 	 100       	 60.4936   	 0         	 3.61076   	 16.7537   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3350, m: 67, k: 67) 	 0.0336851 	 700       	 625.007   	 0         	 75.374    	 8.29208   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0295518 	 100       	 101.654   	 0         	 7.98597   	 12.729    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 67, n: 50, r2: 67)                                                                                         	 0.0262684 	 700       	 0         	 0         	 95.6984   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 117, r2: 117, leftOrthog: 1)      	 0.0259435 	 100       	 263.823   	 0         	 27.903    	 9.455     
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5850, r: 50, r2: 50, leftOrthog: 1)        	 0.0151526 	 100       	 193.036   	 0         	 46.5926   	 4.14306   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 117, reductionFactor: 37, colBlockingSize: 12)                   	 0.0119817 	 100       	 11.7337   	 0         	 1.30459   	 8.99417   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 117, r1_: 50, n: 50, r2: 117)         	 0.0113928 	 100       	 600.774   	 0         	 69.012    	 8.70536   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 67, r: 67, streamingCols: 0)                   	 0.0108166 	 100       	 103.753   	 0         	 24.9428   	 4.15963   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 117, r1_: 117, n: 50, r2: 50)         	 0.0086248 	 100       	 793.584   	 0         	 55.5319   	 14.2906   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3350, m: 50, k: 50) 	 0.00632362	 100       	 264.88    	 0         	 42.6971   	 6.2037    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 67, m: 2500)                                                                  	 0.00570101	 100       	 0         	 0         	 47.0092   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 67)                                                         	 0.00522487	 100       	 0         	 0         	 51.2932   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 67, n: 50, r2left: 50, r2right: 0)                 	 0.00514981	 100       	 0         	 0         	 52.0408   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00444518	 100       	 3.74937   	 0         	 1.35878   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0034367 	 100       	 7.47102   	 0         	 1.16391   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 117, leftOrthog: 1)         	 0.00267355	 100       	 21.881    	 0         	 6.74758   	 3.24279   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 67, m: 67, fromLeft: 1)                	 0.00240865	 800       	 0         	 0         	 23.8554   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 67, n: 50, r2: 50)                                                                                         	 0.00204226	 100       	 0         	 0         	 131.227   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 67, Qr2: 50)       	 0.00136946	 100       	 0         	 0         	 341.74    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000917792	 100       	 0.544786  	 0         	 2.17914   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 67)   	 0.000893802	 100       	 37.4803   	 0         	 8.23449   	 4.55163   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 67)                                                                                          	 0.000863192	 200       	 0         	 0         	 12.419    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000826593	 100       	 30.2446   	 0         	 7.25871   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00077081	 200       	 0         	 0         	 10.3787   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00073888	 100       	 33.835    	 0         	 8.1204    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 67, k: 67)   	 0.000705898	 100       	 63.5928   	 0         	 12.6806   	 5.01497   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000694771	 100       	 35.9831   	 0         	 8.63594   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 67)                 	 0.000537291	 100       	 0         	 0         	 17.4207   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000502897	 100       	 0         	 0         	 7.95392   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000469619	 100       	 0         	 0         	 8.51754   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000446794	 100       	 0         	 0         	 8.95267   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000417844	 100       	 1.19662   	 0         	 14.3594   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000415087	 100       	 0         	 0         	 9.63653   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000386721	 100       	 0.646461  	 0         	 10.3434   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 67)                                                                                 	 0.000358237	 100       	 0.935135  	 0         	 14.9622   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000322796	 100       	 0.774483  	 0         	 12.3917   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3350, m: 0, k: 50)  	 5.52e-06  	 100       	 0         	 0         	 24275.4   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.33854   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.3385    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.28096   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.27962   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.08601   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.29536   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.26355   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.05747   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.931327  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.678993  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.365137  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.35276   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.127256  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.123679  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.109656  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.101765  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0684485 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0656511 	 800       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0594613 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0496147 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0479169 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0407783 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0304475 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00733681	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00549323	 5200      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00334055	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00240865	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00106775	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000917792	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000417844	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22912178321280 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22911972796416 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22911771469952 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22911570143488 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22911368817024 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22911167490560 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22910966164096 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22910764837632 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22910563511168 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22910362184704 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22910160858240 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22909959531776 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22909758205312 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22909556878848 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22909355552384 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22909154225920 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22908952899456 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22908751572992 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22908550246528 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22908348920064 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22908147593600 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22907946267136 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22907744940672 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22907543614208 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22907342287744 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22907140961280 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22906939634816 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22906738308352 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22906536981888 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22906335655424 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22906134328960 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22905933002496 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22905731671936 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22905530345472 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22905329019008 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22905127692544 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22904926366080 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22904725039616 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22904523713152 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22904322386688 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22904121060224 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22903919733760 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22903718407296 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22903517080832 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22903315754368 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22903114427904 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22902913101440 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22902711774976 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22902510448512 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22902309122048 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22902107795584 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22901906469120 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22901705142656 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22901503816192 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22901302489728 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22901101163264 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22900899836800 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22900698510336 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22900497183872 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22900295857408 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22900094530944 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22899893204480 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22899691878016 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22912072660736 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22912066070272 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 118, m: 118)                                                               	 1.13386   	 700       	 9.46716   	 0         	 0.206889  	 45.7596   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5900, cols: 118, reductionFactor: 37, colBlockingSize: 12)                 	 0.799344  	 600       	 126.662   	 0         	 4.26424   	 29.7032   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5900, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.331317  	 700       	 118.396   	 0         	 6.85934   	 17.2605   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5900, r: 118, r2: 118, leftOrthog: 1)      	 0.306118  	 600       	 322.039   	 0         	 33.1864   	 9.70395   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5900, Xcols: 68, r: 68, streamingCols: 0)                   	 0.115639  	 700       	 165.144   	 0         	 38.9694   	 4.23779   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 118, r1_: 118, n: 50, r2: 118)        	 0.107854  	 600       	 914.028   	 0         	 62.5876   	 14.604    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 68, Qr2: 118)      	 0.105694  	 700       	 0         	 0         	 64.7667   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 118, reductionFactor: 37, colBlockingSize: 12)                 	 0.104846  	 100       	 68.1968   	 0         	 2.35716   	 28.9317   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 68, m: 5900)                                                                  	 0.0650531 	 700       	 0         	 0         	 69.0735   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, n: 50, r2left: 50, r2right: 68)                	 0.0595121 	 700       	 0         	 0         	 75.5046   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 118)                                                                	 0.0585702 	 100       	 4.31391   	 0         	 0.196004  	 22.0093   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 68, m: 68)                                                                  	 0.055252  	 800       	 6.07025   	 0         	 1.61471   	 3.75934   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3400, m: 50, k: 68) 	 0.0533984 	 700       	 303.08    	 0         	 42.4312   	 7.14286   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5900, m: 68)                                                         	 0.0432536 	 700       	 0         	 0         	 103.886   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 68, m: 50, k: 2500)   	 0.0426384 	 800       	 318.961   	 0         	 44.7897   	 7.12131   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 68, reductionFactor: 37, colBlockingSize: 12)                  	 0.0424096 	 100       	 55.9893   	 0         	 3.29404   	 16.9971   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0397764 	 100       	 2.93307   	 0         	 0.151849  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 68, m: 2500, k: 50)	 0.0365483 	 800       	 372.11    	 0         	 52.253    	 7.12131   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3400, m: 68, k: 68) 	 0.0310182 	 700       	 709.59    	 0         	 84.316    	 8.41584   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0288183 	 100       	 105.132   	 0         	 8.25864   	 12.73     
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 68, n: 50, r2: 68)                                                                                         	 0.0260813 	 700       	 0         	 0         	 99.2834   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 118, r2: 118, leftOrthog: 1)      	 0.0234488 	 100       	 296.902   	 0         	 31.1436   	 9.53335   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5900, r: 50, r2: 50, leftOrthog: 1)        	 0.0147316 	 100       	 200.25    	 0         	 48.3316   	 4.14326   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 118, r1_: 50, n: 50, r2: 118)         	 0.0117139 	 100       	 594.337   	 0         	 68.0969   	 8.72781   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 118, reductionFactor: 37, colBlockingSize: 12)                   	 0.0116384 	 100       	 12.2872   	 0         	 1.36266   	 9.01705   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 68, r: 68, streamingCols: 0)                   	 0.0110966 	 100       	 104.176   	 0         	 24.6787   	 4.2213    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 118, r1_: 118, n: 50, r2: 50)         	 0.00882945	 100       	 788.497   	 0         	 54.719    	 14.4099   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3400, m: 50, k: 50) 	 0.00650745	 100       	 261.239   	 0         	 42.1056   	 6.20438   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 68, m: 2500)                                                                  	 0.00595002	 100       	 0         	 0         	 45.7142   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 68)                                                         	 0.00509394	 100       	 0         	 0         	 53.3968   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 68, n: 50, r2left: 50, r2right: 0)                 	 0.0049544 	 100       	 0         	 0         	 54.9007   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00441105	 100       	 3.77838   	 0         	 1.36929   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00324417	 100       	 7.91441   	 0         	 1.23298   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 118, leftOrthog: 1)         	 0.00272068	 100       	 21.6858   	 0         	 6.67481   	 3.2489    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 68, m: 68, fromLeft: 1)                	 0.00254041	 800       	 0         	 0         	 23.2982   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 68, n: 50, r2: 50)                                                                                         	 0.00214085	 100       	 0         	 0         	 127.052   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 68, Qr2: 50)       	 0.00152569	 100       	 0         	 0         	 309.369   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000892998	 100       	 27.9956   	 0         	 6.71894   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 68)                                                                                          	 0.000884835	 200       	 0         	 0         	 12.2961   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 68)   	 0.000874208	 100       	 38.8923   	 0         	 8.51056   	 4.56989   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000841396	 100       	 0.594251  	 0         	 2.377     	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000815934	 200       	 0         	 0         	 9.80471   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000768182	 100       	 32.5444   	 0         	 7.81065   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 68, k: 68)   	 0.000749415	 100       	 61.7015   	 0         	 12.1951   	 5.05952   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000688836	 100       	 36.2931   	 0         	 8.71035   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 68)                 	 0.000594843	 100       	 0         	 0         	 15.8697   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000527862	 100       	 0         	 0         	 7.57774   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000510311	 100       	 0         	 0         	 7.83836   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000438235	 100       	 0         	 0         	 9.12752   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000422043	 100       	 0.592357  	 0         	 9.47771   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000417775	 100       	 1.19682   	 0         	 14.3618   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000414681	 100       	 0         	 0         	 9.64597   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 68)                                                                                 	 0.000365633	 100       	 0.929894  	 0         	 14.8783   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000323557	 100       	 0.772661  	 0         	 12.3626   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3400, m: 0, k: 50)  	 5.27e-06  	 100       	 0         	 0         	 25806.5   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.35735   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.3573    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.30093   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.29968   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.10603   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.32162   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.23221   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.05631   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.945304  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.698751  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.377428  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.347019  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.129166  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.126736  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.107658  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.092553  	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0710031 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0655717 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0596631 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0487622 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0435314 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0372372 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0304508 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00602215	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00386289	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00254041	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00192857	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111123	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000841396	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000417775	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22473741252480 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22473550587904 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22473349261440 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22473147934976 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22472946608512 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22472745282048 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22472543955584 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22472342629120 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22472141302656 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22471939976192 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22471738649728 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22471537323264 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22471335996800 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22471134670336 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22470933343872 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22470732017408 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22470530690944 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22470329364480 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22470128038016 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22469926711552 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22469725385088 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22469524058624 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22469322732160 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22469121405696 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22468920079232 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22468718752768 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22468517426304 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22468316099840 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22468114773376 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22467913446912 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22467712120448 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22467510793984 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22467309463424 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22467108136960 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22466906810496 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22466705484032 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22466504157568 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22466302831104 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22466101504640 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22465900178176 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22465698851712 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22465497525248 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22465296198784 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22465094872320 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22464893545856 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22464692219392 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22464490892928 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22464289566464 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22464088240000 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22463886913536 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22463685587072 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22463484260608 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22463282934144 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22463081607680 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22462880281216 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22462678954752 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22462477628288 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22462276301824 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22462074975360 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22461873648896 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22461672322432 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22461470995968 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22461269669504 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22473635591936 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22473629001472 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 119, m: 119)                                                               	 1.19364   	 700       	 9.22366   	 0         	 0.199869  	 46.1485   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5950, cols: 119, reductionFactor: 37, colBlockingSize: 12)                 	 0.81268   	 600       	 127.778   	 0         	 4.26566   	 29.955    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5950, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.350285  	 700       	 116.28    	 0         	 6.63957   	 17.5131   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5950, r: 119, r2: 119, leftOrthog: 1)      	 0.307026  	 600       	 329.319   	 0         	 33.6515   	 9.78618   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5950, Xcols: 69, r: 69, streamingCols: 0)                   	 0.120571  	 700       	 164.464   	 0         	 38.2471   	 4.30003   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 119, r1_: 119, n: 50, r2: 119)        	 0.112854  	 600       	 895.933   	 0         	 60.8331   	 14.7277   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 119, reductionFactor: 37, colBlockingSize: 12)                 	 0.108534  	 100       	 67.0009   	 0         	 2.29725   	 29.1658   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 69, Qr2: 119)      	 0.107136  	 700       	 0         	 0         	 65.003    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, n: 50, r2left: 50, r2right: 69)                	 0.0644458 	 700       	 0         	 0         	 71.3492   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 69, m: 69)                                                                  	 0.060389  	 800       	 5.80254   	 0         	 1.52102   	 3.8149    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 119)                                                                	 0.0566386 	 100       	 4.49635   	 0         	 0.204101  	 22.03     
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 69, m: 50, k: 2500)   	 0.0506561 	 800       	 272.425   	 0         	 38.0227   	 7.16481   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 69, m: 5950)                                                                  	 0.050656  	 700       	 0         	 0         	 90.7723   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5950, m: 69)                                                         	 0.0493712 	 700       	 0         	 0         	 93.1344   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3450, m: 50, k: 69) 	 0.0451678 	 700       	 368.924   	 0         	 51.3286   	 7.1875    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0417666 	 100       	 2.7933    	 0         	 0.144613  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 69, m: 2500, k: 50)	 0.0411538 	 800       	 335.327   	 0         	 46.802    	 7.16481   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 69, reductionFactor: 37, colBlockingSize: 12)                  	 0.0408403 	 100       	 59.8633   	 0         	 3.47227   	 17.2404   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3450, m: 69, k: 69) 	 0.0342867 	 700       	 670.686   	 0         	 78.5383   	 8.5396    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0292614 	 100       	 104.418   	 0         	 8.20194   	 12.7309   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 69, n: 50, r2: 69)                                                                                         	 0.0270131 	 700       	 0         	 0         	 98.6987   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 119, r2: 119, leftOrthog: 1)      	 0.0232758 	 100       	 304.2     	 0         	 31.6491   	 9.61166   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 5950, r: 50, r2: 50, leftOrthog: 1)        	 0.0162084 	 100       	 183.547   	 0         	 44.298    	 4.14345   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 119, reductionFactor: 37, colBlockingSize: 12)                   	 0.0115553 	 100       	 12.5862   	 0         	 1.39233   	 9.03966   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 69, r: 69, streamingCols: 0)                   	 0.0114798 	 100       	 103.682   	 0         	 24.2081   	 4.28295   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 119, r1_: 50, n: 50, r2: 119)         	 0.0112368 	 100       	 630.119   	 0         	 72.0136   	 8.75      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 119, r1_: 119, n: 50, r2: 50)         	 0.0088076 	 100       	 803.908   	 0         	 55.3305   	 14.5292   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3450, m: 50, k: 50) 	 0.00629814	 100       	 273.89    	 0         	 44.14     	 6.20504   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 69)                                                         	 0.00560143	 100       	 0         	 0         	 49.2731   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 69, n: 50, r2left: 50, r2right: 0)                 	 0.00548754	 100       	 0         	 0         	 50.2958   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 69, m: 2500)                                                                  	 0.00546597	 100       	 0         	 0         	 50.4942   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00468415	 100       	 3.55809   	 0         	 1.28946   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00340867	 100       	 7.53245   	 0         	 1.17348   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 119, leftOrthog: 1)         	 0.00281307	 100       	 21.1513   	 0         	 6.49824   	 3.25492   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 69, m: 69, fromLeft: 1)                	 0.00260634	 800       	 0         	 0         	 23.3817   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 69, n: 50, r2: 50)                                                                                         	 0.0021166 	 100       	 0         	 0         	 130.398   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 69, Qr2: 50)       	 0.00143843	 100       	 0         	 0         	 330.917   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000948903	 100       	 26.3462   	 0         	 6.32309   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 69)                                                                                          	 0.000875216	 200       	 0         	 0         	 12.614    	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000860198	 100       	 0.581262  	 0         	 2.32505   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000852201	 100       	 29.3358   	 0         	 7.04059   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 69)   	 0.000844855	 100       	 40.8354   	 0         	 8.90094   	 4.58777   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.0007624 	 200       	 0         	 0         	 10.4932   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 69, k: 69)   	 0.000755138	 100       	 63.0481   	 0         	 12.3538   	 5.10355   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000710569	 100       	 35.1831   	 0         	 8.44394   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 69)                 	 0.000598235	 100       	 0         	 0         	 15.9135   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000514575	 100       	 0         	 0         	 7.77341   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.00050687	 100       	 0         	 0         	 7.89157   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000427241	 100       	 0         	 0         	 9.3624    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000409557	 100       	 1.22083   	 0         	 14.65     	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000390255	 100       	 0.640607  	 0         	 10.2497   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000370515	 100       	 0         	 0         	 10.7958   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 69)                                                                                 	 0.000360147	 100       	 0.957942  	 0         	 15.3271   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000328505	 100       	 0.761023  	 0         	 12.1764   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3450, m: 0, k: 50)  	 5.47e-06  	 100       	 0         	 0         	 25228.5   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.50414   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.50408   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.41339   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.41211   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.19924   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.35656   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.29204   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.09062   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.962677  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.721241  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.395009  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.349323  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.133847  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.132051  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.109002  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0873582 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0710385 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0650732 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.056122  	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0553432 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0515083 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0418644 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0312819 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00838896	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00393024	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00305954	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00260634	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107891	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000860198	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000409557	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22682295785344 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22682057828352 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22681856501888 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22681655175424 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22681453848960 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22681252522496 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22681051196032 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22680849869568 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22680648543104 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22680447216640 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22680245890176 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22680044563712 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22679843237248 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22679641910784 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22679440584320 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22679239257856 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22679037931392 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22678836604928 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22678635278464 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22678433952000 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22678232625536 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22678031299072 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22677829972608 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22677628646144 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22677427319680 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22677225993216 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22677024666752 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22676823340288 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22676622013824 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22676420687360 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22676219360896 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22676018034432 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22675816703872 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22675615377408 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22675414050944 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22675212724480 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22675011398016 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22674810071552 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22674608745088 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22674407418624 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22674206092160 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22674004765696 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22673803439232 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22673602112768 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22673400786304 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22673199459840 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22672998133376 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22672796806912 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22672595480448 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22672394153984 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22672192827520 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22671991501056 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22671790174592 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22671588848128 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22671387521664 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22671186195200 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22670984868736 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22670783542272 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22670582215808 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22670380889344 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22670179562880 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22669978236416 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22669776909952 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22682190124800 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22682183534336 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 120, m: 120)                                                               	 1.14765   	 700       	 9.83713   	 0         	 0.211381  	 46.5374   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6000, cols: 120, reductionFactor: 37, colBlockingSize: 12)                 	 0.842337  	 600       	 126.413   	 0         	 4.18493   	 30.2067   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6000, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.350373  	 700       	 120.65    	 0         	 6.79116   	 17.7657   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6000, r: 120, r2: 120, leftOrthog: 1)      	 0.33096   	 600       	 313.27    	 0         	 31.7447   	 9.86842   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6000, Xcols: 70, r: 70, streamingCols: 0)                   	 0.121146  	 700       	 169.878   	 0         	 38.9425   	 4.36228   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 120, reductionFactor: 37, colBlockingSize: 12)                 	 0.11061   	 100       	 66.853    	 0         	 2.27394   	 29.3996   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 120, r1_: 120, n: 50, r2: 120)        	 0.108771  	 600       	 953.195   	 0         	 64.1818   	 14.8515   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 70, Qr2: 120)      	 0.0999207 	 700       	 0         	 0         	 70.8962   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 50, r2left: 50, r2right: 70)                	 0.0645535 	 700       	 0         	 0         	 72.8698   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 70, m: 70)                                                                  	 0.059724  	 800       	 6.12594   	 0         	 1.58275   	 3.87045   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 120)                                                                	 0.0570832 	 100       	 4.49636   	 0         	 0.203913  	 22.0504   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 70, m: 50, k: 2500)   	 0.0465302 	 800       	 300.88    	 0         	 41.745    	 7.20758   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6000, m: 70)                                                         	 0.0464004 	 700       	 0         	 0         	 101.379   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3500, m: 50, k: 70) 	 0.045569  	 700       	 376.352   	 0         	 52.0442   	 7.2314    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 70, m: 6000)                                                                  	 0.043063  	 700       	 0         	 0         	 109.235   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 70, reductionFactor: 37, colBlockingSize: 12)                  	 0.0422361 	 100       	 59.5751   	 0         	 3.40751   	 17.4834   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0405214 	 100       	 2.87914   	 0         	 0.149057  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 70, m: 2500, k: 50)	 0.0401214 	 800       	 348.941   	 0         	 48.413    	 7.20758   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3500, m: 70, k: 70) 	 0.0316016 	 700       	 759.771   	 0         	 87.6993   	 8.66337   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.029261  	 100       	 105.296   	 0         	 8.27038   	 12.7317   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 70, n: 50, r2: 70)                                                                                         	 0.0278361 	 700       	 0         	 0         	 98.5769   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 120, r2: 120, leftOrthog: 1)      	 0.0255962 	 100       	 281.291   	 0         	 29.0293   	 9.68992   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6000, r: 50, r2: 50, leftOrthog: 1)        	 0.0180457 	 100       	 166.245   	 0         	 40.1203   	 4.14365   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 120, reductionFactor: 37, colBlockingSize: 12)                   	 0.0125345 	 100       	 11.7988   	 0         	 1.30201   	 9.062     
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 70, r: 70, streamingCols: 0)                   	 0.0113956 	 100       	 107.498   	 0         	 24.7429   	 4.34459   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 120, r1_: 50, n: 50, r2: 120)         	 0.0112968 	 100       	 637.349   	 0         	 72.6577   	 8.77193   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 120, r1_: 120, n: 50, r2: 50)         	 0.00856529	 100       	 840.602   	 0         	 57.3851   	 14.6484   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3500, m: 50, k: 50) 	 0.00670395	 100       	 261.04    	 0         	 42.0647   	 6.20567   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 70, m: 2500)                                                                  	 0.00512573	 100       	 0         	 0         	 54.6263   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00449454	 100       	 3.70819   	 0         	 1.34385   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00448909	 100       	 5.71957   	 0         	 0.891049  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 50, r2left: 50, r2right: 0)                 	 0.00430392	 100       	 0         	 0         	 65.0569   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 70)                                                         	 0.00415549	 100       	 0         	 0         	 67.3807   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 120, leftOrthog: 1)         	 0.00277966	 100       	 21.5854   	 0         	 6.61952   	 3.26087   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 70, m: 70, fromLeft: 1)                	 0.00271793	 800       	 0         	 0         	 23.0764   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 70, n: 50, r2: 50)                                                                                         	 0.00225509	 100       	 0         	 0         	 124.164   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 70, Qr2: 50)       	 0.00142392	 100       	 0         	 0         	 337.096   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 70)                                                                                          	 0.000893262	 200       	 0         	 0         	 12.5383   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000840447	 100       	 29.7461   	 0         	 7.13906   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 70)   	 0.000832315	 100       	 42.0514   	 0         	 9.13116   	 4.60526   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000809598	 100       	 0.61759   	 0         	 2.47036   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000777728	 100       	 32.1449   	 0         	 7.71478   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000764132	 200       	 0         	 0         	 10.4694   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 70, k: 70)   	 0.000752669	 100       	 65.1017   	 0         	 12.6483   	 5.14706   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000652742	 100       	 38.3      	 0         	 9.19199   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 70)                 	 0.000554767	 100       	 0         	 0         	 17.3046   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000543153	 100       	 0         	 0         	 7.36441   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000488575	 100       	 0         	 0         	 8.18707   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000446553	 100       	 0         	 0         	 8.9575    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000407962	 100       	 1.2256    	 0         	 14.7073   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000392103	 100       	 0.637588  	 0         	 10.2014   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000376945	 100       	 0         	 0         	 10.6116   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 70)                                                                                 	 0.000363211	 100       	 0.963627  	 0         	 15.418    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000330111	 100       	 0.757321  	 0         	 12.1171   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3500, m: 0, k: 50)  	 5.17e-06  	 100       	 0         	 0         	 27079.3   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.51379   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.51374   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.44969   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.44847   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.25649   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.39184   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.24526   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.06398   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 0.995358  	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.709193  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.397541  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.377382  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.132541  	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.129411  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.101791  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0854647 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0699007 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0642185 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0509328 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0481887 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0473706 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0407742 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0322918 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.011765  	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00372692	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00271793	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00160082	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108542	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000809598	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000407962	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22532190279552 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22532002408448 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22531801081984 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22531599755520 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22531398429056 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22531197102592 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22530995776128 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22530794449664 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22530593123200 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22530391796736 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22530190470272 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22529989143808 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22529787817344 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22529586490880 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22529385164416 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22529183837952 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22528982511488 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22528781185024 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22528579858560 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22528378532096 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22528177205632 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22527975879168 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22527774552704 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22527573226240 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22527371899776 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22527170573312 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22526969246848 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22526767920384 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22526566593920 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22526365267456 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22526163940992 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22525962614528 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22525761283968 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22525559957504 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22525358631040 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22525157304576 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22524955978112 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22524754651648 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22524553325184 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22524351998720 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22524150672256 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22523949345792 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22523748019328 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22523546692864 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22523345366400 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22523144039936 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22522942713472 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22522741387008 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22522540060544 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22522338734080 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22522137407616 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22521936081152 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22521734754688 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22521533428224 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22521332101760 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22521130775296 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22520929448832 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22520728122368 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22520526795904 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22520325469440 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22520124142976 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22519922816512 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22519721490048 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22532084619008 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22532078028544 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 121, m: 121)                                                               	 1.23189   	 700       	 9.3955    	 0         	 0.200218  	 46.9263   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6050, cols: 121, reductionFactor: 37, colBlockingSize: 12)                 	 0.847468  	 600       	 128.815   	 0         	 4.22921   	 30.4584   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6050, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.353395  	 700       	 124.086   	 0         	 6.88665   	 18.0183   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6050, r: 121, r2: 121, leftOrthog: 1)      	 0.333579  	 600       	 318.646   	 0         	 32.0226   	 9.95066   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6050, Xcols: 71, r: 71, streamingCols: 0)                   	 0.127631  	 700       	 167.268   	 0         	 37.8048   	 4.42452   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 121, r1_: 121, n: 50, r2: 121)        	 0.125864  	 600       	 844.511   	 0         	 56.3938   	 14.9752   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 71, Qr2: 121)      	 0.113366  	 700       	 0         	 0         	 63.5551   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 121, reductionFactor: 37, colBlockingSize: 12)                 	 0.111319  	 100       	 67.5388   	 0         	 2.27915   	 29.6333   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, n: 50, r2left: 50, r2right: 71)                	 0.0693023 	 700       	 0         	 0         	 69.42     	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 71, m: 71)                                                                  	 0.0632341 	 800       	 6.03743   	 0         	 1.5378    	 3.92601   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 121)                                                                	 0.0586537 	 100       	 4.41007   	 0         	 0.199817  	 22.0705   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6050, m: 71)                                                         	 0.0573006 	 700       	 0         	 0         	 83.9601   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 71, m: 6050)                                                                  	 0.052698  	 700       	 0         	 0         	 91.293    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3550, m: 50, k: 71) 	 0.0475544 	 700       	 371.017   	 0         	 51.0018   	 7.27459   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 71, m: 50, k: 2500)   	 0.0474403 	 800       	 299.324   	 0         	 41.2881   	 7.24963   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0428555 	 100       	 2.72232   	 0         	 0.140939  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 71, reductionFactor: 37, colBlockingSize: 12)                  	 0.0412088 	 100       	 62.8173   	 0         	 3.54373   	 17.7263   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3550, m: 71, k: 71) 	 0.0411841 	 700       	 608.336   	 0         	 69.2304   	 8.78713   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 71, m: 2500, k: 50)	 0.0407396 	 800       	 348.556   	 0         	 48.0791   	 7.24963   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.029612  	 100       	 104.915   	 0         	 8.2399    	 12.7326   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 71, n: 50, r2: 71)                                                                                         	 0.0280964 	 700       	 0         	 0         	 100.474   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 121, r2: 121, leftOrthog: 1)      	 0.0270278 	 100       	 270.851   	 0         	 27.7279   	 9.76815   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6050, r: 50, r2: 50, leftOrthog: 1)        	 0.0170943 	 100       	 176.96    	 0         	 42.7044   	 4.14384   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 121, reductionFactor: 37, colBlockingSize: 12)                   	 0.0119944 	 100       	 12.5364   	 0         	 1.38004   	 9.08408   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 121, r1_: 50, n: 50, r2: 121)         	 0.0117981 	 100       	 620.479   	 0         	 70.5603   	 8.7936    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 71, r: 71, streamingCols: 0)                   	 0.0115845 	 100       	 108.787   	 0         	 24.6895   	 4.40622   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 121, r1_: 121, n: 50, r2: 50)         	 0.00930167	 100       	 787.009   	 0         	 53.2929   	 14.7676   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 71)                                                         	 0.00688779	 100       	 0         	 0         	 41.2324   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3550, m: 50, k: 50) 	 0.0064774 	 100       	 274.029   	 0         	 44.1535   	 6.20629   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 71, m: 2500)                                                                  	 0.0057596 	 100       	 0         	 0         	 49.309    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 71, n: 50, r2left: 50, r2right: 0)                 	 0.00573632	 100       	 0         	 0         	 49.5091   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0045161 	 100       	 3.69049   	 0         	 1.33744   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00305521	 100       	 8.40391   	 0         	 1.30924   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 71, m: 71, fromLeft: 1)                	 0.00279336	 800       	 0         	 0         	 23.0993   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 121, leftOrthog: 1)         	 0.00278064	 100       	 21.7576   	 0         	 6.66034   	 3.26674   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 71, n: 50, r2: 50)                                                                                         	 0.00221351	 100       	 0         	 0         	 128.303   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 71, Qr2: 50)       	 0.00144121	 100       	 0         	 0         	 335.83    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000938624	 100       	 26.6347   	 0         	 6.39234   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000931769	 100       	 0.536614  	 0         	 2.14645   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 71)                                                                                          	 0.000870578	 200       	 0         	 0         	 13.0488   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 71)   	 0.000847313	 100       	 41.8972   	 0         	 9.06395   	 4.6224    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000794591	 200       	 0         	 0         	 10.0681   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000733786	 100       	 34.0699   	 0         	 8.17677   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 71, k: 71)   	 0.000730219	 100       	 69.0341   	 0         	 13.3012   	 5.19006   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000690302	 100       	 36.216    	 0         	 8.69185   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 71)                 	 0.000578993	 100       	 0         	 0         	 16.7187   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000539319	 100       	 0         	 0         	 7.41676   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000494796	 100       	 0         	 0         	 8.08414   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000425535	 100       	 0         	 0         	 9.39993   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000423407	 100       	 1.1809    	 0         	 14.1708   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000396836	 100       	 0         	 0         	 10.0797   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000389163	 100       	 0.642404  	 0         	 10.2785   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 71)                                                                                 	 0.000357851	 100       	 0.992033  	 0         	 15.8725   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000328951	 100       	 0.759992  	 0         	 12.1599   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3550, m: 0, k: 50)  	 5.62e-06  	 100       	 0         	 0         	 25266.9   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.66898   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.66893   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.53657   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.53521   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.31398   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.39805   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.3334    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.13229   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.00103   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.746775  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.398164  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.380481  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.147698  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.139216  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.115232  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.0967991 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0761124 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0677502 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0645852 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0584576 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0483789 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0414299 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0325144 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00538995	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00348293	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00314745	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00279336	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107597	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000931769	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000423407	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23062358628224 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23062162434048 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23061961107584 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23061759781120 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23061558454656 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23061357128192 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23061155801728 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23060954475264 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23060753148800 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23060551822336 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23060350495872 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23060149169408 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23059947842944 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23059746516480 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23059545190016 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23059343863552 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23059142537088 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23058941210624 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23058739884160 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23058538557696 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23058337231232 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23058135904768 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23057934578304 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23057733251840 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23057531925376 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23057330598912 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23057129272448 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23056927945984 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23056726619520 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23056525293056 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23056323966592 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23056122640128 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23055921309568 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23055719983104 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23055518656640 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23055317330176 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23055116003712 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23054914677248 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23054713350784 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23054512024320 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23054310697856 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23054109371392 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23053908044928 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23053706718464 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23053505392000 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23053304065536 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23053102739072 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23052901412608 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23052700086144 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23052498759680 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23052297433216 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23052096106752 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23051894780288 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23051693453824 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23051492127360 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23051290800896 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23051089474432 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23050888147968 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23050686821504 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23050485495040 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23050284168576 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23050082842112 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23049881515648 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23062252967680 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23062246377216 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 122, m: 122)                                                               	 1.19901   	 700       	 9.89447   	 0         	 0.209118  	 47.3152   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6100, cols: 122, reductionFactor: 37, colBlockingSize: 12)                 	 0.866537  	 600       	 129.13    	 0         	 4.20479   	 30.7101   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6100, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.374228  	 700       	 121.498   	 0         	 6.64982   	 18.2708   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6100, r: 122, r2: 122, leftOrthog: 1)      	 0.34514   	 600       	 315.672   	 0         	 31.4637   	 10.0329   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6100, Xcols: 72, r: 72, streamingCols: 0)                   	 0.132991  	 700       	 166.445   	 0         	 37.097    	 4.48676   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 122, r1_: 122, n: 50, r2: 122)        	 0.122074  	 600       	 892.499   	 0         	 59.1097   	 15.099    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 122, reductionFactor: 37, colBlockingSize: 12)                 	 0.118292  	 100       	 64.6126   	 0         	 2.16336   	 29.8668   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 72, Qr2: 122)      	 0.118061  	 700       	 0         	 0         	 62.0613   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 72, m: 6100)                                                                  	 0.0751351 	 700       	 0         	 0         	 65.4693   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, n: 50, r2left: 50, r2right: 72)                	 0.0644925 	 700       	 0         	 0         	 76.2731   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 72, m: 72)                                                                  	 0.0621894 	 800       	 6.40192   	 0         	 1.60789   	 3.98157   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6100, m: 72)                                                         	 0.0603869 	 700       	 0         	 0         	 81.4587   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 122)                                                                	 0.0598861 	 100       	 4.3527    	 0         	 0.197041  	 22.0904   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3600, m: 50, k: 72) 	 0.0533464 	 700       	 340.117   	 0         	 46.4826   	 7.31707   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 72, reductionFactor: 37, colBlockingSize: 12)                  	 0.0431696 	 100       	 61.665    	 0         	 3.43175   	 17.969    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 72, m: 50, k: 2500)   	 0.0423596 	 800       	 339.947   	 0         	 46.6256   	 7.29099   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3600, m: 72, k: 72) 	 0.0415614 	 700       	 628.646   	 0         	 70.548    	 8.91089   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0403545 	 100       	 2.89104   	 0         	 0.149673  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 72, m: 2500, k: 50)	 0.0361638 	 800       	 398.188   	 0         	 54.6137   	 7.29099   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0313261 	 100       	 99.9943   	 0         	 7.85288   	 12.7335   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 72, n: 50, r2: 72)                                                                                         	 0.0291078 	 700       	 0         	 0         	 99.7341   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 122, r2: 122, leftOrthog: 1)      	 0.0245433 	 100       	 303.219   	 0         	 30.7951   	 9.84633   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6100, r: 50, r2: 50, leftOrthog: 1)        	 0.0184688 	 100       	 165.143   	 0         	 39.8509   	 4.14402   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 122, r1_: 50, n: 50, r2: 122)         	 0.0129285 	 100       	 575.63    	 0         	 65.3009   	 8.81503   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 122, reductionFactor: 37, colBlockingSize: 12)                   	 0.0125887 	 100       	 12.1428   	 0         	 1.33351   	 9.10591   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 72, r: 72, streamingCols: 0)                   	 0.011721  	 100       	 110.571   	 0         	 24.7481   	 4.46783   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 122, r1_: 122, n: 50, r2: 50)         	 0.00980746	 100       	 758.811   	 0         	 50.9722   	 14.8868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3600, m: 50, k: 50) 	 0.00643646	 100       	 279.657   	 0         	 45.0559   	 6.2069    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 72, m: 2500)                                                                  	 0.0062965 	 100       	 0         	 0         	 45.7397   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 72, n: 50, r2left: 50, r2right: 0)                 	 0.00589729	 100       	 0         	 0         	 48.836    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 72)                                                         	 0.00556837	 100       	 0         	 0         	 51.7207   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00442807	 100       	 3.76385   	 0         	 1.36402   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00303616	 100       	 8.45664   	 0         	 1.31746   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 122, leftOrthog: 1)         	 0.00296248	 100       	 20.5909   	 0         	 6.29204   	 3.27253   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 72, m: 72, fromLeft: 1)                	 0.00290797	 800       	 0         	 0         	 22.8184   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 72, n: 50, r2: 50)                                                                                         	 0.00226698	 100       	 0         	 0         	 127.041   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 72, Qr2: 50)       	 0.00142539	 100       	 0         	 0         	 342.363   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 72)   	 0.00087867	 100       	 40.971    	 0         	 8.83153   	 4.63918   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000876275	 100       	 0.570597  	 0         	 2.28239   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000876115	 100       	 28.5351   	 0         	 6.84842   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 72)                                                                                          	 0.000872405	 200       	 0         	 0         	 13.2049   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000803699	 200       	 0         	 0         	 9.95398   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000753275	 100       	 33.1884   	 0         	 7.96522   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 72, k: 72)   	 0.000733679	 100       	 70.6576   	 0         	 13.5035   	 5.23256   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000692915	 100       	 36.0795   	 0         	 8.65907   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 72)                 	 0.000557053	 100       	 0         	 0         	 17.5208   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000514632	 100       	 0         	 0         	 7.77254   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.0004868 	 100       	 0         	 0         	 8.21693   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000434943	 100       	 1.14958   	 0         	 13.7949   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000422351	 100       	 0         	 0         	 9.4708    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000413419	 100       	 0.604713  	 0         	 9.67541   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000408358	 100       	 0         	 0         	 9.79533   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 72)                                                                                 	 0.000362698	 100       	 0.992561  	 0         	 15.881    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00034444	 100       	 0.725816  	 0         	 11.6131   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3600, m: 0, k: 50)  	 5.602e-06 	 100       	 0         	 0         	 25705.1   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.76606   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.76601   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.5795    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.57818   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.34522   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.44918   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.29925   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.18644   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.02935   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.799111  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.420921  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.391114  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.145563  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.144712  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.119909  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.102962  	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0814316 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0714336 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0666175 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0663637 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0432357 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0368567 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0335655 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00976249	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00748303	 5200      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00367968	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00290797	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112056	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000876275	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000434943	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22795201062784 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22795002046464 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22794800720000 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22794599393536 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22794398067072 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22794196740608 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22793995414144 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22793794087680 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22793592761216 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22793391434752 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22793190108288 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22792988781824 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22792787455360 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22792586128896 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22792384802432 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22792183475968 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22791982149504 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22791780823040 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22791579496576 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22791378170112 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22791176843648 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22790975517184 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22790774190720 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22790572864256 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22790371537792 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22790170211328 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22789968884864 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22789767558400 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22789566231936 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22789364905472 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22789163579008 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22788962252544 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22788760921984 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22788559595520 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22788358269056 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22788156942592 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22787955616128 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22787754289664 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22787552963200 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22787351636736 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22787150310272 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22786948983808 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22786747657344 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22786546330880 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22786345004416 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22786143677952 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22785942351488 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22785741025024 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22785539698560 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22785338372096 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22785137045632 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22784935719168 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22784734392704 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22784533066240 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22784331739776 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22784130413312 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22783929086848 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22783727760384 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22783526433920 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22783325107456 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22783123780992 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22782922454528 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22782721128064 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22795095402240 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22795088811776 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 123, m: 123)                                                               	 1.26074   	 700       	 9.6433    	 0         	 0.202148  	 47.7041   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6150, cols: 123, reductionFactor: 36, colBlockingSize: 12)                 	 0.865297  	 600       	 132.617   	 0         	 4.28013   	 30.9845   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6150, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.390096  	 700       	 120.798   	 0         	 6.52138   	 18.5234   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6150, r: 123, r2: 123, leftOrthog: 1)      	 0.335633  	 600       	 332.661   	 0         	 32.8875   	 10.1151   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6150, Xcols: 73, r: 73, streamingCols: 0)                   	 0.13878   	 700       	 165.307   	 0         	 36.3392   	 4.549     
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 123, r1_: 123, n: 50, r2: 123)        	 0.130169  	 600       	 857.748   	 0         	 56.3464   	 15.2228   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 123, reductionFactor: 36, colBlockingSize: 12)                 	 0.113793  	 100       	 68.3228   	 0         	 2.26819   	 30.1222   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 73, Qr2: 123)      	 0.113732  	 700       	 0         	 0         	 65.5068   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, n: 50, r2left: 50, r2right: 73)                	 0.0710367 	 700       	 0         	 0         	 70.7837   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 73, m: 73)                                                                  	 0.0693569 	 800       	 5.98283   	 0         	 1.48196   	 4.03711   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3650, m: 50, k: 73) 	 0.0592658 	 700       	 314.71    	 0         	 42.766    	 7.35887   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 123)                                                                	 0.058747  	 100       	 4.47115   	 0         	 0.202223  	 22.11     
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 73, m: 6150)                                                                  	 0.0557109 	 700       	 0         	 0         	 90.256    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 73, m: 50, k: 2500)   	 0.0485681 	 800       	 300.609   	 0         	 41.0014   	 7.33167   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6150, m: 73)                                                         	 0.047556  	 700       	 0         	 0         	 105.733   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 73, reductionFactor: 37, colBlockingSize: 12)                  	 0.0449962 	 100       	 60.8165   	 0         	 3.33946   	 18.2115   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 73, m: 2500, k: 50)	 0.0436888 	 800       	 334.182   	 0         	 45.5805   	 7.33167   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0433878 	 100       	 2.68893   	 0         	 0.13921   	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3650, m: 73, k: 73) 	 0.0426081 	 700       	 639.108   	 0         	 70.7396   	 9.03465   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0303082 	 100       	 104.2     	 0         	 8.18261   	 12.7343   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 73, n: 50, r2: 73)                                                                                         	 0.0284056 	 700       	 0         	 0         	 105.058   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 123, r2: 123, leftOrthog: 1)      	 0.0248925 	 100       	 303.887   	 0         	 30.62     	 9.92448   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6150, r: 50, r2: 50, leftOrthog: 1)        	 0.0153509 	 100       	 200.314   	 0         	 48.3358   	 4.1442    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 123, reductionFactor: 36, colBlockingSize: 12)                   	 0.0133846 	 100       	 11.6173   	 0         	 1.27185   	 9.13415   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 123, r1_: 50, n: 50, r2: 123)         	 0.0124058 	 100       	 609.755   	 0         	 69.0064   	 8.83621   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 73, r: 73, streamingCols: 0)                   	 0.0120479 	 100       	 110.579   	 0         	 24.4135   	 4.52944   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 123, r1_: 123, n: 50, r2: 50)         	 0.0094565 	 100       	 799.926   	 0         	 53.3076   	 15.0059   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3650, m: 50, k: 50) 	 0.00613342	 100       	 297.55    	 0         	 47.9341   	 6.20748   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 73, n: 50, r2left: 50, r2right: 0)                 	 0.00599856	 100       	 0         	 0         	 48.6783   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 73)                                                         	 0.00561625	 100       	 0         	 0         	 51.992    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 73, m: 2500)                                                                  	 0.00541088	 100       	 0         	 0         	 53.9654   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00476205	 100       	 3.49988   	 0         	 1.26836   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 73, m: 73, fromLeft: 1)                	 0.00375296	 800       	 0         	 0         	 18.1753   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00345185	 100       	 7.43824   	 0         	 1.1588    	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 123, leftOrthog: 1)         	 0.0027237 	 100       	 22.5796   	 0         	 6.88769   	 3.27825   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 73, n: 50, r2: 50)                                                                                         	 0.00232186	 100       	 0         	 0         	 125.761   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 73, Qr2: 50)       	 0.00141806	 100       	 0         	 0         	 346.952   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 73)                                                                                          	 0.00110402	 200       	 0         	 0         	 10.5795   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 73)   	 0.000944615	 100       	 38.6401   	 0         	 8.29968   	 4.65561   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 73, k: 73)   	 0.000923965	 100       	 57.6753   	 0         	 10.9346   	 5.27457   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000879736	 100       	 28.4176   	 0         	 6.82023   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000877429	 100       	 0.569847  	 0         	 2.27939   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000822619	 200       	 0         	 0         	 9.72504   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000786033	 100       	 31.8053   	 0         	 7.63327   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000729631	 100       	 34.2639   	 0         	 8.22333   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 73)                                                                                 	 0.000574792	 100       	 0.635012  	 0         	 10.1602   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 73)                 	 0.0005552 	 100       	 0         	 0         	 17.7233   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000518525	 100       	 0         	 0         	 7.71419   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.00051025	 100       	 0         	 0         	 7.83929   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000465503	 100       	 1.07411   	 0         	 12.8893   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000444569	 100       	 0         	 0         	 8.99748   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000398373	 100       	 0.627553  	 0         	 10.0408   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000395414	 100       	 0         	 0         	 10.116    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000351695	 100       	 0.710843  	 0         	 11.3735   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3650, m: 0, k: 50)  	 5.712e-06 	 100       	 0         	 0         	 25560.2   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.82856   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.82852   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.62357   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.62225   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.39522   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.46133   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.36287   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.20487   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.02337   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.797661  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.439089  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.3786    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.152817  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.150828  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.115595  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.109882  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.078109  	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0741189 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0611218 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0535676 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0494478 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0444185 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0331644 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00692437	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0038831 	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00375296	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00227726	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00132486	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000877429	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000465503	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22739119703936 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22738899036160 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22738697709696 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22738496383232 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22738295056768 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22738093730304 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22737892403840 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22737691077376 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22737489750912 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22737288424448 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22737087097984 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22736885771520 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22736684445056 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22736483118592 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22736281792128 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22736080465664 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22735879139200 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22735677812736 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22735476486272 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22735275159808 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22735073833344 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22734872506880 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22734671180416 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22734469853952 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22734268527488 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22734067201024 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22733865874560 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22733664548096 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22733463221632 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22733261895168 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22733060568704 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22732859242240 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22732657911680 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22732456585216 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22732255258752 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22732053932288 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22731852605824 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22731651279360 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22731449952896 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22731248626432 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22731047299968 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22730845973504 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22730644647040 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22730443320576 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22730241994112 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22730040667648 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22729839341184 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22729638014720 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22729436688256 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22729235361792 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22729034035328 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22728832708864 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22728631382400 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22728430055936 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22728228729472 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22728027403008 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22727826076544 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22727624750080 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22727423423616 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22727222097152 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22727020770688 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22726819444224 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22726618117760 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22739014043392 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22739007452928 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 124, m: 124)                                                               	 1.22539   	 700       	 10.1654   	 0         	 0.21137   	 48.0929   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6200, cols: 124, reductionFactor: 36, colBlockingSize: 12)                 	 0.873286  	 600       	 134.635   	 0         	 4.31021   	 31.2364   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6200, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.398701  	 700       	 122.438   	 0         	 6.52104   	 18.7759   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6200, r: 124, r2: 124, leftOrthog: 1)      	 0.347369  	 600       	 329.326   	 0         	 32.2952   	 10.1974   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6200, Xcols: 74, r: 74, streamingCols: 0)                   	 0.138616  	 700       	 171.452   	 0         	 37.1812   	 4.61124   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 124, r1_: 124, n: 50, r2: 124)        	 0.127227  	 600       	 899.163   	 0         	 58.5906   	 15.3465   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 74, Qr2: 124)      	 0.123218  	 700       	 0         	 0         	 61.473    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 124, reductionFactor: 36, colBlockingSize: 12)                 	 0.113991  	 100       	 69.3174   	 0         	 2.28352   	 30.3555   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, n: 50, r2left: 50, r2right: 74)                	 0.0767748 	 700       	 0         	 0         	 66.9303   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 74, m: 74)                                                                  	 0.0693984 	 800       	 6.22836   	 0         	 1.52183   	 4.09267   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 124)                                                                	 0.0595162 	 100       	 4.44697   	 0         	 0.200954  	 22.1293   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 74, m: 6200)                                                                  	 0.0573088 	 700       	 0         	 0         	 89.6644   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3700, m: 50, k: 74) 	 0.0517218 	 700       	 370.56    	 0         	 50.0756   	 7.4       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6200, m: 74)                                                         	 0.0503608 	 700       	 0         	 0         	 102.035   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 74, m: 50, k: 2500)   	 0.0479778 	 800       	 308.476   	 0         	 41.846    	 7.37169   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 74, reductionFactor: 37, colBlockingSize: 12)                  	 0.0467527 	 100       	 60.1463   	 0         	 3.2593    	 18.4538   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3700, m: 74, k: 74) 	 0.0421823 	 700       	 672.454   	 0         	 73.4247   	 9.15842   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 74, m: 2500, k: 50)	 0.0418195 	 800       	 353.902   	 0         	 48.0083   	 7.37169   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0404342 	 100       	 2.88534   	 0         	 0.149378  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 74, n: 50, r2: 74)                                                                                         	 0.0300042 	 700       	 0         	 0         	 102.204   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0298614 	 100       	 106.619   	 0         	 8.372     	 12.7351   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 124, r2: 124, leftOrthog: 1)      	 0.0250988 	 100       	 306.31    	 0         	 30.6231   	 10.0026   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6200, r: 50, r2: 50, leftOrthog: 1)        	 0.0189035 	 100       	 163.99    	 0         	 39.5693   	 4.14439   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 124, reductionFactor: 36, colBlockingSize: 12)                   	 0.0122603 	 100       	 12.8897   	 0         	 1.40786   	 9.15549   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 74, r: 74, streamingCols: 0)                   	 0.0122478 	 100       	 111.775   	 0         	 24.3465   	 4.59103   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 124, r1_: 50, n: 50, r2: 124)         	 0.0120495 	 100       	 638.037   	 0         	 72.0365   	 8.85714   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 124, r1_: 124, n: 50, r2: 50)         	 0.00933029	 100       	 823.983   	 0         	 54.4786   	 15.1249   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3700, m: 50, k: 50) 	 0.00712524	 100       	 259.641   	 0         	 41.8232   	 6.20805   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 74, n: 50, r2left: 50, r2right: 0)                 	 0.00664503	 100       	 0         	 0         	 44.5446   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 74, m: 2500)                                                                  	 0.00607074	 100       	 0         	 0         	 48.7585   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 74)                                                         	 0.00553857	 100       	 0         	 0         	 53.4434   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00450547	 100       	 3.6992    	 0         	 1.34059   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 74, m: 74, fromLeft: 1)                	 0.00303969	 800       	 0         	 0         	 23.0592   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00299578	 100       	 8.57061   	 0         	 1.33521   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 124, leftOrthog: 1)         	 0.00282546	 100       	 21.9433   	 0         	 6.68209   	 3.2839    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 74, n: 50, r2: 50)                                                                                         	 0.00234958	 100       	 0         	 0         	 125.98    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 74, Qr2: 50)       	 0.00143728	 100       	 0         	 0         	 345.096   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 74)                                                                                          	 0.00110391	 200       	 0         	 0         	 10.7256   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 74, k: 74)   	 0.000943266	 100       	 58.0536   	 0         	 10.9204   	 5.31609   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000919909	 100       	 0.543532  	 0         	 2.17413   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 74)   	 0.000887383	 100       	 41.6956   	 0         	 8.92512   	 4.67172   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000866935	 100       	 28.8372   	 0         	 6.92093   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000803549	 100       	 31.112    	 0         	 7.46688   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000784531	 200       	 0         	 0         	 10.1972   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000690653	 100       	 36.1976   	 0         	 8.68743   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 74)                 	 0.000572434	 100       	 0         	 0         	 17.3295   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000527851	 100       	 0         	 0         	 7.5779    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000517794	 100       	 0         	 0         	 7.72508   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000429925	 100       	 1.16299   	 0         	 13.9559   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000419065	 100       	 0         	 0         	 9.54506   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 74)                                                                                 	 0.000382966	 100       	 0.966143  	 0         	 15.4583   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.00038171	 100       	 0         	 0         	 10.4792   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000381453	 100       	 0.655389  	 0         	 10.4862   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000325136	 100       	 0.768909  	 0         	 12.3025   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3700, m: 0, k: 50)  	 5.12e-06  	 100       	 0         	 0         	 28906.2   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.86667   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.86662   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.6421    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.64077   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.40612   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.47785   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.32534   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.22445   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.02997   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.810734  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.448919  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.394197  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.150863  	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.14941   	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.125074  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.102865  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0845201 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0739039 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0633795 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0562811 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0488448 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0425101 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.03476   	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00757958	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00411466	 5200      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00376384	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00303969	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108956	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000919909	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000429925	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22537182766976 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22536968464384 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22536767137920 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22536565811456 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22536364484992 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22536163158528 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22535961832064 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22535760505600 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22535559179136 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22535357852672 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22535156526208 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22534955199744 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22534753873280 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22534552546816 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22534351220352 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22534149893888 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22533948567424 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22533747240960 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22533545914496 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22533344588032 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22533143261568 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22532941935104 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22532740608640 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22532539282176 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22532337955712 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22532136629248 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22531935302784 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22531733976320 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22531532649856 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22531331323392 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22531129996928 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22530928670464 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22530727339904 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22530526013440 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22530324686976 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22530123360512 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22529922034048 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22529720707584 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22529519381120 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22529318054656 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22529116728192 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22528915401728 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22528714075264 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22528512748800 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22528311422336 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22528110095872 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22527908769408 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22527707442944 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22527506116480 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22527304790016 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22527103463552 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22526902137088 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22526700810624 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22526499484160 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22526298157696 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22526096831232 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22525895504768 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22525694178304 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22525492851840 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22525291525376 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22525090198912 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22524888872448 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22524687545984 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22537077106432 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22537070515968 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 125, m: 125)                                                               	 1.28675   	 700       	 9.9168    	 0         	 0.204547  	 48.4818   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6250, cols: 125, reductionFactor: 36, colBlockingSize: 12)                 	 0.878799  	 600       	 137.054   	 0         	 4.35253   	 31.4883   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6250, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.39889   	 700       	 126.724   	 0         	 6.65972   	 19.0284   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6250, r: 125, r2: 125, leftOrthog: 1)      	 0.36439   	 600       	 321.599   	 0         	 31.2851   	 10.2796   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 125, r1_: 125, n: 50, r2: 125)        	 0.143779  	 600       	 815.055   	 0         	 52.6852   	 15.4703   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6250, Xcols: 75, r: 75, streamingCols: 0)                   	 0.142898  	 700       	 172.217   	 0         	 36.8498   	 4.67348   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 75, Qr2: 125)      	 0.122086  	 700       	 0         	 0         	 63.0701   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 125, reductionFactor: 36, colBlockingSize: 12)                 	 0.117758  	 100       	 68.1865   	 0         	 2.22915   	 30.5886   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, n: 50, r2left: 50, r2right: 75)                	 0.0778555 	 700       	 0         	 0         	 67.4326   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 75, m: 75)                                                                  	 0.0764399 	 800       	 5.88698   	 0         	 1.41915   	 4.14823   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 75, m: 6250)                                                                  	 0.059135  	 700       	 0         	 0         	 88.7799   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 125)                                                                	 0.0582506 	 100       	 4.57792   	 0         	 0.206693  	 22.1484   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3750, m: 50, k: 75) 	 0.0548977 	 700       	 358.621   	 0         	 48.1987   	 7.44048   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6250, m: 75)                                                         	 0.0507926 	 700       	 0         	 0         	 103.362   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 75, m: 50, k: 2500)   	 0.0479795 	 800       	 312.634   	 0         	 42.1847   	 7.41107   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 75, reductionFactor: 37, colBlockingSize: 12)                  	 0.0477689 	 100       	 60.4685   	 0         	 3.23432   	 18.6959   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 75, m: 2500, k: 50)	 0.0430452 	 800       	 348.471   	 0         	 47.0203   	 7.41107   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3750, m: 75, k: 75) 	 0.0416783 	 700       	 708.553   	 0         	 76.3347   	 9.28218   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0409605 	 100       	 2.84827   	 0         	 0.147459  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.030523  	 100       	 105.149   	 0         	 8.25607   	 12.736    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 75, n: 50, r2: 75)                                                                                         	 0.0295662 	 700       	 0         	 0         	 106.541   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 125, r2: 125, leftOrthog: 1)      	 0.027378  	 100       	 285.357   	 0         	 28.3074   	 10.0806   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6250, r: 50, r2: 50, leftOrthog: 1)        	 0.0175872 	 100       	 177.686   	 0         	 42.8722   	 4.14456   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 125, reductionFactor: 36, colBlockingSize: 12)                   	 0.0127047 	 100       	 12.6402   	 0         	 1.37744   	 9.17659   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 75, r: 75, streamingCols: 0)                   	 0.012512  	 100       	 112.392   	 0         	 24.1567   	 4.65261   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 125, r1_: 50, n: 50, r2: 125)         	 0.0122328 	 100       	 638.651   	 0         	 71.9376   	 8.87784   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 125, r1_: 125, n: 50, r2: 50)         	 0.00958882	 100       	 814.751   	 0         	 53.4477   	 15.2439   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3750, m: 50, k: 50) 	 0.00699198	 100       	 268.164   	 0         	 43.1923   	 6.20861   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 75, n: 50, r2left: 50, r2right: 0)                 	 0.00600301	 100       	 0         	 0         	 49.9749   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00594301	 100       	 4.32032   	 0         	 0.67306   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 75, m: 2500)                                                                  	 0.0056442 	 100       	 0         	 0         	 53.1519   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 75)                                                         	 0.0052977 	 100       	 0         	 0         	 56.6283   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00434031	 100       	 3.83995   	 0         	 1.3916    	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 75, m: 75, fromLeft: 1)                	 0.00313776	 800       	 0         	 0         	 22.9463   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 125, leftOrthog: 1)         	 0.00274391	 100       	 22.7777   	 0         	 6.92443   	 3.28947   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 75, n: 50, r2: 50)                                                                                         	 0.00228897	 100       	 0         	 0         	 131.063   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 75, Qr2: 50)       	 0.00165961	 100       	 0         	 0         	 301.276   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 75, k: 75)   	 0.000935707	 100       	 60.115    	 0         	 11.2215   	 5.35714   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 75)                                                                                          	 0.000908773	 200       	 0         	 0         	 13.2046   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000903017	 100       	 27.685    	 0         	 6.64439   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000876  	 100       	 0.570776  	 0         	 2.28311   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 75)   	 0.000869129	 100       	 43.1466   	 0         	 9.20462   	 4.6875    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000794846	 200       	 0         	 0         	 10.0648   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000776582	 100       	 32.1924   	 0         	 7.72616   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000696588	 100       	 35.8892   	 0         	 8.61341   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 75)                 	 0.00056468	 100       	 0         	 0         	 17.7091   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000517861	 100       	 0         	 0         	 7.72408   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000505366	 100       	 0         	 0         	 7.91506   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000438746	 100       	 1.13961   	 0         	 13.6753   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000417468	 100       	 0         	 0         	 9.58157   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000405438	 100       	 0.616617  	 0         	 9.86587   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000369181	 100       	 0         	 0         	 10.8348   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 75)                                                                                 	 0.000366482	 100       	 1.02324   	 0         	 16.3719   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000322419	 100       	 0.775389  	 0         	 12.4062   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3750, m: 0, k: 50)  	 5.2e-06   	 100       	 0         	 0         	 28846.2   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 4.99518   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 4.99513   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.74557   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.74428   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.50549   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.49239   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.38596   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.24949   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.0404    	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.829309  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.453068  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.4121    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.166377  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.15541   	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.124164  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.105378  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0849286 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0807802 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0647792 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0564595 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0488825 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0437418 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0340767 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00850349	 5200      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00548227	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00370455	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00313776	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109434	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000876  	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000438746	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22827926091648 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22827751172096 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22827549845632 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22827348519168 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22827147192704 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22826945866240 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22826744539776 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22826543213312 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22826341886848 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22826140560384 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22825939233920 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22825737907456 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22825536580992 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22825335254528 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22825133928064 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22824932601600 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22824731275136 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22824529948672 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22824328622208 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22824127295744 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22823925969280 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22823724642816 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22823523316352 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22823321989888 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22823120663424 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22822919336960 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22822718010496 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22822516684032 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22822315357568 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22822114031104 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22821912704640 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22821711378176 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22821510047616 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22821308721152 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22821107394688 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22820906068224 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22820704741760 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22820503415296 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22820302088832 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22820100762368 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22819899435904 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22819698109440 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22819496782976 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22819295456512 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22819094130048 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22818892803584 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22818691477120 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22818490150656 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22818288824192 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22818087497728 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22817886171264 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22817684844800 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22817483518336 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22817282191872 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22817080865408 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22816879538944 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22816678212480 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22816476886016 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22816275559552 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22816074233088 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22815872906624 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22815671580160 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22815470253696 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22827820431104 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22827641870080 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 126, m: 126)                                                               	 1.26944   	 700       	 10.2952   	 0         	 0.210661  	 48.8707   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6300, cols: 126, reductionFactor: 36, colBlockingSize: 12)                 	 0.887873  	 600       	 138.935   	 0         	 4.37725   	 31.7402   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6300, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.404393  	 700       	 129.382   	 0         	 6.71036   	 19.2809   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6300, r: 126, r2: 126, leftOrthog: 1)      	 0.355055  	 600       	 338.04    	 0         	 32.6235   	 10.3618   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6300, Xcols: 76, r: 76, streamingCols: 0)                   	 0.152539  	 700       	 166.988   	 0         	 35.2613   	 4.73572   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 126, r1_: 126, n: 50, r2: 126)        	 0.143436  	 600       	 836.769   	 0         	 53.6595   	 15.5941   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 76, Qr2: 126)      	 0.122709  	 700       	 0         	 0         	 63.7812   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 126, reductionFactor: 36, colBlockingSize: 12)                 	 0.117302  	 100       	 69.5513   	 0         	 2.25658   	 30.8216   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 76, m: 6300)                                                                  	 0.0868627 	 700       	 0         	 0         	 61.7361   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, n: 50, r2left: 50, r2right: 76)                	 0.0740866 	 700       	 0         	 0         	 72.3823   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 76, m: 76)                                                                  	 0.0703825 	 800       	 6.65279   	 0         	 1.58258   	 4.20377   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 126)                                                                	 0.0591179 	 100       	 4.54459   	 0         	 0.205014  	 22.1672   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 76, m: 50, k: 2500)   	 0.0553015 	 800       	 274.857   	 0         	 36.8945   	 7.44981   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3800, m: 50, k: 76) 	 0.0544797 	 700       	 371.074   	 0         	 49.6067   	 7.48031   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6300, m: 76)                                                         	 0.052036  	 700       	 0         	 0         	 103.055   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 76, reductionFactor: 37, colBlockingSize: 12)                  	 0.0479943 	 100       	 61.8002   	 0         	 3.26332   	 18.9378   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0440778 	 100       	 2.64683   	 0         	 0.13703   	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3800, m: 76, k: 76) 	 0.0408245 	 700       	 752.693   	 0         	 80.0231   	 9.40594   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 76, m: 2500, k: 50)	 0.0389951 	 800       	 389.793   	 0         	 52.3225   	 7.44981   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 76, n: 50, r2: 76)                                                                                         	 0.0302789 	 700       	 0         	 0         	 106.826   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0291453 	 100       	 111       	 0         	 8.71496   	 12.7368   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 126, r2: 126, leftOrthog: 1)      	 0.025128  	 100       	 315.902   	 0         	 31.0968   	 10.1587   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6300, r: 50, r2: 50, leftOrthog: 1)        	 0.0178236 	 100       	 176.732   	 0         	 42.6401   	 4.14474   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 126, reductionFactor: 36, colBlockingSize: 12)                   	 0.0129805 	 100       	 12.5704   	 0         	 1.36673   	 9.19744   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 126, r1_: 50, n: 50, r2: 126)         	 0.012743  	 100       	 622.928   	 0         	 70.0053   	 8.89831   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 76, r: 76, streamingCols: 0)                   	 0.0124349 	 100       	 116.125   	 0         	 24.6332   	 4.71417   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 126, r1_: 126, n: 50, r2: 50)         	 0.00980968	 100       	 809.201   	 0         	 52.6726   	 15.3629   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3800, m: 50, k: 50) 	 0.00699551	 100       	 271.603   	 0         	 43.7423   	 6.20915   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 76, m: 2500)                                                                  	 0.00677007	 100       	 0         	 0         	 44.9035   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 76, n: 50, r2left: 50, r2right: 0)                 	 0.00621958	 100       	 0         	 0         	 48.8779   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 76)                                                         	 0.00580483	 100       	 0         	 0         	 52.3702   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00447791	 100       	 3.72196   	 0         	 1.34884   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00358741	 100       	 7.15716   	 0         	 1.11501   	 6.41892   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 76, m: 76, fromLeft: 1)                	 0.00335342	 800       	 0         	 0         	 22.047    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 126, leftOrthog: 1)         	 0.00280548	 100       	 22.4561   	 0         	 6.81523   	 3.29498   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 76, n: 50, r2: 50)                                                                                         	 0.002398  	 100       	 0         	 0         	 126.772   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 76, Qr2: 50)       	 0.00147975	 100       	 0         	 0         	 340.597   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 76, k: 76)   	 0.000980167	 100       	 58.9287   	 0         	 10.9173   	 5.39773   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 76)   	 0.000937555	 100       	 40.531    	 0         	 8.61816   	 4.70297   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000867907	 100       	 0.576099  	 0         	 2.30439   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 76)                                                                                          	 0.000862858	 200       	 0         	 0         	 14.0927   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000847955	 100       	 29.4827   	 0         	 7.07585   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000783019	 100       	 31.9277   	 0         	 7.66265   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000765587	 200       	 0         	 0         	 10.4495   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00069573	 100       	 35.9335   	 0         	 8.62404   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 76)                 	 0.000628942	 100       	 0         	 0         	 16.0269   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000523072	 100       	 0         	 0         	 7.64713   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000482089	 100       	 0         	 0         	 8.29722   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000444863	 100       	 1.12394   	 0         	 13.4873   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000444206	 100       	 0         	 0         	 9.00483   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000397846	 100       	 0         	 0         	 10.0541   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000395385	 100       	 0.632295  	 0         	 10.1167   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 76)                                                                                 	 0.000366051	 100       	 1.03811   	 0         	 16.6097   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000329159	 100       	 0.759511  	 0         	 12.1522   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3800, m: 0, k: 50)  	 4.94e-06  	 100       	 0         	 0         	 30769.2   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.0588    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.05876   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.77367   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.77237   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.52215   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.50328   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.37264   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.28502   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.04794   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.868281  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.456453  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.400812  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.166771  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.164974  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.124633  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.104222  	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0936327 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0814172 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0748604 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0582387 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0561495 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0396908 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0348284 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00982326	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00383915	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00335342	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00189117	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109059	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000867907	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000444863	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23364106311552 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23363883886592 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23363682560128 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23363481233664 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23363279907200 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23363078580736 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23362877254272 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23362675927808 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23362474601344 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23362273274880 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23362071948416 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23361870621952 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23361669295488 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23361467969024 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23361266642560 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23361065316096 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23360863989632 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23360662663168 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23360461336704 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23360260010240 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23360058683776 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23359857357312 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23359656030848 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23359454704384 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23359253377920 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23359052051456 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23358850724992 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23358649398528 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23358448072064 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23358246745600 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23358045419136 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23357844092672 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23357642762112 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23357441435648 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23357240109184 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23357038782720 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23356837456256 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23356636129792 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23356434803328 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23356233476864 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23356032150400 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23355830823936 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23355629497472 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23355428171008 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23355226844544 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23355025518080 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23354824191616 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23354622865152 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23354421538688 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23354220212224 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23354018885760 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23353817559296 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23353616232832 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23353414906368 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23353213579904 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23353012253440 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23352810926976 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23352609600512 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23352408274048 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23352206947584 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23352005621120 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23351804294656 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23351602968192 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23364000651008 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23363994060544 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 127, m: 127)                                                               	 1.30927   	 700       	 10.2215   	 0         	 0.207504  	 49.2596   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6350, cols: 127, reductionFactor: 35, colBlockingSize: 12)                 	 0.905479  	 600       	 139.611   	 0         	 4.36054   	 32.0168   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6350, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.430453  	 700       	 125.759   	 0         	 6.43815   	 19.5334   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6350, r: 127, r2: 127, leftOrthog: 1)      	 0.350396  	 600       	 350.755   	 0         	 33.5841   	 10.4441   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6350, Xcols: 77, r: 77, streamingCols: 0)                   	 0.149761  	 700       	 175.977   	 0         	 36.6774   	 4.79796   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 127, r1_: 127, n: 50, r2: 127)        	 0.143852  	 600       	 854.37    	 0         	 54.3568   	 15.7178   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 77, Qr2: 127)      	 0.121737  	 700       	 0         	 0         	 65.3398   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 127, reductionFactor: 35, colBlockingSize: 12)                 	 0.116909  	 100       	 70.9519   	 0         	 2.283     	 31.0784   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 77, m: 77)                                                                  	 0.0764059 	 800       	 6.37343   	 0         	 1.49634   	 4.25933   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, n: 50, r2left: 50, r2right: 77)                	 0.0724367 	 700       	 0         	 0         	 75.6004   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 127)                                                                	 0.0613952 	 100       	 4.4086    	 0         	 0.198713  	 22.1858   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6350, m: 77)                                                         	 0.0567109 	 700       	 0         	 0         	 96.5641   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3850, m: 50, k: 77) 	 0.0561218 	 700       	 369.758   	 0         	 49.173    	 7.51953   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 77, m: 6350)                                                                  	 0.0529664 	 700       	 0         	 0         	 103.391   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 77, reductionFactor: 37, colBlockingSize: 12)                  	 0.0486309 	 100       	 62.6068   	 0         	 3.26425   	 19.1795   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 77, m: 50, k: 2500)   	 0.0484416 	 800       	 317.908   	 0         	 42.456    	 7.48794   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 77, m: 2500, k: 50)	 0.046018  	 800       	 334.652   	 0         	 44.6921   	 7.48794   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0438737 	 100       	 2.65915   	 0         	 0.137668  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3850, m: 77, k: 77) 	 0.041475  	 700       	 770.519   	 0         	 80.8545   	 9.5297    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 77, n: 50, r2: 77)                                                                                         	 0.0304152 	 700       	 0         	 0         	 109.164   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.029834  	 100       	 109.298   	 0         	 8.58081   	 12.7375   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 127, r2: 127, leftOrthog: 1)      	 0.0250035 	 100       	 322.535   	 0         	 31.5079   	 10.2367   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6350, r: 50, r2: 50, leftOrthog: 1)        	 0.0175414 	 100       	 181       	 0         	 43.6681   	 4.14491   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 127, reductionFactor: 35, colBlockingSize: 12)                   	 0.0139127 	 100       	 11.9243   	 0         	 1.29258   	 9.22518   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 77, r: 77, streamingCols: 0)                   	 0.0127577 	 100       	 116.185   	 0         	 24.3281   	 4.77573   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 127, r1_: 50, n: 50, r2: 127)         	 0.0123295 	 100       	 654.083   	 0         	 73.3398   	 8.91854   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 127, r1_: 127, n: 50, r2: 50)         	 0.010442  	 100       	 772.314   	 0         	 49.8854   	 15.4818   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3850, m: 50, k: 50) 	 0.00646049	 100       	 297.965   	 0         	 47.984    	 6.20968   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 77, m: 2500)                                                                  	 0.0055438 	 100       	 0         	 0         	 55.5575   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 77)                                                         	 0.00456764	 100       	 0         	 0         	 67.4309   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00441558	 100       	 3.7745    	 0         	 1.36788   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 77, m: 77, fromLeft: 1)                	 0.00345065	 800       	 0         	 0         	 21.9933   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00315125	 100       	 8.14777   	 0         	 1.26934   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 77, n: 50, r2left: 50, r2right: 0)                 	 0.00291861	 100       	 0         	 0         	 105.53    	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 127, leftOrthog: 1)         	 0.0027988 	 100       	 22.6883   	 0         	 6.87437   	 3.30042   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 77, n: 50, r2: 50)                                                                                         	 0.00241681	 100       	 0         	 0         	 127.441   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 77, Qr2: 50)       	 0.00146507	 100       	 0         	 0         	 346.74    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 77, k: 77)   	 0.000903746	 100       	 65.6047   	 0         	 12.0645   	 5.43785   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 77)                                                                                          	 0.000877535	 200       	 0         	 0         	 14.0393   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00087505	 100       	 0.571396  	 0         	 2.28558   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 77)   	 0.000866349	 100       	 44.4394   	 0         	 9.41884   	 4.71814   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000856916	 100       	 29.1744   	 0         	 7.00185   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00077952	 100       	 32.071    	 0         	 7.69704   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000779426	 200       	 0         	 0         	 10.264    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000702995	 100       	 35.5621   	 0         	 8.53491   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 77)                 	 0.000563649	 100       	 0         	 0         	 18.0254   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000509799	 100       	 0         	 0         	 7.84623   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.0004747 	 100       	 0         	 0         	 8.42637   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000406572	 100       	 1.22979   	 0         	 14.7575   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000404364	 100       	 0         	 0         	 9.89208   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000394381	 100       	 0         	 0         	 10.1425   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000388854	 100       	 0.642915  	 0         	 10.2866   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 77)                                                                                 	 0.000363833	 100       	 1.05818   	 0         	 16.9308   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000323906	 100       	 0.771829  	 0         	 12.3493   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3850, m: 0, k: 50)  	 5.3e-06   	 100       	 0         	 0         	 29056.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.05917   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.05912   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.7819    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.78061   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.55054   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.54837   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.41454   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.27713   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.06675   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.86637   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.482734  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.395739  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.167403  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.162519  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.123606  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.105833  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0808215 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0763937 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0616729 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0585102 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0492986 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.046721  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0349988 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00816898	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00381264	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00345065	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00186039	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107659	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00087505	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000406572	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22816612837248 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22816409774080 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22816208447616 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22816007121152 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22815805794688 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22815604468224 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22815403141760 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22815201815296 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22815000488832 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22814799162368 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22814597835904 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22814396509440 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22814195182976 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22813993856512 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22813792530048 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22813591203584 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22813389877120 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22813188550656 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22812987224192 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22812785897728 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22812584571264 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22812383244800 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22812181918336 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22811980591872 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22811779265408 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22811577938944 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22811376612480 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22811175286016 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22810973959552 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22810772633088 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22810571306624 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22810369980160 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22810168649600 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22809967323136 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22809765996672 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22809564670208 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22809363343744 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22809162017280 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22808960690816 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22808759364352 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22808558037888 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22808356711424 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22808155384960 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22807954058496 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22807752732032 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22807551405568 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22807350079104 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22807148752640 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22806947426176 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22806746099712 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22806544773248 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22806343446784 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22806142120320 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22805940793856 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22805739467392 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22805538140928 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22805336814464 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22805135488000 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22804934161536 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22804732835072 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22804531508608 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22804330182144 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22804128855680 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22816507176704 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22816500586240 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 128, m: 128)                                                               	 1.40609   	 700       	 9.74433   	 0         	 0.196266  	 49.6485   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6400, cols: 128, reductionFactor: 35, colBlockingSize: 12)                 	 0.913881  	 600       	 141.62    	 0         	 4.38876   	 32.2689   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6400, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.419465  	 700       	 133.47    	 0         	 6.7457    	 19.7859   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6400, r: 128, r2: 128, leftOrthog: 1)      	 0.394701  	 600       	 318.796   	 0         	 30.2856   	 10.5263   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6400, Xcols: 78, r: 78, streamingCols: 0)                   	 0.154862  	 700       	 176.004   	 0         	 36.2133   	 4.86019   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 128, r1_: 128, n: 50, r2: 128)        	 0.151727  	 600       	 829.315   	 0         	 52.3505   	 15.8416   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 78, Qr2: 128)      	 0.125673  	 700       	 0         	 0         	 64.3183   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 128, reductionFactor: 35, colBlockingSize: 12)                 	 0.119504  	 100       	 70.5088   	 0         	 2.25188   	 31.3112   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, n: 50, r2left: 50, r2right: 78)                	 0.0816859 	 700       	 0         	 0         	 68.4456   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 78, m: 78)                                                                  	 0.0765269 	 800       	 6.61452   	 0         	 1.53295   	 4.31489   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 128)                                                                	 0.0621964 	 100       	 4.38396   	 0         	 0.197439  	 22.2041   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6400, m: 78)                                                         	 0.0595433 	 700       	 0         	 0         	 93.8988   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 78, m: 6400)                                                                  	 0.0583492 	 700       	 0         	 0         	 95.8204   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3900, m: 50, k: 78) 	 0.0564016 	 700       	 377.542   	 0         	 49.9517   	 7.55814   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 78, reductionFactor: 37, colBlockingSize: 12)                  	 0.0515499 	 100       	 60.6056   	 0         	 3.12061   	 19.4211   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 78, m: 50, k: 2500)   	 0.0479106 	 800       	 325.607   	 0         	 43.2673   	 7.52547   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 78, m: 2500, k: 50)	 0.0446797 	 800       	 349.152   	 0         	 46.396    	 7.52547   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3900, m: 78, k: 78) 	 0.0440903 	 700       	 753.423   	 0         	 78.0469   	 9.65347   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0425378 	 100       	 2.74266   	 0         	 0.141991  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 78, n: 50, r2: 78)                                                                                         	 0.0328868 	 700       	 0         	 0         	 103.599   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0298648 	 100       	 110.046   	 0         	 8.63894   	 12.7383   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 128, r2: 128, leftOrthog: 1)      	 0.0276975 	 100       	 295.766   	 0         	 28.6746   	 10.3146   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6400, r: 50, r2: 50, leftOrthog: 1)        	 0.0145619 	 100       	 219.752   	 0         	 53.0152   	 4.14508   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 128, reductionFactor: 35, colBlockingSize: 12)                   	 0.0134748 	 100       	 12.5063   	 0         	 1.35268   	 9.24559   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 78, r: 78, streamingCols: 0)                   	 0.0130104 	 100       	 116.906   	 0         	 24.1678   	 4.83727   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 128, r1_: 50, n: 50, r2: 128)         	 0.0127886 	 100       	 640.571   	 0         	 71.6639   	 8.93855   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 128, r1_: 128, n: 50, r2: 50)         	 0.0108358 	 100       	 756.015   	 0         	 48.4605   	 15.6006   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.0107312 	 100       	 0         	 0         	 0.372744  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00966729	 100       	 2.65593   	 0         	 0.413766  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3900, m: 50, k: 50) 	 0.00712093	 100       	 273.841   	 0         	 44.0954   	 6.21019   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 78)                                                         	 0.00590195	 100       	 0         	 0         	 52.8639   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 78, m: 2500)                                                                  	 0.00556418	 100       	 0         	 0         	 56.073    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 78, n: 50, r2left: 50, r2right: 0)                 	 0.00555684	 100       	 0         	 0         	 56.147    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00446762	 100       	 3.73053   	 0         	 1.35195   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 78, m: 78, fromLeft: 1)                	 0.00350071	 800       	 0         	 0         	 22.2456   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 128, leftOrthog: 1)         	 0.00344335	 100       	 18.5866   	 0         	 5.62243   	 3.30579   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 78, n: 50, r2: 50)                                                                                         	 0.00285208	 100       	 0         	 0         	 109.394   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 78, Qr2: 50)       	 0.00147705	 100       	 0         	 0         	 346.637   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 78, k: 78)   	 0.000904308	 100       	 67.278    	 0         	 12.2825   	 5.47753   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 78)                                                                                          	 0.00089728	 200       	 0         	 0         	 13.9087   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 78)   	 0.000890319	 100       	 43.8045   	 0         	 9.25511   	 4.73301   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.00088041	 100       	 28.3959   	 0         	 6.81501   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000837559	 100       	 0.596973  	 0         	 2.38789   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000772375	 200       	 0         	 0         	 10.3577   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000769477	 100       	 32.4896   	 0         	 7.7975    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000696476	 100       	 35.895    	 0         	 8.6148    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 78)                 	 0.000563638	 100       	 0         	 0         	 18.1677   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000530829	 100       	 0         	 0         	 7.53538   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000493453	 100       	 0         	 0         	 8.10614   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000444471	 100       	 0         	 0         	 8.99946   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000424214	 100       	 1.17865   	 0         	 14.1438   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000390793	 100       	 0.639725  	 0         	 10.2356   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 78)                                                                                 	 0.000357429	 100       	 1.09113   	 0         	 17.458    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00032842	 100       	 0.76122   	 0         	 12.1795   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3900, m: 0, k: 50)  	 6.02e-06  	 100       	 0         	 0         	 25913.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.31859   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.31853   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.99163   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.99038   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.74321   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.55741   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.51082   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.32683   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.07736   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.890838  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.481151  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.440404  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.17612   	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.167873  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.127594  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.109413  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0882998 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0809945 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0761764 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0639133 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.048791  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0453762 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0379394 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0089447 	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00401729	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00350071	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00197039	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00107664	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000837559	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000424214	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23005007112064 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23004784355328 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23004583028864 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23004381702400 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23004180375936 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23003979049472 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23003777723008 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23003576396544 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23003375070080 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23003173743616 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23002972417152 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23002771090688 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23002569764224 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23002368437760 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23002167111296 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23001965784832 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23001764458368 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23001563131904 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23001361805440 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23001160478976 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23000959152512 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23000757826048 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23000556499584 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23000355173120 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23000153846656 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22999952520192 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22999751193728 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22999549867264 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22999348540800 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22999147214336 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22998945887872 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22998744561408 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22998543230848 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22998341904384 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22998140577920 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22997939251456 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22997737924992 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22997536598528 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22997335272064 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22997133945600 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22996932619136 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22996731292672 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22996529966208 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22996328639744 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22996127313280 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22995925986816 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22995724660352 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22995523333888 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22995322007424 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22995120680960 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22994919354496 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22994718028032 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22994516701568 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22994315375104 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22994114048640 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22993912722176 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22993711395712 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22993510069248 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22993308742784 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22993107416320 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22992906089856 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22992704763392 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22992503436928 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23004901451520 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23004894861056 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 129, m: 129)                                                               	 1.4249    	 700       	 9.84282   	 0         	 0.196709  	 50.0374   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6450, cols: 129, reductionFactor: 35, colBlockingSize: 12)                 	 0.928656  	 600       	 142.659   	 0         	 4.38668   	 32.521    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6450, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.428764  	 700       	 134.991   	 0         	 6.73663   	 20.0384   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6450, r: 129, r2: 129, leftOrthog: 1)      	 0.376797  	 600       	 341.832   	 0         	 32.2223   	 10.6086   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 129, r1_: 129, n: 50, r2: 129)        	 0.162164  	 600       	 794.268   	 0         	 49.7495   	 15.9653   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6450, Xcols: 79, r: 79, streamingCols: 0)                   	 0.156328  	 700       	 180.25    	 0         	 36.6182   	 4.92243   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 79, Qr2: 129)      	 0.133965  	 700       	 0         	 0         	 61.307    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 129, reductionFactor: 35, colBlockingSize: 12)                 	 0.120147  	 100       	 71.2316   	 0         	 2.25818   	 31.5438   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, n: 50, r2left: 50, r2right: 79)                	 0.0812961 	 700       	 0         	 0         	 70.1997   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 79, m: 79)                                                                  	 0.0800243 	 800       	 6.57185   	 0         	 1.5037    	 4.37044   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 79, m: 6450)                                                                  	 0.0654828 	 700       	 0         	 0         	 87.152    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6450, m: 79)                                                         	 0.0638019 	 700       	 0         	 0         	 89.4482   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 129)                                                                	 0.0622656 	 100       	 4.41121   	 0         	 0.198505  	 22.2222   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3950, m: 50, k: 79) 	 0.0602884 	 700       	 362.317   	 0         	 47.6974   	 7.59615   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 79, reductionFactor: 37, colBlockingSize: 12)                  	 0.0523192 	 100       	 61.2555   	 0         	 3.11535   	 19.6625   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 79, m: 50, k: 2500)   	 0.0500233 	 800       	 315.853   	 0         	 41.7662   	 7.56241   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3950, m: 79, k: 79) 	 0.046332  	 700       	 744.9     	 0         	 76.1873   	 9.77723   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 79, m: 2500, k: 50)	 0.045894  	 800       	 344.272   	 0         	 45.524    	 7.56241   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0425796 	 100       	 2.73997   	 0         	 0.141852  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 79, n: 50, r2: 79)                                                                                         	 0.0313942 	 700       	 0         	 0         	 111.325   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0296919 	 100       	 111.551   	 0         	 8.7566    	 12.7391   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 129, r2: 129, leftOrthog: 1)      	 0.0262768 	 100       	 316.648   	 0         	 30.4689   	 10.3925   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6450, r: 50, r2: 50, leftOrthog: 1)        	 0.0178905 	 100       	 180.263   	 0         	 43.4868   	 4.14524   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 129, reductionFactor: 35, colBlockingSize: 12)                   	 0.0155554 	 100       	 11.0036   	 0         	 1.18755   	 9.26576   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 129, r1_: 50, n: 50, r2: 129)         	 0.0147037 	 100       	 565.879   	 0         	 63.1679   	 8.95833   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 79, r: 79, streamingCols: 0)                   	 0.0133521 	 100       	 116.854   	 0         	 23.8537   	 4.8988    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 129, r1_: 129, n: 50, r2: 50)         	 0.0110149 	 100       	 755.387   	 0         	 48.0544   	 15.7194   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3950, m: 50, k: 50) 	 0.00740663	 100       	 266.653   	 0         	 42.9345   	 6.21069   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 79, m: 2500)                                                                  	 0.00661534	 100       	 0         	 0         	 47.7678   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 79, n: 50, r2left: 50, r2right: 0)                 	 0.00638999	 100       	 0         	 0         	 49.4524   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 79)                                                         	 0.00623579	 100       	 0         	 0         	 50.6753   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00459537	 100       	 3.62682   	 0         	 1.31437   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 79, m: 79, fromLeft: 1)                	 0.00372742	 800       	 0         	 0         	 21.4317   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00359308	 100       	 7.14586   	 0         	 1.11325   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 129, leftOrthog: 1)         	 0.00295032	 100       	 21.862    	 0         	 6.60267   	 3.31109   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 79, n: 50, r2: 50)                                                                                         	 0.00239936	 100       	 0         	 0         	 131.702   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 79, Qr2: 50)       	 0.00144349	 100       	 0         	 0         	 357.467   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 79)                                                                                          	 0.00111362	 200       	 0         	 0         	 11.3504   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000930436	 100       	 26.8691   	 0         	 6.44859   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 79, k: 79)   	 0.000922098	 100       	 67.6826   	 0         	 12.2685   	 5.51676   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 79)   	 0.00091359	 100       	 43.236    	 0         	 9.10693   	 4.7476    
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.0008767 	 100       	 0.570321  	 0         	 2.28128   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000790115	 100       	 31.641    	 0         	 7.59383   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000758734	 200       	 0         	 0         	 10.5439   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000706603	 100       	 35.3805   	 0         	 8.49133   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 79)                 	 0.00059694	 100       	 0         	 0         	 17.2882   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000517796	 100       	 0         	 0         	 7.72505   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000507182	 100       	 0         	 0         	 7.88672   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000438816	 100       	 0         	 0         	 9.11544   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000431192	 100       	 1.15958   	 0         	 13.9149   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 79)                                                                                 	 0.000400235	 100       	 0.98692   	 0         	 15.7907   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000389914	 100       	 0.641167  	 0         	 10.2587   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.00038213	 100       	 0         	 0         	 10.4676   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00033487	 100       	 0.746558  	 0         	 11.9449   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 3950, m: 0, k: 50)  	 5.41e-06  	 100       	 0         	 0         	 29205.2   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.33866   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.33861   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.98119   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.9799    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.69967   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.57873   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.52974   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.35734   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.0947    	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.904965  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.485171  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.423915  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.188672  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.16968   	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.135847  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.115868  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0887902 	 1000      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0846196 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0720982 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0704198 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0509537 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0466006 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0361837 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00991309	 5200      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00731787	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00393063	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00372742	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112502	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.0008767 	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000431192	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23256520734592 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23256308377600 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23256107051136 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23255905724672 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23255704398208 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23255503071744 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23255301745280 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23255100418816 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23254899092352 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23254697765888 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23254496439424 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23254295112960 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23254093786496 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23253892460032 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23253691133568 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23253489807104 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23253288480640 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23253087154176 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23252885827712 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23252684501248 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23252483174784 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23252281848320 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23252080521856 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23251879195392 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23251677868928 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23251476542464 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23251275216000 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23251073889536 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23250872563072 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23250671236608 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23250469910144 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23250268583680 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23250067253120 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23249865926656 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23249664600192 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23249463273728 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23249261947264 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23249060620800 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23248859294336 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23248657967872 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23248456641408 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23248255314944 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23248053988480 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23247852662016 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23247651335552 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23247450009088 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23247248682624 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23247047356160 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23246846029696 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23246644703232 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23246443376768 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23246242050304 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23246040723840 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23245839397376 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23245638070912 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23245436744448 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23245235417984 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23245034091520 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23244832765056 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23244631438592 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23244430112128 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23244228785664 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23244027459200 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23256415074048 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23256408483584 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 130, m: 130)                                                               	 1.4092    	 700       	 10.1857   	 0         	 0.201992  	 50.4263   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6500, cols: 130, reductionFactor: 34, colBlockingSize: 12)                 	 0.928015  	 600       	 146.223   	 0         	 4.45803   	 32.7999   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6500, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.437069  	 700       	 136.853   	 0         	 6.74456   	 20.2908   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6500, r: 130, r2: 130, leftOrthog: 1)      	 0.385534  	 600       	 341.915   	 0         	 31.9822   	 10.6908   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 130, r1_: 130, n: 50, r2: 130)        	 0.169083  	 600       	 779.616   	 0         	 48.4562   	 16.0891   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6500, Xcols: 80, r: 80, streamingCols: 0)                   	 0.157335  	 700       	 185.083   	 0         	 37.1304   	 4.98466   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 80, Qr2: 130)      	 0.127762  	 700       	 0         	 0         	 65.3092   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 130, reductionFactor: 34, colBlockingSize: 12)                 	 0.119108  	 100       	 73.0309   	 0         	 2.29641   	 31.8022   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 80, m: 6500)                                                                  	 0.0841029 	 700       	 0         	 0         	 69.2485   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 80, m: 80)                                                                  	 0.0822526 	 800       	 6.6397    	 0         	 1.50016   	 4.426     
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 50, r2left: 50, r2right: 80)                	 0.0794974 	 700       	 0         	 0         	 73.2603   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 130)                                                                	 0.0637338 	 100       	 4.34097   	 0         	 0.195187  	 22.2401   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4000, m: 50, k: 80) 	 0.0636913 	 700       	 351.697   	 0         	 46.0722   	 7.63359   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6500, m: 80)                                                         	 0.05792   	 700       	 0         	 0         	 100.552   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 80, reductionFactor: 37, colBlockingSize: 12)                  	 0.0522313 	 100       	 62.9218   	 0         	 3.16132   	 19.9036   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4000, m: 80, k: 80) 	 0.0467579 	 700       	 766.501   	 0         	 77.4166   	 9.90099   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 80, m: 50, k: 2500)   	 0.0454883 	 800       	 351.739   	 0         	 46.2888   	 7.59878   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0415649 	 100       	 2.80686   	 0         	 0.145315  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 80, m: 2500, k: 50)	 0.0402102 	 800       	 397.909   	 0         	 52.3649   	 7.59878   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 80, n: 50, r2: 80)                                                                                         	 0.0341696 	 700       	 0         	 0         	 104.888   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0297255 	 100       	 112.289   	 0         	 8.81398   	 12.7398   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 130, r2: 130, leftOrthog: 1)      	 0.0264764 	 100       	 319.152   	 0         	 30.4815   	 10.4704   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6500, r: 50, r2: 50, leftOrthog: 1)        	 0.0179533 	 100       	 181.025   	 0         	 43.6687   	 4.14541   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 130, r1_: 50, n: 50, r2: 130)         	 0.0155432 	 100       	 543.648   	 0         	 60.554    	 8.9779    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 130, reductionFactor: 34, colBlockingSize: 12)                   	 0.0141352 	 100       	 12.3076   	 0         	 1.32436   	 9.2933    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 80, r: 80, streamingCols: 0)                   	 0.0132927 	 100       	 120.367   	 0         	 24.266    	 4.96032   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 130, r1_: 130, n: 50, r2: 50)         	 0.0115509 	 100       	 731.544   	 0         	 46.1886   	 15.8382   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4000, m: 50, k: 50) 	 0.00796591	 100       	 251.07    	 0         	 40.4223   	 6.21118   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 80, m: 2500)                                                                  	 0.00658644	 100       	 0         	 0         	 48.5847   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 80)                                                         	 0.00616508	 100       	 0         	 0         	 51.9053   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 50, r2left: 50, r2right: 0)                 	 0.00609268	 100       	 0         	 0         	 52.5221   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00458072	 100       	 3.63842   	 0         	 1.31857   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 80, m: 80, fromLeft: 1)                	 0.00370379	 800       	 0         	 0         	 22.1179   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 130, leftOrthog: 1)         	 0.0030952 	 100       	 21.0003   	 0         	 6.33238   	 3.31633   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00303538	 100       	 8.4588    	 0         	 1.31779   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 80, n: 50, r2: 50)                                                                                         	 0.00257343	 100       	 0         	 0         	 124.347   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 80, Qr2: 50)       	 0.00141266	 100       	 0         	 0         	 368.099   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000919787	 100       	 0.543604  	 0         	 2.17442   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 80)   	 0.000919242	 100       	 43.5141   	 0         	 9.13796   	 4.7619    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 80)                                                                                          	 0.000893082	 200       	 0         	 0         	 14.3324   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000885663	 100       	 28.2274   	 0         	 6.77459   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 80, k: 80)   	 0.000879576	 100       	 72.7623   	 0         	 13.0972   	 5.55556   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000805851	 100       	 31.0231   	 0         	 7.44555   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000792722	 200       	 0         	 0         	 10.0918   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000726875	 100       	 34.3938   	 0         	 8.25451   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 80)                 	 0.000596357	 100       	 0         	 0         	 17.4392   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000525831	 100       	 0         	 0         	 7.60701   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000500137	 100       	 0         	 0         	 7.99781   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000443469	 100       	 1.12747   	 0         	 13.5297   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000411263	 100       	 0         	 0         	 9.72614   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000388624	 100       	 0.643295  	 0         	 10.2927   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000386193	 100       	 0         	 0         	 10.3575   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 80)                                                                                 	 0.000368908	 100       	 1.08428   	 0         	 17.3485   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000329339	 100       	 0.759096  	 0         	 12.1455   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4000, m: 0, k: 50)  	 5.57e-06  	 100       	 0         	 0         	 28725.3   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.34861   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.34857   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 3.9806    	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 3.97925   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.70217   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.58332   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.5145    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.3679    	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.09163   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.927675  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.492878  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.433059  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.196983  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.170628  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.129585  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.120219  	 1800      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0906893 	 800       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0868333 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0866866 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0644713 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.046374  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.040937  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0389547 	 1300      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00687659	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00647094	 5200      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00372367	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00370379	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108687	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000919787	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000443469	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23364729890688 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23364554975232 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23364353648768 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23364152322304 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23363950995840 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23363749669376 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23363548342912 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23363347016448 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23363145689984 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23362944363520 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23362743037056 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23362541710592 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23362340384128 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23362139057664 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23361937731200 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23361736404736 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23361535078272 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23361333751808 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23361132425344 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23360931098880 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23360729772416 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23360528445952 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23360327119488 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23360125793024 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23359924466560 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23359723140096 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23359521813632 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23359320487168 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23359119160704 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23358917834240 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23358716507776 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23358515181312 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23358313850752 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23358112524288 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23357911197824 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23357709871360 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23357508544896 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23357307218432 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23357105891968 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23356904565504 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23356703239040 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23356501912576 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23356300586112 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23356099259648 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23355897933184 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23355696606720 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23355495280256 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23355293953792 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23355092627328 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23354891300864 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23354689974400 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23354488647936 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23354287321472 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23354085995008 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23353884668544 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23353683342080 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23353482015616 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23353280689152 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23353079362688 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23352878036224 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23352676709760 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23352475383296 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23352274056832 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23364624230144 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23364445652736 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 131, m: 131)                                                               	 1.45156   	 700       	 10.1184   	 0         	 0.199122  	 50.8151   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6550, cols: 131, reductionFactor: 34, colBlockingSize: 12)                 	 0.945081  	 600       	 146.921   	 0         	 4.44513   	 33.0522   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6550, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.457359  	 700       	 135.103   	 0         	 6.57649   	 20.5433   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6550, r: 131, r2: 131, leftOrthog: 1)      	 0.385163  	 600       	 350.204   	 0         	 32.5075   	 10.773    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 131, r1_: 131, n: 50, r2: 131)        	 0.175732  	 600       	 767.562   	 0         	 47.3428   	 16.2129   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6550, Xcols: 81, r: 81, streamingCols: 0)                   	 0.171436  	 700       	 175.472   	 0         	 34.7683   	 5.0469    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 81, Qr2: 131)      	 0.129444  	 700       	 0         	 0         	 65.4814   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 131, reductionFactor: 34, colBlockingSize: 12)                 	 0.121333  	 100       	 72.7987   	 0         	 2.2725    	 32.0346   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 81, m: 81)                                                                  	 0.084307  	 800       	 6.72388   	 0         	 1.50035   	 4.48156   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, n: 50, r2left: 50, r2right: 81)                	 0.0793437 	 700       	 0         	 0         	 74.8914   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4050, m: 50, k: 81) 	 0.068191  	 700       	 336.753   	 0         	 43.9026   	 7.67045   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 81, m: 6550)                                                                  	 0.0636059 	 700       	 0         	 0         	 93.4215   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 131)                                                                	 0.0617682 	 100       	 4.51149   	 0         	 0.202693  	 22.2577   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6550, m: 81)                                                         	 0.0587394 	 700       	 0         	 0         	 101.161   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 81, reductionFactor: 37, colBlockingSize: 12)                  	 0.05496   	 100       	 61.3021   	 0         	 3.0431    	 20.1446   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 81, m: 50, k: 2500)   	 0.0531772 	 800       	 304.642   	 0         	 39.9028   	 7.6346    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4050, m: 81, k: 81) 	 0.0483912 	 700       	 768.753   	 0         	 76.6855   	 10.0248   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 81, m: 2500, k: 50)	 0.0413366 	 800       	 391.904   	 0         	 51.3327   	 7.6346    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0411094 	 100       	 2.83796   	 0         	 0.146925  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 81, n: 50, r2: 81)                                                                                         	 0.0381565 	 700       	 0         	 0         	 96.2918   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6550, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0306235 	 100       	 109.834   	 0         	 8.62084   	 12.7406   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 131, r2: 131, leftOrthog: 1)      	 0.030175  	 100       	 284.358   	 0         	 26.958    	 10.5482   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6550, r: 50, r2: 50, leftOrthog: 1)        	 0.0169241 	 100       	 193.511   	 0         	 46.679    	 4.14557   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 131, r1_: 50, n: 50, r2: 131)         	 0.0156012 	 100       	 549.99    	 0         	 61.1287   	 8.99725   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 131, reductionFactor: 34, colBlockingSize: 12)                   	 0.0141532 	 100       	 12.4818   	 0         	 1.34025   	 9.31305   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 81, r: 81, streamingCols: 0)                   	 0.0139562 	 100       	 117.528   	 0         	 23.4035   	 5.02182   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 131, r1_: 131, n: 50, r2: 50)         	 0.0118007 	 100       	 727.117   	 0         	 45.5675   	 15.9569   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4050, m: 50, k: 50) 	 0.00734456	 100       	 275.714   	 0         	 44.3866   	 6.21166   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 81, n: 50, r2left: 50, r2right: 0)                 	 0.00587855	 100       	 0         	 0         	 55.1157   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 81, m: 2500)                                                                  	 0.00575073	 100       	 0         	 0         	 56.3406   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 81)                                                         	 0.00546028	 100       	 0         	 0         	 59.3376   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0044218 	 100       	 3.76919   	 0         	 1.36596   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 81, m: 81, fromLeft: 1)                	 0.00381711	 800       	 0         	 0         	 22.0011   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00374489	 100       	 6.85618   	 0         	 1.06812   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 131, leftOrthog: 1)         	 0.00307423	 100       	 21.3061   	 0         	 6.41461   	 3.3215    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 81, n: 50, r2: 50)                                                                                         	 0.00284208	 100       	 0         	 0         	 114.001   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 81, Qr2: 50)       	 0.00143088	 100       	 0         	 0         	 366.208   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 81)   	 0.00095983	 100       	 42.195    	 0         	 8.8349    	 4.77594   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 81, k: 81)   	 0.000953209	 100       	 68.8307   	 0         	 12.3045   	 5.59392   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000919181	 100       	 27.1981   	 0         	 6.52755   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000907174	 100       	 0.551162  	 0         	 2.20465   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 81)                                                                                          	 0.000883216	 200       	 0         	 0         	 14.6736   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000830344	 100       	 30.108    	 0         	 7.22592   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000799663	 200       	 0         	 0         	 10.0042   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000702827	 100       	 35.5706   	 0         	 8.53695   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 81)                 	 0.000575575	 100       	 0         	 0         	 18.2079   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000501375	 100       	 0         	 0         	 7.97806   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000467713	 100       	 0         	 0         	 8.55225   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000442484	 100       	 1.12998   	 0         	 13.5598   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000414552	 100       	 0.603061  	 0         	 9.64897   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000406711	 100       	 0         	 0         	 9.83499   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000392198	 100       	 0         	 0         	 10.1989   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 81)                                                                                 	 0.000367759	 100       	 1.10126   	 0         	 17.6202   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000325421	 100       	 0.768236  	 0         	 12.2918   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4050, m: 0, k: 50)  	 5.21e-06  	 100       	 0         	 0         	 31094     	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.47195   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.4719    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.06416   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.06283   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.77465   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.62725   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.55444   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.40767   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.11185   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.952268  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.516548  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.435336  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.203965  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.185392  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.131281  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.125845  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0887288 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0862655 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0693567 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0645919 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0540964 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0431828 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0420395 	 900       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00908214	 5200      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00718158	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0042775 	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00381711	 800       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110773	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000907174	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000442484	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22501725255552 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22501534984192 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22501333657728 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22501132331264 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22500931004800 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22500729678336 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22500528351872 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22500327025408 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22500125698944 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22499924372480 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22499723046016 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22499521719552 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22499320393088 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22499119066624 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22498917740160 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22498716413696 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22498515087232 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22498313760768 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22498112434304 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22497911107840 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22497709781376 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22497508454912 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22497307128448 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22497105801984 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22496904475520 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22496703149056 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22496501822592 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22496300496128 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22496099169664 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22495897843200 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22495696516736 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22495495190272 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22495293859712 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22495092533248 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22494891206784 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22494689880320 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22494488553856 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22494287227392 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22494085900928 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22493884574464 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22493683248000 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22493481921536 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22493280595072 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22493079268608 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22492877942144 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22492676615680 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22492475289216 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22492273962752 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22492072636288 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22491871309824 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22491669983360 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22491468656896 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22491267330432 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22491066003968 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22490864677504 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22490663351040 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22490462024576 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22490260698112 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22490059371648 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22489858045184 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22489656718720 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22489455392256 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22489254065792 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22501619595008 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22501613004544 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 132, m: 132)                                                               	 1.4422    	 700       	 10.4191   	 0         	 0.203483  	 51.204    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6600, cols: 132, reductionFactor: 34, colBlockingSize: 12)                 	 0.960832  	 600       	 147.848   	 0         	 4.43927   	 33.3045   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6600, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.468614  	 700       	 136.165   	 0         	 6.54777   	 20.7957   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6600, r: 132, r2: 132, leftOrthog: 1)      	 0.393693  	 600       	 350.522   	 0         	 32.2905   	 10.8553   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 132, r1_: 132, n: 50, r2: 132)        	 0.18024   	 600       	 765.636   	 0         	 46.8662   	 16.3366   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6600, Xcols: 82, r: 82, streamingCols: 0)                   	 0.174127  	 700       	 178.404   	 0         	 34.9186   	 5.10913   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 82, Qr2: 132)      	 0.128045  	 700       	 0         	 0         	 67.2374   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 132, reductionFactor: 34, colBlockingSize: 12)                 	 0.123637  	 100       	 72.5366   	 0         	 2.24802   	 32.2669   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 82, m: 82)                                                                  	 0.0871239 	 800       	 6.75044   	 0         	 1.48783   	 4.5371    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, n: 50, r2left: 50, r2right: 82)                	 0.0791475 	 700       	 0         	 0         	 76.5841   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4100, m: 50, k: 82) 	 0.0668428 	 700       	 352.08    	 0         	 45.6845   	 7.70677   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6600, m: 82)                                                         	 0.0637872 	 700       	 0         	 0         	 95.026    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 132)                                                                	 0.0632483 	 100       	 4.43754   	 0         	 0.199215  	 22.2751   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 82, m: 6600)                                                                  	 0.0595712 	 700       	 0         	 0         	 101.751   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 82, reductionFactor: 37, colBlockingSize: 12)                  	 0.0582965 	 100       	 59.2294   	 0         	 2.90548   	 20.3854   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 82, m: 50, k: 2500)   	 0.0534856 	 800       	 306.625   	 0         	 39.9779   	 7.66986   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4100, m: 82, k: 82) 	 0.0499625 	 700       	 772.494   	 0         	 76.1189   	 10.1485   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0415976 	 100       	 2.80465   	 0         	 0.145201  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 82, n: 50, r2: 82)                                                                                         	 0.040339  	 700       	 0         	 0         	 93.3449   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 82, m: 2500, k: 50)	 0.0402092 	 800       	 407.866   	 0         	 53.1778   	 7.66986   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6600, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0297363 	 100       	 113.975   	 0         	 8.94529   	 12.7413   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 132, r2: 132, leftOrthog: 1)      	 0.0270751 	 100       	 321.771   	 0         	 30.2816   	 10.626    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6600, r: 50, r2: 50, leftOrthog: 1)        	 0.0179799 	 100       	 183.538   	 0         	 44.2717   	 4.14573   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 132, r1_: 50, n: 50, r2: 132)         	 0.0158531 	 100       	 549.545   	 0         	 60.9495   	 9.01639   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 132, reductionFactor: 34, colBlockingSize: 12)                   	 0.014731  	 100       	 12.176    	 0         	 1.30468   	 9.33258   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 82, r: 82, streamingCols: 0)                   	 0.0137516 	 100       	 122.241   	 0         	 24.0474   	 5.08332   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 132, r1_: 132, n: 50, r2: 50)         	 0.0117591 	 100       	 740.871   	 0         	 46.0867   	 16.0756   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4100, m: 50, k: 50) 	 0.00848248	 100       	 241.675   	 0         	 38.9037   	 6.21212   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 82, n: 50, r2left: 50, r2right: 0)                 	 0.00611229	 100       	 0         	 0         	 53.6624   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 82)                                                         	 0.00583483	 100       	 0         	 0         	 56.2142   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 82, m: 2500)                                                                  	 0.00579026	 100       	 0         	 0         	 56.6469   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00438755	 100       	 3.79861   	 0         	 1.37662   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 82, m: 82, fromLeft: 1)                	 0.00399818	 800       	 0         	 0         	 21.5266   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 132, leftOrthog: 1)         	 0.00311813	 100       	 21.1665   	 0         	 6.36278   	 3.32661   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 82, n: 50, r2: 50)                                                                                         	 0.00300743	 100       	 0         	 0         	 109.063   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00285801	 100       	 8.98375   	 0         	 1.39957   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 82, Qr2: 50)       	 0.00151573	 100       	 0         	 0         	 348.347   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 82, k: 82)   	 0.00094326	 100       	 71.2847   	 0         	 12.6574   	 5.63187   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 82)   	 0.000921611	 100       	 44.4873   	 0         	 9.28808   	 4.78972   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.00091845	 100       	 0.544395  	 0         	 2.17758   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 82)                                                                                          	 0.00091072	 200       	 0         	 0         	 14.4062   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000903014	 100       	 27.6851   	 0         	 6.64442   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000822269	 200       	 0         	 0         	 9.72918   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000765174	 100       	 32.6723   	 0         	 7.84135   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000710959	 100       	 35.1638   	 0         	 8.43931   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 82)                 	 0.000576234	 100       	 0         	 0         	 18.3259   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000520745	 100       	 0         	 0         	 7.6813    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000499108	 100       	 0         	 0         	 8.0143    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000446287	 100       	 1.12036   	 0         	 13.4443   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.00043698	 100       	 0         	 0         	 9.15374   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000404568	 100       	 0.617943  	 0         	 9.88709   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 82)                                                                                 	 0.000379204	 100       	 1.08121   	 0         	 17.2994   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000363346	 100       	 0         	 0         	 11.0088   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000328967	 100       	 0.759955  	 0         	 12.1593   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4100, m: 0, k: 50)  	 5.64e-06  	 100       	 0         	 0         	 29078     	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.52594   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.52589   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.10214   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.1008    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.82455   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.65871   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.54704   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.42368   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.12967   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.96952   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.530338  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.441866  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.208617  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.187878  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.129998  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.127158  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0915115 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0863351 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0699853 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0653615 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0543886 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0456002 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0409202 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00876478	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00715943	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00399818	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00392347	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111274	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.00091845	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000446287	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22802351523712 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22802115586048 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22801914259584 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22801712933120 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22801511606656 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22801310280192 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22801108953728 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22800907627264 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22800706300800 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22800504974336 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22800303647872 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22800102321408 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22799900994944 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22799699668480 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22799498342016 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22799297015552 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22799095689088 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22798894362624 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22798693036160 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22798491709696 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22798290383232 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22798089056768 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22797887730304 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22797686403840 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22797485077376 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22797283750912 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22797082424448 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22796881097984 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22796679771520 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22796478445056 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22796277118592 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22796075792128 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22795874461568 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22795673135104 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22795471808640 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22795270482176 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22795069155712 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22794867829248 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22794666502784 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22794465176320 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22794263849856 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22794062523392 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22793861196928 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22793659870464 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22793458544000 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22793257217536 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22793055891072 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22792854564608 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22792653238144 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22792451911680 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22792250585216 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22792049258752 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22791847932288 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22791646605824 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22791445279360 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22791243952896 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22791042626432 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22790841299968 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22790639973504 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22790438647040 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22790237320576 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22790035994112 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22789834667648 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22802245863168 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22802239272704 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 133, m: 133)                                                               	 1.50413   	 700       	 10.2189   	 0         	 0.198068  	 51.5929   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6650, cols: 133, reductionFactor: 34, colBlockingSize: 12)                 	 0.972018  	 600       	 149.493   	 0         	 4.45493   	 33.5568   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6650, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.471414  	 700       	 139.729   	 0         	 6.63854   	 21.0481   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6650, r: 133, r2: 133, leftOrthog: 1)      	 0.420402  	 600       	 335.769   	 0         	 30.6989   	 10.9375   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 133, r1_: 133, n: 50, r2: 133)        	 0.181654  	 600       	 777.072   	 0         	 47.2086   	 16.4604   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6650, Xcols: 83, r: 83, streamingCols: 0)                   	 0.170293  	 700       	 188.312   	 0         	 36.4144   	 5.17136   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 83, Qr2: 133)      	 0.125788  	 700       	 0         	 0         	 69.5127   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 133, reductionFactor: 34, colBlockingSize: 12)                 	 0.125514  	 100       	 72.5388   	 0         	 2.23203   	 32.499    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 83, m: 83)                                                                  	 0.0895585 	 800       	 6.81014   	 0         	 1.48283   	 4.59266   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, n: 50, r2left: 50, r2right: 83)                	 0.0813486 	 700       	 0         	 0         	 75.992    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4150, m: 50, k: 83) 	 0.0661398 	 700       	 364.553   	 0         	 47.0845   	 7.74254   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 133)                                                                	 0.0634652 	 100       	 4.45388   	 0         	 0.199794  	 22.2923   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 83, m: 6650)                                                                  	 0.0579791 	 700       	 0         	 0         	 106.622   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6650, m: 83)                                                         	 0.0579298 	 700       	 0         	 0         	 106.713   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 83, reductionFactor: 37, colBlockingSize: 12)                  	 0.0570693 	 100       	 61.9877   	 0         	 3.00531   	 20.626    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 83, m: 50, k: 2500)   	 0.0529236 	 800       	 313.659   	 0         	 40.7107   	 7.70459   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4150, m: 83, k: 83) 	 0.0504973 	 700       	 792.619   	 0         	 77.161    	 10.2723   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0420293 	 100       	 2.77584   	 0         	 0.143709  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 83, m: 2500, k: 50)	 0.0411624 	 800       	 403.281   	 0         	 52.3429   	 7.70459   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 83, n: 50, r2: 83)                                                                                         	 0.0409308 	 700       	 0         	 0         	 94.2527   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6650, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0292917 	 100       	 116.581   	 0         	 9.14934   	 12.742    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 133, r2: 133, leftOrthog: 1)      	 0.0270779 	 100       	 326.632   	 0         	 30.5158   	 10.7037   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6650, r: 50, r2: 50, leftOrthog: 1)        	 0.0183995 	 100       	 180.712   	 0         	 43.5882   	 4.14589   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 133, r1_: 50, n: 50, r2: 133)         	 0.0166853 	 100       	 530.078   	 0         	 58.6672   	 9.03533   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 133, reductionFactor: 34, colBlockingSize: 12)                   	 0.0144148 	 100       	 12.6323   	 0         	 1.35078   	 9.3519    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 83, r: 83, streamingCols: 0)                   	 0.0139562 	 100       	 123.404   	 0         	 23.9861   	 5.1448    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 133, r1_: 133, n: 50, r2: 50)         	 0.0118802 	 100       	 744.472   	 0         	 45.9714   	 16.1942   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00861452	 100       	 2.98051   	 0         	 0.464332  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4150, m: 50, k: 50) 	 0.00856482	 100       	 242.27    	 0         	 38.9967   	 6.21257   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 83, m: 2500)                                                                  	 0.00593974	 100       	 0         	 0         	 55.8947   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 83, n: 50, r2left: 50, r2right: 0)                 	 0.00576307	 100       	 0         	 0         	 57.6082   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 83)                                                         	 0.00568578	 100       	 0         	 0         	 58.3913   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0043616 	 100       	 3.82121   	 0         	 1.38481   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 83, m: 83, fromLeft: 1)                	 0.00399265	 800       	 0         	 0         	 22.0854   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 133, leftOrthog: 1)         	 0.00298801	 100       	 22.2556   	 0         	 6.68004   	 3.33166   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 83, n: 50, r2: 50)                                                                                         	 0.00271947	 100       	 0         	 0         	 122.083   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 83, Qr2: 50)       	 0.00143513	 100       	 0         	 0         	 370.699   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 83, k: 83)   	 0.000967468	 100       	 71.2065   	 0         	 12.5598   	 5.6694    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 83)   	 0.000960029	 100       	 43.2279   	 0         	 8.99973   	 4.80324   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 83)                                                                                          	 0.000939546	 200       	 0         	 0         	 14.1345   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000916712	 100       	 0.545428  	 0         	 2.18171   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000906419	 100       	 27.5811   	 0         	 6.61946   	 4.16667   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000836858	 100       	 29.8736   	 0         	 7.16968   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000820024	 200       	 0         	 0         	 9.75581   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000703812	 100       	 35.5208   	 0         	 8.525     	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 83)                 	 0.000650641	 100       	 0         	 0         	 16.3531   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000521507	 100       	 0         	 0         	 7.67008   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000517281	 100       	 0         	 0         	 7.73274   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00041576	 100       	 1.20262   	 0         	 14.4314   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000414952	 100       	 0         	 0         	 9.63967   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000401446	 100       	 0         	 0         	 9.96398   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000388185	 100       	 0.644023  	 0         	 10.3044   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 83)                                                                                 	 0.000368897	 100       	 1.12498   	 0         	 17.9996   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000328803	 100       	 0.760334  	 0         	 12.1653   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4150, m: 0, k: 50)  	 5.36e-06  	 100       	 0         	 0         	 30970.1   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.61808   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.61803   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.20703   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.20569   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.92297   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.67834   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.60963   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.41093   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.14186   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 0.965844  	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.5376    	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.468868  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.211056  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.184249  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.127638  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.127135  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0939201 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0882838 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.064017  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0639189 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0538301 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0459271 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0418662 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0057069 	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00402509	 6400      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00399265	 800       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00339528	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00108588	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000916712	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00041576	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22712341559168 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22712122599424 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22711921272960 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22711719946496 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22711518620032 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22711317293568 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22711115967104 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22710914640640 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22710713314176 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22710511987712 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22710310661248 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22710109334784 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22709908008320 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22709706681856 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22709505355392 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22709304028928 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22709102702464 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22708901376000 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22708700049536 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22708498723072 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22708297396608 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22708096070144 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22707894743680 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22707693417216 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22707492090752 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22707290764288 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22707089437824 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22706888111360 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22706686784896 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22706485458432 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22706284131968 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22706082805504 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22705881474944 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22705680148480 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22705478822016 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22705277495552 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22705076169088 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22704874842624 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22704673516160 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22704472189696 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22704270863232 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22704069536768 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22703868210304 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22703666883840 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22703465557376 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22703264230912 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22703062904448 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22702861577984 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22702660251520 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22702458925056 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22702257598592 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22702056272128 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22701854945664 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22701653619200 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22701452292736 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22701250966272 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22701049639808 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22700848313344 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22700646986880 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22700445660416 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22700244333952 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22700043007488 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22699841681024 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22712235898624 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22712229308160 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 134, m: 134)                                                               	 1.47341   	 700       	 10.669    	 0         	 0.205246  	 51.9818   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6700, cols: 134, reductionFactor: 33, colBlockingSize: 12)                 	 0.967446  	 600       	 153.746   	 0         	 4.54354   	 33.8384   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6700, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.507656  	 700       	 133.898   	 0         	 6.28613   	 21.3005   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6700, r: 134, r2: 134, leftOrthog: 1)      	 0.4022    	 600       	 358.941   	 0         	 32.5726   	 11.0197   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 134, r1_: 134, n: 50, r2: 134)        	 0.1862    	 600       	 775.331   	 0         	 46.7513   	 16.5842   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6700, Xcols: 84, r: 84, streamingCols: 0)                   	 0.170786  	 700       	 193.767   	 0         	 37.0237   	 5.2336    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 84, Qr2: 134)      	 0.128065  	 700       	 0         	 0         	 69.3347   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 134, reductionFactor: 33, colBlockingSize: 12)                 	 0.124323  	 100       	 74.4033   	 0         	 2.27122   	 32.7593   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 84, m: 84)                                                                  	 0.093949  	 800       	 6.72937   	 0         	 1.44773   	 4.64822   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 84, m: 6700)                                                                  	 0.0843898 	 700       	 0         	 0         	 74.6933   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, n: 50, r2left: 50, r2right: 84)                	 0.0804056 	 700       	 0         	 0         	 78.3945   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 134)                                                                	 0.0642324 	 100       	 4.43183   	 0         	 0.198654  	 22.3093   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4200, m: 50, k: 84) 	 0.0637449 	 700       	 387.419   	 0         	 49.8111   	 7.77778   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 84, reductionFactor: 37, colBlockingSize: 12)                  	 0.060243  	 100       	 60.1456   	 0         	 2.8824    	 20.8665   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6700, m: 84)                                                         	 0.0562025 	 700       	 0         	 0         	 112.155   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 84, m: 50, k: 2500)   	 0.0517951 	 800       	 324.355   	 0         	 41.9129   	 7.7388    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4200, m: 84, k: 84) 	 0.0489928 	 700       	 846.844   	 0         	 81.4584   	 10.396    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0417511 	 100       	 2.79434   	 0         	 0.144667  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 84, n: 50, r2: 84)                                                                                         	 0.0412215 	 700       	 0         	 0         	 95.8567   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 84, m: 2500, k: 50)	 0.0371886 	 800       	 451.752   	 0         	 58.3749   	 7.7388    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6700, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0296475 	 100       	 116.048   	 0         	 9.107     	 12.7427   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 134, r2: 134, leftOrthog: 1)      	 0.0271137 	 100       	 331.124   	 0         	 30.7124   	 10.7814   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6700, r: 50, r2: 50, leftOrthog: 1)        	 0.0188624 	 100       	 177.602   	 0         	 42.8364   	 4.14604   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 134, r1_: 50, n: 50, r2: 134)         	 0.016365  	 100       	 548.61    	 0         	 60.5927   	 9.05405   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 134, reductionFactor: 33, colBlockingSize: 12)                   	 0.0152608 	 100       	 12.1227   	 0         	 1.29252   	 9.37912   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 84, r: 84, streamingCols: 0)                   	 0.014436  	 100       	 122.195   	 0         	 23.4707   	 5.20627   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 134, r1_: 134, n: 50, r2: 50)         	 0.0120738 	 100       	 743.592   	 0         	 45.5833   	 16.3128   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4200, m: 50, k: 50) 	 0.00877945	 100       	 239.195   	 0         	 38.499    	 6.21302   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 84, m: 2500)                                                                  	 0.00706117	 100       	 0         	 0         	 47.5842   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 84, n: 50, r2left: 50, r2right: 0)                 	 0.00636305	 100       	 0         	 0         	 52.8049   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 84)                                                         	 0.00610131	 100       	 0         	 0         	 55.0701   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00466129	 100       	 5.50828   	 0         	 0.858132  	 6.41892   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00458295	 100       	 3.63665   	 0         	 1.31793   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 84, m: 84, fromLeft: 1)                	 0.0041587 	 800       	 0         	 0         	 21.7176   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 134, leftOrthog: 1)         	 0.00299343	 100       	 22.3824   	 0         	 6.70803   	 3.33665   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 84, n: 50, r2: 50)                                                                                         	 0.00286269	 100       	 0         	 0         	 117.372   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 84, Qr2: 50)       	 0.00157688	 100       	 0         	 0         	 339.911   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 84, k: 84)   	 0.000950939	 100       	 74.2003   	 0         	 13.0027   	 5.70652   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 84)   	 0.000925606	 100       	 45.3757   	 0         	 9.42086   	 4.81651   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000917104	 100       	 0.545194  	 0         	 2.18078   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000897794	 100       	 27.846    	 0         	 6.68305   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 84)                                                                                          	 0.000893938	 200       	 0         	 0         	 15.0346   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000791923	 100       	 31.5687   	 0         	 7.57649   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000754875	 200       	 0         	 0         	 10.5978   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000700646	 100       	 35.6814   	 0         	 8.56353   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 84)                 	 0.000593366	 100       	 0         	 0         	 18.0664   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000511569	 100       	 0         	 0         	 7.81908   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000503461	 100       	 0         	 0         	 7.945     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000455342	 100       	 0         	 0         	 8.78461   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000453116	 100       	 1.10347   	 0         	 13.2416   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000427689	 100       	 0.584537  	 0         	 9.35259   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 84)                                                                                 	 0.000425614	 100       	 0.98681   	 0         	 15.789    	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000392012	 100       	 0         	 0         	 10.2038   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000322887	 100       	 0.774265  	 0         	 12.3882   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4200, m: 0, k: 50)  	 5.37e-06  	 100       	 0         	 0         	 31284.9   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.62371   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.62366   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.14425   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.14291   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.87306   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.70924   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.5794    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.47934   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.13728   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.03567   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.573027  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.45117   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.21543   	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.185221  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.130097  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.123399  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0985319 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.091451  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0878655 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0626958 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0526929 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0462446 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0378892 	 900       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00599833	 5200      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0056474 	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.0041587 	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00393687	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00117619	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000917104	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000453116	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23326965143424 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23326772684800 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23326571358336 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23326370031872 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23326168705408 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23325967378944 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23325766052480 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23325564726016 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23325363399552 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23325162073088 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23324960746624 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23324759420160 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23324558093696 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23324356767232 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23324155440768 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23323954114304 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23323752787840 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23323551461376 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23323350134912 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23323148808448 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23322947481984 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23322746155520 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23322544829056 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23322343502592 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23322142176128 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23321940849664 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23321739523200 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23321538196736 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23321336870272 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23321135543808 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23320934217344 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23320732890880 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23320531560320 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23320330233856 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23320128907392 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23319927580928 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23319726254464 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23319524928000 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23319323601536 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23319122275072 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23318920948608 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23318719622144 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23318518295680 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23318316969216 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23318115642752 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23317914316288 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23317712989824 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23317511663360 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23317310336896 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23317109010432 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23316907683968 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23316706357504 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23316505031040 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23316303704576 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23316102378112 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23315901051648 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23315699725184 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23315498398720 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23315297072256 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23315095745792 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23314894419328 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23314693092864 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23314491766400 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23326859482880 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23326852892416 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 135, m: 135)                                                               	 1.52507   	 700       	 10.5401   	 0         	 0.20126   	 52.3707   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6750, cols: 135, reductionFactor: 33, colBlockingSize: 12)                 	 0.999117  	 600       	 152.23    	 0         	 4.46542   	 34.0909   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6750, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.505504  	 700       	 138.716   	 0         	 6.43607   	 21.5529   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6750, r: 135, r2: 135, leftOrthog: 1)      	 0.40788   	 600       	 361.926   	 0         	 32.6001   	 11.102    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 135, r1_: 135, n: 50, r2: 135)        	 0.19531   	 600       	 755.837   	 0         	 45.2383   	 16.7079   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6750, Xcols: 85, r: 85, streamingCols: 0)                   	 0.178228  	 700       	 191.541   	 0         	 36.1684   	 5.29583   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 85, Qr2: 135)      	 0.126034  	 700       	 0         	 0         	 71.5362   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 135, reductionFactor: 33, colBlockingSize: 12)                 	 0.125364  	 100       	 74.8912   	 0         	 2.27004   	 32.9912   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 85, m: 85)                                                                  	 0.0938814 	 800       	 6.97759   	 0         	 1.4834    	 4.70377   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, n: 50, r2left: 50, r2right: 85)                	 0.0829396 	 700       	 0         	 0         	 77.4781   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4250, m: 50, k: 85) 	 0.0686041 	 700       	 368.6     	 0         	 47.1809   	 7.8125    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6750, m: 85)                                                         	 0.0631452 	 700       	 0         	 0         	 101.765   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 135)                                                                	 0.0621868 	 100       	 4.60977   	 0         	 0.206475  	 22.3261   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 85, reductionFactor: 37, colBlockingSize: 12)                  	 0.0595972 	 100       	 62.2535   	 0         	 2.94947   	 21.1067   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 85, m: 6750)                                                                  	 0.0570954 	 700       	 0         	 0         	 112.548   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 85, m: 50, k: 2500)   	 0.053663  	 800       	 316.792   	 0         	 40.7581   	 7.77249   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4250, m: 85, k: 85) 	 0.0508688 	 700       	 845.091   	 0         	 80.3333   	 10.5198   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 85, m: 2500, k: 50)	 0.0421737 	 800       	 403.095   	 0         	 51.8617   	 7.77249   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 85, n: 50, r2: 85)                                                                                         	 0.0412481 	 700       	 0         	 0         	 98.0893   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0408852 	 100       	 2.85352   	 0         	 0.147731  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6750, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0302604 	 100       	 114.546   	 0         	 8.98864   	 12.7434   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 135, r2: 135, leftOrthog: 1)      	 0.0272486 	 100       	 334.421   	 0         	 30.7964   	 10.8591   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6750, r: 50, r2: 50, leftOrthog: 1)        	 0.0176218 	 100       	 191.525   	 0         	 46.1929   	 4.14619   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 135, r1_: 50, n: 50, r2: 135)         	 0.0163827 	 100       	 556.226   	 0         	 61.3085   	 9.07258   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 135, reductionFactor: 33, colBlockingSize: 12)                   	 0.0143881 	 100       	 13.0505   	 0         	 1.38864   	 9.39803   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 85, r: 85, streamingCols: 0)                   	 0.0141929 	 100       	 127.264   	 0         	 24.1593   	 5.26772   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 135, r1_: 135, n: 50, r2: 50)         	 0.0123504 	 100       	 737.828   	 0         	 44.9037   	 16.4314   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4250, m: 50, k: 50) 	 0.00858274	 100       	 247.59    	 0         	 39.8474   	 6.21345   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 85, m: 2500)                                                                  	 0.00604035	 100       	 0         	 0         	 56.2881   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 85)                                                         	 0.00563541	 100       	 0         	 0         	 60.3328   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 85, n: 50, r2left: 50, r2right: 0)                 	 0.00487735	 100       	 0         	 0         	 69.71     	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 85, m: 85, fromLeft: 1)                	 0.00450714	 800       	 0         	 0         	 20.5186   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00422981	 100       	 3.94027   	 0         	 1.42796   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 85, n: 50, r2: 50)                                                                                         	 0.00317708	 100       	 0         	 0         	 107.017   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 135, leftOrthog: 1)         	 0.00300141	 100       	 22.4895   	 0         	 6.73018   	 3.34158   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00277375	 100       	 9.25667   	 0         	 1.44209   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 85, Qr2: 50)       	 0.00202477	 100       	 0         	 0         	 266.696   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 85, k: 85)   	 0.00117546	 100       	 61.4652   	 0         	 10.7022   	 5.74324   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 85)   	 0.000974726	 100       	 43.602    	 0         	 9.02818   	 4.82955   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 85)                                                                                          	 0.000941435	 200       	 0         	 0         	 14.446    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000912042	 100       	 27.411    	 0         	 6.57864   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000906227	 100       	 0.551738  	 0         	 2.20695   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000802544	 200       	 0         	 0         	 9.9683    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000796686	 100       	 31.38     	 0         	 7.5312    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000737103	 100       	 33.9166   	 0         	 8.13998   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 85)                 	 0.000612245	 100       	 0         	 0         	 17.64     	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000528455	 100       	 0         	 0         	 7.56923   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000458136	 100       	 0         	 0         	 8.73103   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000434684	 100       	 1.15026   	 0         	 13.8031   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000412302	 100       	 0.606352  	 0         	 9.70163   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000409871	 100       	 0         	 0         	 9.75917   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000394771	 100       	 0         	 0         	 10.1325   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 85)                                                                                 	 0.000392038	 100       	 1.08408   	 0         	 17.3453   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.00032686	 100       	 0.764853  	 0         	 12.2377   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4250, m: 0, k: 50)  	 5.03e-06  	 100       	 0         	 0         	 33797.2   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.76355   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.76349   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.29152   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.29019   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 3.99191   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.737     	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.62814   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.47191   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.16975   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.01513   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.568397  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.455752  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.22484   	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.192421  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.130211  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.128469  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.0981112 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0888873 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0691754 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0631358 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.054575  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0466976 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0429108 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00936161	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00450714	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00424342	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00161046	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0011312 	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000906227	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000434684	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23439283029888 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23439045814272 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23438844487808 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23438643161344 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23438441834880 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23438240508416 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23438039181952 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23437837855488 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23437636529024 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23437435202560 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23437233876096 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23437032549632 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23436831223168 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23436629896704 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23436428570240 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23436227243776 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23436025917312 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23435824590848 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23435623264384 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23435421937920 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23435220611456 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23435019284992 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23434817958528 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23434616632064 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23434415305600 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23434213979136 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23434012652672 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23433811326208 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23433609999744 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23433408673280 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23433207346816 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23433006020352 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23432804689792 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23432603363328 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23432402036864 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23432200710400 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23431999383936 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23431798057472 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23431596731008 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23431395404544 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23431194078080 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23430992751616 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23430791425152 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23430590098688 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23430388772224 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23430187445760 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23429986119296 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23429784792832 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23429583466368 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23429382139904 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23429180813440 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23428979486976 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23428778160512 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23428576834048 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23428375507584 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23428174181120 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23427972854656 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23427771528192 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23427570201728 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23427368875264 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23427167548800 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23426966222336 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23426764895872 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23439177369344 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23439170778880 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 136, m: 136)                                                               	 1.50076   	 700       	 10.9507   	 0         	 0.207558  	 52.7596   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6800, cols: 136, reductionFactor: 33, colBlockingSize: 12)                 	 1.0037    	 600       	 154.928   	 0         	 4.51114   	 34.3434   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6800, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.529234  	 700       	 136.637   	 0         	 6.26622   	 21.8053   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6800, r: 136, r2: 136, leftOrthog: 1)      	 0.422566  	 600       	 357.168   	 0         	 31.9351   	 11.1842   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 136, r1_: 136, n: 50, r2: 136)        	 0.19519   	 600       	 773.233   	 0         	 45.9391   	 16.8317   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6800, Xcols: 86, r: 86, streamingCols: 0)                   	 0.180322  	 700       	 195.234   	 0         	 36.4374   	 5.35806   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 86, Qr2: 136)      	 0.132367  	 700       	 0         	 0         	 69.1546   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 136, reductionFactor: 33, colBlockingSize: 12)                 	 0.129898  	 100       	 73.3518   	 0         	 2.20786   	 33.223    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 86, m: 86)                                                                  	 0.0972358 	 800       	 6.97746   	 0         	 1.46606   	 4.75933   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, n: 50, r2left: 50, r2right: 86)                	 0.0843391 	 700       	 0         	 0         	 77.6598   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4300, m: 50, k: 86) 	 0.0679797 	 700       	 380.79    	 0         	 48.5286   	 7.84672   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 136)                                                                	 0.0644318 	 100       	 4.48019   	 0         	 0.200522  	 22.3426   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 86, reductionFactor: 37, colBlockingSize: 12)                  	 0.0619583 	 100       	 61.2984   	 0         	 2.87156   	 21.3468   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6800, m: 86)                                                         	 0.059669  	 700       	 0         	 0         	 109.768   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 86, m: 6800)                                                                  	 0.0573865 	 700       	 0         	 0         	 114.134   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 86, m: 50, k: 2500)   	 0.0541743 	 800       	 317.494   	 0         	 40.6746   	 7.80569   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4300, m: 86, k: 86) 	 0.0536538 	 700       	 829.837   	 0         	 77.9661   	 10.6436   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 86, n: 50, r2: 86)                                                                                         	 0.0426672 	 700       	 0         	 0         	 97.0712   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0415818 	 100       	 2.80571   	 0         	 0.145256  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 86, m: 2500, k: 50)	 0.0412766 	 800       	 416.701   	 0         	 53.3842   	 7.80569   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6800, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0297859 	 100       	 117.233   	 0         	 9.19899   	 12.7441   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 136, r2: 136, leftOrthog: 1)      	 0.0278847 	 100       	 331.651   	 0         	 30.3246   	 10.9367   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6800, r: 50, r2: 50, leftOrthog: 1)        	 0.0179617 	 100       	 189.291   	 0         	 45.6526   	 4.14634   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 136, r1_: 50, n: 50, r2: 136)         	 0.0169265 	 100       	 546.361   	 0         	 60.0997   	 9.09091   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 136, reductionFactor: 33, colBlockingSize: 12)                   	 0.0149143 	 100       	 12.7773   	 0         	 1.35687   	 9.41675   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 86, r: 86, streamingCols: 0)                   	 0.0144061 	 100       	 128.348   	 0         	 24.0841   	 5.32917   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 136, r1_: 136, n: 50, r2: 50)         	 0.0127607 	 100       	 724.727   	 0         	 43.7906   	 16.5498   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4300, m: 50, k: 50) 	 0.00908565	 100       	 236.637   	 0         	 38.082    	 6.21387   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 86, m: 2500)                                                                  	 0.00622701	 100       	 0         	 0         	 55.2432   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 86, n: 50, r2left: 50, r2right: 0)                 	 0.00614029	 100       	 0         	 0         	 56.0234   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 86)                                                         	 0.00577673	 100       	 0         	 0         	 59.5492   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 86, m: 86, fromLeft: 1)                	 0.00445425	 800       	 0         	 0         	 21.2536   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00442585	 100       	 3.76574   	 0         	 1.36471   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00307745	 100       	 8.34316   	 0         	 1.29978   	 6.41892   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 136, leftOrthog: 1)         	 0.00297215	 100       	 22.879    	 0         	 6.83679   	 3.34646   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 86, n: 50, r2: 50)                                                                                         	 0.00288889	 100       	 0         	 0         	 119.077   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 86, Qr2: 50)       	 0.00243861	 100       	 0         	 0         	 223.078   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 86, k: 86)   	 0.00115592	 100       	 63.9835   	 0         	 11.0706   	 5.77957   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 86)   	 0.00097708	 100       	 44.0087   	 0         	 9.0883    	 4.84234   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000967662	 100       	 25.8355   	 0         	 6.20051   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 86)                                                                                          	 0.000945735	 200       	 0         	 0         	 14.5495   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000837921	 100       	 0.596715  	 0         	 2.38686   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000787618	 100       	 31.7413   	 0         	 7.61791   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000758415	 200       	 0         	 0         	 10.5483   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000706333	 100       	 35.3941   	 0         	 8.49458   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 86)                 	 0.000577016	 100       	 0         	 0         	 18.8556   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000556854	 100       	 0         	 0         	 7.18321   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000508167	 100       	 0         	 0         	 7.87143   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000450734	 100       	 0         	 0         	 8.87441   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000437206	 100       	 1.14363   	 0         	 13.7235   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000427321	 100       	 0.58504   	 0         	 9.36064   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.00041479	 100       	 0         	 0         	 9.64343   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 86)                                                                                 	 0.000365883	 100       	 1.17524   	 0         	 18.8038   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000330443	 100       	 0.75656   	 0         	 12.105    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4300, m: 0, k: 50)  	 5.46e-06  	 100       	 0         	 0         	 31501.8   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 5.85192   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 5.85186   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.33848   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.33723   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.03591   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.77257   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.60677   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.51331   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.1789    	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.04479   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.594737  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.471385  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.225665  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.194728  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.135256  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.132858  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.101662  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0915646 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0658605 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0636135 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.055142  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0478171 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.041983  	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0122417 	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00445425	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00396341	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00171661	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112365	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000837921	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000437206	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22397420279680 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22397247809536 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22397046483072 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22396845156608 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22396643830144 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22396442503680 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22396241177216 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22396039850752 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22395838524288 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22395637197824 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22395435871360 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22395234544896 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22395033218432 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22394831891968 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22394630565504 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22394429239040 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22394227912576 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22394026586112 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22393825259648 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22393623933184 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22393422606720 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22393221280256 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22393019953792 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22392818627328 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22392617300864 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22392415974400 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22392214647936 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22392013321472 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22391811995008 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22391610668544 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22391409342080 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22391208015616 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22391006685056 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22390805358592 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22390604032128 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22390402705664 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22390201379200 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22390000052736 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22389798726272 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22389597399808 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22389396073344 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22389194746880 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22388993420416 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22388792093952 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22388590767488 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22388389441024 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22388188114560 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22387986788096 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22387785461632 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22387584135168 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22387382808704 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22387181482240 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22386980155776 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22386778829312 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22386577502848 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22386376176384 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22386174849920 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22385973523456 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22385772196992 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22385570870528 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22385369544064 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22385168217600 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22384966891136 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22397142447872 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22397136070400 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 137, m: 137)                                                               	 1.67694   	 700       	 10.018    	 0         	 0.18849   	 53.1485   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6850, cols: 137, reductionFactor: 33, colBlockingSize: 12)                 	 1.02275   	 600       	 155.421   	 0         	 4.49245   	 34.596    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6850, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.520433  	 700       	 143.243   	 0         	 6.49403   	 22.0577   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6850, r: 137, r2: 137, leftOrthog: 1)      	 0.431441  	 600       	 357.595   	 0         	 31.7398   	 11.2664   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 137, r1_: 137, n: 50, r2: 137)        	 0.203008  	 600       	 759.975   	 0         	 44.8219   	 16.9554   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6850, Xcols: 87, r: 87, streamingCols: 0)                   	 0.189431  	 700       	 191.591   	 0         	 35.347    	 5.42029   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 137, reductionFactor: 33, colBlockingSize: 12)                 	 0.13084   	 100       	 73.8986   	 0         	 2.20892   	 33.4546   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 87, Qr2: 137)      	 0.128558  	 700       	 0         	 0         	 72.2835   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 87, m: 87)                                                                  	 0.100595  	 800       	 6.98247   	 0         	 1.45018   	 4.81489   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, n: 50, r2left: 50, r2right: 87)                	 0.0836905 	 700       	 0         	 0         	 79.7539   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4350, m: 50, k: 87) 	 0.0766686 	 700       	 345.533   	 0         	 43.8469   	 7.88043   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 137)                                                                	 0.0657931 	 100       	 4.41789   	 0         	 0.197589  	 22.359    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 87, reductionFactor: 37, colBlockingSize: 12)                  	 0.0647454 	 100       	 60.0318   	 0         	 2.78097   	 21.5866   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6850, m: 87)                                                         	 0.0628399 	 700       	 0         	 0         	 106.217   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 87, m: 6850)                                                                  	 0.0625677 	 700       	 0         	 0         	 106.679   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 87, m: 50, k: 2500)   	 0.0543124 	 800       	 320.369   	 0         	 40.8717   	 7.8384    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4350, m: 87, k: 87) 	 0.053906  	 700       	 855.104   	 0         	 79.4166   	 10.7673   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 87, n: 50, r2: 87)                                                                                         	 0.0431021 	 700       	 0         	 0         	 98.3396   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0418994 	 100       	 2.78445   	 0         	 0.144155  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 87, m: 2500, k: 50)	 0.0418507 	 800       	 415.763   	 0         	 53.0419   	 7.8384    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6850, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0314674 	 100       	 111.785   	 0         	 8.77099   	 12.7448   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 137, r2: 137, leftOrthog: 1)      	 0.0287013 	 100       	 326.971   	 0         	 29.6861   	 11.0143   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6850, r: 50, r2: 50, leftOrthog: 1)        	 0.0172702 	 100       	 198.318   	 0         	 47.828    	 4.14649   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 137, r1_: 50, n: 50, r2: 137)         	 0.0172246 	 100       	 544.831   	 0         	 59.8121   	 9.10904   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 137, reductionFactor: 33, colBlockingSize: 12)                   	 0.0162224 	 100       	 11.9204   	 0         	 1.26339   	 9.43526   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 87, r: 87, streamingCols: 0)                   	 0.0147711 	 100       	 128.105   	 0         	 23.7645   	 5.3906    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 137, r1_: 137, n: 50, r2: 50)         	 0.0126791 	 100       	 740.155   	 0         	 44.405    	 16.6683   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4350, m: 50, k: 50) 	 0.00832349	 100       	 261.309   	 0         	 42.0497   	 6.21429   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00792234	 100       	 3.24092   	 0         	 0.504902  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 87, n: 50, r2left: 50, r2right: 0)                 	 0.00595202	 100       	 0         	 0         	 58.4676   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 87, m: 2500)                                                                  	 0.0059189 	 100       	 0         	 0         	 58.7947   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 87)                                                         	 0.00550874	 100       	 0         	 0         	 63.1723   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00461752	 100       	 3.60943   	 0         	 1.30806   	 2.75937   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 87, m: 87, fromLeft: 1)                	 0.00442675	 800       	 0         	 0         	 21.8858   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 137, leftOrthog: 1)         	 0.00308244	 100       	 22.2227   	 0         	 6.63111   	 3.35127   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 87, n: 50, r2: 50)                                                                                         	 0.00292129	 100       	 0         	 0         	 119.125   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 87, Qr2: 50)       	 0.00173982	 100       	 0         	 0         	 314.974   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 87, k: 87)   	 0.0010176 	 100       	 74.3809   	 0         	 12.7901   	 5.81551   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 87)   	 0.000990701	 100       	 43.9083   	 0         	 9.0441    	 4.85491   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000932539	 100       	 26.8085   	 0         	 6.43405   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 87)                                                                                          	 0.000890689	 200       	 0         	 0         	 15.6284   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000869666	 100       	 0.574933  	 0         	 2.29973   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000804169	 100       	 31.088    	 0         	 7.46112   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00079238	 200       	 0         	 0         	 10.0962   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000680037	 100       	 36.7627   	 0         	 8.82305   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 87)                 	 0.000585344	 100       	 0         	 0         	 18.724    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000497286	 100       	 0         	 0         	 8.04366   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000482677	 100       	 0         	 0         	 8.28712   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000470172	 100       	 0         	 0         	 8.50752   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000445869	 100       	 1.12141   	 0         	 13.4569   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000431671	 100       	 0.579145  	 0         	 9.26632   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000411888	 100       	 0         	 0         	 9.71138   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 87)                                                                                 	 0.000387769	 100       	 1.1218    	 0         	 17.9488   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000328231	 100       	 0.761659  	 0         	 12.1865   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4350, m: 0, k: 50)  	 5.47e-06  	 100       	 0         	 0         	 31809.9   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.05606   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.05601   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.51513   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.51384   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.23001   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.79438   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.78463   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.54081   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.20192   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.06958   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.59359   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.480495  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.233716  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.204202  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.140912  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.13071   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.105213  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0907105 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0688188 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0684866 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.055245  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0482037 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0425308 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00533811	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00442675	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00405416	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00165366	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00114767	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000869666	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000445869	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22710889969536 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22710713313280 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22710511986816 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22710310660352 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22710109333888 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22709908007424 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22709706680960 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22709505354496 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22709304028032 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22709102701568 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22708901375104 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22708700048640 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22708498722176 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22708297395712 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22708096069248 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22707894742784 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22707693416320 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22707492089856 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22707290763392 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22707089436928 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22706888110464 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22706686784000 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22706485457536 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22706284131072 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22706082804608 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22705881478144 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22705680151680 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22705478825216 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22705277498752 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22705076172288 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22704874845824 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22704673519360 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22704472188800 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22704270862336 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22704069535872 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22703868209408 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22703666882944 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22703465556480 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22703264230016 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22703062903552 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22702861577088 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22702660250624 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22702458924160 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22702257597696 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22702056271232 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22701854944768 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22701653618304 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22701452291840 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22701250965376 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22701049638912 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22700848312448 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22700646985984 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22700445659520 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22700244333056 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22700043006592 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22699841680128 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22699640353664 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22699439027200 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22699237700736 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22699036374272 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22698835047808 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22698633721344 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22698432394880 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22710784308992 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22710605735680 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 138, m: 138)                                                               	 1.5744    	 700       	 10.9058   	 0         	 0.203704  	 53.5373   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6900, cols: 138, reductionFactor: 32, colBlockingSize: 12)                 	 1.04342   	 600       	 155.845   	 0         	 4.46798   	 34.8805   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6900, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.533405  	 700       	 144.035   	 0         	 6.45604   	 22.3101   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6900, r: 138, r2: 138, leftOrthog: 1)      	 0.422285  	 600       	 373.407   	 0         	 32.9031   	 11.3487   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 138, r1_: 138, n: 50, r2: 138)        	 0.20692   	 600       	 762.055   	 0         	 44.6189   	 17.0792   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6900, Xcols: 88, r: 88, streamingCols: 0)                   	 0.192584  	 700       	 194.219   	 0         	 35.4252   	 5.48252   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 138, reductionFactor: 32, colBlockingSize: 12)                 	 0.130736  	 100       	 75.1101   	 0         	 2.22767   	 33.7169   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 88, Qr2: 138)      	 0.128051  	 700       	 0         	 0         	 73.6631   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 88, m: 88)                                                                  	 0.100738  	 800       	 7.21579   	 0         	 1.48155   	 4.87043   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 88, m: 6900)                                                                  	 0.0914399 	 700       	 0         	 0         	 74.3728   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, n: 50, r2left: 50, r2right: 88)                	 0.0860646 	 700       	 0         	 0         	 79.0178   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4400, m: 50, k: 88) 	 0.0707556 	 700       	 383.065   	 0         	 48.4055   	 7.91367   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 138)                                                                	 0.0653374 	 100       	 4.47931   	 0         	 0.200192  	 22.3751   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 88, reductionFactor: 37, colBlockingSize: 12)                  	 0.0639009 	 100       	 62.2315   	 0         	 2.85121   	 21.8263   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6900, m: 88)                                                         	 0.0621465 	 700       	 0         	 0         	 109.429   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4400, m: 88, k: 88) 	 0.0560506 	 700       	 851.071   	 0         	 78.1438   	 10.8911   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 88, m: 50, k: 2500)   	 0.0493365 	 800       	 356.734   	 0         	 45.3247   	 7.87064   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 88, n: 50, r2: 88)                                                                                         	 0.0441188 	 700       	 0         	 0         	 98.2945   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.042921  	 100       	 2.71817   	 0         	 0.140724  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 88, m: 2500, k: 50)	 0.0385238 	 800       	 456.861   	 0         	 58.0463   	 7.87064   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6900, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0317892 	 100       	 111.461   	 0         	 8.7451    	 12.7455   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 138, r2: 138, leftOrthog: 1)      	 0.0291731 	 100       	 326.397   	 0         	 29.4268   	 11.0918   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 138, reductionFactor: 32, colBlockingSize: 12)                   	 0.0174193 	 100       	 11.2744   	 0         	 1.19151   	 9.46227   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6900, r: 50, r2: 50, leftOrthog: 1)        	 0.0174059 	 100       	 198.209   	 0         	 47.7999   	 4.14663   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 138, r1_: 50, n: 50, r2: 138)         	 0.0166604 	 100       	 571.534   	 0         	 62.6203   	 9.12698   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 88, r: 88, streamingCols: 0)                   	 0.0152281 	 100       	 127.133   	 0         	 23.3186   	 5.45202   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 138, r1_: 138, n: 50, r2: 50)         	 0.0136752 	 100       	 696.295   	 0         	 41.479    	 16.7867   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4400, m: 50, k: 50) 	 0.0094323 	 100       	 233.241   	 0         	 37.5306   	 6.21469   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 88, m: 2500)                                                                  	 0.00740714	 100       	 0         	 0         	 47.5217   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 88, n: 50, r2left: 50, r2right: 0)                 	 0.00589371	 100       	 0         	 0         	 59.7247   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 88)                                                         	 0.00584091	 100       	 0         	 0         	 60.2646   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 88, m: 88, fromLeft: 1)                	 0.00470325	 800       	 0         	 0         	 21.0755   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00438484	 100       	 3.80096   	 0         	 1.37747   	 2.75937   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 138, leftOrthog: 1)         	 0.00330089	 100       	 20.9035   	 0         	 6.22863   	 3.35603   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 88, n: 50, r2: 50)                                                                                         	 0.00325872	 100       	 0         	 0         	 108.018   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00318631	 100       	 8.05812   	 0         	 1.25537   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 88, Qr2: 50)       	 0.00234813	 100       	 0         	 0         	 235.081   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 88, k: 88)   	 0.00100541	 100       	 77.023    	 0         	 13.1639   	 5.85106   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 88)   	 0.000976535	 100       	 45.0573   	 0         	 9.25722   	 4.86726   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 88)                                                                                          	 0.000937616	 200       	 0         	 0         	 15.0168   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000936781	 100       	 26.6871   	 0         	 6.40491   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000816456	 100       	 0.612403  	 0         	 2.44961   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000787229	 200       	 0         	 0         	 10.1622   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00078318	 100       	 31.9211   	 0         	 7.66107   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000692986	 100       	 36.0758   	 0         	 8.65818   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 88)                 	 0.000567919	 100       	 0         	 0         	 19.4394   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000525292	 100       	 0         	 0         	 7.61481   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000489257	 100       	 0         	 0         	 8.17566   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000451267	 100       	 1.10799   	 0         	 13.2959   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000432384	 100       	 0         	 0         	 9.25104   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000427736	 100       	 0.584473  	 0         	 9.35156   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 88)                                                                                 	 0.000373577	 100       	 1.1778    	 0         	 18.8448   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000371628	 100       	 0         	 0         	 10.7635   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000335967	 100       	 0.744121  	 0         	 11.9059   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4400, m: 0, k: 50)  	 5.42e-06  	 100       	 0         	 0         	 32472.3   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.0984    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.09834   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.52941   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.52817   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.21378   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.82385   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.68266   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.56886   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.224     	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.1092    	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.600953  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.472165  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.238039  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.207812  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.138226  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.130832  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.105123  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0988471 	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0930155 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.068359  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0502732 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0496277 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0392167 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0132402 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00720809	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00470325	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0039477 	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00113728	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000816456	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000451267	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22389339387776 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22389127636992 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22388926310528 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22388724984064 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22388523657600 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22388322331136 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22388121004672 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22387919678208 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22387718351744 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22387517025280 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22387315698816 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22387114372352 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22386913045888 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22386711719424 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22386510392960 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22386309066496 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22386107740032 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22385906413568 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22385705087104 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22385503760640 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22385302434176 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22385101107712 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22384899781248 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22384698454784 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22384497128320 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22384295801856 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22384094475392 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22383893148928 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22383691822464 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22383490496000 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22383289169536 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22383087843072 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22382886512512 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22382685186048 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22382483859584 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22382282533120 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22382081206656 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22381879880192 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22381678553728 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22381477227264 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22381275900800 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22381074574336 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22380873247872 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22380671921408 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22380470594944 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22380269268480 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22380067942016 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22379866615552 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22379665289088 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22379463962624 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22379262636160 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22379061309696 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22378859983232 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22378658656768 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22378457330304 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22378256003840 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22378054677376 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22377853350912 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22377652024448 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22377450697984 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22377249371520 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22377048045056 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22376846718592 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22389233727232 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22389227136768 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 139, m: 139)                                                               	 1.62229   	 700       	 10.8156   	 0         	 0.200563  	 53.9262   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6950, cols: 139, reductionFactor: 32, colBlockingSize: 12)                 	 1.05112   	 600       	 158.092   	 0         	 4.49977   	 35.1333   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6950, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.548969  	 700       	 144.187   	 0         	 6.39059   	 22.5624   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6950, r: 139, r2: 139, leftOrthog: 1)      	 0.438268  	 600       	 367.668   	 0         	 32.1643   	 11.4309   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 139, r1_: 139, n: 50, r2: 139)        	 0.209809  	 600       	 768.019   	 0         	 44.6445   	 17.203    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 6950, Xcols: 89, r: 89, streamingCols: 0)                   	 0.193617  	 700       	 199.03    	 0         	 35.8952   	 5.54475   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 89, Qr2: 139)      	 0.147357  	 700       	 0         	 0         	 64.9699   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 139, reductionFactor: 32, colBlockingSize: 12)                 	 0.135037  	 100       	 73.7753   	 0         	 2.17316   	 33.9484   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 89, m: 89)                                                                  	 0.109182  	 800       	 6.88729   	 0         	 1.39815   	 4.92599   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, n: 50, r2left: 50, r2right: 89)                	 0.0883945 	 700       	 0         	 0         	 78.3732   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4450, m: 50, k: 89) 	 0.0752852 	 700       	 368.247   	 0         	 46.3411   	 7.94643   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 89, m: 6950)                                                                  	 0.0674096 	 700       	 0         	 0         	 102.771   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 89, reductionFactor: 37, colBlockingSize: 12)                  	 0.0658521 	 100       	 61.7678   	 0         	 2.79925   	 22.0658   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 6950, m: 89)                                                         	 0.0656195 	 700       	 0         	 0         	 105.575   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 139)                                                                	 0.0640817 	 100       	 4.5983    	 0         	 0.205363  	 22.3911   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4450, m: 89, k: 89) 	 0.0579578 	 700       	 851.444   	 0         	 77.2996   	 11.0149   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 89, m: 50, k: 2500)   	 0.0571874 	 800       	 311.257   	 0         	 39.3877   	 7.9024    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 89, n: 50, r2: 89)                                                                                         	 0.0445082 	 700       	 0         	 0         	 99.6617   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 89, m: 2500, k: 50)	 0.0442831 	 800       	 401.959   	 0         	 50.8655   	 7.9024    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0418507 	 100       	 2.78769   	 0         	 0.144323  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 6950, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0311068 	 100       	 114.731   	 0         	 9.00126   	 12.7461   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 139, r2: 139, leftOrthog: 1)      	 0.0298287 	 100       	 323.866   	 0         	 28.9961   	 11.1693   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 6950, r: 50, r2: 50, leftOrthog: 1)        	 0.0174475 	 100       	 199.169   	 0         	 48.0298   	 4.14678   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 139, r1_: 50, n: 50, r2: 139)         	 0.0169179 	 100       	 571.023   	 0         	 62.4428   	 9.14474   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 139, reductionFactor: 32, colBlockingSize: 12)                   	 0.0157557 	 100       	 12.6461   	 0         	 1.33392   	 9.48041   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 89, r: 89, streamingCols: 0)                   	 0.0150644 	 100       	 131.452   	 0         	 23.8421   	 5.51343   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 139, r1_: 139, n: 50, r2: 50)         	 0.0130768 	 100       	 738.753   	 0         	 43.7002   	 16.905    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4450, m: 50, k: 50) 	 0.00842179	 100       	 264.196   	 0         	 42.5088   	 6.21508   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 89, m: 2500)                                                                  	 0.00628135	 100       	 0         	 0         	 56.6757   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 89, n: 50, r2left: 50, r2right: 0)                 	 0.00618708	 100       	 0         	 0         	 57.5392   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 89)                                                         	 0.00614861	 100       	 0         	 0         	 57.8993   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 89, m: 89, fromLeft: 1)                	 0.00490268	 800       	 0         	 0         	 20.6803   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00434896	 100       	 3.83232   	 0         	 1.38884   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 89, n: 50, r2: 50)                                                                                         	 0.00351142	 100       	 0         	 0         	 101.383   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 139, leftOrthog: 1)         	 0.00311657	 100       	 22.3001   	 0         	 6.6355    	 3.36074   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00303434	 100       	 8.4617    	 0         	 1.31824   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 89, Qr2: 50)       	 0.00164953	 100       	 0         	 0         	 337.065   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 89, k: 89)   	 0.000990698	 100       	 79.9537   	 0         	 13.5832   	 5.88624   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 89)   	 0.000978137	 100       	 45.4946   	 0         	 9.32385   	 4.87939   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000944309	 100       	 26.4744   	 0         	 6.35385   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 89)                                                                                          	 0.000913835	 200       	 0         	 0         	 15.5827   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000828389	 100       	 0.603581  	 0         	 2.41432   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000798658	 100       	 31.3025   	 0         	 7.5126    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000772999	 200       	 0         	 0         	 10.3493   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00072379	 100       	 34.5404   	 0         	 8.2897    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000716907	 100       	 0.697441  	 0         	 8.36929   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 89)                 	 0.000581836	 100       	 0         	 0         	 19.1119   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000562035	 100       	 0         	 0         	 7.11699   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000525233	 100       	 0         	 0         	 7.61567   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 89)                                                                                 	 0.000425087	 100       	 1.04684   	 0         	 16.7495   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000424556	 100       	 0         	 0         	 9.42161   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000394363	 100       	 0.633934  	 0         	 10.1429   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000390271	 100       	 0         	 0         	 10.2493   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000330511	 100       	 0.756404  	 0         	 12.1025   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4450, m: 0, k: 50)  	 5.21e-06  	 100       	 0         	 0         	 34165.1   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.16238   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.16232   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.53885   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.5376    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.20621   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.85087   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.72823   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.62341   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.23379   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.11388   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.618349  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.488661  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.240602  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.208682  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.149431  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.143639  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.113531  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0956887 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0736909 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0721584 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0581317 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0502685 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0450069 	 900       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0115118 	 5200      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00691057	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00490268	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00414805	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00114996	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000828389	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000716907	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23059103905664 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23058874099712 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23058672773248 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23058471446784 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23058270120320 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23058068793856 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23057867467392 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23057666140928 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23057464814464 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23057263488000 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23057062161536 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23056860835072 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23056659508608 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23056458182144 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23056256855680 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23056055529216 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23055854202752 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23055652876288 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23055451549824 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23055250223360 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23055048896896 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23054847570432 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23054646243968 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23054444917504 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23054243591040 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23054042264576 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23053840938112 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23053639611648 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23053438285184 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23053236958720 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23053035632256 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23052834305792 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23052632975232 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23052431648768 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23052230322304 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23052028995840 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23051827669376 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23051626342912 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23051425016448 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23051223689984 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23051022363520 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23050821037056 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23050619710592 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23050418384128 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23050217057664 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23050015731200 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23049814404736 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23049613078272 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23049411751808 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23049210425344 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23049009098880 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23048807772416 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23048606445952 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23048405119488 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23048203793024 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23048002466560 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23047801140096 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23047599813632 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23047398487168 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23047197160704 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23046995834240 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23046794507776 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23046593181312 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23058998245120 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23058991654656 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 140, m: 140)                                                               	 1.60537   	 700       	 11.1672   	 0         	 0.2056    	 54.3151   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7000, cols: 140, reductionFactor: 32, colBlockingSize: 12)                 	 1.04608   	 600       	 162.307   	 0         	 4.58674   	 35.386    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7000, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.555758  	 700       	 146.692   	 0         	 6.4297    	 22.8148   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7000, r: 140, r2: 140, leftOrthog: 1)      	 0.443944  	 600       	 370.858   	 0         	 32.2116   	 11.5132   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 140, r1_: 140, n: 50, r2: 140)        	 0.212237  	 600       	 775.735   	 0         	 44.771    	 17.3267   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7000, Xcols: 90, r: 90, streamingCols: 0)                   	 0.203585  	 700       	 194.956   	 0         	 34.7702   	 5.60698   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 90, Qr2: 140)      	 0.143401  	 700       	 0         	 0         	 67.7541   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 140, reductionFactor: 32, colBlockingSize: 12)                 	 0.137226  	 100       	 73.6469   	 0         	 2.1547    	 34.1797   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 90, m: 90)                                                                  	 0.105632  	 800       	 7.3614    	 0         	 1.47773   	 4.98155   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, n: 50, r2left: 50, r2right: 90)                	 0.0897098 	 700       	 0         	 0         	 78.6536   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4500, m: 50, k: 90) 	 0.0766631 	 700       	 369.8     	 0         	 46.3483   	 7.97872   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 90, m: 7000)                                                                  	 0.0720331 	 700       	 0         	 0         	 97.9549   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 90, reductionFactor: 37, colBlockingSize: 12)                  	 0.0666363 	 100       	 62.4203   	 0         	 2.79847   	 22.3051   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7000, m: 90)                                                         	 0.0657947 	 700       	 0         	 0         	 107.243   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 140)                                                                	 0.065095  	 100       	 4.55744   	 0         	 0.203395  	 22.4068   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4500, m: 90, k: 90) 	 0.0637686 	 700       	 800.237   	 0         	 71.8435   	 11.1386   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 90, n: 50, r2: 90)                                                                                         	 0.0573336 	 700       	 0         	 0         	 79.1159   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 90, m: 50, k: 2500)   	 0.0554253 	 800       	 324.762   	 0         	 40.9344   	 7.93371   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0426605 	 100       	 2.73477   	 0         	 0.141583  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 90, m: 2500, k: 50)	 0.0424183 	 800       	 424.345   	 0         	 53.4864   	 7.93371   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 140, r2: 140, leftOrthog: 1)      	 0.0308945 	 100       	 317.209   	 0         	 28.2044   	 11.2468   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7000, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.030379  	 100       	 118.325   	 0         	 9.28272   	 12.7468   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7000, r: 50, r2: 50, leftOrthog: 1)        	 0.0179363 	 100       	 195.135   	 0         	 47.0555   	 4.14692   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 140, r1_: 50, n: 50, r2: 140)         	 0.0178132 	 100       	 550.152   	 0         	 60.0452   	 9.1623    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 90, r: 90, streamingCols: 0)                   	 0.0156553 	 100       	 129.349   	 0         	 23.2024   	 5.57483   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 140, reductionFactor: 32, colBlockingSize: 12)                   	 0.0149616 	 100       	 13.5096   	 0         	 1.42231   	 9.49836   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 140, r1_: 140, n: 50, r2: 50)         	 0.0131937 	 100       	 742.777   	 0         	 43.6329   	 17.0233   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4500, m: 50, k: 50) 	 0.00900488	 100       	 249.865   	 0         	 40.2004   	 6.21547   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 90)                                                         	 0.00672539	 100       	 0         	 0         	 53.5285   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 90, m: 2500)                                                                  	 0.00663426	 100       	 0         	 0         	 54.2638   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 90, n: 50, r2left: 50, r2right: 0)                 	 0.00650591	 100       	 0         	 0         	 55.3343   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 90, m: 90, fromLeft: 1)                	 0.00471889	 800       	 0         	 0         	 21.9713   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00458195	 100       	 3.63745   	 0         	 1.31822   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 90, n: 50, r2: 50)                                                                                         	 0.0034793 	 100       	 0         	 0         	 103.469   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 140, leftOrthog: 1)         	 0.0031166 	 100       	 22.4604   	 0         	 6.67394   	 3.36538   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00304339	 100       	 8.43654   	 0         	 1.31432   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 90, Qr2: 50)       	 0.0017446 	 100       	 0         	 0         	 320.991   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 90, k: 90)   	 0.0010229 	 100       	 79.1863   	 0         	 13.3737   	 5.92105   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 90)   	 0.000968695	 100       	 46.4543   	 0         	 9.49731   	 4.8913    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 90)                                                                                          	 0.000929267	 200       	 0         	 0         	 15.4961   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000902908	 100       	 27.6883   	 0         	 6.6452    	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000860446	 100       	 0.581094  	 0         	 2.32438   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000829021	 100       	 30.1561   	 0         	 7.23745   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000766611	 200       	 0         	 0         	 10.4355   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000685843	 100       	 36.4515   	 0         	 8.74836   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 90)                 	 0.000559795	 100       	 0         	 0         	 20.0073   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000532067	 100       	 0         	 0         	 7.51785   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000489162	 100       	 0         	 0         	 8.17725   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000457691	 100       	 0         	 0         	 8.73952   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000428795	 100       	 1.16606   	 0         	 13.9927   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000413002	 100       	 0         	 0         	 9.68518   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000390033	 100       	 0.640971  	 0         	 10.2555   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 90)                                                                                 	 0.000373797	 100       	 1.20386   	 0         	 19.2618   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000327611	 100       	 0.7631    	 0         	 12.2096   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4500, m: 0, k: 50)  	 5.61e-06  	 100       	 0         	 0         	 32085.6   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.27204   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.27198   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.63058   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.6293    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.29008   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.85408   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.71312   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.64133   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.22927   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.13448   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.625891  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.495891  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.244073  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.21924   	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.151434  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.145603  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.110214  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0972646 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0786674 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0729331 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0630409 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0563282 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0431041 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0117435 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00745407	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00471889	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00420972	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109144	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000860446	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000428795	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23203133671296 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23202956830720 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23202755504256 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23202554177792 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23202352851328 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23202151524864 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23201950198400 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23201748871936 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23201547545472 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23201346219008 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23201144892544 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23200943566080 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23200742239616 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23200540913152 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23200339586688 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23200138260224 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23199936933760 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23199735607296 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23199534280832 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23199332954368 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23199131627904 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23198930301440 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23198728974976 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23198527648512 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23198326322048 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23198124995584 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23197923669120 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23197722342656 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23197521016192 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23197319689728 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23197118363264 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23196917036800 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23196715706240 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23196514379776 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23196313053312 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23196111726848 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23195910400384 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23195709073920 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23195507747456 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23195306420992 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23195105094528 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23194903768064 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23194702441600 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23194501115136 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23194299788672 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23194098462208 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23193897135744 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23193695809280 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23193494482816 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23193293156352 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23193091829888 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23192890503424 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23192689176960 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23192487850496 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23192286524032 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23192085197568 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23191883871104 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23191682544640 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23191481218176 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23191279891712 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23191078565248 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23190877238784 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23190675912320 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23203028010752 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23202849384192 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 141, m: 141)                                                               	 1.69522   	 700       	 10.8035   	 0         	 0.197491  	 54.704    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7050, cols: 141, reductionFactor: 32, colBlockingSize: 12)                 	 1.05791   	 600       	 163.955   	 0         	 4.60047   	 35.6388   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7050, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.564281  	 700       	 148.76    	 0         	 6.44901   	 23.0671   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7050, r: 141, r2: 141, leftOrthog: 1)      	 0.43616   	 600       	 385.623   	 0         	 33.2565   	 11.5954   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 141, r1_: 141, n: 50, r2: 141)        	 0.218264  	 600       	 770.594   	 0         	 44.1589   	 17.4505   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7050, Xcols: 91, r: 91, streamingCols: 0)                   	 0.206821  	 700       	 197.595   	 0         	 34.854    	 5.66921   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 91, Qr2: 141)      	 0.152235  	 700       	 0         	 0         	 64.7641   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 141, reductionFactor: 32, colBlockingSize: 12)                 	 0.135376  	 100       	 75.7237   	 0         	 2.20058   	 34.4108   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 91, m: 91)                                                                  	 0.110242  	 800       	 7.29131   	 0         	 1.44752   	 5.0371    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, n: 50, r2left: 50, r2right: 91)                	 0.0926211 	 700       	 0         	 0         	 77.578    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4550, m: 50, k: 91) 	 0.0811575 	 700       	 357.126   	 0         	 44.5819   	 8.01056   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 91, m: 7050)                                                                  	 0.0767739 	 700       	 0         	 0         	 93.5912   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 141)                                                                	 0.0755367 	 100       	 3.95393   	 0         	 0.176338  	 22.4224   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7050, m: 91)                                                         	 0.0732099 	 700       	 0         	 0         	 98.1474   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 91, reductionFactor: 37, colBlockingSize: 12)                  	 0.0674565 	 100       	 63.0392   	 0         	 2.79624   	 22.5443   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4550, m: 91, k: 91) 	 0.0672353 	 700       	 784.558   	 0         	 69.6618   	 11.2624   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 91, m: 50, k: 2500)   	 0.0551526 	 800       	 329.993   	 0         	 41.4327   	 7.96457   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 91, n: 50, r2: 91)                                                                                         	 0.0508552 	 700       	 0         	 0         	 91.1876   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 91, m: 2500, k: 50)	 0.0435845 	 800       	 417.579   	 0         	 52.4296   	 7.96457   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0424774 	 100       	 2.74656   	 0         	 0.142193  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7050, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0305312 	 100       	 118.576   	 0         	 9.30195   	 12.7474   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 141, r2: 141, leftOrthog: 1)      	 0.0300475 	 100       	 330.826   	 0         	 29.214    	 11.3242   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 141, r1_: 50, n: 50, r2: 141)         	 0.0180654 	 100       	 550.25    	 0         	 59.9422   	 9.17969   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 141, reductionFactor: 32, colBlockingSize: 12)                   	 0.0168545 	 100       	 12.1643   	 0         	 1.27828   	 9.51612   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7050, r: 50, r2: 50, leftOrthog: 1)        	 0.0166374 	 100       	 211.872   	 0         	 51.0896   	 4.14706   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 91, r: 91, streamingCols: 0)                   	 0.0156738 	 100       	 132.083   	 0         	 23.4348   	 5.63621   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 141, r1_: 141, n: 50, r2: 50)         	 0.0131526 	 100       	 755.78    	 0         	 44.0904   	 17.1416   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0102654 	 100       	 2.50117   	 0         	 0.389657  	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4550, m: 50, k: 50) 	 0.00814244	 100       	 279.4     	 0         	 44.9497   	 6.21585   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 91, n: 50, r2left: 50, r2right: 0)                 	 0.00666656	 100       	 0         	 0         	 54.6009   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 91, m: 2500)                                                                  	 0.0063698 	 100       	 0         	 0         	 57.1447   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 91)                                                         	 0.00589948	 100       	 0         	 0         	 61.7003   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 91, m: 91, fromLeft: 1)                	 0.00494736	 800       	 0         	 0         	 21.4249   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00445586	 100       	 3.74038   	 0         	 1.35552   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 91, n: 50, r2: 50)                                                                                         	 0.00347514	 100       	 0         	 0         	 104.744   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 141, leftOrthog: 1)         	 0.00303605	 100       	 23.221    	 0         	 6.89053   	 3.36998   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 91, Qr2: 50)       	 0.00154478	 100       	 0         	 0         	 365.102   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 91, k: 91)   	 0.00104392	 100       	 79.3259   	 0         	 13.3198   	 5.9555    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 91)   	 0.000978073	 100       	 46.52     	 0         	 9.48804   	 4.90302   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000963279	 100       	 25.953    	 0         	 6.22873   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 91)                                                                                          	 0.000937319	 200       	 0         	 0         	 15.5337   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000930233	 100       	 0.5375    	 0         	 2.15      	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000811644	 100       	 30.8017   	 0         	 7.3924    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00080458	 200       	 0         	 0         	 9.94308   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.00070864	 100       	 35.2788   	 0         	 8.46692   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 91)                 	 0.00057407	 100       	 0         	 0         	 19.6492   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000521988	 100       	 0         	 0         	 7.66301   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000503243	 100       	 0         	 0         	 7.94845   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.00044838	 100       	 1.11513   	 0         	 13.3815   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000410992	 100       	 0         	 0         	 9.73255   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000405785	 100       	 0.61609   	 0         	 9.85744   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000385927	 100       	 0         	 0         	 10.3647   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 91)                                                                                 	 0.000368492	 100       	 1.23476   	 0         	 19.7562   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000331457	 100       	 0.754246  	 0         	 12.0679   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4550, m: 0, k: 50)  	 5.46e-06  	 100       	 0         	 0         	 33333.3   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.37571   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.37566   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.67895   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.67759   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.34123   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.88267   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.81323   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.69664   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.24129   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.17034   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.642459  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.485881  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.250294  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.222495  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.158563  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.154191  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.114698  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.100384  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0831437 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0794953 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0565754 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0561159 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0442932 	 900       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.023869  	 5200      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00886557	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00494736	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00405497	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110573	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000930233	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.00044838	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23301413664640 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23301204207616 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23301002881152 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23300801554688 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23300600228224 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23300398901760 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23300197575296 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23299996248832 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23299794922368 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23299593595904 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23299392269440 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23299190942976 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23298989616512 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23298788290048 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23298586963584 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23298385637120 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23298184310656 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23297982984192 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23297781657728 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23297580331264 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23297379004800 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23297177678336 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23296976351872 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23296775025408 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23296573698944 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23296372372480 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23296171046016 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23295969719552 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23295768393088 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23295567066624 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23295365740160 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23295164413696 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23294963083136 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23294761756672 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23294560430208 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23294359103744 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23294157777280 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23293956450816 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23293755124352 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23293553797888 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23293352471424 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23293151144960 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23292949818496 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23292748492032 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23292547165568 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23292345839104 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23292144512640 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23291943186176 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23291741859712 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23291540533248 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23291339206784 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23291137880320 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23290936553856 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23290735227392 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23290533900928 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23290332574464 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23290131248000 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23289929921536 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23289728595072 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23289527268608 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23289325942144 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23289124615680 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23288923289216 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23301308004096 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23301301413632 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 142, m: 142)                                                               	 1.68574   	 700       	 11.0971   	 0         	 0.201425  	 55.0929   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7100, cols: 142, reductionFactor: 32, colBlockingSize: 12)                 	 1.08741   	 600       	 162.924   	 0         	 4.53935   	 35.8915   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7100, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.57617   	 700       	 149.966   	 0         	 6.43094   	 23.3195   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7100, r: 142, r2: 142, leftOrthog: 1)      	 0.448209  	 600       	 383.297   	 0         	 32.8232   	 11.6776   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 142, r1_: 142, n: 50, r2: 142)        	 0.224258  	 600       	 766.071   	 0         	 43.5905   	 17.5743   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7100, Xcols: 92, r: 92, streamingCols: 0)                   	 0.208598  	 700       	 201.661   	 0         	 35.1851   	 5.73143   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 92, Qr2: 142)      	 0.15365   	 700       	 0         	 0         	 65.1081   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 142, reductionFactor: 32, colBlockingSize: 12)                 	 0.136325  	 100       	 76.267    	 0         	 2.20159   	 34.6417   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 92, m: 92)                                                                  	 0.112416  	 800       	 7.38864   	 0         	 1.45084   	 5.09266   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 92, m: 7100)                                                                  	 0.101654  	 700       	 0         	 0         	 71.9678   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, n: 50, r2left: 50, r2right: 92)                	 0.092149  	 700       	 0         	 0         	 79.3914   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4600, m: 50, k: 92) 	 0.0798179 	 700       	 371.145   	 0         	 46.1511   	 8.04196   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 92, reductionFactor: 37, colBlockingSize: 12)                  	 0.070741  	 100       	 61.4407   	 0         	 2.69675   	 22.7832   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 142)                                                                	 0.0690531 	 100       	 4.35414   	 0         	 0.194054  	 22.4378   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7100, m: 92)                                                         	 0.0680859 	 700       	 0         	 0         	 107.45    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4600, m: 92, k: 92) 	 0.0582951 	 700       	 935.038   	 0         	 82.1208   	 11.3861   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 92, m: 50, k: 2500)   	 0.0538203 	 800       	 341.879   	 0         	 42.7616   	 7.99499   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 92, n: 50, r2: 92)                                                                                         	 0.0488024 	 700       	 0         	 0         	 97.1232   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0426658 	 100       	 2.73443   	 0         	 0.141565  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 92, m: 2500, k: 50)	 0.0399457 	 800       	 460.625   	 0         	 57.6142   	 7.99499   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7100, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0298992 	 100       	 121.941   	 0         	 9.56547   	 12.7481   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 142, r2: 142, leftOrthog: 1)      	 0.028868  	 100       	 349.245   	 0         	 30.6312   	 11.4016   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 142, r1_: 50, n: 50, r2: 142)         	 0.0183656 	 100       	 548.961   	 0         	 59.6899   	 9.19689   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7100, r: 50, r2: 50, leftOrthog: 1)        	 0.0183031 	 100       	 193.956   	 0         	 46.7679   	 4.1472    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 142, reductionFactor: 32, colBlockingSize: 12)                   	 0.0180828 	 100       	 11.4994   	 0         	 1.20618   	 9.53369   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 92, r: 92, streamingCols: 0)                   	 0.0157236 	 100       	 134.575   	 0         	 23.6196   	 5.69758   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 142, r1_: 142, n: 50, r2: 50)         	 0.0138133 	 100       	 729.875   	 0         	 42.2875   	 17.2598   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4600, m: 50, k: 50) 	 0.00886589	 100       	 259.421   	 0         	 41.733    	 6.21622   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00776251	 100       	 3.30765   	 0         	 0.515297  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 92, m: 2500)                                                                  	 0.00739197	 100       	 0         	 0         	 49.7838   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 92, n: 50, r2left: 50, r2right: 0)                 	 0.00673004	 100       	 0         	 0         	 54.6802   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 92)                                                         	 0.00574793	 100       	 0         	 0         	 64.023    	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 92, m: 92, fromLeft: 1)                	 0.00506913	 800       	 0         	 0         	 21.3723   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00448538	 100       	 3.71576   	 0         	 1.3466    	 2.75937   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 142, leftOrthog: 1)         	 0.00315952	 100       	 22.4718   	 0         	 6.65924   	 3.37452   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 92, n: 50, r2: 50)                                                                                         	 0.00315791	 100       	 0         	 0         	 116.533   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 92, Qr2: 50)       	 0.00167852	 100       	 0         	 0         	 338.393   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.00108259	 200       	 0         	 0         	 7.38972   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 92, k: 92)   	 0.00102057	 100       	 82.934    	 0         	 13.8464   	 5.98958   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 92)   	 0.00100622	 100       	 45.7155   	 0         	 9.3021    	 4.91453   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000965703	 100       	 25.8879   	 0         	 6.21309   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000917063	 100       	 0.545219  	 0         	 2.18088   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 92)                                                                                          	 0.000898365	 200       	 0         	 0         	 16.3853   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000841593	 100       	 29.7056   	 0         	 7.12934   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000674508	 100       	 37.0641   	 0         	 8.89537   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 92)                 	 0.000591361	 100       	 0         	 0         	 19.2099   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000527296	 100       	 0         	 0         	 7.58587   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000513201	 100       	 0         	 0         	 7.79422   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000439975	 100       	 1.13643   	 0         	 13.6371   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000418663	 100       	 0         	 0         	 9.55422   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000401638	 100       	 0.622451  	 0         	 9.95922   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 92)                                                                                 	 0.000397756	 100       	 1.15649   	 0         	 18.5038   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000388613	 100       	 0         	 0         	 10.293    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000344065	 100       	 0.726607  	 0         	 11.6257   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4600, m: 0, k: 50)  	 5.5e-06   	 100       	 0         	 0         	 33454.5   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.43942   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.43937   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.71142   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.71006   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.37312   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.92639   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.79746   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.72788   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.27235   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.21737   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.655199  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.498539  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.257278  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.224322  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.155747  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.149011  	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.116901  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.109046  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0999836 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0742225 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.054786  	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0544685 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0406202 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00551851	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00543367	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00506913	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00407577	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00114346	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000917063	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000439975	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23397017868160 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23396834338816 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23396633012352 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23396431685888 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23396230359424 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23396029032960 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23395827706496 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23395626380032 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23395425053568 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23395223727104 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23395022400640 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23394821074176 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23394619747712 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23394418421248 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23394217094784 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23394015768320 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23393814441856 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23393613115392 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23393411788928 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23393210462464 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23393009136000 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23392807809536 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23392606483072 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23392405156608 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23392203830144 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23392002503680 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23391801177216 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23391599850752 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23391398524288 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23391197197824 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23390995871360 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23390794544896 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23390593214336 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23390391887872 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23390190561408 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23389989234944 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23389787908480 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23389586582016 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23389385255552 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23389183929088 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23388982602624 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23388781276160 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23388579949696 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23388378623232 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23388177296768 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23387975970304 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23387774643840 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23387573317376 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23387371990912 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23387170664448 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23386969337984 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23386768011520 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23386566685056 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23386365358592 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23386164032128 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23385962705664 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23385761379200 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23385560052736 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23385358726272 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23385157399808 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23384956073344 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23384754746880 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23384553420416 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23396912207616 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23396905617152 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 143, m: 143)                                                               	 1.7436    	 700       	 10.9571   	 0         	 0.19749   	 55.4818   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7150, cols: 143, reductionFactor: 31, colBlockingSize: 12)                 	 1.1065    	 600       	 163.68    	 0         	 4.52409   	 36.1796   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7150, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.596318  	 700       	 149.109   	 0         	 6.32574   	 23.5718   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7150, r: 143, r2: 143, leftOrthog: 1)      	 0.441637  	 600       	 397.278   	 0         	 33.7825   	 11.7599   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 143, r1_: 143, n: 50, r2: 143)        	 0.228852  	 600       	 766.665   	 0         	 43.3192   	 17.698    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7150, Xcols: 93, r: 93, streamingCols: 0)                   	 0.210611  	 700       	 205.536   	 0         	 35.4761   	 5.79366   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 93, Qr2: 143)      	 0.148033  	 700       	 0         	 0         	 68.562    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 143, reductionFactor: 31, colBlockingSize: 12)                 	 0.139605  	 100       	 75.6014   	 0         	 2.16582   	 34.9066   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 93, m: 93)                                                                  	 0.117779  	 800       	 7.28464   	 0         	 1.41498   	 5.14821   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, n: 50, r2left: 50, r2right: 93)                	 0.0909862 	 700       	 0         	 0         	 81.8524   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4650, m: 50, k: 93) 	 0.0796597 	 700       	 380.01    	 0         	 47.0722   	 8.07292   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 93, reductionFactor: 37, colBlockingSize: 12)                  	 0.0708989 	 100       	 62.6438   	 0         	 2.72104   	 23.022    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 143)                                                                	 0.0679274 	 100       	 4.45574   	 0         	 0.198447  	 22.453    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7150, m: 93)                                                         	 0.0668452 	 700       	 0         	 0         	 111.413   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 93, m: 7150)                                                                  	 0.0654825 	 700       	 0         	 0         	 113.732   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4650, m: 93, k: 93) 	 0.0630441 	 700       	 893.104   	 0         	 77.5944   	 11.5099   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 93, m: 50, k: 2500)   	 0.0566435 	 800       	 328.369   	 0         	 40.9183   	 8.02499   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 93, n: 50, r2: 93)                                                                                         	 0.0489336 	 700       	 0         	 0         	 98.9798   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 93, m: 2500, k: 50)	 0.0461142 	 800       	 403.346   	 0         	 50.2613   	 8.02499   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0439739 	 100       	 2.65309   	 0         	 0.137354  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7150, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0415901 	 100       	 88.2811   	 0         	 6.92472   	 12.7487   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 143, r2: 143, leftOrthog: 1)      	 0.0295539 	 100       	 345.961   	 0         	 30.1388   	 11.4789   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 143, r1_: 50, n: 50, r2: 143)         	 0.0178321 	 100       	 573.378   	 0         	 62.2295   	 9.21392   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7150, r: 50, r2: 50, leftOrthog: 1)        	 0.0176553 	 100       	 202.489   	 0         	 48.824    	 4.14733   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 143, reductionFactor: 31, colBlockingSize: 12)                   	 0.0160522 	 100       	 13.15     	 0         	 1.37546   	 9.56042   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 93, r: 93, streamingCols: 0)                   	 0.0160503 	 100       	 134.717   	 0         	 23.3927   	 5.75894   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 143, r1_: 143, n: 50, r2: 50)         	 0.0140325 	 100       	 728.628   	 0         	 41.9282   	 17.378    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4650, m: 50, k: 50) 	 0.00857817	 100       	 271.037   	 0         	 43.5991   	 6.21658   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 93, m: 2500)                                                                  	 0.00653655	 100       	 0         	 0         	 56.9107   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 93, n: 50, r2left: 50, r2right: 0)                 	 0.00633626	 100       	 0         	 0         	 58.7097   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 93)                                                         	 0.00629941	 100       	 0         	 0         	 59.0531   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 93, m: 93, fromLeft: 1)                	 0.00624144	 800       	 0         	 0         	 17.7375   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00441709	 100       	 3.7732    	 0         	 1.36741   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.0036474 	 100       	 7.03945   	 0         	 1.09667   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 93, n: 50, r2: 50)                                                                                         	 0.00337484	 100       	 0         	 0         	 110.228   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 143, leftOrthog: 1)         	 0.00335749	 100       	 21.2957   	 0         	 6.30233   	 3.37902   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 93, Qr2: 50)       	 0.00191273	 100       	 0         	 0         	 299.048   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 93)   	 0.00105686	 100       	 43.9982   	 0         	 8.9321    	 4.92585   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 93, k: 93)   	 0.00104063	 100       	 83.113    	 0         	 13.7985   	 6.02332   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000929794	 100       	 26.8877   	 0         	 6.45304   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 93)                                                                                          	 0.000915882	 200       	 0         	 0         	 16.2466   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000844665	 100       	 0.591951  	 0         	 2.3678    	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000799186	 200       	 0         	 0         	 10.0102   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000797443	 100       	 31.3502   	 0         	 7.52405   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000711487	 100       	 35.1377   	 0         	 8.43304   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 93)                 	 0.000594171	 100       	 0         	 0         	 19.2537   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000512559	 100       	 0         	 0         	 7.80398   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000504451	 100       	 0         	 0         	 7.92941   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000470432	 100       	 1.06285   	 0         	 12.7542   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000432745	 100       	 0         	 0         	 9.24332   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000410973	 100       	 0         	 0         	 9.733     	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000389117	 100       	 0.64248   	 0         	 10.2797   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 93)                                                                                 	 0.000372596	 100       	 1.248     	 0         	 19.968    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000340962	 100       	 0.73322   	 0         	 11.7315   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4650, m: 0, k: 50)  	 5.49e-06  	 100       	 0         	 0         	 33879.8   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.57      	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.56995   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.84753   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.84626   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.49289   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.97461   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.8555    	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.72235   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.30439   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.20589   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.671327  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.492203  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.261514  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.226661  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.153385  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.150379  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.122197  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0984211 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0735556 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.072019  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0575733 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0545361 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0468257 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0094885 	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00624144	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00463655	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00180754	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110268	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000844665	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000470432	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23298003875712 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23297781655552 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23297580329088 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23297379002624 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23297177676160 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23296976349696 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23296775023232 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23296573696768 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23296372370304 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23296171043840 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23295969717376 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23295768390912 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23295567064448 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23295365737984 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23295164411520 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23294963085056 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23294761758592 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23294560432128 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23294359105664 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23294157779200 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23293956452736 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23293755126272 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23293553799808 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23293352473344 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23293151146880 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23292949820416 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23292748493952 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23292547167488 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23292345841024 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23292144514560 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23291943188096 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23291741861632 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23291540531072 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23291339204608 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23291137878144 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23290936551680 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23290735225216 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23290533898752 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23290332572288 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23290131245824 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23289929919360 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23289728592896 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23289527266432 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23289325939968 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23289124613504 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23288923287040 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23288721960576 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23288520634112 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23288319307648 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23288117981184 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23287916654720 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23287715328256 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23287514001792 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23287312675328 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23287111348864 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23286910022400 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23286708695936 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23286507369472 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23286306043008 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23286104716544 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23285903390080 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23285702063616 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23285500737152 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23297898215168 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23297891624704 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 144, m: 144)                                                               	 1.70563   	 700       	 11.4377   	 0         	 0.204717  	 55.8707   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7200, cols: 144, reductionFactor: 31, colBlockingSize: 12)                 	 1.12318   	 600       	 164.656   	 0         	 4.51945   	 36.4326   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7200, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.600466  	 700       	 152.338   	 0         	 6.3943    	 23.8241   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7200, r: 144, r2: 144, leftOrthog: 1)      	 0.463786  	 600       	 386.297   	 0         	 32.6206   	 11.8421   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 144, r1_: 144, n: 50, r2: 144)        	 0.228953  	 600       	 782.516   	 0         	 43.9078   	 17.8218   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7200, Xcols: 94, r: 94, streamingCols: 0)                   	 0.217264  	 700       	 204.974   	 0         	 35.003    	 5.85589   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 94, Qr2: 144)      	 0.151955  	 700       	 0         	 0         	 67.7581   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 144, reductionFactor: 31, colBlockingSize: 12)                 	 0.139708  	 100       	 76.6056   	 0         	 2.18017   	 35.1374   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 94, m: 94)                                                                  	 0.11945   	 800       	 7.41698   	 0         	 1.42531   	 5.20376   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, n: 50, r2left: 50, r2right: 94)                	 0.0942244 	 700       	 0         	 0         	 80.4479   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4700, m: 50, k: 94) 	 0.0887398 	 700       	 348.502   	 0         	 43.0066   	 8.10345   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7200, m: 94)                                                         	 0.0716455 	 700       	 0         	 0         	 105.801   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 94, reductionFactor: 37, colBlockingSize: 12)                  	 0.0709871 	 100       	 63.9187   	 0         	 2.74795   	 23.2605   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 94, m: 7200)                                                                  	 0.0690444 	 700       	 0         	 0         	 109.787   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4700, m: 94, k: 94) 	 0.0653649 	 700       	 889.482   	 0         	 76.4576   	 11.6337   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 144)                                                                	 0.0644286 	 100       	 4.72875   	 0         	 0.210465  	 22.468    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 94, m: 50, k: 2500)   	 0.0550443 	 800       	 341.543   	 0         	 42.4037   	 8.05457   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 94, n: 50, r2: 94)                                                                                         	 0.0546876 	 700       	 0         	 0         	 90.4804   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 94, m: 2500, k: 50)	 0.0448602 	 800       	 419.08    	 0         	 52.0301   	 8.05457   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0428094 	 100       	 2.72526   	 0         	 0.141091  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7200, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0317646 	 100       	 116.397   	 0         	 9.12966   	 12.7493   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 144, r2: 144, leftOrthog: 1)      	 0.0299098 	 100       	 346.642   	 0         	 29.9961   	 11.5562   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 144, reductionFactor: 31, colBlockingSize: 12)                   	 0.0206707 	 100       	 10.3552   	 0         	 1.08118   	 9.57765   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 144, r1_: 50, n: 50, r2: 144)         	 0.0197991 	 100       	 523.659   	 0         	 56.7297   	 9.23077   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7200, r: 50, r2: 50, leftOrthog: 1)        	 0.0168052 	 100       	 214.219   	 0         	 51.6507   	 4.14747   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 94, r: 94, streamingCols: 0)                   	 0.0167304 	 100       	 132.035   	 0         	 22.6853   	 5.82029   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 144, r1_: 144, n: 50, r2: 50)         	 0.0141396 	 100       	 733.261   	 0         	 41.91     	 17.4961   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4700, m: 50, k: 50) 	 0.00886818	 100       	 264.992   	 0         	 42.6243   	 6.21693   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00686685	 100       	 3.73907   	 0         	 0.582508  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 94, m: 2500)                                                                  	 0.00633084	 100       	 0         	 0         	 59.3918   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 94, n: 50, r2left: 50, r2right: 0)                 	 0.00616235	 100       	 0         	 0         	 61.0157   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 94)                                                         	 0.00534632	 100       	 0         	 0         	 70.3288   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 94, m: 94, fromLeft: 1)                	 0.00524357	 800       	 0         	 0         	 21.5694   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00448569	 100       	 3.71551   	 0         	 1.3465    	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 94, n: 50, r2: 50)                                                                                         	 0.00338413	 100       	 0         	 0         	 111.107   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 144, leftOrthog: 1)         	 0.00306423	 100       	 23.4969   	 0         	 6.94465   	 3.38346   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 94, Qr2: 50)       	 0.00298596	 100       	 0         	 0         	 192.903   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 94)   	 0.00104393	 100       	 45.0223   	 0         	 9.1194    	 4.93697   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 94, k: 94)   	 0.00100252	 100       	 88.1376   	 0         	 14.5521   	 6.0567    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000969574	 100       	 25.7845   	 0         	 6.18828   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000908231	 100       	 0.550521  	 0         	 2.20208   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 94)                                                                                          	 0.000891633	 200       	 0         	 0         	 16.8679   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000767287	 100       	 32.5823   	 0         	 7.81976   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000767152	 200       	 0         	 0         	 10.4282   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000721916	 100       	 34.6301   	 0         	 8.31122   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 94)                 	 0.000568838	 100       	 0         	 0         	 20.2518   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000510332	 100       	 0         	 0         	 7.83803   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000499154	 100       	 1.00169   	 0         	 12.0203   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000481849	 100       	 0         	 0         	 8.30136   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000432638	 100       	 0         	 0         	 9.2456    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000404091	 100       	 0.618673  	 0         	 9.89876   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.0003901 	 100       	 0         	 0         	 10.2538   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 94)                                                                                 	 0.000373672	 100       	 1.25779   	 0         	 20.1246   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000326032	 100       	 0.766796  	 0         	 12.2687   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4700, m: 0, k: 50)  	 5.92e-06  	 100       	 0         	 0         	 31756.8   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.59081   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.59076   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.82531   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.82399   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.47293   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.99365   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.81286   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.76538   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.31596   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.23046   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.678811  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.513565  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.263659  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.233994  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.165025  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.155373  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.123935  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.101437  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.077382  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0753752 	 800       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0602409 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0560139 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0455821 	 900       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00819491	 5200      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00570644	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00524357	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.0043314 	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110379	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000908231	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000499154	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22970617407360 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22970424616960 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22970223290496 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22970021964032 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22969820637568 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22969619311104 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22969417984640 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22969216658176 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22969015331712 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22968814005248 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22968612678784 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22968411352320 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22968210025856 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22968008699392 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22967807372928 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22967606046464 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22967404720000 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22967203393536 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22967002067072 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22966800740608 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22966599414144 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22966398087680 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22966196761216 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22965995434752 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22965794108288 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22965592781824 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22965391455360 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22965190128896 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22964988802432 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22964787475968 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22964586149504 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22964384823040 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22964183492480 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22963982166016 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22963780839552 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22963579513088 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22963378186624 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22963176860160 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22962975533696 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22962774207232 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22962572880768 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22962371554304 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22962170227840 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22961968901376 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22961767574912 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22961566248448 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22961364921984 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22961163595520 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22960962269056 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22960760942592 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22960559616128 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22960358289664 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22960156963200 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22959955636736 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22959754310272 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22959552983808 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22959351657344 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22959150330880 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22958949004416 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22958747677952 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22958546351488 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22958345025024 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22958143698560 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22970511746816 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22970505156352 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 145, m: 145)                                                               	 1.8109    	 700       	 10.9988   	 0         	 0.195501  	 56.2596   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7250, cols: 145, reductionFactor: 31, colBlockingSize: 12)                 	 1.12366   	 600       	 168.039   	 0         	 4.5805    	 36.6856   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7250, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.604297  	 700       	 155.684   	 0         	 6.46625   	 24.0764   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7250, r: 145, r2: 145, leftOrthog: 1)      	 0.447672  	 600       	 408.597   	 0         	 34.2658   	 11.9243   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 145, r1_: 145, n: 50, r2: 145)        	 0.235945  	 600       	 775.254   	 0         	 43.2004   	 17.9455   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7250, Xcols: 95, r: 95, streamingCols: 0)                   	 0.21918   	 700       	 208.97    	 0         	 35.3102   	 5.91811   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 95, Qr2: 145)      	 0.153038  	 700       	 0         	 0         	 68.2446   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 145, reductionFactor: 31, colBlockingSize: 12)                 	 0.140313  	 100       	 77.3386   	 0         	 2.18668   	 35.368    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 95, m: 95)                                                                  	 0.124285  	 800       	 7.35836   	 0         	 1.39911   	 5.25932   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, n: 50, r2left: 50, r2right: 95)                	 0.0945268 	 700       	 0         	 0         	 81.6065   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4750, m: 50, k: 95) 	 0.0868756 	 700       	 363.595   	 0         	 44.703    	 8.13356   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 95, m: 7250)                                                                  	 0.0756851 	 700       	 0         	 0         	 101.922   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 145)                                                                	 0.0750779 	 100       	 4.08464   	 0         	 0.181678  	 22.4829   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 95, reductionFactor: 37, colBlockingSize: 12)                  	 0.0729066 	 100       	 63.5671   	 0         	 2.7051    	 23.4989   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7250, m: 95)                                                         	 0.0685285 	 700       	 0         	 0         	 112.566   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4750, m: 95, k: 95) 	 0.0679117 	 700       	 883.739   	 0         	 75.1643   	 11.7574   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 95, m: 50, k: 2500)   	 0.0611311 	 800       	 310.807   	 0         	 38.4485   	 8.08373   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 95, n: 50, r2: 95)                                                                                         	 0.0538981 	 700       	 0         	 0         	 93.7695   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 95, m: 2500, k: 50)	 0.0461898 	 800       	 411.346   	 0         	 50.8857   	 8.08373   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0445575 	 100       	 2.61834   	 0         	 0.135555  	 19.3157   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7250, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0348378 	 100       	 106.866   	 0         	 8.38169   	 12.7499   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 145, r2: 145, leftOrthog: 1)      	 0.0339924 	 100       	 309.26    	 0         	 26.5836   	 11.6335   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 145, r1_: 50, n: 50, r2: 145)         	 0.0189215 	 100       	 555.584   	 0         	 60.0797   	 9.24745   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7250, r: 50, r2: 50, leftOrthog: 1)        	 0.0188636 	 100       	 192.169   	 0         	 46.3327   	 4.1476    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 95, r: 95, streamingCols: 0)                   	 0.0166492 	 100       	 135.517   	 0         	 23.0408   	 5.88162   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 145, reductionFactor: 31, colBlockingSize: 12)                   	 0.0165155 	 100       	 13.1411   	 0         	 1.36962   	 9.59471   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 145, r1_: 145, n: 50, r2: 50)         	 0.0139364 	 100       	 754.321   	 0         	 42.8246   	 17.6142   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4750, m: 50, k: 50) 	 0.00943419	 100       	 251.744   	 0         	 40.491    	 6.21728   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 95, n: 50, r2left: 50, r2right: 0)                 	 0.0068742 	 100       	 0         	 0         	 55.2792   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 95, m: 2500)                                                                  	 0.00648771	 100       	 0         	 0         	 58.5723   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 95)                                                         	 0.00625251	 100       	 0         	 0         	 60.7756   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00568685	 100       	 4.51492   	 0         	 0.703377  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 95, m: 95, fromLeft: 1)                	 0.00552597	 800       	 0         	 0         	 20.9049   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00465098	 100       	 3.58346   	 0         	 1.29865   	 2.75937   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 145, leftOrthog: 1)         	 0.00322046	 100       	 22.5123   	 0         	 6.64502   	 3.38785   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 95, n: 50, r2: 50)                                                                                         	 0.0031417 	 100       	 0         	 0         	 120.954   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 95, Qr2: 50)       	 0.00186908	 100       	 0         	 0         	 310.312   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 95)   	 0.00106109	 100       	 44.7652   	 0         	 9.04729   	 4.94792   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 95, k: 95)   	 0.00104007	 100       	 86.7728   	 0         	 14.249    	 6.08974   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000957218	 100       	 26.1174   	 0         	 6.26816   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 95)                                                                                          	 0.000926256	 200       	 0         	 0         	 16.4102   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000911395	 100       	 0.54861   	 0         	 2.19444   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000822744	 100       	 30.3861   	 0         	 7.29267   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000766544	 200       	 0         	 0         	 10.4365   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000701574	 100       	 35.6342   	 0         	 8.5522    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 95)                 	 0.000572932	 100       	 0         	 0         	 20.2467   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000497322	 100       	 0         	 0         	 8.04308   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000492974	 100       	 0         	 0         	 8.11402   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.00042   	 100       	 0         	 0         	 9.52381   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000414269	 100       	 1.20695   	 0         	 14.4833   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000408419	 100       	 0         	 0         	 9.79386   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000403794	 100       	 0.619128  	 0         	 9.90604   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 95)                                                                                 	 0.000387913	 100       	 1.2245    	 0         	 19.592    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000322462	 100       	 0.775285  	 0         	 12.4046   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4750, m: 0, k: 50)  	 5.56e-06  	 100       	 0         	 0         	 34172.7   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.7255    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.72546   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.94067   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.93935   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.57379   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 1.99822   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.93054   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.78472   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.31594   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.23777   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.683377  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.503749  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.269626  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.235829  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.166328  	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.155315  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.128936  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.102471  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0821728 	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.075201  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0620884 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0592256 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0468914 	 900       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00905518	 5200      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00697548	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00552597	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00429615	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00111417	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000911395	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000414269	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22593710835584 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22593474127872 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22593272801408 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22593071474944 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22592870148480 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22592668822016 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22592467495552 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22592266169088 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22592064842624 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22591863516160 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22591662189696 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22591460863232 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22591259536768 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22591058210304 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22590856883840 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22590655557376 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22590454230912 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22590252904448 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22590051577984 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22589850251520 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22589648925056 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22589447598592 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22589246272128 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22589044945664 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22588843619200 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22588642292736 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22588440966272 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22588239639808 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22588038313344 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22587836986880 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22587635660416 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22587434333952 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22587233003392 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22587031676928 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22586830350464 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22586629024000 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22586427697536 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22586226371072 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22586025044608 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22585823718144 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22585622391680 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22585421065216 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22585219738752 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22585018412288 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22584817085824 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22584615759360 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22584414432896 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22584213106432 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22584011779968 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22583810453504 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22583609127040 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22583407800576 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22583206474112 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22583005147648 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22582803821184 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22582602494720 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22582401168256 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22582199841792 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22581998515328 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22581797188864 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22581595862400 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22581394535936 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22581193209472 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22593605175040 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22593598584576 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 146, m: 146)                                                               	 1.77156   	 700       	 11.4773   	 0         	 0.202605  	 56.6484   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7300, cols: 146, reductionFactor: 31, colBlockingSize: 12)                 	 1.15871   	 600       	 166.351   	 0         	 4.50344   	 36.9386   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7300, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.640281  	 700       	 151.079   	 0         	 6.20991   	 24.3287   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7300, r: 146, r2: 146, leftOrthog: 1)      	 0.461296  	 600       	 404.79    	 0         	 33.714    	 12.0066   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 146, r1_: 146, n: 50, r2: 146)        	 0.237888  	 600       	 784.943   	 0         	 43.4407   	 18.0693   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7300, Xcols: 96, r: 96, streamingCols: 0)                   	 0.224456  	 700       	 209.813   	 0         	 35.0838   	 5.98034   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 96, Qr2: 146)      	 0.153169  	 700       	 0         	 0         	 69.1588   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 146, reductionFactor: 31, colBlockingSize: 12)                 	 0.142744  	 100       	 77.0738   	 0         	 2.16509   	 35.5985   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 96, m: 96)                                                                  	 0.120267  	 800       	 7.84684   	 0         	 1.47639   	 5.31488   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 96, m: 7300)                                                                  	 0.107967  	 700       	 0         	 0         	 72.6981   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4800, m: 50, k: 96) 	 0.105322  	 700       	 306.261   	 0         	 37.517    	 8.16327   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, n: 50, r2left: 50, r2right: 96)                	 0.0991111 	 700       	 0         	 0         	 79.1936   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4800, m: 96, k: 96) 	 0.0760008 	 700       	 814.88    	 0         	 68.5857   	 11.8812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 96, reductionFactor: 37, colBlockingSize: 12)                  	 0.0757056 	 100       	 62.5124   	 0         	 2.63353   	 23.7371   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 146)                                                                	 0.0748535 	 100       	 4.12361   	 0         	 0.183291  	 22.4976   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7300, m: 96)                                                         	 0.0736881 	 700       	 0         	 0         	 106.516   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 96, n: 50, r2: 96)                                                                                         	 0.0532169 	 700       	 0         	 0         	 96.9797   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 96, m: 50, k: 2500)   	 0.0514771 	 800       	 372.981   	 0         	 45.9762   	 8.11249   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0463574 	 100       	 2.51668   	 0         	 0.130292  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 96, m: 2500, k: 50)	 0.0413447 	 800       	 464.388   	 0         	 57.2436   	 8.11249   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7300, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0305136 	 100       	 122.852   	 0         	 9.63503   	 12.7505   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 146, r2: 146, leftOrthog: 1)      	 0.0305108 	 100       	 349.319   	 0         	 29.8289   	 11.7107   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 146, r1_: 50, n: 50, r2: 146)         	 0.0191792 	 100       	 555.706   	 0         	 59.9858   	 9.26396   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7300, r: 50, r2: 50, leftOrthog: 1)        	 0.0180071 	 100       	 202.697   	 0         	 48.8695   	 4.14773   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 146, reductionFactor: 31, colBlockingSize: 12)                   	 0.0171954 	 100       	 12.7962   	 0         	 1.33133   	 9.61159   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 96, r: 96, streamingCols: 0)                   	 0.0171867 	 100       	 134.057   	 0         	 22.5574   	 5.94295   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 146, r1_: 146, n: 50, r2: 50)         	 0.0142538 	 100       	 747.728   	 0         	 42.1678   	 17.7322   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4800, m: 50, k: 50) 	 0.00963594	 100       	 249.068   	 0         	 40.0584   	 6.21762   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 96, m: 2500)                                                                  	 0.0076577 	 100       	 0         	 0         	 50.1456   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 96, m: 96, fromLeft: 1)                	 0.00680461	 800       	 0         	 0         	 17.336    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 96, n: 50, r2left: 50, r2right: 0)                 	 0.00658831	 100       	 0         	 0         	 58.285    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 96)                                                         	 0.00642612	 100       	 0         	 0         	 59.7561   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00464179	 100       	 3.59055   	 0         	 1.30122   	 2.75937   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 146, leftOrthog: 1)         	 0.0035613 	 100       	 20.4981   	 0         	 6.04274   	 3.39219   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 96, n: 50, r2: 50)                                                                                         	 0.00340481	 100       	 0         	 0         	 112.782   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00308993	 100       	 8.30947   	 0         	 1.29453   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 96, Qr2: 50)       	 0.00256584	 100       	 0         	 0         	 227.606   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 96)   	 0.00112218	 100       	 42.7738   	 0         	 8.62606   	 4.95868   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 96, k: 96)   	 0.00101371	 100       	 90.9138   	 0         	 14.8492   	 6.12245   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000993431	 100       	 25.1653   	 0         	 6.03967   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000984278	 100       	 25.3993   	 0         	 6.09584   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 96)                                                                                          	 0.000949606	 200       	 0         	 0         	 16.1751   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000825588	 100       	 0.605629  	 0         	 2.42252   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000795255	 100       	 31.4365   	 0         	 7.54475   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000785205	 200       	 0         	 0         	 10.1884   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 96)                 	 0.000589984	 100       	 0         	 0         	 19.7971   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000541457	 100       	 0         	 0         	 7.38747   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.00049154	 100       	 0         	 0         	 8.13769   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000463259	 100       	 1.07931   	 0         	 12.9517   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000458364	 100       	 0         	 0         	 8.72669   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000381102	 100       	 0.655992  	 0         	 10.4959   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000378324	 100       	 0         	 0         	 10.5729   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 96)                                                                                 	 0.000369167	 100       	 1.30022   	 0         	 20.8036   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000347899	 100       	 0.718599  	 0         	 11.4976   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4800, m: 0, k: 50)  	 5.25e-06  	 100       	 0         	 0         	 36571.4   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 6.84046   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 6.8404    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 4.96569   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 4.9644    	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.60079   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.06824   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.89277   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.87464   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.34985   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.31549   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.719537  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.513376  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.272314  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.241642  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.1931    	 1800      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.156193  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.124909  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.115624  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.106781  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0804926 	 900       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.058898  	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0524614 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.04214   	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00823339	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00821956	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00680461	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00425272	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00109817	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000825588	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000463259	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 23430631131008 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 23430455879680 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 23430254553216 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 23430053226752 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 23429851900288 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 23429650573824 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 23429449247360 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 23429247920896 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 23429046594432 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 23428845267968 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 23428643941504 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 23428442615040 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 23428241288576 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 23428039962112 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 23427838635648 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 23427637309184 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 23427435982720 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 23427234656256 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 23427033329792 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 23426832003328 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 23426630676864 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 23426429350400 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 23426228023936 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 23426026697472 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 23425825371008 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 23425624044544 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 23425422718080 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 23425221391616 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 23425020065152 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 23424818738688 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 23424617412224 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 23424416085760 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 23424214755200 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 23424013428736 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 23423812102272 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 23423610775808 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 23423409449344 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 23423208122880 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 23423006796416 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 23422805469952 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 23422604143488 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 23422402817024 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 23422201490560 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 23422000164096 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 23421798837632 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 23421597511168 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 23421396184704 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 23421194858240 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 23420993531776 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 23420792205312 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 23420590878848 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 23420389552384 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 23420188225920 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 23419986899456 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 23419785572992 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 23419584246528 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 23419382920064 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 23419181593600 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 23418980267136 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 23418778940672 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 23418577614208 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 23418376287744 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 23418174961280 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 23430525470464 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 23430346905344 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 147, m: 147)                                                               	 1.86461   	 700       	 11.1301   	 0         	 0.195137  	 57.0373   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7350, cols: 147, reductionFactor: 30, colBlockingSize: 12)                 	 1.1525    	 600       	 170.884   	 0         	 4.58992   	 37.2304   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7350, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.651126  	 700       	 152.713   	 0         	 6.21264   	 24.581    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7350, r: 147, r2: 147, leftOrthog: 1)      	 0.468765  	 600       	 406.582   	 0         	 33.6329   	 12.0888   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 147, r1_: 147, n: 50, r2: 147)        	 0.246928  	 600       	 771.851   	 0         	 42.4256   	 18.1931   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7350, Xcols: 97, r: 97, streamingCols: 0)                   	 0.225443  	 700       	 214.73    	 0         	 35.5362   	 6.04256   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4850, m: 97, k: 97) 	 0.178114  	 700       	 358.686   	 0         	 29.8782   	 12.005    
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 97, Qr2: 147)      	 0.164897  	 700       	 0         	 0         	 65.1498   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 147, reductionFactor: 30, colBlockingSize: 12)                 	 0.142285  	 100       	 78.467    	 0         	 2.18778   	 35.8661   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 97, m: 97)                                                                  	 0.128813  	 800       	 7.55762   	 0         	 1.40727   	 5.37043   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4850, m: 50, k: 97) 	 0.0883226 	 700       	 372.855   	 0         	 45.5113   	 8.19257   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, n: 50, r2left: 50, r2right: 97)                	 0.0881833 	 700       	 0         	 0         	 90.5505   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 97, reductionFactor: 37, colBlockingSize: 12)                  	 0.0795093 	 100       	 60.7683   	 0         	 2.53464   	 23.9752   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 147)                                                                	 0.0779938 	 100       	 3.98322   	 0         	 0.176937  	 22.5121   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7350, m: 97)                                                         	 0.0756894 	 700       	 0         	 0         	 105.497   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 97, m: 7350)                                                                  	 0.0724683 	 700       	 0         	 0         	 110.187   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 97, n: 50, r2: 97)                                                                                         	 0.0597611 	 700       	 0         	 0         	 88.1683   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 97, m: 50, k: 2500)   	 0.0533255 	 800       	 363.804   	 0         	 44.6886   	 8.14086   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0436515 	 100       	 2.67268   	 0         	 0.138369  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 97, m: 2500, k: 50)	 0.0380719 	 800       	 509.562   	 0         	 62.5931   	 8.14086   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7350, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.031444  	 100       	 120.033   	 0         	 9.41357   	 12.7511   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 147, r2: 147, leftOrthog: 1)      	 0.0308687 	 100       	 350.015   	 0         	 29.6927   	 11.7879   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 147, r1_: 50, n: 50, r2: 147)         	 0.0203176 	 100       	 531.78    	 0         	 57.302    	 9.2803    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7350, r: 50, r2: 50, leftOrthog: 1)        	 0.0185976 	 100       	 197.606   	 0         	 47.6405   	 4.14786   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 147, reductionFactor: 30, colBlockingSize: 12)                   	 0.0176991 	 100       	 12.6161   	 0         	 1.30895   	 9.63832   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 97, r: 97, streamingCols: 0)                   	 0.0170294 	 100       	 138.129   	 0         	 23.0052   	 6.00426   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 147, r1_: 147, n: 50, r2: 50)         	 0.0148153 	 100       	 729.278   	 0         	 40.8555   	 17.8502   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4850, m: 50, k: 50) 	 0.00895861	 100       	 270.689   	 0         	 43.5336   	 6.21795   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 97, m: 2500)                                                                  	 0.00692187	 100       	 0         	 0         	 56.0542   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 97)                                                         	 0.00575393	 100       	 0         	 0         	 67.4322   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 97, m: 97, fromLeft: 1)                	 0.00562316	 800       	 0         	 0         	 21.4177   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 97, n: 50, r2left: 50, r2right: 0)                 	 0.00560671	 100       	 0         	 0         	 69.2028   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00499557	 100       	 5.13968   	 0         	 0.800709  	 6.41892   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00439192	 100       	 3.79483   	 0         	 1.37525   	 2.75937   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 147, leftOrthog: 1)         	 0.00337042	 100       	 21.8073   	 0         	 6.42056   	 3.39649   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 97, n: 50, r2: 50)                                                                                         	 0.00330121	 100       	 0         	 0         	 117.533   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 97, Qr2: 50)       	 0.00189106	 100       	 0         	 0         	 310.936   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 97, k: 97)   	 0.00102977	 100       	 91.3702   	 0         	 14.8453   	 6.15482   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 97)   	 0.00101067	 100       	 47.9881   	 0         	 9.65698   	 4.96926   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 97)                                                                                          	 0.000916467	 200       	 0         	 0         	 16.9346   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000905378	 100       	 27.6128   	 0         	 6.62707   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000899376	 100       	 0.555941  	 0         	 2.22376   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000797079	 100       	 31.3645   	 0         	 7.52748   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000794584	 200       	 0         	 0         	 10.0682   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000680434	 100       	 36.7413   	 0         	 8.8179    	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 97)                 	 0.000607407	 100       	 0         	 0         	 19.361    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000527521	 100       	 0         	 0         	 7.58264   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000495954	 100       	 0         	 0         	 8.06526   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000449592	 100       	 1.11212   	 0         	 13.3454   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000424708	 100       	 0         	 0         	 9.41824   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000411907	 100       	 0         	 0         	 9.71093   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 97)                                                                                 	 0.000395152	 100       	 1.22738   	 0         	 19.638    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000394343	 100       	 0.633966  	 0         	 10.1435   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000334019	 100       	 0.74846   	 0         	 11.9754   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4850, m: 0, k: 50)  	 5.43e-06  	 100       	 0         	 0         	 35727.4   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.02869   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.02864   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.07694   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.07561   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.70741   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.07956   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.98626   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 1.95163   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.34455   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.30606   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.736193  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.521602  	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.282858  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.277441  	 1800      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.242473  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.167213  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.133204  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.094925  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0818553 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0793902 	 800       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0652693 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0542309 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0387523 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0101013 	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00562316	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00427814	 6400      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00160698	 5200      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00112351	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000899376	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000449592	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22842241681280 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22842045360128 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22841844033664 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22841642707200 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22841441380736 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22841240054272 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22841038727808 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22840837401344 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22840636074880 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22840434748416 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22840233421952 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22840032095488 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22839830769024 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22839629442560 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22839428116096 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22839226789632 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22839025463168 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22838824136704 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22838622810240 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22838421483776 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22838220157312 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22838018830848 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22837817504384 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22837616177920 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22837414851456 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22837213524992 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22837012198528 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22836810872064 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22836609545600 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22836408219136 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22836206892672 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22836005566208 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22835804235648 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22835602909184 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22835401582720 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22835200256256 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22834998929792 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22834797603328 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22834596276864 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22834394950400 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22834193623936 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22833992297472 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22833790971008 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22833589644544 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22833388318080 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22833186991616 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22832985665152 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22832784338688 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22832583012224 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22832381685760 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22832180359296 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22831979032832 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22831777706368 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22831576379904 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22831375053440 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22831173726976 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22830972400512 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22830771074048 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22830569747584 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22830368421120 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22830167094656 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22829965768192 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22829764441728 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22842136020736 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22842129430272 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 148, m: 148)                                                               	 1.82231   	 700       	 11.6225   	 0         	 0.20239   	 57.4262   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7400, cols: 148, reductionFactor: 30, colBlockingSize: 12)                 	 1.16852   	 600       	 172.005   	 0         	 4.5888    	 37.4837   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7400, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.658275  	 700       	 155.234   	 0         	 6.25103   	 24.8333   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7400, r: 148, r2: 148, leftOrthog: 1)      	 0.475699  	 600       	 408.887   	 0         	 33.5951   	 12.1711   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 148, r1_: 148, n: 50, r2: 148)        	 0.249156  	 600       	 780.666   	 0         	 42.6202   	 18.3168   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7400, Xcols: 98, r: 98, streamingCols: 0)                   	 0.227005  	 700       	 219.152   	 0         	 35.8985   	 6.10479   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4900, m: 98, k: 98) 	 0.193387  	 700       	 340.682   	 0         	 28.0889   	 12.1287   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 98, Qr2: 148)      	 0.182757  	 700       	 0         	 0         	 59.6106   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 148, reductionFactor: 30, colBlockingSize: 12)                 	 0.148677  	 100       	 76.1182   	 0         	 2.10875   	 36.0964   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 98, m: 98)                                                                  	 0.12865   	 800       	 7.80362   	 0         	 1.43819   	 5.42599   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, n: 50, r2left: 50, r2right: 98)                	 0.0949191 	 700       	 0         	 0         	 85.5702   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7400, m: 98)                                                         	 0.090267  	 700       	 0         	 0         	 89.9802   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 98, m: 7400)                                                                  	 0.089519  	 700       	 0         	 0         	 90.732    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4900, m: 50, k: 98) 	 0.0885381 	 700       	 379.656   	 0         	 46.1785   	 8.22148   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 98, reductionFactor: 37, colBlockingSize: 12)                  	 0.0829182 	 100       	 59.4777   	 0         	 2.45644   	 24.213    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 148)                                                                	 0.0767946 	 100       	 4.07147   	 0         	 0.180742  	 22.5264   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 98, n: 50, r2: 98)                                                                                         	 0.0573377 	 700       	 0         	 0         	 93.7993   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 98, m: 50, k: 2500)   	 0.0519722 	 800       	 377.124   	 0         	 46.1662   	 8.16885   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0443555 	 100       	 2.63026   	 0         	 0.136173  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 98, m: 2500, k: 50)	 0.0377883 	 800       	 518.679   	 0         	 63.4947   	 8.16885   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7400, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.0316975 	 100       	 119.883   	 0         	 9.40137   	 12.7517   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 148, r2: 148, leftOrthog: 1)      	 0.0305912 	 100       	 358.011   	 0         	 30.1736   	 11.8651   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 148, r1_: 50, n: 50, r2: 148)         	 0.0211749 	 100       	 517.216   	 0         	 55.6356   	 9.29648   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7400, r: 50, r2: 50, leftOrthog: 1)        	 0.0193536 	 100       	 191.179   	 0         	 46.0897   	 4.14798   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 148, reductionFactor: 30, colBlockingSize: 12)                   	 0.0176297 	 100       	 12.8387   	 0         	 1.32976   	 9.65488   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 98, r: 98, streamingCols: 0)                   	 0.0171547 	 100       	 139.962   	 0         	 23.0748   	 6.06556   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 148, r1_: 148, n: 50, r2: 50)         	 0.0147642 	 100       	 741.794   	 0         	 41.2838   	 17.9681   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4900, m: 50, k: 50) 	 0.0100278 	 100       	 244.322   	 0         	 39.2909   	 6.21827   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 98)                                                         	 0.0068881 	 100       	 0         	 0         	 56.9097   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 98, m: 2500)                                                                  	 0.00685894	 100       	 0         	 0         	 57.1517   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 98, n: 50, r2left: 50, r2right: 0)                 	 0.00588256	 100       	 0         	 0         	 66.6377   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 98, m: 98, fromLeft: 1)                	 0.00583884	 800       	 0         	 0         	 21.054    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.004518  	 100       	 3.68894   	 0         	 1.33688   	 2.75937   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 148, leftOrthog: 1)         	 0.00324041	 100       	 22.8366   	 0         	 6.7152    	 3.40074   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 98, n: 50, r2: 50)                                                                                         	 0.00316937	 100       	 0         	 0         	 123.684   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00297982	 100       	 8.61651   	 0         	 1.34236   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 98, Qr2: 50)       	 0.00150246	 100       	 0         	 0         	 394.02    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 98, k: 98)   	 0.00104811	 100       	 91.6313   	 0         	 14.8106   	 6.18687   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 98)   	 0.00103975	 100       	 47.1268   	 0         	 9.46382   	 4.97967   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000966276	 100       	 25.8725   	 0         	 6.20941   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000944671	 100       	 0.529285  	 0         	 2.11714   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 98)                                                                                          	 0.000943356	 200       	 0         	 0         	 16.6215   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.000804733	 100       	 31.0662   	 0         	 7.45589   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000799995	 200       	 0         	 0         	 10.0001   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000692228	 100       	 36.1153   	 0         	 8.66766   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 98)                 	 0.000561613	 100       	 0         	 0         	 21.0821   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000519411	 100       	 0         	 0         	 7.70103   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000480034	 100       	 0         	 0         	 8.33274   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000437808	 100       	 1.14205   	 0         	 13.7046   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000420342	 100       	 0         	 0         	 9.51606   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.000393059	 100       	 0.636037  	 0         	 10.1766   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000388518	 100       	 0         	 0         	 10.2955   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 98)                                                                                 	 0.000374667	 100       	 1.30783   	 0         	 20.9252   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000336343	 100       	 0.743289  	 0         	 11.8926   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4900, m: 0, k: 50)  	 5.76e-06  	 100       	 0         	 0         	 34027.8   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.15142   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.15137   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.11459   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.11321   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.69589   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.1107    	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 2.03671   	 100       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 1.94346   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.36715   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.34836   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.74466   	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.528885  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.294046  	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.2859    	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.24416   	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.18468   	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.133168  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.101843  	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0975436 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.096378  	 800       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0627698 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0529385 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0384806 	 900       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0201766 	 5200      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00853569	 1800      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00583884	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00436433	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110407	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000944671	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000437808	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22948223518592 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22948010256384 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22947808929920 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22947607603456 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22947406276992 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22947204950528 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22947003624064 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22946802297600 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22946600971136 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22946399644672 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22946198318208 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22945996991744 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22945795665280 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22945594338816 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22945393012352 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22945191685888 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22944990359424 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22944789032960 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22944587706496 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22944386380032 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22944185053568 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22943983727104 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22943782400640 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22943581074176 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22943379747712 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22943178421248 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22942977094784 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22942775768320 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22942574441856 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22942373115392 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22942171788928 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22941970462464 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22941769131904 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22941567805440 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22941366478976 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22941165152512 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22940963826048 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22940762499584 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22940561173120 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22940359846656 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22940158520192 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22939957193728 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22939755867264 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22939554540800 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22939353214336 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22939151887872 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22938950561408 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22938749234944 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22938547908480 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22938346582016 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22938145255552 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22937943929088 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22937742602624 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22937541276160 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22937339949696 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22937138623232 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22936937296768 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22936735970304 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22936534643840 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22936333317376 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22936131990912 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22935930664448 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22935729337984 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22948117858048 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22948111267584 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                      	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 149, m: 149)                                                               	 1.92598   	 700       	 11.2213   	 0         	 0.194089  	 57.8151   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7450, cols: 149, reductionFactor: 30, colBlockingSize: 12)                 	 1.18471   	 600       	 173.116   	 0         	 4.58744   	 37.7369   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7450, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.673181  	 700       	 155.957   	 0         	 6.217     	 25.0856   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7450, r: 149, r2: 149, leftOrthog: 1)      	 0.484389  	 600       	 409.747   	 0         	 33.4397   	 12.2533   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 149, r1_: 149, n: 50, r2: 149)        	 0.257692  	 600       	 770.209   	 0         	 41.767    	 18.4406   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7450, Xcols: 99, r: 99, streamingCols: 0)                   	 0.233508  	 700       	 218.888   	 0         	 35.4934   	 6.16701   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4950, m: 99, k: 99) 	 0.19822   	 700       	 342.654   	 0         	 27.9661   	 12.2525   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 99, Qr2: 149)      	 0.169913  	 700       	 0         	 0         	 65.013    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 149, reductionFactor: 30, colBlockingSize: 12)                 	 0.145718  	 100       	 78.7171   	 0         	 2.16693   	 36.3266   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 99, m: 99)                                                                  	 0.13572   	 800       	 7.62589   	 0         	 1.39119   	 5.48154   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4950, m: 50, k: 99) 	 0.0924282 	 700       	 371.137   	 0         	 44.9863   	 8.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, n: 50, r2left: 50, r2right: 99)                	 0.0873775 	 700       	 0         	 0         	 94.5388   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7450, m: 99)                                                         	 0.0823831 	 700       	 0         	 0         	 100.27    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 99, reductionFactor: 37, colBlockingSize: 12)                  	 0.0819589 	 100       	 61.4082   	 0         	 2.51151   	 24.4507   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 149)                                                                	 0.0776413 	 100       	 4.05283   	 0         	 0.179801  	 22.5406   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 99, m: 7450)                                                                  	 0.071196  	 700       	 0         	 0         	 116.026   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 99, n: 50, r2: 99)                                                                                         	 0.0600744 	 700       	 0         	 0         	 91.3627   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 99, m: 50, k: 2500)   	 0.0540907 	 800       	 366.052   	 0         	 44.6598   	 8.19645   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                 	 0.0443589 	 100       	 2.63006   	 0         	 0.136162  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 99, m: 2500, k: 50)	 0.0395516 	 800       	 500.612   	 0         	 61.0767   	 8.19645   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7450, cols: 50, reductionFactor: 37, colBlockingSize: 12)                  	 0.031142  	 100       	 122.846   	 0         	 9.63328   	 12.7523   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 149, r2: 149, leftOrthog: 1)      	 0.0310195 	 100       	 357.855   	 0         	 29.9657   	 11.9422   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 149, r1_: 50, n: 50, r2: 149)         	 0.0204138 	 100       	 543.775   	 0         	 58.392    	 9.3125    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7450, r: 50, r2: 50, leftOrthog: 1)        	 0.0190332 	 100       	 195.711   	 0         	 47.1807   	 4.14811   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 149, reductionFactor: 30, colBlockingSize: 12)                   	 0.0183786 	 100       	 12.4824   	 0         	 1.29067   	 9.67127   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 99, r: 99, streamingCols: 0)                   	 0.0174412 	 100       	 140.487   	 0         	 22.9297   	 6.12684   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 149, r1_: 149, n: 50, r2: 50)         	 0.0145571 	 100       	 762.549   	 0         	 42.1623   	 18.086    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4950, m: 50, k: 50) 	 0.00914763	 100       	 270.562   	 0         	 43.5085   	 6.21859   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 99, m: 99, fromLeft: 1)                	 0.00630011	 800       	 0         	 0         	 19.9128   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 99, m: 2500)                                                                  	 0.00613721	 100       	 0         	 0         	 64.5245   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.00440402	 100       	 3.78441   	 0         	 1.37147   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                    	 0.00436115	 100       	 5.88736   	 0         	 0.917189  	 6.41892   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 99)                                                         	 0.00420313	 100       	 0         	 0         	 94.2156   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 99, n: 50, r2: 50)                                                                                         	 0.00339135	 100       	 0         	 0         	 116.768   	 0         
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 149, leftOrthog: 1)         	 0.00329483	 100       	 22.6112   	 0         	 6.64071   	 3.40494   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 99, n: 50, r2left: 50, r2right: 0)                 	 0.00200073	 100       	 0         	 0         	 197.927   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 99, Qr2: 50)       	 0.00174124	 100       	 0         	 0         	 342.284   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 99)   	 0.00106277	 100       	 46.5764   	 0         	 9.3341    	 4.98992   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 99, k: 99)   	 0.00105225	 100       	 93.1435   	 0         	 14.9782   	 6.21859   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 99)                                                                                          	 0.000999426	 200       	 0         	 0         	 15.8491   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)     	 0.000903882	 100       	 27.6585   	 0         	 6.63803   	 4.16667   
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                   	 0.000826064	 100       	 0.60528   	 0         	 2.42112   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                          	 0.000803243	 200       	 0         	 0         	 9.95963   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)            	 0.00078102	 100       	 32.0094   	 0         	 7.68226   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)  	 0.000680522	 100       	 36.7365   	 0         	 8.81676   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 99)                 	 0.000596185	 100       	 0         	 0         	 19.9938   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                          	 0.000530027	 100       	 0         	 0         	 7.54679   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                  	 0.000497348	 100       	 0         	 0         	 8.04266   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)          	 0.000477939	 100       	 0         	 0         	 8.36927   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                           	 0.000444634	 100       	 0         	 0         	 8.99616   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                            	 0.000432423	 100       	 1.15628   	 0         	 13.8753   	 0.0833333 
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                 	 0.00038914	 100       	 0.642442  	 0         	 10.2791   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 99)                                                                                 	 0.000374672	 100       	 1.32116   	 0         	 21.1385   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                 	 0.000351685	 100       	 0.710863  	 0         	 11.3738   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 4950, m: 0, k: 50)  	 5.472e-06 	 100       	 0         	 0         	 36184.2   	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.34081   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.34075   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.31104   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.30977   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.92419   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.13946   	 1800      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 2.04798   	 900       
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 2.02964   	 100       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.3806    	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.35927   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.759975  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.537737  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.301916  	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.293444  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.250949  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.172132  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.140124  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0904717 	 1000      
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.0870308 	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.0773332 	 800       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0657985 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0549945 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0402321 	 900       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.0151971 	 1800      
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.00906933	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00630011	 800       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00427083	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.0011155 	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000826064	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000432423	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
orthoX: R, orthoY: R
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m43->44  [0m[1;34m44->45  [0m[1;34m45->46  [0m[1;34m46->47  [0m[1;34m47->48  [0m[1;34m48->49  [0m[1;34m49->50  [0m[1;34m50->51  [0m[1;34m51->52  [0m[1;34m52->53  [0m[1;34m53->54  [0m[1;34m54->55  [0m[1;34m55->56  [0m[1;34m56->57  [0m[1;34m57->58  [0m[1;34m58->59  [0m[1;34m59->60  [0m[1;34m60->61  [0m[1;34m61->62  [0m[1;34m62->63  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 22560096065408 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 22559919695872 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 22559718369408 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 22559517042944 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 22559315716480 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 22559114390016 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 22558913063552 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 22558711737088 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 22558510410624 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 22558309084160 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 22558107757696 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 22557906431232 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 22557705104768 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 22557503778304 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 22557302451840 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 22557101125376 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 22556899798912 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 22556698472448 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 22556497145984 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 22556295819520 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 22556094493056 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 22555893166592 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 22555691840128 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 22555490513664 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 22555289187200 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 22555087860736 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 22554886534272 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 22554685207808 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 22554483881344 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 22554282554880 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 22554081228416 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 22553879901952 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 22553678571392 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 22553477244928 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 22553275918464 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 22553074592000 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 22552873265536 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 22552671939072 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 22552470612608 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 22552269286144 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 22552067959680 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 22551866633216 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 22551665306752 -> hwthread 43 - OK[0m[1;34m
[0m[1;34m	threadid 22551463980288 -> hwthread 44 - OK[0m[1;34m
[0m[1;34m	threadid 22551262653824 -> hwthread 45 - OK[0m[1;34m
[0m[1;34m	threadid 22551061327360 -> hwthread 46 - OK[0m[1;34m
[0m[1;34m	threadid 22550860000896 -> hwthread 47 - OK[0m[1;34m
[0m[1;34m	threadid 22550658674432 -> hwthread 48 - OK[0m[1;34m
[0m[1;34m	threadid 22550457347968 -> hwthread 49 - OK[0m[1;34m
[0m[1;34m	threadid 22550256021504 -> hwthread 50 - OK[0m[1;34m
[0m[1;34m	threadid 22550054695040 -> hwthread 51 - OK[0m[1;34m
[0m[1;34m	threadid 22549853368576 -> hwthread 52 - OK[0m[1;34m
[0m[1;34m	threadid 22549652042112 -> hwthread 53 - OK[0m[1;34m
[0m[1;34m	threadid 22549450715648 -> hwthread 54 - OK[0m[1;34m
[0m[1;34m	threadid 22549249389184 -> hwthread 55 - OK[0m[1;34m
[0m[1;34m	threadid 22549048062720 -> hwthread 56 - OK[0m[1;34m
[0m[1;34m	threadid 22548846736256 -> hwthread 57 - OK[0m[1;34m
[0m[1;34m	threadid 22548645409792 -> hwthread 58 - OK[0m[1;34m
[0m[1;34m	threadid 22548444083328 -> hwthread 59 - OK[0m[1;34m
[0m[1;34m	threadid 22548242756864 -> hwthread 60 - OK[0m[1;34m
[0m[1;34m	threadid 22548041430400 -> hwthread 61 - OK[0m[1;34m
[0m[1;34m	threadid 22547840103936 -> hwthread 62 - OK[0m[1;34m
[0m[1;34m	threadid 22547638777472 -> hwthread 63 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 22559990404864 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 22559811794688 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: version v0.9.5-108-g17d8d92
PITTS: MPI #procs: 1
PITTS: OpenMP #threads: 64
PITTS: SIMD implementation: avx2
PITTS: Eigen SIMD implementation: AVX SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2
PITTS: cache sizes (L1/core, L2/core, L3/accessible) [byte]: (32768, 524288, 805306368)
PITTS: preprocessor definitions: PITTS_DIRECT_MKL_GEMM
Performance statistics:
function                                                                                                                                                                                                       	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 150, m: 150)                                                                	 1.90542   	 700       	 11.5722   	 0         	 0.198822  	 58.204    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7500, cols: 150, reductionFactor: 30, colBlockingSize: 12)                  	 1.18306   	 600       	 176.872   	 0         	 4.65573   	 37.9902   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7500, cols: 100, reductionFactor: 37, colBlockingSize: 12)                  	 0.686807  	 700       	 157.013   	 0         	 6.19679   	 25.3378   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7500, r: 150, r2: 150, leftOrthog: 1)       	 0.495247  	 600       	 408.887   	 0         	 33.1471   	 12.3355   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, r1_: 150, n: 50, r2: 150)         	 0.259919  	 600       	 779.089   	 0         	 41.9669   	 18.5644   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 7500, Xcols: 100, r: 100, streamingCols: 0)                  	 0.234983  	 700       	 223.421   	 0         	 35.8665   	 6.22924   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 5000, m: 100, k: 100)	 0.201799  	 700       	 346.879   	 0         	 28.0278   	 12.3762   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 100, Qr2: 150)      	 0.177633  	 700       	 0         	 0         	 63.0512   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 150, reductionFactor: 30, colBlockingSize: 12)                  	 0.151778  	 100       	 76.5923   	 0         	 2.09517   	 36.5566   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 100, m: 100)                                                                 	 0.133411  	 800       	 7.99532   	 0         	 1.44396   	 5.53709   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 100, m: 7500)                                                                  	 0.11573   	 700       	 0         	 0         	 72.583    	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 7500, m: 100)                                                         	 0.0951105 	 700       	 0         	 0         	 88.3184   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 5000, m: 50, k: 100) 	 0.0918836 	 700       	 380.917   	 0         	 46.0147   	 8.27815   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2left: 50, r2right: 100)               	 0.0899394 	 700       	 0         	 0         	 93.3962   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 100, reductionFactor: 37, colBlockingSize: 12)                  	 0.0837701 	 100       	 61.3004   	 0         	 2.48299   	 24.6881   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 150)                                                                 	 0.076664  	 100       	 4.13058   	 0         	 0.183137  	 22.5546   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 100)                                                                                        	 0.0579434 	 700       	 0         	 0         	 96.6461   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 100, m: 50, k: 2500)   	 0.0511918 	 800       	 390.688   	 0         	 47.5076   	 8.22368   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                  	 0.0460558 	 100       	 2.53316   	 0         	 0.131145  	 19.3157   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 100, m: 2500, k: 50)	 0.0364083 	 800       	 549.326   	 0         	 66.798    	 8.22368   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 2500, r: 150, r2: 150, leftOrthog: 1)       	 0.0340703 	 100       	 330.2     	 0         	 27.4726   	 12.0192   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 7500, cols: 50, reductionFactor: 37, colBlockingSize: 12)                   	 0.0310902 	 100       	 123.877   	 0         	 9.71367   	 12.7528   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, r1_: 50, n: 50, r2: 150)          	 0.0221022 	 100       	 508.999   	 0         	 54.5647   	 9.32836   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 150, reductionFactor: 30, colBlockingSize: 12)                    	 0.0215055 	 100       	 10.8112   	 0         	 1.11599   	 9.6875    
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 7500, r: 50, r2: 50, leftOrthog: 1)         	 0.0201939 	 100       	 185.699   	 0         	 44.7659   	 4.14823   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 100, r: 100, streamingCols: 0)                  	 0.0178485 	 100       	 140.068   	 0         	 22.6349   	 6.18812   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 150, r1_: 150, n: 50, r2: 50)          	 0.0150652 	 100       	 746.752   	 0         	 41.0216   	 18.2039   
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 5000, m: 50, k: 50)  	 0.00898732	 100       	 278.17    	 0         	 44.7297   	 6.21891   
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 100, m: 2500)                                                                  	 0.00777854	 100       	 0         	 0         	 51.4235   	 0         
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 100)                                                         	 0.00679868	 100       	 0         	 0         	 58.835    	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>](n: 100, m: 100, fromLeft: 1)               	 0.00634168	 800       	 0         	 0         	 20.1839   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2left: 50, r2right: 0)                 	 0.00562955	 100       	 0         	 0         	 71.0536   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double](n: 50, m: 50)                                                                   	 0.00447024	 100       	 3.72835   	 0         	 1.35116   	 2.75937   
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>(r1: 50, r: 50, r2: 150, leftOrthog: 1)          	 0.00359129	 100       	 20.8839   	 0         	 6.12593   	 3.40909   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 50, reductionFactor: 37, colBlockingSize: 12)                     	 0.00330367	 100       	 7.77186   	 0         	 1.21077   	 6.41892   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 50)                                                                                         	 0.0032396 	 100       	 0         	 0         	 123.472   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 50, Qr1: 100, Qr2: 50)       	 0.00298998	 100       	 0         	 0         	 200.67    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 100, k: 100)  	 0.00107081	 100       	 93.3871   	 0         	 14.9419   	 6.25      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 50, m: 50, k: 100)   	 0.00102946	 100       	 48.569    	 0         	 9.71379   	 5         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50, k: 50)      	 0.000989117	 100       	 25.2751   	 0         	 6.06602   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                                                          	 0.000951908	 200       	 0         	 0         	 16.8083   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                    	 0.000878418	 100       	 0.569205  	 0         	 2.27682   	 0.25      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, n: 50, r2: 1)             	 0.000818153	 100       	 30.5566   	 0         	 7.33359   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                           	 0.000805659	 200       	 0         	 0         	 9.92976   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double](n: 50, m: 50, k: 50)   	 0.000695659	 100       	 35.9371   	 0         	 8.62492   	 4.16667   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 100)                 	 0.000600902	 100       	 0         	 0         	 19.97     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2left: 1, r2right: 0)                   	 0.000521582	 100       	 0         	 0         	 7.66898   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                           	 0.000505528	 100       	 0         	 0         	 7.91252   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 1, Qr1: 0, Qr2: 1)           	 0.000462736	 100       	 0         	 0         	 8.64424   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                             	 0.000428198	 100       	 1.16768   	 0         	 14.0122   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 50)                                                            	 0.00041063	 100       	 0         	 0         	 9.74113   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 100)                                                                                 	 0.000382873	 100       	 1.30592   	 0         	 20.8947   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 50)                                                                                  	 0.000380971	 100       	 0.656218  	 0         	 10.4995   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 50, r2: 1)                                                                                  	 0.000338713	 100       	 0.738088  	 0         	 11.8094   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double](n: 5000, m: 0, k: 50)   	 1.5041e-05	 100       	 0         	 0         	 13297     	 0         
Timing statistics:
function                                                                                                                                                                                      	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: T PITTS::axpby(T, const TensorTrain<T>&, T, TensorTrain<T>&, T, int) [with T = double]                                                                        	 7.4076    	 100       
<PITTS::TensorTrain<double>> :: T PITTS::internal::axpby_normalized(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&, T, int) [with T = double]                                     	 7.40754   	 100       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                             	 5.28357   	 100       
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                                         	 5.28226   	 100       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_svd(const PITTS::ConstTensor2View<T>&, bool, T, int, bool, bool, T*) [with T = double]	 4.87542   	 900       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                                  	 2.16131   	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                                  	 2.1239    	 100       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_svd_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                               	 2.02814   	 900       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]           	 1.43631   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_svd_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                            	 1.38811   	 900       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                             	 0.774345  	 900       
<PITTS::Tensor2<double>> :: PITTS::internal::normalize_svd<double>(const PITTS::ConstTensor2View<double>&, bool, double, int, bool, bool, double*)::<lambda()>                                	 0.553102  	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract3(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>) [with T = double]        	 0.304786  	 1800      
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                           	 0.297904  	 900       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                                    	 0.252831  	 800       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat1_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.181086  	 900       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::ConstTensor2View<T>&, bool) [with T = double]                                                                	 0.137882  	 900       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                                  	 0.123508  	 800       
<double> :: void PITTS::internal::normalize_qb_transpose(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                         	 0.10232   	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                        	 0.0966915 	 1000      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                                	 0.0634461 	 1300      
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract1r(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2<T>&) [with T = double]          	 0.0521809 	 900       
<PITTS::Tensor3<double>> :: void PITTS::internal::axpby_ortho_contract2(const PITTS::ConstTensor2View<T>&, const PITTS::ConstTensor2View<T>&, PITTS::Tensor2View<T>&) [with T = double]       	 0.0371039 	 900       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                                         	 0.0119591 	 5200      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:51&, bool, PITTS::Tensor2<T>&) [with T = double; auto:51 = Eigen::PermutationMatrix<-1, -1, int>]                           	 0.00634168	 800       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                                	 0.00584434	 1800      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                              	 0.00430822	 6400      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                                       	 0.00110256	 300       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                                         	 0.000878418	 100       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                                  	 0.000428198	 100       
INFO: You are running LIKWID in a cpuset with 64 CPUs. Taking given IDs as logical ID in cpuset
