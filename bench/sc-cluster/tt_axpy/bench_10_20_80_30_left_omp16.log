[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139757977245568 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139757900261376 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139757891864704 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139757883468032 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139757875071360 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139757866674688 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139757858278016 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139757849881344 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139757363391360 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139757354994688 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139757346598016 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139757338201344 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139757329804672 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139757321408000 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139757313011328 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 1
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34mRoundrobin placement triggered
	threadid 139907827803904 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139907819411200 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139907810879232 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 139756826523392 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 139756818130688 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139756809737984 -> hwthread 2 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2200, cols: 30, reductionFactor: 18, colBlockingSize: 12)            	 0.0841692 	 1050      	 52.1449   	 0         	 6.67655   	 7.81016   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 80, Xr2: 80, Qr1: 110, Qr2: 30)	 0.0375024 	 1050      	 0         	 0         	 97.6578   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 30, m: 30)                                                                     	 0.0302998 	 1350      	 1.60397   	 0         	 0.973077  	 1.64835   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2200, Xcols: 30, r: 30, streamingCols: 0)             	 0.0260376 	 1050      	 79.846    	 0         	 42.7297   	 1.86863   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 80, r1low: 30, n: 20, r2: 30)             	 0.0259067 	 1050      	 0         	 0         	 42.7998   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2200, m: 30)                                                                 	 0.00930376	 1050      	 0         	 0         	 119.178   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2200, m: 30)                                                        	 0.00884785	 1050      	 0         	 0         	 125.319   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 30, reductionFactor: 18, colBlockingSize: 12)             	 0.00774549	 150       	 14.7182   	 0         	 1.99858   	 7.36434   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 20, r2: 30)                                                                                   	 0.00640258	 1200      	 0         	 0         	 53.9782   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 80, m: 80)                                                                     	 0.00531355	 9         	 1.15629   	 0         	 0.261249  	 4.426     
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1600, cols: 80, reductionFactor: 18, colBlockingSize: 12)            	 0.00427238	 7         	 35.4193   	 0         	 1.76164   	 20.1058   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 30, r: 30, streamingCols: 0)              	 0.00294188	 150       	 18.3556   	 0         	 9.97322   	 1.84049   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 30, reductionFactor: 18, colBlockingSize: 12)              	 0.00202335	 150       	 2.81712   	 0         	 0.889616  	 3.16667   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1600, Xcols: 80, r: 80, streamingCols: 0)             	 0.00188239	 7         	 38.0792   	 0         	 7.71104   	 4.93827   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 20, nChunks: 2, r2: 80)	 0.00163798	 1         	 5.00129   	 0         	 1.37536   	 3.63636   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 400, m: 30)                                                                  	 0.00159127	 150       	 0         	 0         	 18.0988   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 20, r1low: 0, n: 20, r2: 30)              	 0.00151688	 150       	 0         	 0         	 18.9863   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 20, Xr2: 80, Qr1: 20, Qr2: 30) 	 0.00136398	 150       	 0         	 0         	 77.4205   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 30, m: 30, fromLeft: 0)          	 0.0011893 	 1200      	 0         	 0         	 14.5295   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 80, nChunks: 2, r2: 80)	 0.00109824	 7         	 208.858   	 0         	 26.1073   	 8         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 30)                                                                                    	 0.00105615	 300       	 0         	 0         	 2.72688   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1600, m: 80)                                                                 	 0.000870462	 7         	 0         	 0         	 16.4694   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 30, n: 20, r2: 1)                                                                                    	 0.000764741	 300       	 0         	 0         	 3.76598   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 80, r1low: 30, n: 20, r2: 1)              	 0.000606636	 150       	 0         	 0         	 8.70374   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1600, m: 80)                                                        	 0.000585511	 7         	 0         	 0         	 24.4846   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 30)                                                         	 0.000535566	 150       	 0         	 0         	 53.7749   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 20, r2: 30)               	 0.000535271	 150       	 0         	 0         	 2.69023   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 20, r2: 1)                                                      	 0.000505633	 150       	 0.949305  	 0         	 11.3917   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 80, n: 20, r2: 1)                                                                                    	 0.000502093	 150       	 0         	 0         	 7.64799   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 80, reductionFactor: 18, colBlockingSize: 12)             	 0.000406739	 1         	 13.2873   	 0         	 0.755275  	 17.5926   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 30)                                                          	 0.00039794	 150       	 0         	 0         	 3.61864   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 1, Xr2: 20, Qr1: 1, Qr2: 0)    	 0.000389332	 150       	 0         	 0         	 2.46576   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 80)                                           	 0.000364532	 7         	 0         	 0         	 39.3271   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 20, r2: 1)                                                                           	 0.000358694	 151       	 0.673555  	 0         	 10.7769   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 30, n: 20, r2: 1)                                                                           	 0.000336731	 150       	 0.267276  	 0         	 4.27641   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 80, n: 20, r2: 80)                                              	 0.000263556	 7         	 0         	 0         	 54.3945   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 80)                                               	 0.000246494	 1         	 0         	 0         	 0.103856  	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 80, reductionFactor: 18, colBlockingSize: 12)              	 0.000233131	 1         	 1.1591    	 0         	 0.274524  	 4.22222   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 80, r: 80, streamingCols: 0)              	 0.000206913	 1         	 12.3723   	 0         	 2.59819   	 4.7619    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 400, m: 80)                                                                  	 0.00011696	 1         	 0         	 0         	 4.37756   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 80)                                              	 5.7694e-05	 1         	 0         	 0         	 8.87441   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 80, r1_: 80, nChunks: 2, r2: 1) 	 2.7495e-05	 1         	 14.8973   	 0         	 31.2842   	 0.47619   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 80, r: 20, streamingCols: 17)              	 2.4681e-05	 1         	 0.324136  	 0         	 0.324136  	 1         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 80)                                                          	 2.1583e-05	 1         	 0         	 0         	 1.18612   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 80, m: 80, fromLeft: 0)          	 1.7776e-05	 8         	 0         	 0         	 46.0846   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 80)                                           	 1.4336e-05	 1         	 0         	 0         	 35.7143   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 20)                                                                   	 1.1241e-05	 1         	 0         	 0         	 0.569344  	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 80)                                                         	 9.985e-06 	 1         	 0         	 0         	 51.2769   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 80, n: 20, r2: 1)                                                                             	 4.858e-06 	 1         	 0.658707  	 0         	 2.63483   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 20)                                            	 3.099e-06 	 1         	 0         	 0         	 2.06518   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 20, m: 80, fromLeft: 0)          	 1.863e-06 	 1         	 0         	 0         	 13.7413   	 0         
Timing statistics:
function                                                                                                                                                                           	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                        	 0.549732  	 150       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]	 0.202437  	 1359      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                  	 0.0998087 	 1359      
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                       	 0.0988503 	 1359      
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                            	 0.0392557 	 1350      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                              	 0.0356133 	 1359      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                         	 0.0310935 	 1209      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                             	 0.0285655 	 1500      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                  	 0.0195182 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                              	 0.0195072 	 1         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                            	 0.0118937 	 1209      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                   	 0.0103984 	 1359      
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                     	 0.00872557	 1950      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                   	 0.00806587	 20        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                	 0.00276371	 9         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                              	 0.00262112	 6175      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                     	 0.00190831	 1359      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                   	 0.00178541	 5589      
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>]                	 0.00120894	 1209      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                            	 0.000695425	 301       
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                                	 0.000567744	 9         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                       	 0.000505633	 150       
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                             	 0.000381967	 9         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                              	 4.858e-06 	 1         
