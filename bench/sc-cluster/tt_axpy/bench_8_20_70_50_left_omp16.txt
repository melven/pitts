[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140483247306624 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140483238909952 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140483230513280 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140483222116608 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140483011537280 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140483003140608 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140482994743936 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140482986347264 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140482977950592 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140482969553920 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140482961157248 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140482407558400 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140482399161728 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140482390765056 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140482382368384 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 1
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34mRoundrobin placement triggered
	threadid 139681888438016 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139681880045312 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139681798813440 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 140482373973760 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140482365581056 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140482350589696 -> hwthread 2 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 2400, m: 50)                                                                   	 0.830309  	 600       	 8.61125   	 0         	 1.40218   	 6.14135   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 1400, c: 70, r2: 50)                          	 0.0924446 	 600       	 63.6057   	 0         	 12.5394   	 5.07246   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 120, n: 20, r2left: 70, r2right: 50)         	 0.0590794 	 600       	 0         	 0         	 46.798    	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 400, m: 50)                                                                    	 0.038628  	 120       	 5.95423   	 0         	 1.05747   	 5.63063   
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 1400, x.r2: 70, y.r2: 50)                         	 0.0302489 	 600       	 194.387   	 0         	 27.2142   	 7.14286   
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 120, n: 20, r2: 50)                                          	 0.0238604 	 600       	 0         	 0         	 48.2809   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1upp: 70, r1low: 50, n: 20, r2: 50)           	 0.0231291 	 600       	 0         	 0         	 49.8074   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 70, nChunks: 2, r2: 50)	 0.0230289 	 600       	 291.808   	 0         	 51.6917   	 5.64516   
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 70)                                              	 0.0186978 	 605       	 0         	 0         	 50.7355   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, nChunks: 2, r2: 50)	 0.0159553 	 600       	 300.841   	 0         	 60.1681   	 5         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1upp: 70, r1low: 50, n: 20, r2: 70)                               	 0.0145075 	 600       	 0         	 0         	 88.0097   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 50)                                                                                   	 0.0125999 	 720       	 0         	 0         	 45.7148   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 50)                                              	 0.0109558 	 600       	 0         	 0         	 61.3373   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 1400, m: 70)                                                                   	 0.00758463	 5         	 8.89386   	 0         	 1.05988   	 8.39138   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 400, c: 70, r2: 50)                           	 0.0064715 	 120       	 51.9199   	 0         	 10.6065   	 4.8951    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 20, m: 70)                                                                     	 0.00429752	 1         	 0.0117896 	 0         	 0.00599415	 1.96685   
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 400, x.r2: 70, y.r2: 50)                          	 0.00415049	 120       	 80.9543   	 0         	 11.9118   	 6.79612   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 20, m: 50)                                                                     	 0.00367532	 120       	 1.13185   	 0         	 0.632108  	 1.7906    
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 50)                                           	 0.00333927	 120       	 0         	 0         	 11.4995   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 400, m: 70)                                                                    	 0.00213584	 1         	 1.72828   	 0         	 0.228369  	 7.56793   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 20, r2left: 70, r2right: 50)          	 0.00192864	 120       	 0         	 0         	 47.7849   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 20, nChunks: 2, r2: 50)	 0.00188968	 120       	 203.209   	 0         	 65.0268   	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 70)                                              	 0.00159794	 121       	 0         	 0         	 33.9237   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1upp: 20, r1low: 0, n: 20, r2: 50)            	 0.00152822	 120       	 0         	 0         	 25.1273   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1upp: 20, r1low: 0, n: 20, r2: 70)                                	 0.00132532	 120       	 0         	 0         	 40.5638   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 1)                                                                                    	 0.00128528	 240       	 0         	 0         	 2.98767   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 50)                                                                                    	 0.0011764 	 240       	 0         	 0         	 3.26421   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 20, x.r2: 20, y.r2: 50)                           	 0.00109916	 120       	 4.36699   	 0         	 2.09615   	 2.08333   
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 50)                                              	 0.0010317 	 120       	 0         	 0         	 37.2202   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 70, r1low: 50, n: 20, r2: 1)              	 0.00092958	 120       	 0         	 0         	 4.95708   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 70, nChunks: 2, r2: 1) 	 0.000848296	 120       	 31.6871   	 0         	 67.7198   	 0.467914  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                                                    	 0.00081918	 121       	 0         	 0         	 3.30867   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 20)                                               	 0.000706764	 120       	 0         	 0         	 1.08664   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 50, nChunks: 2, r2: 1) 	 0.000627501	 120       	 30.5976   	 0         	 66.0907   	 0.462963  
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1upp: 1, r1low: 0, n: 20, r2: 50)             	 0.000613508	 120       	 0         	 0         	 3.12954   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 20, r2: 20)                                 	 0.000602094	 120       	 0         	 0         	 1.27555   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2left: 20, r2right: 0)            	 0.000489764	 120       	 0         	 0         	 1.5681    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 20, c: 20, r2: 50)                            	 0.000405479	 120       	 11.8379   	 0         	 8.04974   	 1.47059   
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 50)                                               	 0.000394979	 120       	 0         	 0         	 4.86102   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 0)                                             	 0.000387777	 120       	 0         	 0         	 0         	 -nan      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                      	 0.000343458	 120       	 0.978286  	 0         	 11.7394   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 70)                                           	 0.000286377	 5         	 0         	 0         	 27.3765   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, nChunks: 2, r2: 70)	 0.000285958	 5         	 383.833   	 0         	 54.8332   	 7         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                                           	 0.000265784	 121       	 0.63736   	 0         	 10.1978   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 1)                                                                           	 0.000246667	 120       	 0.486486  	 0         	 7.78377   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, r1_: 0, nChunks: 2, r2: 50) 	 0.000202358	 120       	 0         	 0         	 379.525   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 20, nChunks: 2, r2: 70)	 4.7321e-05	 1         	 132.542   	 0         	 37.869    	 3.5       
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 70)                                           	 3.4822e-05	 1         	 0         	 0         	 12.8654   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 70)                                               	 2.0219e-05	 1         	 0         	 0         	 1.10787   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 20)                                            	 1.5746e-05	 1         	 0         	 0         	 0.406452  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, nChunks: 2, r2: 1) 	 8.703e-06 	 1         	 36.0336   	 0         	 76.1852   	 0.472973  
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                                             	 5.323e-06 	 1         	 0.526019  	 0         	 2.10408   	 0.25      
Timing statistics:
function                                                                                                                                                           	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]        	 1.89919   	 120       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qb(const PITTS::Tensor2<T>&, bool, T, int, bool) [with T = double]                                     	 1.53427   	 847       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                              	 0.886631  	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]              	 0.0993215 	 840       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(int, int, int) [with T = double]                                                                        	 0.0635899 	 4582      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]             	 0.0614978 	 840       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]	 0.042894  	 1687      
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                  	 0.0354985 	 840       
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                	 0.0334052 	 1687      
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                             	 0.0279243 	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double]           	 0.0252708 	 840       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                  	 0.0225287 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                              	 0.0224408 	 1         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double]                               	 0.0164349 	 840       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                     	 0.0158807 	 1321      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                   	 0.0114079 	 16        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int) [with T = double]                                                         	 0.00198593	 3017      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]             	 0.00092958	 120       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                            	 0.000512451	 241       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                       	 0.000343458	 120       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                              	 5.323e-06 	 1         
INFO: You are running LIKWID in a cpuset with 16 CPUs. Taking given IDs as logical ID in cpuset
