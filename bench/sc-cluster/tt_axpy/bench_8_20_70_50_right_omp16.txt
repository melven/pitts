[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140215380625280 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140215372228608 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140215363831936 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140215355435264 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140215347038592 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140215338641920 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140215330245248 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140214844517120 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140214836120448 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140214827723776 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140214819327104 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140214810930432 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140214802533760 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140214794137088 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140214307647104 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 1
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34mRoundrobin placement triggered
	threadid 140578498762496 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140578490369792 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140578481837824 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 140214299252480 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140214290859776 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140214282467072 -> hwthread 2 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                              	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, nChunks: 2, r: 50, r2: 70)	 0.129445  	 600       	 51.9138   	 0         	 9.19616   	 5.64516   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2400, cols: 50, reductionFactor: 18, colBlockingSize: 12)          	 0.125613  	 600       	 60.5031   	 0         	 4.68103   	 12.9252   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 50, c: 70, r2: 1400)                        	 0.0944916 	 600       	 62.2278   	 0         	 12.2678   	 5.07246   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, nChunks: 2, r: 50, r2: 50)	 0.0915814 	 600       	 52.4124   	 0         	 10.4825   	 5         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 70, r1low: 50, n: 20, r2: 120)          	 0.059105  	 600       	 0         	 0         	 46.7778   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 50, m: 50)                                                                   	 0.0425133 	 840       	 3.29308   	 0         	 1.19342   	 2.75937   
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 50, y.r1: 70, r2: 1400)                       	 0.0352426 	 600       	 166.843   	 0         	 23.3581   	 7.14286   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2400, Xcols: 50, r: 50, streamingCols: 0)           	 0.0341458 	 600       	 105.43    	 0         	 33.9134   	 3.10881   
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 20, r2: 120)                                       	 0.0255627 	 600       	 0         	 0         	 45.0657   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 50, n: 20, r2left: 70, r2right: 50)      	 0.0249269 	 600       	 0         	 0         	 46.2151   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 70)                                           	 0.0232606 	 605       	 0         	 0         	 40.7832   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 20, r2left: 70, r2right: 50)                          	 0.017991  	 600       	 0         	 0         	 70.9687   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 20, r2: 50)                                           	 0.0171052 	 600       	 0         	 0         	 28.0617   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 420, cols: 50, reductionFactor: 18, colBlockingSize: 12)           	 0.0130855 	 120       	 20.3278   	 0         	 1.72404   	 11.7908   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 20, r2: 70)                                           	 0.0125352 	 600       	 0         	 0         	 53.609    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, nChunks: 2, r: 50, r2: 20)	 0.0103705 	 120       	 37.0283   	 0         	 11.849    	 3.125     
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 50)                                                                                 	 0.007929  	 720       	 0         	 0         	 72.6448   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 50, c: 70, r2: 400)                         	 0.00731901	 120       	 45.9078   	 0         	 9.37831   	 4.8951    
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 70, m: 70)                                                                   	 0.00588322	 7         	 0.544145  	 0         	 0.14059   	 3.87045   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 420, Xcols: 50, r: 50, streamingCols: 0)            	 0.00543388	 120       	 23.1878   	 0         	 7.64094   	 3.03468   
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 50, y.r1: 70, r2: 400)                        	 0.00455312	 120       	 73.7956   	 0         	 10.8585   	 6.79612   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 50, reductionFactor: 18, colBlockingSize: 12)            	 0.00377346	 120       	 3.35678   	 0         	 0.89043   	 3.76984   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 20, r2: 20)                                           	 0.00329944	 120       	 0         	 0         	 11.6383   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 20, r2: 21)                                        	 0.00284263	 120       	 0         	 0         	 14.184    	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, nChunks: 2, r: 70, r2: 70)	 0.00265608	 5         	 41.3241   	 0         	 5.90344   	 7         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 70, r1low: 50, n: 20, r2: 21)           	 0.00230653	 120       	 0         	 0         	 41.9539   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 20)                                           	 0.00223138	 121       	 0         	 0         	 24.2934   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1400, cols: 70, reductionFactor: 18, colBlockingSize: 12)          	 0.00219629	 5         	 32.9697   	 0         	 1.87407   	 17.5926   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 50, n: 20, r2left: 20, r2right: 1)       	 0.00208298	 120       	 0         	 0         	 19.3568   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 50, nChunks: 2, r: 50, r2: 1) 	 0.00192978	 120       	 9.94931   	 0         	 40.9911   	 0.242718  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, nChunks: 2, r: 70, r2: 20)	 0.00190483	 1         	 3.29268   	 0         	 0.940767  	 3.5       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 20, r2left: 20, r2right: 1)                           	 0.00186827	 120       	 0         	 0         	 29.4946   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 2, r: 50, r2: 70) 	 0.00183012	 120       	 14.6876   	 0         	 31.3894   	 0.467914  
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](x.r1: 50, y.r1: 20, r2: 20)                         	 0.00128004	 120       	 3.74988   	 0         	 1.79994   	 2.08333   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 2, r: 50, r2: 50) 	 0.00120358	 120       	 15.9524   	 0         	 34.4571   	 0.462963  
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1400, Xcols: 70, r: 70, streamingCols: 0)           	 0.00106656	 5         	 32.1596   	 0         	 7.44265   	 4.32099   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 20, r2: 1)                                            	 0.000998803	 240       	 0         	 0         	 3.8446    	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 1)                                            	 0.000865699	 120       	 0         	 0         	 0.887144  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2left: 70, r2right: 50)         	 0.000835841	 120       	 0         	 0         	 5.51301   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 50)                                                                                  	 0.000675492	 240       	 0         	 0         	 5.68475   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1: 20, n: 20, r2left: 1, r2right: 0)                            	 0.000672157	 120       	 0         	 0         	 1.14259   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 20, r1low: 1, n: 20, r2: 1)             	 0.000621093	 120       	 0         	 0         	 1.29836   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 1)                                                                                  	 0.000618151	 240       	 0         	 0         	 6.21207   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 50, r: 1, streamingCols: 1)              	 0.000551476	 120       	 0.00435196	 0         	 0.0705017 	 0.0617284 
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 50, c: 20, r2: 20)                          	 0.00049476	 120       	 9.70167   	 0         	 6.59714   	 1.47059   
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 1)                                          	 0.00044226	 120       	 0         	 0         	 0.0868268 	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 70)                                                                                  	 0.00042544	 120       	 0         	 0         	 6.31816   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 50, n: 20, r2left: 1, r2right: 0)        	 0.000425155	 120       	 0         	 0         	 4.516     	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 70)                                                    	 0.000418394	 120       	 0.803071  	 0         	 9.63685   	 0.0833333 
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 70)                                        	 0.000307895	 5         	 0         	 0         	 25.4632   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 70, reductionFactor: 18, colBlockingSize: 12)           	 0.000276311	 1         	 14.9751   	 0         	 0.95255   	 15.721    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 70)                                                                         	 0.000267951	 121       	 0.632205  	 0         	 10.1153   	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 50)                                                                         	 0.000266349	 120       	 0.450537  	 0         	 7.20859   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 70, reductionFactor: 18, colBlockingSize: 12)            	 0.00021528	 1         	 0.961022  	 0         	 0.234114  	 4.10494   
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 20, r2: 0)                                            	 0.000125341	 120       	 0         	 0         	 0         	 -nan      
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 70, r: 70, streamingCols: 0)            	 0.000111193	 1         	 17.627    	 0         	 4.2053    	 4.19162   
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 20)                                        	 6.2655e-05	 1         	 0         	 0         	 7.15027   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 1)                                            	 2.3779e-05	 1         	 0         	 0         	 0.942008  	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 70, r: 20, streamingCols: 13)            	 1.6081e-05	 1         	 0.497481  	 0         	 0.497481  	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, nChunks: 2, r: 70, r2: 70) 	 1.4332e-05	 1         	 21.8811   	 0         	 46.2629   	 0.472973  
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 1)                                         	 1.2288e-05	 1         	 0         	 0         	 0.520833  	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 70)                                                                           	 5.35e-06  	 1         	 0.523364  	 0         	 2.09346   	 0.25      
Timing statistics:
function                                                                                                                                                                  	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_rightOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]              	 1.08505   	 120       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::Tensor2<T>&, bool, T, int, bool) [with T = double]	 0.472728  	 847       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract2(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]       	 0.240936  	 1687      
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                         	 0.146272  	 847       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                              	 0.14516   	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                     	 0.102305  	 840       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool) [with T = double]                                           	 0.0703361 	 4701      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                    	 0.0620326 	 840       
<PITTS::Tensor3<double>> :: void PITTS::unfold_right(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                      	 0.0604454 	 2527      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                     	 0.0483965 	 847       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                	 0.041325  	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::xytrz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                         	 0.0410758 	 840       
<PITTS::Tensor3<double>> :: void PITTS::fold_right(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                   	 0.0292304 	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat3(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double]                  	 0.0274351 	 840       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double]                                      	 0.0205315 	 840       
<PITTS::TensorTrain<double>> :: T PITTS::rightNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                        	 0.0174168 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::rightNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                    	 0.0174056 	 1         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                            	 0.00964808	 1320      
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                          	 0.00468828	 16        
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int) [with T = double]                                                                	 0.00276699	 5071      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int) [with T = double]                                                        	 0.00191083	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                    	 0.000835841	 120       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                   	 0.0005343 	 241       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                              	 0.000418394	 120       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                     	 5.35e-06  	 1         
