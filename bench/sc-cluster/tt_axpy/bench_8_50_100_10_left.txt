PITTS: OpenMP #threads: 1
PITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                   	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 100)                                               	 0.974521  	 605       	 0         	 0         	 4.96654   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 110, n: 50, r2left: 100, r2right: 10)           	 0.746733  	 600       	 0         	 0         	 7.77788   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1upp: 100, r1low: 10, n: 50, r2: 100)                                	 0.47448   	 600       	 0         	 0         	 10.6222   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 5000, x.r2: 100, y.r2: 10)                           	 0.230381  	 600       	 26.0439   	 0         	 11.4801   	 2.2686    
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 5000, c: 100, r2: 10)                            	 0.190959  	 600       	 31.4204   	 0         	 15.1069   	 2.07987   
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 100)                                                	 0.0981855 	 121       	 0         	 0         	 4.92945   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 110, n: 50, r2: 10)                                             	 0.0789029 	 600       	 0         	 0         	 6.69177   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 10)                                                	 0.0745017 	 600       	 0         	 0         	 6.4428    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 51, n: 50, r2left: 100, r2right: 10)            	 0.0626886 	 120       	 0         	 0         	 8.59103   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 1, n: 50, r2: 100)                                  	 0.0606342 	 120       	 0         	 0         	 7.99548   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 100, nChunks: 4, r2: 10)  	 0.0577627 	 600       	 13.2958   	 0         	 7.17972   	 1.85185   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 10, reductionFactor: 37, colBlockingSize: 12)               	 0.0320176 	 600       	 21.1708   	 0         	 8.26045   	 2.56291   
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 2500, x.r2: 100, y.r2: 10)                           	 0.0308734 	 120       	 19.4342   	 0         	 8.58214   	 2.26449   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 2500, c: 100, r2: 10)                            	 0.0239273 	 120       	 25.076    	 0         	 12.0766   	 2.07641   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1upp: 100, r1low: 10, n: 50, r2: 10)             	 0.0205206 	 600       	 0         	 0         	 25.7302   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5500, Xcols: 10, r: 10, streamingCols: 0)                	 0.0202302 	 600       	 16.3123   	 0         	 26.1115   	 0.624716  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, nChunks: 4, r2: 100)	 0.016622  	 5         	 38.5031   	 0         	 3.46528   	 11.1111   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 100, reductionFactor: 37, colBlockingSize: 12)              	 0.0123308 	 5         	 41.6447   	 0         	 1.65439   	 25.1722   
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 51, n: 50, r2: 10)                                              	 0.00825024	 120       	 0         	 0         	 5.93437   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 100)                                            	 0.0077657 	 5         	 0         	 0         	 5.15086   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 10)                                                 	 0.00753643	 120       	 0         	 0         	 6.36906   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5000, Xcols: 100, r: 100, streamingCols: 0)              	 0.0068612 	 5         	 36.4368   	 0         	 5.85903   	 6.21891   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 10, m: 10)                                                                        	 0.00610317	 840       	 0.183328  	 0         	 0.341331  	 0.537097  
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 10)                                                                                      	 0.00570003	 720       	 0         	 0         	 10.1052   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 100, m: 100)                                                                      	 0.00542213	 7         	 1.72134   	 0         	 0.310874  	 5.53709   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 10, nChunks: 4, r2: 10)   	 0.00411628	 600       	 18.6576   	 0         	 16.7919   	 1.11111   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 50, nChunks: 4, r2: 10)   	 0.00364775	 120       	 21.054    	 0         	 12.2113   	 1.72414   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2550, cols: 10, reductionFactor: 37, colBlockingSize: 12)               	 0.00326495	 120       	 19.2511   	 0         	 7.52721   	 2.55754   
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 50, x.r2: 50, y.r2: 10)                              	 0.00321813	 120       	 1.86444   	 0         	 1.04408   	 1.78571   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 50, nChunks: 4, r2: 100) 	 0.00213803	 1         	 29.9341   	 0         	 3.89144   	 7.69231   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2550, Xcols: 10, r: 10, streamingCols: 0)                	 0.00197754	 120       	 15.4738   	 0         	 24.7823   	 0.624388  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 10, reductionFactor: 18, colBlockingSize: 12)                 	 0.00174498	 120       	 0.725891  	 0         	 0.330089  	 2.19907   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 100, nChunks: 4, r2: 1)   	 0.00170439	 120       	 9.01204   	 0         	 12.9773   	 0.694444  
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 100, r1low: 10, n: 50, r2: 1)                	 0.00153991	 120       	 0         	 0         	 6.85757   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 100, reductionFactor: 37, colBlockingSize: 12)              	 0.00141333	 1         	 36.3337   	 0         	 1.4717    	 24.6881   
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1upp: 50, r1low: 1, n: 50, r2: 10)               	 0.00124651	 120       	 0         	 0         	 39.2777   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 100)                                             	 0.00117481	 1         	 0         	 0         	 3.4048    	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                                      	 0.00108461	 120       	 0         	 0         	 8.8511    	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 50)                                                  	 0.00104828	 120       	 0         	 0         	 4.57894   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 10)                	 0.00102805	 120       	 0         	 0         	 0.933803  	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                        	 0.000911447	 120       	 1.31659   	 0         	 15.7991   	 0.0833333 
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 100, r: 100, streamingCols: 0)              	 0.000686542	 1         	 36.4144   	 0         	 5.88456   	 6.18812   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 50)                                    	 0.000640358	 120       	 0         	 0         	 7.49581   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double](r1: 50, c: 50, r2: 10)                               	 0.000569712	 120       	 10.5316   	 0         	 6.74025   	 1.5625    
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 1, n: 50, r2left: 50, r2right: 1)               	 0.000466698	 120       	 0         	 0         	 10.4907   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 10)                                                  	 0.00039108	 120       	 0         	 0         	 2.45474   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                                       	 0.000300248	 240       	 0         	 0         	 6.39471   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 100, reductionFactor: 18, colBlockingSize: 12)                	 0.000273701	 1         	 3.8566    	 0         	 0.438435  	 8.7963    
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                                       	 0.0002446 	 240       	 0         	 0         	 7.84955   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 10, nChunks: 4, r2: 1)    	 0.00023481	 120       	 6.54146   	 0         	 11.7746   	 0.555556  
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 10, r1_: 1, nChunks: 4, r2: 10)    	 0.000228609	 120       	 6.7189    	 0         	 30.235    	 0.222222  
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                             	 0.000212869	 121       	 2.84212   	 0         	 45.474    	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 1)                                                	 0.000168204	 120       	 0         	 0         	 0.570736  	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 10, r: 1, streamingCols: 1)                   	 0.000165527	 120       	 0.0362479 	 0         	 0.582866  	 0.0621891 
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, nChunks: 4, r2: 1)  	 7.6534e-05	 1         	 16.7246   	 0         	 18.0626   	 0.925926  
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                              	 4.3741e-05	 120       	 1.37171   	 0         	 21.9474   	 0.0625    
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 100)                                                 	 3.8153e-05	 1         	 0         	 0         	 2.09682   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 100, r: 50, streamingCols: 27)                	 2.8379e-05	 1         	 4.40467   	 0         	 1.76187   	 2.5       
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 50)                                               	 6.727e-06 	 1         	 0         	 0         	 5.94619   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                               	 4.56e-06  	 1         	 2.19298   	 0         	 8.77193   	 0.25      
Timing statistics:
function                                                                                                                                                                  	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]               	 3.31208   	 120       
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                       	 1.15622   	 1687      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat3(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                    	 0.809888  	 840       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1_w0(const PITTS::Tensor3<T>&, int, PITTS::Tensor3<T>&) [with T = double]                                      	 0.535754  	 840       
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool) [with T = double]                                           	 0.281005  	 4701      
<PITTS::Tensor3<double>> :: void PITTS::internal::xtryz(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                         	 0.264472  	 840       
<PITTS::Tensor3<double>> :: void PITTS::internal::t2_fnmadd(const PITTS::Tensor2<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor2<T>&) [with T = double]                     	 0.215456  	 840       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::Tensor2<T>&, bool, T, int, bool) [with T = double]	 0.159374  	 847       
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                    	 0.0962686 	 847       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]       	 0.0865311 	 1687      
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                         	 0.0811578 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                     	 0.0811455 	 1         
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                         	 0.0516996 	 847       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                              	 0.0510454 	 847       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                	 0.0299494 	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::t2t3_concat1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor2<T>&) [with T = double]                  	 0.0227952 	 840       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                          	 0.0182343 	 16        
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                     	 0.0115253 	 847       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                            	 0.00732949	 1320      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int) [with T = double]                                                                	 0.00214731	 4711      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                    	 0.00153991	 120       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int) [with T = double]                                                        	 0.00128268	 847       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                              	 0.000911447	 120       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                   	 0.00025661	 241       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                     	 4.56e-06  	 1         
[1;34m[likwid-pin] Main PID -> hwthread 0 - OK[0m
