PITTS: OpenMP #threads: 1
PITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                   	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 100, Xr2: 100, Qr1: 110, Qr2: 10) 	 0.516699  	 600       	 0         	 0         	 10.7761   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 50, Xr2: 100, Qr1: 50, Qr2: 10)   	 0.0401243 	 120       	 0         	 0         	 13.1591   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5500, cols: 10, reductionFactor: 37, colBlockingSize: 12)               	 0.0303233 	 600       	 22.3537   	 0         	 8.72201   	 2.56291   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5500, m: 10)                                                                    	 0.0256612 	 600       	 0         	 0         	 20.5758   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5500, Xcols: 10, r: 10, streamingCols: 0)                	 0.0198558 	 600       	 16.6198   	 0         	 26.6038   	 0.624716  
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5500, m: 10)                                                           	 0.0169491 	 600       	 0         	 0         	 31.1521   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 100, r1low: 10, n: 50, r2: 10)               	 0.0168922 	 600       	 0         	 0         	 31.257    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 5000, cols: 100, reductionFactor: 37, colBlockingSize: 12)              	 0.0121289 	 5         	 42.3382   	 0         	 1.68194   	 25.1722   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, nChunks: 4, r2: 100)	 0.0094169 	 5         	 67.9629   	 0         	 6.11666   	 11.1111   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 5000, m: 100)                                                                   	 0.00716158	 5         	 0         	 0         	 5.58536   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 10)                                                                                      	 0.00712811	 720       	 0         	 0         	 8.08069   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 5000, Xcols: 100, r: 100, streamingCols: 0)              	 0.00690297	 5         	 36.2163   	 0         	 5.82358   	 6.21891   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 5000, m: 100)                                                          	 0.00626117	 5         	 0         	 0         	 6.38858   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 100)                                            	 0.00531498	 5         	 0         	 0         	 7.5259    	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 100, n: 50, r2: 100)                                               	 0.00473003	 5         	 0         	 0         	 8.45661   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 100, m: 100)                                                                      	 0.00447621	 7         	 2.0851    	 0         	 0.376569  	 5.53709   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 10, m: 10)                                                                        	 0.00433221	 840       	 0.25827   	 0         	 0.480863  	 0.537097  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 10, reductionFactor: 37, colBlockingSize: 12)               	 0.00340261	 120       	 18.1101   	 0         	 7.08162   	 2.55734   
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 50, nChunks: 4, r2: 100) 	 0.00289564	 1         	 22.1022   	 0         	 2.87329   	 7.69231   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 10)                                                                    	 0.00269921	 120       	 0         	 0         	 17.783    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                        	 0.00258681	 120       	 0.463893  	 0         	 5.56671   	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 10)                                                           	 0.00205303	 120       	 0         	 0         	 23.3801   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 10, r: 10, streamingCols: 0)                	 0.00189422	 120       	 15.8377   	 0         	 25.3656   	 0.624376  
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2500, cols: 100, reductionFactor: 37, colBlockingSize: 12)              	 0.00140902	 1         	 36.4447   	 0         	 1.4762    	 24.6881   
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                                      	 0.00126271	 120       	 0         	 0         	 7.60271   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 100)                                                	 0.00115596	 1         	 0         	 0         	 3.46032   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 50, r1low: 0, n: 50, r2: 10)                 	 0.00101241	 120       	 0         	 0         	 47.4118   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2500, m: 100)                                                                   	 0.000987853	 1         	 0         	 0         	 4.04919   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 50, Xr1: 1, Xr2: 50, Qr1: 1, Qr2: 0)       	 0.000986406	 120       	 0         	 0         	 4.86615   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 50, n: 50, r2: 100)                                             	 0.000848943	 1         	 0         	 0         	 4.71174   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2500, m: 100)                                                          	 0.000829919	 1         	 0         	 0         	 4.81975   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                             	 0.000743468	 121       	 0.813754  	 0         	 13.0201   	 0.0625    
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2500, Xcols: 100, r: 100, streamingCols: 0)              	 0.000684567	 1         	 36.5194   	 0         	 5.90154   	 6.18812   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 10, reductionFactor: 18, colBlockingSize: 12)                 	 0.000629669	 120       	 2.01164   	 0         	 0.914766  	 2.19907   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 100, r1low: 10, n: 50, r2: 1)                	 0.000513177	 120       	 0         	 0         	 20.5777   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 50, r2: 10)                                                                                       	 0.000408211	 240       	 0         	 0         	 4.70345   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 50, r2: 10)                  	 0.000368247	 120       	 0         	 0         	 2.60695   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                                       	 0.000326342	 240       	 0         	 0         	 5.8834    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 50, cols: 100, reductionFactor: 18, colBlockingSize: 12)                	 0.000265063	 1         	 3.98228   	 0         	 0.452723  	 8.7963    
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 10, m: 10, fromLeft: 0)             	 0.000182735	 720       	 0         	 0         	 6.30421   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 10, n: 50, r2: 1)                                                                              	 0.000100333	 120       	 0.598009  	 0         	 9.56814   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 10)                                                             	 8.7295e-05	 120       	 0         	 0         	 10.9972   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 100, r1_: 100, nChunks: 4, r2: 1)  	 5.4664e-05	 1         	 23.4158   	 0         	 25.289    	 0.925926  
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 100)                                                 	 4.9395e-05	 1         	 0         	 0         	 1.6196    	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 50, Xcols: 100, r: 50, streamingCols: 25)                	 2.8037e-05	 1         	 4.45839   	 0         	 1.78336   	 2.5       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 100, m: 100, fromLeft: 0)           	 1.6082e-05	 6         	 0         	 0         	 59.6941   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 100, n: 50, r2: 1)                                                                               	 9.129e-06 	 1         	 1.09541   	 0         	 4.38164   	 0.25      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 50, m: 50)                                                                      	 8.749e-06 	 1         	 0         	 0         	 4.57195   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 50, m: 100)                                                            	 8.243e-06 	 1         	 0         	 0         	 9.7052    	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 50, r2: 50)                                               	 5.982e-06 	 1         	 0         	 0         	 6.68673   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 100, fromLeft: 0)            	 2.494e-06 	 1         	 0         	 0         	 32.077    	 0         
Timing statistics:
function                                                                                                                                                                           	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                        	 1.39528   	 120       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                            	 0.557809  	 840       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]	 0.155808  	 847       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                  	 0.0687934 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                              	 0.0687739 	 1         
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                  	 0.0486891 	 847       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                       	 0.0481585 	 847       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                            	 0.0365186 	 727       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                         	 0.0293656 	 727       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                   	 0.0261888 	 847       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                   	 0.0192229 	 16        
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                             	 0.018786  	 960       
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                	 0.0123672 	 7         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                     	 0.00912537	 1320      
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                              	 0.00880842	 847       
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                             	 0.0061699 	 7         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                                	 0.00593538	 7         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                              	 0.00269768	 4221      
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                       	 0.00258681	 120       
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                     	 0.00121552	 847       
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                   	 0.00112211	 3511      
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                            	 0.000843801	 241       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>]                	 0.000201311	 727       
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                              	 9.129e-06 	 1         
[1;34m[likwid-pin] Main PID -> hwthread 0 - OK[0m
