[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140490929256320 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140490920859648 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140490912462976 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140490904066304 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140490895669632 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140490887272960 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140490878876288 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140490393512704 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140490385116032 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140490376719360 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140490368322688 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140490359926016 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140490351529344 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140490343132672 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140489856642688 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 1
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34mRoundrobin placement triggered
	threadid 140052645414656 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140052637021952 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140052628489984 -> hwthread 1 - OK[0m[1;34m
[0mPITTS: OpenMP #threads: 16
[1;34mRoundrobin placement triggered
	threadid 140489848248064 -> hwthread 0 - OK[0m[1;34m
[0m[1;34m	threadid 140489839855360 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140489827268352 -> hwthread 2 - OK[0m[1;34m
[0mPITTS: MPI #procs: 1
Performance statistics:
function                                                                                                                                                                                                	 time [s]  	 #calls    	 GFlop/s DP	 GFlop/s SP	 GByte/s   	Flops/Byte
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 2400, cols: 50, reductionFactor: 18, colBlockingSize: 12)            	 0.122357  	 600       	 62.1134   	 0         	 4.80561   	 12.9252   
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 50, m: 50)                                                                     	 0.0416534 	 840       	 3.36106   	 0         	 1.21805   	 2.75937   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 2400, Xcols: 50, r: 50, streamingCols: 0)             	 0.0310708 	 600       	 115.864   	 0         	 37.2697   	 3.10881   
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 70, Xr2: 70, Qr1: 120, Qr2: 50)	 0.0248458 	 600       	 0         	 0         	 97.755    	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 70, r1low: 50, n: 20, r2: 50)             	 0.017991  	 600       	 0         	 0         	 64.032    	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 50, reductionFactor: 18, colBlockingSize: 12)             	 0.0128221 	 120       	 19.7575   	 0         	 1.68459   	 11.7284   
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 2400, m: 50)                                                                 	 0.00813204	 600       	 0         	 0         	 141.662   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 50)                                                                                   	 0.00751555	 720       	 0         	 0         	 76.6411   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 2400, m: 50)                                                        	 0.00593974	 600       	 0         	 0         	 193.948   	 0         
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double](n: 70, m: 70)                                                                     	 0.00511256	 7         	 0.626169  	 0         	 0.161782  	 3.87045   
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 50, r: 50, streamingCols: 0)              	 0.00441037	 120       	 27.2086   	 0         	 8.97885   	 3.0303    
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 50, reductionFactor: 18, colBlockingSize: 12)              	 0.0041442 	 120       	 3.05648   	 0         	 0.810772  	 3.76984   
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 1400, cols: 70, reductionFactor: 18, colBlockingSize: 12)            	 0.00266781	 5         	 27.1426   	 0         	 1.54284   	 17.5926   
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 20, r1low: 0, n: 20, r2: 50)              	 0.00177593	 120       	 0         	 0         	 21.6225   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 20, nChunks: 2, r2: 70)	 0.00162284	 1         	 3.86484   	 0         	 1.10424   	 3.5       
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 400, m: 50)                                                                  	 0.00160029	 120       	 0         	 0         	 23.9956   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 1400, Xcols: 70, r: 70, streamingCols: 0)             	 0.00141325	 5         	 24.2702   	 0         	 5.61683   	 4.32099   
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 50, m: 50, fromLeft: 0)          	 0.00114347	 720       	 0         	 0         	 25.1864   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 20, Xr2: 70, Qr1: 20, Qr2: 50) 	 0.00101078	 120       	 0         	 0         	 91.1767   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 1, n: 20, r2: 50)                                                                                    	 0.000676585	 240       	 0         	 0         	 5.67556   	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, nChunks: 2, r2: 70)	 0.000671305	 5         	 163.502   	 0         	 23.3575   	 7         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 1)                                                                                    	 0.000647155	 240       	 0         	 0         	 5.93366   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 50)                                                         	 0.000574227	 120       	 0         	 0         	 66.8725   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 70, r1low: 50, n: 20, r2: 1)              	 0.000565203	 120       	 0         	 0         	 8.15282   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1upp: 1, r1low: 0, n: 20, r2: 50)               	 0.000463493	 120       	 0         	 0         	 4.14246   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double](n(all): 20, Xr1: 1, Xr2: 20, Qr1: 1, Qr2: 0)    	 0.000435253	 120       	 0         	 0         	 1.76449   	 0         
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                                                    	 0.000390271	 120       	 0         	 0         	 6.88752   	 0         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                      	 0.000372918	 120       	 0.901002  	 0         	 10.812    	 0.0833333 
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 50)                                                          	 0.000362386	 120       	 0         	 0         	 5.29822   	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 400, cols: 70, reductionFactor: 18, colBlockingSize: 12)             	 0.000326083	 1         	 12.6893   	 0         	 0.807156  	 15.721    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                                           	 0.000290856	 121       	 0.582419  	 0         	 9.3187    	 0.0625    
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double](r1: 50, n: 20, r2: 1)                                                                           	 0.000272869	 120       	 0.439771  	 0         	 7.03634   	 0.0625    
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 1400, m: 70)                                                                 	 0.000257268	 5         	 0         	 0         	 30.4741   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 70)                                               	 0.000234043	 1         	 0         	 0         	 0.0957089 	 0         
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double](rows: 20, cols: 70, reductionFactor: 18, colBlockingSize: 12)              	 0.000216875	 1         	 0.953955  	 0         	 0.232392  	 4.10494   
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 70)                                              	 0.000187388	 5         	 0         	 0         	 41.8383   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 400, Xcols: 70, r: 70, streamingCols: 0)              	 0.000148072	 1         	 13.2368   	 0         	 3.15792   	 4.19162   
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 70, n: 20, r2: 70)                                           	 0.000133611	 5         	 0         	 0         	 58.6778   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 1400, m: 70)                                                        	 0.000130113	 5         	 0         	 0         	 60.2553   	 0         
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 70)                                              	 4.77e-05  	 1         	 0         	 0         	 9.39203   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 400, m: 70)                                                                  	 3.993e-05 	 1         	 0         	 0         	 11.2196   	 0         
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double](Xrows: 20, Xcols: 70, r: 20, streamingCols: 16)              	 2.4002e-05	 1         	 0.333306  	 0         	 0.333306  	 1         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 20, m: 70)                                                          	 2.2967e-05	 1         	 0         	 0         	 0.975312  	 0         
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double](r1: 70, r1_: 70, nChunks: 2, r2: 1) 	 2.1891e-05	 1         	 14.3255   	 0         	 30.2882   	 0.472973  
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 70, m: 70, fromLeft: 0)          	 1.5659e-05	 6         	 0         	 0         	 30.0402   	 0         
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 20, n: 20, r2: 70)                                           	 1.2971e-05	 1         	 0         	 0         	 34.5386   	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double](n: 20, m: 20)                                                                   	 1.1131e-05	 1         	 0         	 0         	 0.574971  	 0         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double](n: 400, m: 70)                                                         	 8.563e-06 	 1         	 0         	 0         	 52.3181   	 0         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double](r1: 70, n: 20, r2: 1)                                                                             	 4.427e-06 	 1         	 0.632482  	 0         	 2.52993   	 0.25      
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>](r1: 1, n: 20, r2: 20)                                            	 3.331e-06 	 1         	 0         	 0         	 1.92134   	 0         
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>](n: 20, m: 70, fromLeft: 0)          	 2.01e-06  	 1         	 0         	 0         	 11.1443   	 0         
Timing statistics:
function                                                                                                                                                                           	 time [s]  	 #calls    
<PITTS::TensorTrain<double>> :: void PITTS::internal::axpby_leftOrthogonalize(T, const PITTS::TensorTrain<T>&, T, PITTS::TensorTrain<T>&) [with T = double]                        	 0.555246  	 120       
<PITTS::Tensor2<double>> :: std::pair<PITTS::Tensor2<T>, PITTS::Tensor2<T> > PITTS::internal::normalize_qb(const PITTS::ConstTensor2View<T>&, bool, T, int, bool) [with T = double]	 0.255327  	 847       
<PITTS::MultiVector<double>> :: void PITTS::internal::normalize_qb_block_TSQR(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                  	 0.143184  	 847       
<PITTS::MultiVector<double>> :: void PITTS::block_TSQR(const MultiVector<T>&, Tensor2<T>&, int, bool, int) [with T = double]                                                       	 0.142534  	 847       
<PITTS::Tensor2<double>> :: auto PITTS::internal::normalize_qr_only(const PITTS::Tensor2<T>&, bool) [with T = double]                                                              	 0.046766  	 847       
<PITTS::MultiVector<double>> :: void PITTS::triangularSolve(MultiVector<T>&, const Tensor2<T>&, const std::vector<int>&) [with T = double]                                         	 0.0370665 	 727       
<PITTS::Tensor3<double>> :: void PITTS::internal::concat3_X0Q(const PITTS::Tensor3<T>&, const PITTS::Tensor2<T>&, PITTS::Tensor3<T>&) [with T = double]                            	 0.0262918 	 840       
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_concat1(const PITTS::Tensor3<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                             	 0.0207956 	 960       
<PITTS::TensorTrain<double>> :: T PITTS::leftNormalize(TensorTrain<T>&, T, int) [with T = double]                                                                                  	 0.0138301 	 1         
<PITTS::TensorTrain<double>> :: void PITTS::internal::leftNormalize_range(PITTS::TensorTrain<T>&, int, int, T, int) [with T = double]                                              	 0.0138199 	 1         
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::MultiVector<T>&, PITTS::Tensor2<T>&) [with T = double]                                                            	 0.0100407 	 727       
<PITTS::Tensor3<double>> :: void PITTS::copy(const Tensor3<T>&, Tensor3<T>&) [with T = double]                                                                                     	 0.00922956	 1320      
<double> :: void PITTS::internal::normalize_qb_copy(const PITTS::ConstTensor2View<T>&, PITTS::MultiVector<T>&) [with T = double]                                                   	 0.007038  	 847       
<PITTS::Tensor3<double>> :: void PITTS::randomize(Tensor3<T>&) [with T = double]                                                                                                   	 0.00583208	 16        
<PITTS::TensorTrain<double>> :: void PITTS::internal::normalize_contract1(const PITTS::Tensor2<T>&, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                	 0.00231603	 7         
<PITTS::Tensor3<double>> :: void PITTS::Tensor3<T>::resize(long long int, long long int, long long int, bool, bool) [with T = double]                                              	 0.00212694	 4221      
<PITTS::Tensor2<double>> :: void PITTS::Tensor2<T>::resize(long long int, long long int, bool) [with T = double]                                                                   	 0.00154408	 3511      
<PITTS::MultiVector<double>> :: void PITTS::MultiVector<T>::resize(long long int, long long int, bool, bool) [with T = double]                                                     	 0.00153232	 847       
<double> :: void PITTS::internal::normalize_qb_reorder(const auto:21&, bool, PITTS::Tensor2<T>&) [with T = double; auto:21 = Eigen::PermutationMatrix<-1, -1, int>]                	 0.00116114	 727       
<PITTS::TensorTrain<double>> :: void PITTS::internal::t3_scale(T, PITTS::Tensor3<T>&) [with T = double]                                                                            	 0.000563725	 241       
<PITTS::Tensor3<double>> :: void PITTS::unfold_left(const Tensor3<T>&, MatrixType&) [with T = double; MatrixType = Tensor2<double>]                                                	 0.000469131	 7         
<PITTS::Tensor3<double>> :: void PITTS::internal::t3_axpy(T, const PITTS::Tensor3<T>&, PITTS::Tensor3<T>&) [with T = double]                                                       	 0.000372918	 120       
<PITTS::Tensor3<double>> :: void PITTS::fold_left(const MatrixType&, int, Tensor3<T>&) [with T = double; MatrixType = Tensor2<double>]                                             	 0.000149913	 7         
<PITTS::TensorTrain<double>> :: T PITTS::internal::t3_nrm(const PITTS::Tensor3<T>&) [with T = double]                                                                              	 4.427e-06 	 1         
